<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="5510"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (3 samples, 0.05%)</title><rect x="0.0000%" y="693" width="0.0544%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.05%)</title><rect x="0.0000%" y="677" width="0.0544%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="687.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="0.0544%" y="629" width="0.0181%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3044%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.09%)</title><rect x="0.1452%" y="613" width="0.0907%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="5"/><text x="0.3952%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="0.2359%" y="613" width="0.0181%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="1"/><text x="0.4859%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="0.2541%" y="613" width="0.0181%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="1"/><text x="0.5041%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="0.2541%" y="597" width="0.0181%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="1"/><text x="0.5041%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.04%)</title><rect x="0.2722%" y="613" width="0.0363%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="2"/><text x="0.5222%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (1 samples, 0.02%)</title><rect x="0.3085%" y="613" width="0.0181%" height="15" fill="rgb(218,30,26)" fg:x="17" fg:w="1"/><text x="0.5585%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.34%)</title><rect x="0.9437%" y="597" width="0.3448%" height="15" fill="rgb(220,122,19)" fg:x="52" fg:w="19"/><text x="1.1937%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="1.2886%" y="597" width="0.0181%" height="15" fill="rgb(250,228,42)" fg:x="71" fg:w="1"/><text x="1.5386%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="1.2886%" y="581" width="0.0181%" height="15" fill="rgb(240,193,28)" fg:x="71" fg:w="1"/><text x="1.5386%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="1.3067%" y="597" width="0.0181%" height="15" fill="rgb(216,20,37)" fg:x="72" fg:w="1"/><text x="1.5567%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (11 samples, 0.20%)</title><rect x="1.3249%" y="597" width="0.1996%" height="15" fill="rgb(206,188,39)" fg:x="73" fg:w="11"/><text x="1.5749%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (11 samples, 0.20%)</title><rect x="1.3249%" y="581" width="0.1996%" height="15" fill="rgb(217,207,13)" fg:x="73" fg:w="11"/><text x="1.5749%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.20%)</title><rect x="1.3249%" y="565" width="0.1996%" height="15" fill="rgb(231,73,38)" fg:x="73" fg:w="11"/><text x="1.5749%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.04%)</title><rect x="1.5245%" y="597" width="0.0363%" height="15" fill="rgb(225,20,46)" fg:x="84" fg:w="2"/><text x="1.7745%" y="607.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 1.42%)</title><rect x="0.3267%" y="613" width="1.4156%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="78"/><text x="0.5767%" y="623.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;disjoint_sets::tree::UnionFindNode&gt; (10 samples, 0.18%)</title><rect x="1.5608%" y="597" width="0.1815%" height="15" fill="rgb(221,200,47)" fg:x="86" fg:w="10"/><text x="1.8108%" y="607.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (4 samples, 0.07%)</title><rect x="1.7423%" y="613" width="0.0726%" height="15" fill="rgb(226,26,5)" fg:x="96" fg:w="4"/><text x="1.9923%" y="623.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (46 samples, 0.83%)</title><rect x="1.8149%" y="613" width="0.8348%" height="15" fill="rgb(249,33,26)" fg:x="100" fg:w="46"/><text x="2.0649%" y="623.50"></text></g><g><title>rust-gkat`Cudd_Ref (4 samples, 0.07%)</title><rect x="2.6497%" y="613" width="0.0726%" height="15" fill="rgb(235,183,28)" fg:x="146" fg:w="4"/><text x="2.8997%" y="623.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (9 samples, 0.16%)</title><rect x="2.7223%" y="613" width="0.1633%" height="15" fill="rgb(221,5,38)" fg:x="150" fg:w="9"/><text x="2.9723%" y="623.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="2.8857%" y="613" width="0.0181%" height="15" fill="rgb(247,18,42)" fg:x="159" fg:w="1"/><text x="3.1357%" y="623.50"></text></g><g><title>rust-gkat`__rust_dealloc (1 samples, 0.02%)</title><rect x="2.9038%" y="613" width="0.0181%" height="15" fill="rgb(241,131,45)" fg:x="160" fg:w="1"/><text x="3.1538%" y="623.50"></text></g><g><title>rust-gkat`clap_builder::builder::command::Command::_do_parse (1 samples, 0.02%)</title><rect x="2.9220%" y="613" width="0.0181%" height="15" fill="rgb(249,31,29)" fg:x="161" fg:w="1"/><text x="3.1720%" y="623.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.9220%" y="597" width="0.0181%" height="15" fill="rgb(225,111,53)" fg:x="161" fg:w="1"/><text x="3.1720%" y="607.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="3.0853%" y="581" width="0.0181%" height="15" fill="rgb(238,160,17)" fg:x="170" fg:w="1"/><text x="3.3353%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="3.2305%" y="485" width="0.0181%" height="15" fill="rgb(214,148,48)" fg:x="178" fg:w="1"/><text x="3.4805%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="3.2305%" y="469" width="0.0181%" height="15" fill="rgb(232,36,49)" fg:x="178" fg:w="1"/><text x="3.4805%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="3.2305%" y="453" width="0.0181%" height="15" fill="rgb(209,103,24)" fg:x="178" fg:w="1"/><text x="3.4805%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="3.3031%" y="453" width="0.0181%" height="15" fill="rgb(229,88,8)" fg:x="182" fg:w="1"/><text x="3.5531%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="3.3031%" y="437" width="0.0181%" height="15" fill="rgb(213,181,19)" fg:x="182" fg:w="1"/><text x="3.5531%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="3.3031%" y="421" width="0.0181%" height="15" fill="rgb(254,191,54)" fg:x="182" fg:w="1"/><text x="3.5531%" y="431.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="3.3575%" y="437" width="0.0181%" height="15" fill="rgb(241,83,37)" fg:x="185" fg:w="1"/><text x="3.6075%" y="447.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.04%)</title><rect x="3.3757%" y="437" width="0.0363%" height="15" fill="rgb(233,36,39)" fg:x="186" fg:w="2"/><text x="3.6257%" y="447.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;(rust_gkat::syntax::exp::Exp_,hashconsing::WHConsed&lt;rust_gkat::syntax::exp::Exp_&gt;)&gt; (28 samples, 0.51%)</title><rect x="2.9401%" y="613" width="0.5082%" height="15" fill="rgb(226,3,54)" fg:x="162" fg:w="28"/><text x="3.1901%" y="623.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (21 samples, 0.38%)</title><rect x="3.0672%" y="597" width="0.3811%" height="15" fill="rgb(245,192,40)" fg:x="169" fg:w="21"/><text x="3.3172%" y="607.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (19 samples, 0.34%)</title><rect x="3.1034%" y="581" width="0.3448%" height="15" fill="rgb(238,167,29)" fg:x="171" fg:w="19"/><text x="3.3534%" y="591.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (18 samples, 0.33%)</title><rect x="3.1216%" y="565" width="0.3267%" height="15" fill="rgb(232,182,51)" fg:x="172" fg:w="18"/><text x="3.3716%" y="575.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.31%)</title><rect x="3.1397%" y="549" width="0.3085%" height="15" fill="rgb(231,60,39)" fg:x="173" fg:w="17"/><text x="3.3897%" y="559.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.27%)</title><rect x="3.1760%" y="533" width="0.2722%" height="15" fill="rgb(208,69,12)" fg:x="175" fg:w="15"/><text x="3.4260%" y="543.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.25%)</title><rect x="3.1942%" y="517" width="0.2541%" height="15" fill="rgb(235,93,37)" fg:x="176" fg:w="14"/><text x="3.4442%" y="527.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.25%)</title><rect x="3.1942%" y="501" width="0.2541%" height="15" fill="rgb(213,116,39)" fg:x="176" fg:w="14"/><text x="3.4442%" y="511.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.20%)</title><rect x="3.2486%" y="485" width="0.1996%" height="15" fill="rgb(222,207,29)" fg:x="179" fg:w="11"/><text x="3.4986%" y="495.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.15%)</title><rect x="3.3031%" y="469" width="0.1452%" height="15" fill="rgb(206,96,30)" fg:x="182" fg:w="8"/><text x="3.5531%" y="479.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.13%)</title><rect x="3.3212%" y="453" width="0.1270%" height="15" fill="rgb(218,138,4)" fg:x="183" fg:w="7"/><text x="3.5712%" y="463.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.04%)</title><rect x="3.4120%" y="437" width="0.0363%" height="15" fill="rgb(250,191,14)" fg:x="188" fg:w="2"/><text x="3.6620%" y="447.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.04%)</title><rect x="3.4120%" y="421" width="0.0363%" height="15" fill="rgb(239,60,40)" fg:x="188" fg:w="2"/><text x="3.6620%" y="431.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.04%)</title><rect x="3.4120%" y="405" width="0.0363%" height="15" fill="rgb(206,27,48)" fg:x="188" fg:w="2"/><text x="3.6620%" y="415.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.04%)</title><rect x="3.4120%" y="389" width="0.0363%" height="15" fill="rgb(225,35,8)" fg:x="188" fg:w="2"/><text x="3.6620%" y="399.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="3.4301%" y="373" width="0.0181%" height="15" fill="rgb(250,213,24)" fg:x="189" fg:w="1"/><text x="3.6801%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="3.4483%" y="597" width="0.0181%" height="15" fill="rgb(247,123,22)" fg:x="190" fg:w="1"/><text x="3.6983%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="3.4483%" y="581" width="0.0181%" height="15" fill="rgb(231,138,38)" fg:x="190" fg:w="1"/><text x="3.6983%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="3.4664%" y="597" width="0.0181%" height="15" fill="rgb(231,145,46)" fg:x="191" fg:w="1"/><text x="3.7164%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="3.4664%" y="581" width="0.0181%" height="15" fill="rgb(251,118,11)" fg:x="191" fg:w="1"/><text x="3.7164%" y="591.50"></text></g><g><title>rust-gkat`cuddFreeTable (6 samples, 0.11%)</title><rect x="3.4483%" y="613" width="0.1089%" height="15" fill="rgb(217,147,25)" fg:x="190" fg:w="6"/><text x="3.6983%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.07%)</title><rect x="3.4846%" y="597" width="0.0726%" height="15" fill="rgb(247,81,37)" fg:x="192" fg:w="4"/><text x="3.7346%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.05%)</title><rect x="3.5027%" y="581" width="0.0544%" height="15" fill="rgb(209,12,38)" fg:x="193" fg:w="3"/><text x="3.7527%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="3.5027%" y="565" width="0.0544%" height="15" fill="rgb(227,1,9)" fg:x="193" fg:w="3"/><text x="3.7527%" y="575.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.04%)</title><rect x="3.5572%" y="597" width="0.0363%" height="15" fill="rgb(248,47,43)" fg:x="196" fg:w="2"/><text x="3.8072%" y="607.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (32 samples, 0.58%)</title><rect x="3.8113%" y="565" width="0.5808%" height="15" fill="rgb(221,10,30)" fg:x="210" fg:w="32"/><text x="4.0613%" y="575.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="4.1924%" y="549" width="0.1996%" height="15" fill="rgb(210,229,1)" fg:x="231" fg:w="11"/><text x="4.4424%" y="559.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (67 samples, 1.22%)</title><rect x="3.6298%" y="581" width="1.2160%" height="15" fill="rgb(222,148,37)" fg:x="200" fg:w="67"/><text x="3.8798%" y="591.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="4.3920%" y="565" width="0.4537%" height="15" fill="rgb(234,67,33)" fg:x="242" fg:w="25"/><text x="4.6420%" y="575.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (25 samples, 0.45%)</title><rect x="4.8457%" y="581" width="0.4537%" height="15" fill="rgb(247,98,35)" fg:x="267" fg:w="25"/><text x="5.0957%" y="591.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.44%)</title><rect x="4.8639%" y="565" width="0.4356%" height="15" fill="rgb(247,138,52)" fg:x="268" fg:w="24"/><text x="5.1139%" y="575.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.25%)</title><rect x="5.0454%" y="549" width="0.2541%" height="15" fill="rgb(213,79,30)" fg:x="278" fg:w="14"/><text x="5.2954%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.04%)</title><rect x="5.2632%" y="533" width="0.0363%" height="15" fill="rgb(246,177,23)" fg:x="290" fg:w="2"/><text x="5.5132%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.04%)</title><rect x="5.2632%" y="517" width="0.0363%" height="15" fill="rgb(230,62,27)" fg:x="290" fg:w="2"/><text x="5.5132%" y="527.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="5.2995%" y="581" width="0.0363%" height="15" fill="rgb(216,154,8)" fg:x="292" fg:w="2"/><text x="5.5495%" y="591.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (6 samples, 0.11%)</title><rect x="5.3358%" y="581" width="0.1089%" height="15" fill="rgb(244,35,45)" fg:x="294" fg:w="6"/><text x="5.5858%" y="591.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (21 samples, 0.38%)</title><rect x="5.4446%" y="581" width="0.3811%" height="15" fill="rgb(251,115,12)" fg:x="300" fg:w="21"/><text x="5.6946%" y="591.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="5.8258%" y="581" width="0.0363%" height="15" fill="rgb(240,54,50)" fg:x="321" fg:w="2"/><text x="6.0758%" y="591.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (16 samples, 0.29%)</title><rect x="5.8621%" y="581" width="0.2904%" height="15" fill="rgb(233,84,52)" fg:x="323" fg:w="16"/><text x="6.1121%" y="591.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="6.1525%" y="581" width="0.0181%" height="15" fill="rgb(207,117,47)" fg:x="339" fg:w="1"/><text x="6.4025%" y="591.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="6.1706%" y="581" width="0.0181%" height="15" fill="rgb(249,43,39)" fg:x="340" fg:w="1"/><text x="6.4206%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.04%)</title><rect x="6.2613%" y="565" width="0.0363%" height="15" fill="rgb(209,38,44)" fg:x="345" fg:w="2"/><text x="6.5113%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.04%)</title><rect x="6.2613%" y="549" width="0.0363%" height="15" fill="rgb(236,212,23)" fg:x="345" fg:w="2"/><text x="6.5113%" y="559.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (16 samples, 0.29%)</title><rect x="6.4791%" y="549" width="0.2904%" height="15" fill="rgb(242,79,21)" fg:x="357" fg:w="16"/><text x="6.7291%" y="559.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="6.6606%" y="533" width="0.1089%" height="15" fill="rgb(211,96,35)" fg:x="367" fg:w="6"/><text x="6.9106%" y="543.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (42 samples, 0.76%)</title><rect x="6.2976%" y="565" width="0.7623%" height="15" fill="rgb(253,215,40)" fg:x="347" fg:w="42"/><text x="6.5476%" y="575.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="6.7695%" y="549" width="0.2904%" height="15" fill="rgb(211,81,21)" fg:x="373" fg:w="16"/><text x="7.0195%" y="559.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 0.44%)</title><rect x="7.0599%" y="565" width="0.4356%" height="15" fill="rgb(208,190,38)" fg:x="389" fg:w="24"/><text x="7.3099%" y="575.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.36%)</title><rect x="7.1325%" y="549" width="0.3630%" height="15" fill="rgb(235,213,38)" fg:x="393" fg:w="20"/><text x="7.3825%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.22%)</title><rect x="7.2777%" y="533" width="0.2178%" height="15" fill="rgb(237,122,38)" fg:x="401" fg:w="12"/><text x="7.5277%" y="543.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="7.4955%" y="565" width="0.0544%" height="15" fill="rgb(244,218,35)" fg:x="413" fg:w="3"/><text x="7.7455%" y="575.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (14 samples, 0.25%)</title><rect x="7.5499%" y="565" width="0.2541%" height="15" fill="rgb(240,68,47)" fg:x="416" fg:w="14"/><text x="7.7999%" y="575.50"></text></g><g><title>rust-gkat`Cudd_Ref (4 samples, 0.07%)</title><rect x="7.8040%" y="565" width="0.0726%" height="15" fill="rgb(210,16,53)" fg:x="430" fg:w="4"/><text x="8.0540%" y="575.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.11%)</title><rect x="7.8766%" y="565" width="0.1089%" height="15" fill="rgb(235,124,12)" fg:x="434" fg:w="6"/><text x="8.1266%" y="575.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="7.9855%" y="565" width="0.0181%" height="15" fill="rgb(224,169,11)" fg:x="440" fg:w="1"/><text x="8.2355%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.04%)</title><rect x="8.0399%" y="549" width="0.0363%" height="15" fill="rgb(250,166,2)" fg:x="443" fg:w="2"/><text x="8.2899%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.04%)</title><rect x="8.0399%" y="533" width="0.0363%" height="15" fill="rgb(242,216,29)" fg:x="443" fg:w="2"/><text x="8.2899%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="8.2214%" y="357" width="0.0363%" height="15" fill="rgb(230,116,27)" fg:x="453" fg:w="2"/><text x="8.4714%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="8.2214%" y="341" width="0.0363%" height="15" fill="rgb(228,99,48)" fg:x="453" fg:w="2"/><text x="8.4714%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="8.2214%" y="325" width="0.0363%" height="15" fill="rgb(253,11,6)" fg:x="453" fg:w="2"/><text x="8.4714%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="8.2214%" y="389" width="0.0544%" height="15" fill="rgb(247,143,39)" fg:x="453" fg:w="3"/><text x="8.4714%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="8.2214%" y="373" width="0.0544%" height="15" fill="rgb(236,97,10)" fg:x="453" fg:w="3"/><text x="8.4714%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="8.2577%" y="357" width="0.0181%" height="15" fill="rgb(233,208,19)" fg:x="455" fg:w="1"/><text x="8.5077%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="8.2214%" y="421" width="0.0907%" height="15" fill="rgb(216,164,2)" fg:x="453" fg:w="5"/><text x="8.4714%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="8.2214%" y="405" width="0.0907%" height="15" fill="rgb(220,129,5)" fg:x="453" fg:w="5"/><text x="8.4714%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="8.2759%" y="389" width="0.0363%" height="15" fill="rgb(242,17,10)" fg:x="456" fg:w="2"/><text x="8.5259%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="8.2214%" y="501" width="0.1270%" height="15" fill="rgb(242,107,0)" fg:x="453" fg:w="7"/><text x="8.4714%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="8.2214%" y="485" width="0.1270%" height="15" fill="rgb(251,28,31)" fg:x="453" fg:w="7"/><text x="8.4714%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="8.2214%" y="469" width="0.1270%" height="15" fill="rgb(233,223,10)" fg:x="453" fg:w="7"/><text x="8.4714%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="8.2214%" y="453" width="0.1270%" height="15" fill="rgb(215,21,27)" fg:x="453" fg:w="7"/><text x="8.4714%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="8.2214%" y="437" width="0.1270%" height="15" fill="rgb(232,23,21)" fg:x="453" fg:w="7"/><text x="8.4714%" y="447.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="8.3122%" y="421" width="0.0363%" height="15" fill="rgb(244,5,23)" fg:x="458" fg:w="2"/><text x="8.5622%" y="431.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (14 samples, 0.25%)</title><rect x="8.1125%" y="533" width="0.2541%" height="15" fill="rgb(226,81,46)" fg:x="447" fg:w="14"/><text x="8.3625%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="8.1851%" y="517" width="0.1815%" height="15" fill="rgb(247,70,30)" fg:x="451" fg:w="10"/><text x="8.4351%" y="527.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="8.3485%" y="501" width="0.0181%" height="15" fill="rgb(212,68,19)" fg:x="460" fg:w="1"/><text x="8.5985%" y="511.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.36%)</title><rect x="8.0762%" y="549" width="0.3630%" height="15" fill="rgb(240,187,13)" fg:x="445" fg:w="20"/><text x="8.3262%" y="559.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="8.3666%" y="533" width="0.0726%" height="15" fill="rgb(223,113,26)" fg:x="461" fg:w="4"/><text x="8.6166%" y="543.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.34%)</title><rect x="8.4392%" y="549" width="0.3448%" height="15" fill="rgb(206,192,2)" fg:x="465" fg:w="19"/><text x="8.6892%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.31%)</title><rect x="8.4755%" y="533" width="0.3085%" height="15" fill="rgb(241,108,4)" fg:x="467" fg:w="17"/><text x="8.7255%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.20%)</title><rect x="8.5844%" y="517" width="0.1996%" height="15" fill="rgb(247,173,49)" fg:x="473" fg:w="11"/><text x="8.8344%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="8.7659%" y="501" width="0.0181%" height="15" fill="rgb(224,114,35)" fg:x="483" fg:w="1"/><text x="9.0159%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="8.7659%" y="485" width="0.0181%" height="15" fill="rgb(245,159,27)" fg:x="483" fg:w="1"/><text x="9.0159%" y="495.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="8.7840%" y="549" width="0.0363%" height="15" fill="rgb(245,172,44)" fg:x="484" fg:w="2"/><text x="9.0340%" y="559.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="8.8203%" y="549" width="0.0181%" height="15" fill="rgb(236,23,11)" fg:x="486" fg:w="1"/><text x="9.0703%" y="559.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.07%)</title><rect x="8.8385%" y="549" width="0.0726%" height="15" fill="rgb(205,117,38)" fg:x="487" fg:w="4"/><text x="9.0885%" y="559.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="8.9111%" y="549" width="0.0907%" height="15" fill="rgb(237,72,25)" fg:x="491" fg:w="5"/><text x="9.1611%" y="559.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="9.0018%" y="549" width="0.0181%" height="15" fill="rgb(244,70,9)" fg:x="496" fg:w="1"/><text x="9.2518%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="9.0563%" y="533" width="0.0181%" height="15" fill="rgb(217,125,39)" fg:x="499" fg:w="1"/><text x="9.3063%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="9.0563%" y="517" width="0.0181%" height="15" fill="rgb(235,36,10)" fg:x="499" fg:w="1"/><text x="9.3063%" y="527.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="9.7278%" y="165" width="0.0181%" height="15" fill="rgb(251,123,47)" fg:x="536" fg:w="1"/><text x="9.9778%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="9.7096%" y="213" width="0.0726%" height="15" fill="rgb(221,13,13)" fg:x="535" fg:w="4"/><text x="9.9596%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="9.7096%" y="197" width="0.0726%" height="15" fill="rgb(238,131,9)" fg:x="535" fg:w="4"/><text x="9.9596%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="9.7096%" y="181" width="0.0726%" height="15" fill="rgb(211,50,8)" fg:x="535" fg:w="4"/><text x="9.9596%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="9.7459%" y="165" width="0.0363%" height="15" fill="rgb(245,182,24)" fg:x="537" fg:w="2"/><text x="9.9959%" y="175.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="9.7641%" y="149" width="0.0181%" height="15" fill="rgb(242,14,37)" fg:x="538" fg:w="1"/><text x="10.0141%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="9.7096%" y="229" width="0.0907%" height="15" fill="rgb(246,228,12)" fg:x="535" fg:w="5"/><text x="9.9596%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.7822%" y="213" width="0.0181%" height="15" fill="rgb(213,55,15)" fg:x="539" fg:w="1"/><text x="10.0322%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="9.7096%" y="245" width="0.1089%" height="15" fill="rgb(209,9,3)" fg:x="535" fg:w="6"/><text x="9.9596%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.8004%" y="229" width="0.0181%" height="15" fill="rgb(230,59,30)" fg:x="540" fg:w="1"/><text x="10.0504%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="9.7096%" y="277" width="0.1270%" height="15" fill="rgb(209,121,21)" fg:x="535" fg:w="7"/><text x="9.9596%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="9.7096%" y="261" width="0.1270%" height="15" fill="rgb(220,109,13)" fg:x="535" fg:w="7"/><text x="9.9596%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.8185%" y="245" width="0.0181%" height="15" fill="rgb(232,18,1)" fg:x="541" fg:w="1"/><text x="10.0685%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="9.7096%" y="293" width="0.1452%" height="15" fill="rgb(215,41,42)" fg:x="535" fg:w="8"/><text x="9.9596%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="9.8367%" y="277" width="0.0181%" height="15" fill="rgb(224,123,36)" fg:x="542" fg:w="1"/><text x="10.0867%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="9.7096%" y="309" width="0.1633%" height="15" fill="rgb(240,125,3)" fg:x="535" fg:w="9"/><text x="9.9596%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.8548%" y="293" width="0.0181%" height="15" fill="rgb(205,98,50)" fg:x="543" fg:w="1"/><text x="10.1048%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="9.7096%" y="325" width="0.1996%" height="15" fill="rgb(205,185,37)" fg:x="535" fg:w="11"/><text x="9.9596%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="9.8730%" y="309" width="0.0363%" height="15" fill="rgb(238,207,15)" fg:x="544" fg:w="2"/><text x="10.1230%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="9.7096%" y="341" width="0.2178%" height="15" fill="rgb(213,199,42)" fg:x="535" fg:w="12"/><text x="9.9596%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.9093%" y="325" width="0.0181%" height="15" fill="rgb(235,201,11)" fg:x="546" fg:w="1"/><text x="10.1593%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="9.7096%" y="357" width="0.2541%" height="15" fill="rgb(207,46,11)" fg:x="535" fg:w="14"/><text x="9.9596%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="9.9274%" y="341" width="0.0363%" height="15" fill="rgb(241,35,35)" fg:x="547" fg:w="2"/><text x="10.1774%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="9.7096%" y="373" width="0.2722%" height="15" fill="rgb(243,32,47)" fg:x="535" fg:w="15"/><text x="9.9596%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="9.9637%" y="357" width="0.0181%" height="15" fill="rgb(247,202,23)" fg:x="549" fg:w="1"/><text x="10.2137%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.36%)</title><rect x="9.6733%" y="389" width="0.3630%" height="15" fill="rgb(219,102,11)" fg:x="533" fg:w="20"/><text x="9.9233%" y="399.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="9.9819%" y="373" width="0.0544%" height="15" fill="rgb(243,110,44)" fg:x="550" fg:w="3"/><text x="10.2319%" y="383.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="10.0181%" y="357" width="0.0181%" height="15" fill="rgb(222,74,54)" fg:x="552" fg:w="1"/><text x="10.2681%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.38%)</title><rect x="9.6733%" y="405" width="0.3811%" height="15" fill="rgb(216,99,12)" fg:x="533" fg:w="21"/><text x="9.9233%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="10.0363%" y="389" width="0.0181%" height="15" fill="rgb(226,22,26)" fg:x="553" fg:w="1"/><text x="10.2863%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (24 samples, 0.44%)</title><rect x="9.6733%" y="421" width="0.4356%" height="15" fill="rgb(217,163,10)" fg:x="533" fg:w="24"/><text x="9.9233%" y="431.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="10.0544%" y="405" width="0.0544%" height="15" fill="rgb(213,25,53)" fg:x="554" fg:w="3"/><text x="10.3044%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (26 samples, 0.47%)</title><rect x="9.6733%" y="437" width="0.4719%" height="15" fill="rgb(252,105,26)" fg:x="533" fg:w="26"/><text x="9.9233%" y="447.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="10.1089%" y="421" width="0.0363%" height="15" fill="rgb(220,39,43)" fg:x="557" fg:w="2"/><text x="10.3589%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (27 samples, 0.49%)</title><rect x="9.6733%" y="453" width="0.4900%" height="15" fill="rgb(229,68,48)" fg:x="533" fg:w="27"/><text x="9.9233%" y="463.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="10.1452%" y="437" width="0.0181%" height="15" fill="rgb(252,8,32)" fg:x="559" fg:w="1"/><text x="10.3952%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.51%)</title><rect x="9.6733%" y="469" width="0.5082%" height="15" fill="rgb(223,20,43)" fg:x="533" fg:w="28"/><text x="9.9233%" y="479.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="10.1633%" y="453" width="0.0181%" height="15" fill="rgb(229,81,49)" fg:x="560" fg:w="1"/><text x="10.4133%" y="463.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (52 samples, 0.94%)</title><rect x="9.2740%" y="517" width="0.9437%" height="15" fill="rgb(236,28,36)" fg:x="511" fg:w="52"/><text x="9.5240%" y="527.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (36 samples, 0.65%)</title><rect x="9.5644%" y="501" width="0.6534%" height="15" fill="rgb(249,185,26)" fg:x="527" fg:w="36"/><text x="9.8144%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="9.6733%" y="485" width="0.5445%" height="15" fill="rgb(249,174,33)" fg:x="533" fg:w="30"/><text x="9.9233%" y="495.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="10.1815%" y="469" width="0.0363%" height="15" fill="rgb(233,201,37)" fg:x="561" fg:w="2"/><text x="10.4315%" y="479.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (82 samples, 1.49%)</title><rect x="9.0744%" y="533" width="1.4882%" height="15" fill="rgb(221,78,26)" fg:x="500" fg:w="82"/><text x="9.3244%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.34%)</title><rect x="10.2178%" y="517" width="0.3448%" height="15" fill="rgb(250,127,30)" fg:x="563" fg:w="19"/><text x="10.4678%" y="527.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (21 samples, 0.38%)</title><rect x="10.5626%" y="533" width="0.3811%" height="15" fill="rgb(230,49,44)" fg:x="582" fg:w="21"/><text x="10.8126%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21 samples, 0.38%)</title><rect x="10.5626%" y="517" width="0.3811%" height="15" fill="rgb(229,67,23)" fg:x="582" fg:w="21"/><text x="10.8126%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.24%)</title><rect x="10.7078%" y="501" width="0.2359%" height="15" fill="rgb(249,83,47)" fg:x="590" fg:w="13"/><text x="10.9578%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="10.9256%" y="485" width="0.0181%" height="15" fill="rgb(215,43,3)" fg:x="602" fg:w="1"/><text x="11.1756%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="10.9256%" y="469" width="0.0181%" height="15" fill="rgb(238,154,13)" fg:x="602" fg:w="1"/><text x="11.1756%" y="479.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="10.9437%" y="533" width="0.0544%" height="15" fill="rgb(219,56,2)" fg:x="603" fg:w="3"/><text x="11.1937%" y="543.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (3 samples, 0.05%)</title><rect x="10.9982%" y="533" width="0.0544%" height="15" fill="rgb(233,0,4)" fg:x="606" fg:w="3"/><text x="11.2482%" y="543.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (20 samples, 0.36%)</title><rect x="11.0526%" y="533" width="0.3630%" height="15" fill="rgb(235,30,7)" fg:x="609" fg:w="20"/><text x="11.3026%" y="543.50"></text></g><g><title>rust-gkat`Cudd_Ref (6 samples, 0.11%)</title><rect x="11.4156%" y="533" width="0.1089%" height="15" fill="rgb(250,79,13)" fg:x="629" fg:w="6"/><text x="11.6656%" y="543.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.13%)</title><rect x="11.5245%" y="533" width="0.1270%" height="15" fill="rgb(211,146,34)" fg:x="635" fg:w="7"/><text x="11.7745%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="11.6334%" y="517" width="0.0181%" height="15" fill="rgb(228,22,38)" fg:x="641" fg:w="1"/><text x="11.8834%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="11.6515%" y="533" width="0.0181%" height="15" fill="rgb(235,168,5)" fg:x="642" fg:w="1"/><text x="11.9015%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="11.7060%" y="517" width="0.0181%" height="15" fill="rgb(221,155,16)" fg:x="645" fg:w="1"/><text x="11.9560%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="11.7060%" y="501" width="0.0181%" height="15" fill="rgb(215,215,53)" fg:x="645" fg:w="1"/><text x="11.9560%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="11.8875%" y="277" width="0.0181%" height="15" fill="rgb(223,4,10)" fg:x="655" fg:w="1"/><text x="12.1375%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="11.8875%" y="261" width="0.0181%" height="15" fill="rgb(234,103,6)" fg:x="655" fg:w="1"/><text x="12.1375%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="11.8875%" y="293" width="0.0726%" height="15" fill="rgb(227,97,0)" fg:x="655" fg:w="4"/><text x="12.1375%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="11.9056%" y="277" width="0.0544%" height="15" fill="rgb(234,150,53)" fg:x="656" fg:w="3"/><text x="12.1556%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="11.8875%" y="309" width="0.0907%" height="15" fill="rgb(228,201,54)" fg:x="655" fg:w="5"/><text x="12.1375%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="11.9601%" y="293" width="0.0181%" height="15" fill="rgb(222,22,37)" fg:x="659" fg:w="1"/><text x="12.2101%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="11.9782%" y="309" width="0.0181%" height="15" fill="rgb(237,53,32)" fg:x="660" fg:w="1"/><text x="12.2282%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="11.8875%" y="341" width="0.1270%" height="15" fill="rgb(233,25,53)" fg:x="655" fg:w="7"/><text x="12.1375%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="11.8875%" y="325" width="0.1270%" height="15" fill="rgb(210,40,34)" fg:x="655" fg:w="7"/><text x="12.1375%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="11.9964%" y="309" width="0.0181%" height="15" fill="rgb(241,220,44)" fg:x="661" fg:w="1"/><text x="12.2464%" y="319.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="11.9964%" y="293" width="0.0181%" height="15" fill="rgb(235,28,35)" fg:x="661" fg:w="1"/><text x="12.2464%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="11.8875%" y="357" width="0.1996%" height="15" fill="rgb(210,56,17)" fg:x="655" fg:w="11"/><text x="12.1375%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="12.0145%" y="341" width="0.0726%" height="15" fill="rgb(224,130,29)" fg:x="662" fg:w="4"/><text x="12.2645%" y="351.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="12.0690%" y="325" width="0.0181%" height="15" fill="rgb(235,212,8)" fg:x="665" fg:w="1"/><text x="12.3190%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="12.0871%" y="357" width="0.0181%" height="15" fill="rgb(223,33,50)" fg:x="666" fg:w="1"/><text x="12.3371%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="11.8693%" y="389" width="0.2541%" height="15" fill="rgb(219,149,13)" fg:x="654" fg:w="14"/><text x="12.1193%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.24%)</title><rect x="11.8875%" y="373" width="0.2359%" height="15" fill="rgb(250,156,29)" fg:x="655" fg:w="13"/><text x="12.1375%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="12.1053%" y="357" width="0.0181%" height="15" fill="rgb(216,193,19)" fg:x="667" fg:w="1"/><text x="12.3553%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="11.8693%" y="405" width="0.2722%" height="15" fill="rgb(216,135,14)" fg:x="654" fg:w="15"/><text x="12.1193%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="12.1234%" y="389" width="0.0181%" height="15" fill="rgb(241,47,5)" fg:x="668" fg:w="1"/><text x="12.3734%" y="399.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="12.1234%" y="373" width="0.0181%" height="15" fill="rgb(233,42,35)" fg:x="668" fg:w="1"/><text x="12.3734%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.31%)</title><rect x="11.8693%" y="453" width="0.3085%" height="15" fill="rgb(231,13,6)" fg:x="654" fg:w="17"/><text x="12.1193%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.31%)</title><rect x="11.8693%" y="437" width="0.3085%" height="15" fill="rgb(207,181,40)" fg:x="654" fg:w="17"/><text x="12.1193%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.31%)</title><rect x="11.8693%" y="421" width="0.3085%" height="15" fill="rgb(254,173,49)" fg:x="654" fg:w="17"/><text x="12.1193%" y="431.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="12.1416%" y="405" width="0.0363%" height="15" fill="rgb(221,1,38)" fg:x="669" fg:w="2"/><text x="12.3916%" y="415.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (23 samples, 0.42%)</title><rect x="11.7786%" y="501" width="0.4174%" height="15" fill="rgb(206,124,46)" fg:x="649" fg:w="23"/><text x="12.0286%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.38%)</title><rect x="11.8149%" y="485" width="0.3811%" height="15" fill="rgb(249,21,11)" fg:x="651" fg:w="21"/><text x="12.0649%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.33%)</title><rect x="11.8693%" y="469" width="0.3267%" height="15" fill="rgb(222,201,40)" fg:x="654" fg:w="18"/><text x="12.1193%" y="479.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="12.1779%" y="453" width="0.0181%" height="15" fill="rgb(235,61,29)" fg:x="671" fg:w="1"/><text x="12.4279%" y="463.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.64%)</title><rect x="11.7241%" y="517" width="0.6352%" height="15" fill="rgb(219,207,3)" fg:x="646" fg:w="35"/><text x="11.9741%" y="527.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="12.1960%" y="501" width="0.1633%" height="15" fill="rgb(222,56,46)" fg:x="672" fg:w="9"/><text x="12.4460%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="12.3775%" y="501" width="0.0181%" height="15" fill="rgb(239,76,54)" fg:x="682" fg:w="1"/><text x="12.6275%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="12.3775%" y="485" width="0.0181%" height="15" fill="rgb(231,124,27)" fg:x="682" fg:w="1"/><text x="12.6275%" y="495.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (21 samples, 0.38%)</title><rect x="12.3593%" y="517" width="0.3811%" height="15" fill="rgb(249,195,6)" fg:x="681" fg:w="21"/><text x="12.6093%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.34%)</title><rect x="12.3956%" y="501" width="0.3448%" height="15" fill="rgb(237,174,47)" fg:x="683" fg:w="19"/><text x="12.6456%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.27%)</title><rect x="12.4682%" y="485" width="0.2722%" height="15" fill="rgb(206,201,31)" fg:x="687" fg:w="15"/><text x="12.7182%" y="495.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="12.7405%" y="517" width="0.0181%" height="15" fill="rgb(231,57,52)" fg:x="702" fg:w="1"/><text x="12.9905%" y="527.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (6 samples, 0.11%)</title><rect x="12.7586%" y="517" width="0.1089%" height="15" fill="rgb(248,177,22)" fg:x="703" fg:w="6"/><text x="13.0086%" y="527.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (8 samples, 0.15%)</title><rect x="12.8675%" y="517" width="0.1452%" height="15" fill="rgb(215,211,37)" fg:x="709" fg:w="8"/><text x="13.1175%" y="527.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="13.0127%" y="517" width="0.0363%" height="15" fill="rgb(241,128,51)" fg:x="717" fg:w="2"/><text x="13.2627%" y="527.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="13.0490%" y="517" width="0.0726%" height="15" fill="rgb(227,165,31)" fg:x="719" fg:w="4"/><text x="13.2990%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="13.1216%" y="501" width="0.0181%" height="15" fill="rgb(228,167,24)" fg:x="723" fg:w="1"/><text x="13.3716%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="13.5572%" y="101" width="0.0181%" height="15" fill="rgb(228,143,12)" fg:x="747" fg:w="1"/><text x="13.8072%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="13.5572%" y="85" width="0.0181%" height="15" fill="rgb(249,149,8)" fg:x="747" fg:w="1"/><text x="13.8072%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="13.5572%" y="69" width="0.0181%" height="15" fill="rgb(243,35,44)" fg:x="747" fg:w="1"/><text x="13.8072%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="13.5390%" y="133" width="0.0544%" height="15" fill="rgb(246,89,9)" fg:x="746" fg:w="3"/><text x="13.7890%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="13.5390%" y="117" width="0.0544%" height="15" fill="rgb(233,213,13)" fg:x="746" fg:w="3"/><text x="13.7890%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="13.5753%" y="101" width="0.0181%" height="15" fill="rgb(233,141,41)" fg:x="748" fg:w="1"/><text x="13.8253%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="13.5935%" y="133" width="0.0181%" height="15" fill="rgb(239,167,4)" fg:x="749" fg:w="1"/><text x="13.8435%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="13.5390%" y="165" width="0.0907%" height="15" fill="rgb(209,217,16)" fg:x="746" fg:w="5"/><text x="13.7890%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="13.5390%" y="149" width="0.0907%" height="15" fill="rgb(219,88,35)" fg:x="746" fg:w="5"/><text x="13.7890%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="13.6116%" y="133" width="0.0181%" height="15" fill="rgb(220,193,23)" fg:x="750" fg:w="1"/><text x="13.8616%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="13.5390%" y="181" width="0.1089%" height="15" fill="rgb(230,90,52)" fg:x="746" fg:w="6"/><text x="13.7890%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="13.6298%" y="165" width="0.0181%" height="15" fill="rgb(252,106,19)" fg:x="751" fg:w="1"/><text x="13.8798%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="13.5390%" y="197" width="0.1452%" height="15" fill="rgb(206,74,20)" fg:x="746" fg:w="8"/><text x="13.7890%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="13.6479%" y="181" width="0.0363%" height="15" fill="rgb(230,138,44)" fg:x="752" fg:w="2"/><text x="13.8979%" y="191.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="13.6661%" y="165" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="753" fg:w="1"/><text x="13.9161%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="13.5390%" y="213" width="0.1996%" height="15" fill="rgb(242,16,51)" fg:x="746" fg:w="11"/><text x="13.7890%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="13.6842%" y="197" width="0.0544%" height="15" fill="rgb(248,9,4)" fg:x="754" fg:w="3"/><text x="13.9342%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.24%)</title><rect x="13.5209%" y="229" width="0.2359%" height="15" fill="rgb(210,31,22)" fg:x="745" fg:w="13"/><text x="13.7709%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="13.7387%" y="213" width="0.0181%" height="15" fill="rgb(239,54,39)" fg:x="757" fg:w="1"/><text x="13.9887%" y="223.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="13.7568%" y="229" width="0.0181%" height="15" fill="rgb(230,99,41)" fg:x="758" fg:w="1"/><text x="14.0068%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.34%)</title><rect x="13.5027%" y="245" width="0.3448%" height="15" fill="rgb(253,106,12)" fg:x="744" fg:w="19"/><text x="13.7527%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="13.7750%" y="229" width="0.0726%" height="15" fill="rgb(213,46,41)" fg:x="759" fg:w="4"/><text x="14.0250%" y="239.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="13.8113%" y="213" width="0.0363%" height="15" fill="rgb(215,133,35)" fg:x="761" fg:w="2"/><text x="14.0613%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (24 samples, 0.44%)</title><rect x="13.5027%" y="261" width="0.4356%" height="15" fill="rgb(213,28,5)" fg:x="744" fg:w="24"/><text x="13.7527%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="13.8475%" y="245" width="0.0907%" height="15" fill="rgb(215,77,49)" fg:x="763" fg:w="5"/><text x="14.0975%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="13.5027%" y="277" width="0.5445%" height="15" fill="rgb(248,100,22)" fg:x="744" fg:w="30"/><text x="13.7527%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (6 samples, 0.11%)</title><rect x="13.9383%" y="261" width="0.1089%" height="15" fill="rgb(208,67,9)" fg:x="768" fg:w="6"/><text x="14.1883%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (33 samples, 0.60%)</title><rect x="13.5027%" y="293" width="0.5989%" height="15" fill="rgb(219,133,21)" fg:x="744" fg:w="33"/><text x="13.7527%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="14.0472%" y="277" width="0.0544%" height="15" fill="rgb(246,46,29)" fg:x="774" fg:w="3"/><text x="14.2972%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (40 samples, 0.73%)</title><rect x="13.4846%" y="309" width="0.7260%" height="15" fill="rgb(246,185,52)" fg:x="743" fg:w="40"/><text x="13.7346%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (6 samples, 0.11%)</title><rect x="14.1016%" y="293" width="0.1089%" height="15" fill="rgb(252,136,11)" fg:x="777" fg:w="6"/><text x="14.3516%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (46 samples, 0.83%)</title><rect x="13.4846%" y="325" width="0.8348%" height="15" fill="rgb(219,138,53)" fg:x="743" fg:w="46"/><text x="13.7346%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (6 samples, 0.11%)</title><rect x="14.2105%" y="309" width="0.1089%" height="15" fill="rgb(211,51,23)" fg:x="783" fg:w="6"/><text x="14.4605%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (48 samples, 0.87%)</title><rect x="13.4664%" y="341" width="0.8711%" height="15" fill="rgb(247,221,28)" fg:x="742" fg:w="48"/><text x="13.7164%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="14.3194%" y="325" width="0.0181%" height="15" fill="rgb(251,222,45)" fg:x="789" fg:w="1"/><text x="14.5694%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (50 samples, 0.91%)</title><rect x="13.4483%" y="357" width="0.9074%" height="15" fill="rgb(217,162,53)" fg:x="741" fg:w="50"/><text x="13.6983%" y="367.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="14.3376%" y="341" width="0.0181%" height="15" fill="rgb(229,93,14)" fg:x="790" fg:w="1"/><text x="14.5876%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (52 samples, 0.94%)</title><rect x="13.4483%" y="373" width="0.9437%" height="15" fill="rgb(209,67,49)" fg:x="741" fg:w="52"/><text x="13.6983%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="14.3557%" y="357" width="0.0363%" height="15" fill="rgb(213,87,29)" fg:x="791" fg:w="2"/><text x="14.6057%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (55 samples, 1.00%)</title><rect x="13.4301%" y="421" width="0.9982%" height="15" fill="rgb(205,151,52)" fg:x="740" fg:w="55"/><text x="13.6801%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (55 samples, 1.00%)</title><rect x="13.4301%" y="405" width="0.9982%" height="15" fill="rgb(253,215,39)" fg:x="740" fg:w="55"/><text x="13.6801%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (54 samples, 0.98%)</title><rect x="13.4483%" y="389" width="0.9800%" height="15" fill="rgb(221,220,41)" fg:x="741" fg:w="54"/><text x="13.6983%" y="399.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="14.3920%" y="373" width="0.0363%" height="15" fill="rgb(218,133,21)" fg:x="793" fg:w="2"/><text x="14.6420%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (69 samples, 1.25%)</title><rect x="13.2123%" y="485" width="1.2523%" height="15" fill="rgb(221,193,43)" fg:x="728" fg:w="69"/><text x="13.4623%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (63 samples, 1.14%)</title><rect x="13.3212%" y="469" width="1.1434%" height="15" fill="rgb(240,128,52)" fg:x="734" fg:w="63"/><text x="13.5712%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (57 samples, 1.03%)</title><rect x="13.4301%" y="453" width="1.0345%" height="15" fill="rgb(253,114,12)" fg:x="740" fg:w="57"/><text x="13.6801%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (57 samples, 1.03%)</title><rect x="13.4301%" y="437" width="1.0345%" height="15" fill="rgb(215,223,47)" fg:x="740" fg:w="57"/><text x="13.6801%" y="447.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="14.4283%" y="421" width="0.0363%" height="15" fill="rgb(248,225,23)" fg:x="795" fg:w="2"/><text x="14.6783%" y="431.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="14.4465%" y="405" width="0.0181%" height="15" fill="rgb(250,108,0)" fg:x="796" fg:w="1"/><text x="14.6965%" y="415.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (81 samples, 1.47%)</title><rect x="13.1397%" y="501" width="1.4701%" height="15" fill="rgb(228,208,7)" fg:x="724" fg:w="81"/><text x="13.3897%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="14.4646%" y="485" width="0.1452%" height="15" fill="rgb(244,45,10)" fg:x="797" fg:w="8"/><text x="14.7146%" y="495.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6098%" y="501" width="0.0181%" height="15" fill="rgb(207,125,25)" fg:x="805" fg:w="1"/><text x="14.8598%" y="511.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.6098%" y="485" width="0.0181%" height="15" fill="rgb(210,195,18)" fg:x="805" fg:w="1"/><text x="14.8598%" y="495.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="14.6098%" y="469" width="0.0181%" height="15" fill="rgb(249,80,12)" fg:x="805" fg:w="1"/><text x="14.8598%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="453" width="0.0181%" height="15" fill="rgb(221,65,9)" fg:x="805" fg:w="1"/><text x="14.8598%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="437" width="0.0181%" height="15" fill="rgb(235,49,36)" fg:x="805" fg:w="1"/><text x="14.8598%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="421" width="0.0181%" height="15" fill="rgb(225,32,20)" fg:x="805" fg:w="1"/><text x="14.8598%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="405" width="0.0181%" height="15" fill="rgb(215,141,46)" fg:x="805" fg:w="1"/><text x="14.8598%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="389" width="0.0181%" height="15" fill="rgb(250,160,47)" fg:x="805" fg:w="1"/><text x="14.8598%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="373" width="0.0181%" height="15" fill="rgb(216,222,40)" fg:x="805" fg:w="1"/><text x="14.8598%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="357" width="0.0181%" height="15" fill="rgb(234,217,39)" fg:x="805" fg:w="1"/><text x="14.8598%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="341" width="0.0181%" height="15" fill="rgb(207,178,40)" fg:x="805" fg:w="1"/><text x="14.8598%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="325" width="0.0181%" height="15" fill="rgb(221,136,13)" fg:x="805" fg:w="1"/><text x="14.8598%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="14.6098%" y="309" width="0.0181%" height="15" fill="rgb(249,199,10)" fg:x="805" fg:w="1"/><text x="14.8598%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="14.6098%" y="293" width="0.0181%" height="15" fill="rgb(249,222,13)" fg:x="805" fg:w="1"/><text x="14.8598%" y="303.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (21 samples, 0.38%)</title><rect x="14.6279%" y="501" width="0.3811%" height="15" fill="rgb(244,185,38)" fg:x="806" fg:w="21"/><text x="14.8779%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.36%)</title><rect x="14.6461%" y="485" width="0.3630%" height="15" fill="rgb(236,202,9)" fg:x="807" fg:w="20"/><text x="14.8961%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.27%)</title><rect x="14.7368%" y="469" width="0.2722%" height="15" fill="rgb(250,229,37)" fg:x="812" fg:w="15"/><text x="14.9868%" y="479.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.04%)</title><rect x="15.0091%" y="501" width="0.0363%" height="15" fill="rgb(206,174,23)" fg:x="827" fg:w="2"/><text x="15.2591%" y="511.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (15 samples, 0.27%)</title><rect x="15.0454%" y="501" width="0.2722%" height="15" fill="rgb(211,33,43)" fg:x="829" fg:w="15"/><text x="15.2954%" y="511.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.05%)</title><rect x="15.3176%" y="501" width="0.0544%" height="15" fill="rgb(245,58,50)" fg:x="844" fg:w="3"/><text x="15.5676%" y="511.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="15.3721%" y="501" width="0.0726%" height="15" fill="rgb(244,68,36)" fg:x="847" fg:w="4"/><text x="15.6221%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.4446%" y="501" width="0.0181%" height="15" fill="rgb(232,229,15)" fg:x="851" fg:w="1"/><text x="15.6946%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="15.6443%" y="117" width="0.0181%" height="15" fill="rgb(254,30,23)" fg:x="862" fg:w="1"/><text x="15.8943%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="15.6443%" y="101" width="0.0181%" height="15" fill="rgb(235,160,14)" fg:x="862" fg:w="1"/><text x="15.8943%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="15.6443%" y="149" width="0.0363%" height="15" fill="rgb(212,155,44)" fg:x="862" fg:w="2"/><text x="15.8943%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="15.6443%" y="133" width="0.0363%" height="15" fill="rgb(226,2,50)" fg:x="862" fg:w="2"/><text x="15.8943%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="15.6624%" y="117" width="0.0181%" height="15" fill="rgb(234,177,6)" fg:x="863" fg:w="1"/><text x="15.9124%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="15.6443%" y="165" width="0.0544%" height="15" fill="rgb(217,24,9)" fg:x="862" fg:w="3"/><text x="15.8943%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="15.6806%" y="149" width="0.0181%" height="15" fill="rgb(220,13,46)" fg:x="864" fg:w="1"/><text x="15.9306%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="15.6443%" y="181" width="0.0907%" height="15" fill="rgb(239,221,27)" fg:x="862" fg:w="5"/><text x="15.8943%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="15.6987%" y="165" width="0.0363%" height="15" fill="rgb(222,198,25)" fg:x="865" fg:w="2"/><text x="15.9487%" y="175.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="15.7169%" y="149" width="0.0181%" height="15" fill="rgb(211,99,13)" fg:x="866" fg:w="1"/><text x="15.9669%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="15.6443%" y="197" width="0.1270%" height="15" fill="rgb(232,111,31)" fg:x="862" fg:w="7"/><text x="15.8943%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="15.7350%" y="181" width="0.0363%" height="15" fill="rgb(245,82,37)" fg:x="867" fg:w="2"/><text x="15.9850%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="15.6443%" y="213" width="0.1815%" height="15" fill="rgb(227,149,46)" fg:x="862" fg:w="10"/><text x="15.8943%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="15.7713%" y="197" width="0.0544%" height="15" fill="rgb(218,36,50)" fg:x="869" fg:w="3"/><text x="16.0213%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="15.8258%" y="213" width="0.0181%" height="15" fill="rgb(226,80,48)" fg:x="872" fg:w="1"/><text x="16.0758%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="15.6443%" y="229" width="0.2178%" height="15" fill="rgb(238,224,15)" fg:x="862" fg:w="12"/><text x="15.8943%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="15.8439%" y="213" width="0.0181%" height="15" fill="rgb(241,136,10)" fg:x="873" fg:w="1"/><text x="16.0939%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="15.6443%" y="245" width="0.2722%" height="15" fill="rgb(208,32,45)" fg:x="862" fg:w="15"/><text x="15.8943%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="15.8621%" y="229" width="0.0544%" height="15" fill="rgb(207,135,9)" fg:x="874" fg:w="3"/><text x="16.1121%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.36%)</title><rect x="15.6443%" y="261" width="0.3630%" height="15" fill="rgb(206,86,44)" fg:x="862" fg:w="20"/><text x="15.8943%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="15.9165%" y="245" width="0.0907%" height="15" fill="rgb(245,177,15)" fg:x="877" fg:w="5"/><text x="16.1665%" y="255.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="15.9891%" y="229" width="0.0181%" height="15" fill="rgb(206,64,50)" fg:x="881" fg:w="1"/><text x="16.2391%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.40%)</title><rect x="15.6443%" y="277" width="0.3993%" height="15" fill="rgb(234,36,40)" fg:x="862" fg:w="22"/><text x="15.8943%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.0073%" y="261" width="0.0363%" height="15" fill="rgb(213,64,8)" fg:x="882" fg:w="2"/><text x="16.2573%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="16.0436%" y="277" width="0.0181%" height="15" fill="rgb(210,75,36)" fg:x="884" fg:w="1"/><text x="16.2936%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="15.6443%" y="293" width="0.4537%" height="15" fill="rgb(229,88,21)" fg:x="862" fg:w="25"/><text x="15.8943%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.0617%" y="277" width="0.0363%" height="15" fill="rgb(252,204,47)" fg:x="885" fg:w="2"/><text x="16.3117%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="16.0799%" y="261" width="0.0181%" height="15" fill="rgb(208,77,27)" fg:x="886" fg:w="1"/><text x="16.3299%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (26 samples, 0.47%)</title><rect x="15.6443%" y="309" width="0.4719%" height="15" fill="rgb(221,76,26)" fg:x="862" fg:w="26"/><text x="15.8943%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="16.0980%" y="293" width="0.0181%" height="15" fill="rgb(225,139,18)" fg:x="887" fg:w="1"/><text x="16.3480%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.51%)</title><rect x="15.6443%" y="325" width="0.5082%" height="15" fill="rgb(230,137,11)" fg:x="862" fg:w="28"/><text x="15.8943%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.1162%" y="309" width="0.0363%" height="15" fill="rgb(212,28,1)" fg:x="888" fg:w="2"/><text x="16.3662%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (29 samples, 0.53%)</title><rect x="15.6443%" y="341" width="0.5263%" height="15" fill="rgb(248,164,17)" fg:x="862" fg:w="29"/><text x="15.8943%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="16.1525%" y="325" width="0.0181%" height="15" fill="rgb(222,171,42)" fg:x="890" fg:w="1"/><text x="16.4025%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="15.6443%" y="357" width="0.5445%" height="15" fill="rgb(243,84,45)" fg:x="862" fg:w="30"/><text x="15.8943%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="16.1706%" y="341" width="0.0181%" height="15" fill="rgb(252,49,23)" fg:x="891" fg:w="1"/><text x="16.4206%" y="351.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="16.1887%" y="357" width="0.0181%" height="15" fill="rgb(215,19,7)" fg:x="892" fg:w="1"/><text x="16.4387%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (34 samples, 0.62%)</title><rect x="15.6261%" y="373" width="0.6171%" height="15" fill="rgb(238,81,41)" fg:x="861" fg:w="34"/><text x="15.8761%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.2069%" y="357" width="0.0363%" height="15" fill="rgb(210,199,37)" fg:x="893" fg:w="2"/><text x="16.4569%" y="367.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="16.2432%" y="373" width="0.0181%" height="15" fill="rgb(244,192,49)" fg:x="895" fg:w="1"/><text x="16.4932%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (37 samples, 0.67%)</title><rect x="15.6261%" y="389" width="0.6715%" height="15" fill="rgb(226,211,11)" fg:x="861" fg:w="37"/><text x="15.8761%" y="399.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.2613%" y="373" width="0.0363%" height="15" fill="rgb(236,162,54)" fg:x="896" fg:w="2"/><text x="16.5113%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (41 samples, 0.74%)</title><rect x="15.6261%" y="405" width="0.7441%" height="15" fill="rgb(220,229,9)" fg:x="861" fg:w="41"/><text x="15.8761%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="16.2976%" y="389" width="0.0726%" height="15" fill="rgb(250,87,22)" fg:x="898" fg:w="4"/><text x="16.5476%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (42 samples, 0.76%)</title><rect x="15.6261%" y="421" width="0.7623%" height="15" fill="rgb(239,43,17)" fg:x="861" fg:w="42"/><text x="15.8761%" y="431.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="16.3702%" y="405" width="0.0181%" height="15" fill="rgb(231,177,25)" fg:x="902" fg:w="1"/><text x="16.6202%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (43 samples, 0.78%)</title><rect x="15.6261%" y="437" width="0.7804%" height="15" fill="rgb(219,179,1)" fg:x="861" fg:w="43"/><text x="15.8761%" y="447.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="16.3884%" y="421" width="0.0181%" height="15" fill="rgb(238,219,53)" fg:x="903" fg:w="1"/><text x="16.6384%" y="431.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (49 samples, 0.89%)</title><rect x="15.5535%" y="469" width="0.8893%" height="15" fill="rgb(232,167,36)" fg:x="857" fg:w="49"/><text x="15.8035%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (47 samples, 0.85%)</title><rect x="15.5898%" y="453" width="0.8530%" height="15" fill="rgb(244,19,51)" fg:x="859" fg:w="47"/><text x="15.8398%" y="463.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="16.4065%" y="437" width="0.0363%" height="15" fill="rgb(224,6,22)" fg:x="904" fg:w="2"/><text x="16.6565%" y="447.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 1.05%)</title><rect x="15.4809%" y="485" width="1.0526%" height="15" fill="rgb(224,145,5)" fg:x="853" fg:w="58"/><text x="15.7309%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="16.4428%" y="469" width="0.0907%" height="15" fill="rgb(234,130,49)" fg:x="906" fg:w="5"/><text x="16.6928%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="16.7332%" y="453" width="0.0181%" height="15" fill="rgb(254,6,2)" fg:x="922" fg:w="1"/><text x="16.9832%" y="463.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (23 samples, 0.42%)</title><rect x="16.5336%" y="485" width="0.4174%" height="15" fill="rgb(208,96,46)" fg:x="911" fg:w="23"/><text x="16.7836%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.36%)</title><rect x="16.5880%" y="469" width="0.3630%" height="15" fill="rgb(239,3,39)" fg:x="914" fg:w="20"/><text x="16.8380%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.20%)</title><rect x="16.7514%" y="453" width="0.1996%" height="15" fill="rgb(233,210,1)" fg:x="923" fg:w="11"/><text x="17.0014%" y="463.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="16.9510%" y="485" width="0.0181%" height="15" fill="rgb(244,137,37)" fg:x="934" fg:w="1"/><text x="17.2010%" y="495.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (8 samples, 0.15%)</title><rect x="16.9691%" y="485" width="0.1452%" height="15" fill="rgb(240,136,2)" fg:x="935" fg:w="8"/><text x="17.2191%" y="495.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="17.1143%" y="485" width="0.0181%" height="15" fill="rgb(239,18,37)" fg:x="943" fg:w="1"/><text x="17.3643%" y="495.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.05%)</title><rect x="17.1325%" y="485" width="0.0544%" height="15" fill="rgb(218,185,22)" fg:x="944" fg:w="3"/><text x="17.3825%" y="495.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="17.3140%" y="117" width="0.0181%" height="15" fill="rgb(225,218,4)" fg:x="954" fg:w="1"/><text x="17.5640%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="17.3140%" y="165" width="0.0544%" height="15" fill="rgb(230,182,32)" fg:x="954" fg:w="3"/><text x="17.5640%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="17.3140%" y="149" width="0.0544%" height="15" fill="rgb(242,56,43)" fg:x="954" fg:w="3"/><text x="17.5640%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="17.3140%" y="133" width="0.0544%" height="15" fill="rgb(233,99,24)" fg:x="954" fg:w="3"/><text x="17.5640%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="17.3321%" y="117" width="0.0363%" height="15" fill="rgb(234,209,42)" fg:x="955" fg:w="2"/><text x="17.5821%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="17.3140%" y="181" width="0.0726%" height="15" fill="rgb(227,7,12)" fg:x="954" fg:w="4"/><text x="17.5640%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.3684%" y="165" width="0.0181%" height="15" fill="rgb(245,203,43)" fg:x="957" fg:w="1"/><text x="17.6184%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="17.3866%" y="181" width="0.0181%" height="15" fill="rgb(238,205,33)" fg:x="958" fg:w="1"/><text x="17.6366%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="17.3140%" y="213" width="0.1089%" height="15" fill="rgb(231,56,7)" fg:x="954" fg:w="6"/><text x="17.5640%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="17.3140%" y="197" width="0.1089%" height="15" fill="rgb(244,186,29)" fg:x="954" fg:w="6"/><text x="17.5640%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.4047%" y="181" width="0.0181%" height="15" fill="rgb(234,111,31)" fg:x="959" fg:w="1"/><text x="17.6547%" y="191.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="17.4047%" y="165" width="0.0181%" height="15" fill="rgb(241,149,10)" fg:x="959" fg:w="1"/><text x="17.6547%" y="175.50"></text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="17.4047%" y="149" width="0.0181%" height="15" fill="rgb(249,206,44)" fg:x="959" fg:w="1"/><text x="17.6547%" y="159.50"></text></g><g><title>libsystem_c.dylib`times (1 samples, 0.02%)</title><rect x="17.4047%" y="133" width="0.0181%" height="15" fill="rgb(251,153,30)" fg:x="959" fg:w="1"/><text x="17.6547%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="17.3140%" y="245" width="0.1452%" height="15" fill="rgb(239,152,38)" fg:x="954" fg:w="8"/><text x="17.5640%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="17.3140%" y="229" width="0.1452%" height="15" fill="rgb(249,139,47)" fg:x="954" fg:w="8"/><text x="17.5640%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="17.4229%" y="213" width="0.0363%" height="15" fill="rgb(244,64,35)" fg:x="960" fg:w="2"/><text x="17.6729%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="17.2958%" y="261" width="0.1815%" height="15" fill="rgb(216,46,15)" fg:x="953" fg:w="10"/><text x="17.5458%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.4592%" y="245" width="0.0181%" height="15" fill="rgb(250,74,19)" fg:x="962" fg:w="1"/><text x="17.7092%" y="255.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="17.4592%" y="229" width="0.0181%" height="15" fill="rgb(249,42,33)" fg:x="962" fg:w="1"/><text x="17.7092%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="17.4773%" y="261" width="0.0181%" height="15" fill="rgb(242,149,17)" fg:x="963" fg:w="1"/><text x="17.7273%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="17.2958%" y="277" width="0.2178%" height="15" fill="rgb(244,29,21)" fg:x="953" fg:w="12"/><text x="17.5458%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.4955%" y="261" width="0.0181%" height="15" fill="rgb(220,130,37)" fg:x="964" fg:w="1"/><text x="17.7455%" y="271.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="17.5681%" y="261" width="0.0181%" height="15" fill="rgb(211,67,2)" fg:x="968" fg:w="1"/><text x="17.8181%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.31%)</title><rect x="17.2958%" y="293" width="0.3085%" height="15" fill="rgb(235,68,52)" fg:x="953" fg:w="17"/><text x="17.5458%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="17.5136%" y="277" width="0.0907%" height="15" fill="rgb(246,142,3)" fg:x="965" fg:w="5"/><text x="17.7636%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="17.5862%" y="261" width="0.0181%" height="15" fill="rgb(241,25,7)" fg:x="969" fg:w="1"/><text x="17.8362%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.33%)</title><rect x="17.2958%" y="309" width="0.3267%" height="15" fill="rgb(242,119,39)" fg:x="953" fg:w="18"/><text x="17.5458%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.6044%" y="293" width="0.0181%" height="15" fill="rgb(241,98,45)" fg:x="970" fg:w="1"/><text x="17.8544%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.36%)</title><rect x="17.2958%" y="325" width="0.3630%" height="15" fill="rgb(254,28,30)" fg:x="953" fg:w="20"/><text x="17.5458%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="17.6225%" y="309" width="0.0363%" height="15" fill="rgb(241,142,54)" fg:x="971" fg:w="2"/><text x="17.8725%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (27 samples, 0.49%)</title><rect x="17.2958%" y="341" width="0.4900%" height="15" fill="rgb(222,85,15)" fg:x="953" fg:w="27"/><text x="17.5458%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (7 samples, 0.13%)</title><rect x="17.6588%" y="325" width="0.1270%" height="15" fill="rgb(210,85,47)" fg:x="973" fg:w="7"/><text x="17.9088%" y="335.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="17.7677%" y="309" width="0.0181%" height="15" fill="rgb(224,206,25)" fg:x="979" fg:w="1"/><text x="18.0177%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="17.7858%" y="341" width="0.0181%" height="15" fill="rgb(243,201,19)" fg:x="980" fg:w="1"/><text x="18.0358%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="17.2958%" y="357" width="0.5445%" height="15" fill="rgb(236,59,4)" fg:x="953" fg:w="30"/><text x="17.5458%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="17.8040%" y="341" width="0.0363%" height="15" fill="rgb(254,179,45)" fg:x="981" fg:w="2"/><text x="18.0540%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (33 samples, 0.60%)</title><rect x="17.2958%" y="389" width="0.5989%" height="15" fill="rgb(226,14,10)" fg:x="953" fg:w="33"/><text x="17.5458%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (33 samples, 0.60%)</title><rect x="17.2958%" y="373" width="0.5989%" height="15" fill="rgb(244,27,41)" fg:x="953" fg:w="33"/><text x="17.5458%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="17.8403%" y="357" width="0.0544%" height="15" fill="rgb(235,35,32)" fg:x="983" fg:w="3"/><text x="18.0903%" y="367.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="17.8766%" y="341" width="0.0181%" height="15" fill="rgb(218,68,31)" fg:x="985" fg:w="1"/><text x="18.1266%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (36 samples, 0.65%)</title><rect x="17.2595%" y="453" width="0.6534%" height="15" fill="rgb(207,120,37)" fg:x="951" fg:w="36"/><text x="17.5095%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (36 samples, 0.65%)</title><rect x="17.2595%" y="437" width="0.6534%" height="15" fill="rgb(227,98,0)" fg:x="951" fg:w="36"/><text x="17.5095%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (35 samples, 0.64%)</title><rect x="17.2777%" y="421" width="0.6352%" height="15" fill="rgb(207,7,3)" fg:x="952" fg:w="35"/><text x="17.5277%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (35 samples, 0.64%)</title><rect x="17.2777%" y="405" width="0.6352%" height="15" fill="rgb(206,98,19)" fg:x="952" fg:w="35"/><text x="17.5277%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.8947%" y="389" width="0.0181%" height="15" fill="rgb(217,5,26)" fg:x="986" fg:w="1"/><text x="18.1447%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (40 samples, 0.73%)</title><rect x="17.2232%" y="469" width="0.7260%" height="15" fill="rgb(235,190,38)" fg:x="949" fg:w="40"/><text x="17.4732%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9129%" y="453" width="0.0363%" height="15" fill="rgb(247,86,24)" fg:x="987" fg:w="2"/><text x="18.1629%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="17.9492%" y="325" width="0.0181%" height="15" fill="rgb(205,101,16)" fg:x="989" fg:w="1"/><text x="18.1992%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="17.9492%" y="309" width="0.0181%" height="15" fill="rgb(246,168,33)" fg:x="989" fg:w="1"/><text x="18.1992%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.9492%" y="293" width="0.0181%" height="15" fill="rgb(231,114,1)" fg:x="989" fg:w="1"/><text x="18.1992%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9492%" y="405" width="0.0363%" height="15" fill="rgb(207,184,53)" fg:x="989" fg:w="2"/><text x="18.1992%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9492%" y="389" width="0.0363%" height="15" fill="rgb(224,95,51)" fg:x="989" fg:w="2"/><text x="18.1992%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9492%" y="373" width="0.0363%" height="15" fill="rgb(212,188,45)" fg:x="989" fg:w="2"/><text x="18.1992%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9492%" y="357" width="0.0363%" height="15" fill="rgb(223,154,38)" fg:x="989" fg:w="2"/><text x="18.1992%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="17.9492%" y="341" width="0.0363%" height="15" fill="rgb(251,22,52)" fg:x="989" fg:w="2"/><text x="18.1992%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.9673%" y="325" width="0.0181%" height="15" fill="rgb(229,209,22)" fg:x="990" fg:w="1"/><text x="18.2173%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.05%)</title><rect x="17.9492%" y="453" width="0.0544%" height="15" fill="rgb(234,138,34)" fg:x="989" fg:w="3"/><text x="18.1992%" y="463.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.05%)</title><rect x="17.9492%" y="437" width="0.0544%" height="15" fill="rgb(212,95,11)" fg:x="989" fg:w="3"/><text x="18.1992%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="17.9492%" y="421" width="0.0544%" height="15" fill="rgb(240,179,47)" fg:x="989" fg:w="3"/><text x="18.1992%" y="431.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="17.9855%" y="405" width="0.0181%" height="15" fill="rgb(240,163,11)" fg:x="991" fg:w="1"/><text x="18.2355%" y="415.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="17.9492%" y="469" width="0.0726%" height="15" fill="rgb(236,37,12)" fg:x="989" fg:w="4"/><text x="18.1992%" y="479.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="18.0036%" y="453" width="0.0181%" height="15" fill="rgb(232,164,16)" fg:x="992" fg:w="1"/><text x="18.2536%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="437" width="0.0181%" height="15" fill="rgb(244,205,15)" fg:x="992" fg:w="1"/><text x="18.2536%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="421" width="0.0181%" height="15" fill="rgb(223,117,47)" fg:x="992" fg:w="1"/><text x="18.2536%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="405" width="0.0181%" height="15" fill="rgb(244,107,35)" fg:x="992" fg:w="1"/><text x="18.2536%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="389" width="0.0181%" height="15" fill="rgb(205,140,8)" fg:x="992" fg:w="1"/><text x="18.2536%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="373" width="0.0181%" height="15" fill="rgb(228,84,46)" fg:x="992" fg:w="1"/><text x="18.2536%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="357" width="0.0181%" height="15" fill="rgb(254,188,9)" fg:x="992" fg:w="1"/><text x="18.2536%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.0036%" y="341" width="0.0181%" height="15" fill="rgb(206,112,54)" fg:x="992" fg:w="1"/><text x="18.2536%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="18.0036%" y="325" width="0.0181%" height="15" fill="rgb(216,84,49)" fg:x="992" fg:w="1"/><text x="18.2536%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="18.0944%" y="437" width="0.0181%" height="15" fill="rgb(214,194,35)" fg:x="997" fg:w="1"/><text x="18.3444%" y="447.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.24%)</title><rect x="18.0218%" y="469" width="0.2359%" height="15" fill="rgb(249,28,3)" fg:x="993" fg:w="13"/><text x="18.2718%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.24%)</title><rect x="18.0218%" y="453" width="0.2359%" height="15" fill="rgb(222,56,52)" fg:x="993" fg:w="13"/><text x="18.2718%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.15%)</title><rect x="18.1125%" y="437" width="0.1452%" height="15" fill="rgb(245,217,50)" fg:x="998" fg:w="8"/><text x="18.3625%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="18.2396%" y="421" width="0.0181%" height="15" fill="rgb(213,201,24)" fg:x="1005" fg:w="1"/><text x="18.4896%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="18.2396%" y="405" width="0.0181%" height="15" fill="rgb(248,116,28)" fg:x="1005" fg:w="1"/><text x="18.4896%" y="415.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="18.2577%" y="469" width="0.0181%" height="15" fill="rgb(219,72,43)" fg:x="1006" fg:w="1"/><text x="18.5077%" y="479.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="18.2759%" y="469" width="0.0181%" height="15" fill="rgb(209,138,14)" fg:x="1007" fg:w="1"/><text x="18.5259%" y="479.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.09%)</title><rect x="18.2940%" y="469" width="0.0907%" height="15" fill="rgb(222,18,33)" fg:x="1008" fg:w="5"/><text x="18.5440%" y="479.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="18.3848%" y="469" width="0.0363%" height="15" fill="rgb(213,199,7)" fg:x="1013" fg:w="2"/><text x="18.6348%" y="479.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="18.4211%" y="469" width="0.0726%" height="15" fill="rgb(250,110,10)" fg:x="1015" fg:w="4"/><text x="18.6711%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.4936%" y="469" width="0.0181%" height="15" fill="rgb(248,123,6)" fg:x="1019" fg:w="1"/><text x="18.7436%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.7840%" y="181" width="0.0181%" height="15" fill="rgb(206,91,31)" fg:x="1035" fg:w="1"/><text x="19.0340%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.7840%" y="165" width="0.0181%" height="15" fill="rgb(211,154,13)" fg:x="1035" fg:w="1"/><text x="19.0340%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="18.7840%" y="149" width="0.0181%" height="15" fill="rgb(225,148,7)" fg:x="1035" fg:w="1"/><text x="19.0340%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="18.7840%" y="133" width="0.0181%" height="15" fill="rgb(220,160,43)" fg:x="1035" fg:w="1"/><text x="19.0340%" y="143.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="18.7840%" y="117" width="0.0181%" height="15" fill="rgb(213,52,39)" fg:x="1035" fg:w="1"/><text x="19.0340%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="18.7840%" y="213" width="0.0363%" height="15" fill="rgb(243,137,7)" fg:x="1035" fg:w="2"/><text x="19.0340%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="18.7840%" y="197" width="0.0363%" height="15" fill="rgb(230,79,13)" fg:x="1035" fg:w="2"/><text x="19.0340%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="18.8022%" y="181" width="0.0181%" height="15" fill="rgb(247,105,23)" fg:x="1036" fg:w="1"/><text x="19.0522%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="18.7659%" y="261" width="0.0726%" height="15" fill="rgb(223,179,41)" fg:x="1034" fg:w="4"/><text x="19.0159%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="18.7840%" y="245" width="0.0544%" height="15" fill="rgb(218,9,34)" fg:x="1035" fg:w="3"/><text x="19.0340%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="18.7840%" y="229" width="0.0544%" height="15" fill="rgb(222,106,8)" fg:x="1035" fg:w="3"/><text x="19.0340%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="18.8203%" y="213" width="0.0181%" height="15" fill="rgb(211,220,0)" fg:x="1037" fg:w="1"/><text x="19.0703%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="18.7477%" y="277" width="0.1270%" height="15" fill="rgb(229,52,16)" fg:x="1033" fg:w="7"/><text x="18.9977%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="18.8385%" y="261" width="0.0363%" height="15" fill="rgb(212,155,18)" fg:x="1038" fg:w="2"/><text x="19.0885%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="18.7477%" y="293" width="0.1452%" height="15" fill="rgb(242,21,14)" fg:x="1033" fg:w="8"/><text x="18.9977%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="18.8748%" y="277" width="0.0181%" height="15" fill="rgb(222,19,48)" fg:x="1040" fg:w="1"/><text x="19.1248%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="18.7477%" y="309" width="0.1633%" height="15" fill="rgb(232,45,27)" fg:x="1033" fg:w="9"/><text x="18.9977%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="18.8929%" y="293" width="0.0181%" height="15" fill="rgb(249,103,42)" fg:x="1041" fg:w="1"/><text x="19.1429%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="18.7477%" y="341" width="0.2178%" height="15" fill="rgb(246,81,33)" fg:x="1033" fg:w="12"/><text x="18.9977%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="18.7477%" y="325" width="0.2178%" height="15" fill="rgb(252,33,42)" fg:x="1033" fg:w="12"/><text x="18.9977%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="18.9111%" y="309" width="0.0544%" height="15" fill="rgb(209,212,41)" fg:x="1042" fg:w="3"/><text x="19.1611%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="18.9655%" y="341" width="0.0181%" height="15" fill="rgb(207,154,6)" fg:x="1045" fg:w="1"/><text x="19.2155%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="18.7477%" y="373" width="0.2904%" height="15" fill="rgb(223,64,47)" fg:x="1033" fg:w="16"/><text x="18.9977%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="18.7477%" y="357" width="0.2904%" height="15" fill="rgb(211,161,38)" fg:x="1033" fg:w="16"/><text x="18.9977%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="18.9837%" y="341" width="0.0544%" height="15" fill="rgb(219,138,40)" fg:x="1046" fg:w="3"/><text x="19.2337%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.34%)</title><rect x="18.7477%" y="389" width="0.3448%" height="15" fill="rgb(241,228,46)" fg:x="1033" fg:w="19"/><text x="18.9977%" y="399.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="19.0381%" y="373" width="0.0544%" height="15" fill="rgb(223,209,38)" fg:x="1049" fg:w="3"/><text x="19.2881%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.38%)</title><rect x="18.7477%" y="405" width="0.3811%" height="15" fill="rgb(236,164,45)" fg:x="1033" fg:w="21"/><text x="18.9977%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="19.0926%" y="389" width="0.0363%" height="15" fill="rgb(231,15,5)" fg:x="1052" fg:w="2"/><text x="19.3426%" y="399.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="19.1107%" y="373" width="0.0181%" height="15" fill="rgb(252,35,15)" fg:x="1053" fg:w="1"/><text x="19.3607%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (27 samples, 0.49%)</title><rect x="18.6570%" y="437" width="0.4900%" height="15" fill="rgb(248,181,18)" fg:x="1028" fg:w="27"/><text x="18.9070%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="18.6933%" y="421" width="0.4537%" height="15" fill="rgb(233,39,42)" fg:x="1030" fg:w="25"/><text x="18.9433%" y="431.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.1289%" y="405" width="0.0181%" height="15" fill="rgb(238,110,33)" fg:x="1054" fg:w="1"/><text x="19.3789%" y="415.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="19.1470%" y="437" width="0.0181%" height="15" fill="rgb(233,195,10)" fg:x="1055" fg:w="1"/><text x="19.3970%" y="447.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="19.1470%" y="421" width="0.0181%" height="15" fill="rgb(254,105,3)" fg:x="1055" fg:w="1"/><text x="19.3970%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.02%)</title><rect x="19.1470%" y="405" width="0.0181%" height="15" fill="rgb(221,225,9)" fg:x="1055" fg:w="1"/><text x="19.3970%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="19.1470%" y="389" width="0.0181%" height="15" fill="rgb(224,227,45)" fg:x="1055" fg:w="1"/><text x="19.3970%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.62%)</title><rect x="18.5844%" y="453" width="0.6171%" height="15" fill="rgb(229,198,43)" fg:x="1024" fg:w="34"/><text x="18.8344%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="19.1652%" y="437" width="0.0363%" height="15" fill="rgb(206,209,35)" fg:x="1056" fg:w="2"/><text x="19.4152%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="19.2015%" y="341" width="0.0363%" height="15" fill="rgb(245,195,53)" fg:x="1058" fg:w="2"/><text x="19.4515%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="19.2015%" y="325" width="0.0363%" height="15" fill="rgb(240,92,26)" fg:x="1058" fg:w="2"/><text x="19.4515%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.2196%" y="309" width="0.0181%" height="15" fill="rgb(207,40,23)" fg:x="1059" fg:w="1"/><text x="19.4696%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="19.2015%" y="453" width="0.0544%" height="15" fill="rgb(223,111,35)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="463.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.05%)</title><rect x="19.2015%" y="437" width="0.0544%" height="15" fill="rgb(229,147,28)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="447.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.05%)</title><rect x="19.2015%" y="421" width="0.0544%" height="15" fill="rgb(211,29,28)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="19.2015%" y="405" width="0.0544%" height="15" fill="rgb(228,72,33)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="19.2015%" y="389" width="0.0544%" height="15" fill="rgb(205,214,31)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="19.2015%" y="373" width="0.0544%" height="15" fill="rgb(224,111,15)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="19.2015%" y="357" width="0.0544%" height="15" fill="rgb(253,21,26)" fg:x="1058" fg:w="3"/><text x="19.4515%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.2377%" y="341" width="0.0181%" height="15" fill="rgb(245,139,43)" fg:x="1060" fg:w="1"/><text x="19.4877%" y="351.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.24%)</title><rect x="19.2559%" y="453" width="0.2359%" height="15" fill="rgb(252,170,7)" fg:x="1061" fg:w="13"/><text x="19.5059%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.20%)</title><rect x="19.2922%" y="437" width="0.1996%" height="15" fill="rgb(231,118,14)" fg:x="1063" fg:w="11"/><text x="19.5422%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.13%)</title><rect x="19.3648%" y="421" width="0.1270%" height="15" fill="rgb(238,83,0)" fg:x="1067" fg:w="7"/><text x="19.6148%" y="431.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="19.4918%" y="453" width="0.0181%" height="15" fill="rgb(221,39,39)" fg:x="1074" fg:w="1"/><text x="19.7418%" y="463.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.04%)</title><rect x="19.5100%" y="453" width="0.0363%" height="15" fill="rgb(222,119,46)" fg:x="1075" fg:w="2"/><text x="19.7600%" y="463.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (8 samples, 0.15%)</title><rect x="19.5463%" y="453" width="0.1452%" height="15" fill="rgb(222,165,49)" fg:x="1077" fg:w="8"/><text x="19.7963%" y="463.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="19.6915%" y="453" width="0.0363%" height="15" fill="rgb(219,113,52)" fg:x="1085" fg:w="2"/><text x="19.9415%" y="463.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.05%)</title><rect x="19.7278%" y="453" width="0.0544%" height="15" fill="rgb(214,7,15)" fg:x="1087" fg:w="3"/><text x="19.9778%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="19.7822%" y="453" width="0.0181%" height="15" fill="rgb(235,32,4)" fg:x="1090" fg:w="1"/><text x="20.0322%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="19.9093%" y="245" width="0.0181%" height="15" fill="rgb(238,90,54)" fg:x="1097" fg:w="1"/><text x="20.1593%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.9093%" y="229" width="0.0181%" height="15" fill="rgb(213,208,19)" fg:x="1097" fg:w="1"/><text x="20.1593%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="19.9093%" y="261" width="0.0544%" height="15" fill="rgb(233,156,4)" fg:x="1097" fg:w="3"/><text x="20.1593%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="19.9274%" y="245" width="0.0363%" height="15" fill="rgb(207,194,5)" fg:x="1098" fg:w="2"/><text x="20.1774%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="19.9093%" y="277" width="0.0726%" height="15" fill="rgb(206,111,30)" fg:x="1097" fg:w="4"/><text x="20.1593%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.9637%" y="261" width="0.0181%" height="15" fill="rgb(243,70,54)" fg:x="1100" fg:w="1"/><text x="20.2137%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="19.9093%" y="293" width="0.0907%" height="15" fill="rgb(242,28,8)" fg:x="1097" fg:w="5"/><text x="20.1593%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="19.9819%" y="277" width="0.0181%" height="15" fill="rgb(219,106,18)" fg:x="1101" fg:w="1"/><text x="20.2319%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="19.9093%" y="309" width="0.1633%" height="15" fill="rgb(244,222,10)" fg:x="1097" fg:w="9"/><text x="20.1593%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="20.0000%" y="293" width="0.0726%" height="15" fill="rgb(236,179,52)" fg:x="1102" fg:w="4"/><text x="20.2500%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="19.8911%" y="341" width="0.2178%" height="15" fill="rgb(213,23,39)" fg:x="1096" fg:w="12"/><text x="20.1411%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="19.9093%" y="325" width="0.1996%" height="15" fill="rgb(238,48,10)" fg:x="1097" fg:w="11"/><text x="20.1593%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="20.0726%" y="309" width="0.0363%" height="15" fill="rgb(251,196,23)" fg:x="1106" fg:w="2"/><text x="20.3226%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="19.8911%" y="357" width="0.2541%" height="15" fill="rgb(250,152,24)" fg:x="1096" fg:w="14"/><text x="20.1411%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="20.1089%" y="341" width="0.0363%" height="15" fill="rgb(209,150,17)" fg:x="1108" fg:w="2"/><text x="20.3589%" y="351.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="20.1270%" y="325" width="0.0181%" height="15" fill="rgb(234,202,34)" fg:x="1109" fg:w="1"/><text x="20.3770%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="19.8730%" y="389" width="0.2904%" height="15" fill="rgb(253,148,53)" fg:x="1095" fg:w="16"/><text x="20.1230%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="19.8911%" y="373" width="0.2722%" height="15" fill="rgb(218,129,16)" fg:x="1096" fg:w="15"/><text x="20.1411%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="20.1452%" y="357" width="0.0181%" height="15" fill="rgb(216,85,19)" fg:x="1110" fg:w="1"/><text x="20.3952%" y="367.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (19 samples, 0.34%)</title><rect x="19.8367%" y="421" width="0.3448%" height="15" fill="rgb(235,228,7)" fg:x="1093" fg:w="19"/><text x="20.0867%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.34%)</title><rect x="19.8367%" y="405" width="0.3448%" height="15" fill="rgb(245,175,0)" fg:x="1093" fg:w="19"/><text x="20.0867%" y="415.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="20.1633%" y="389" width="0.0181%" height="15" fill="rgb(208,168,36)" fg:x="1111" fg:w="1"/><text x="20.4133%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.40%)</title><rect x="19.8004%" y="437" width="0.3993%" height="15" fill="rgb(246,171,24)" fg:x="1091" fg:w="22"/><text x="20.0504%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.1815%" y="421" width="0.0181%" height="15" fill="rgb(215,142,24)" fg:x="1112" fg:w="1"/><text x="20.4315%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="20.1996%" y="421" width="0.0181%" height="15" fill="rgb(250,187,7)" fg:x="1113" fg:w="1"/><text x="20.4496%" y="431.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="20.1996%" y="405" width="0.0181%" height="15" fill="rgb(228,66,33)" fg:x="1113" fg:w="1"/><text x="20.4496%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.1996%" y="389" width="0.0181%" height="15" fill="rgb(234,215,21)" fg:x="1113" fg:w="1"/><text x="20.4496%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.1996%" y="373" width="0.0181%" height="15" fill="rgb(222,191,20)" fg:x="1113" fg:w="1"/><text x="20.4496%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.1996%" y="357" width="0.0181%" height="15" fill="rgb(245,79,54)" fg:x="1113" fg:w="1"/><text x="20.4496%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="20.1996%" y="437" width="0.0363%" height="15" fill="rgb(240,10,37)" fg:x="1113" fg:w="2"/><text x="20.4496%" y="447.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="20.2178%" y="421" width="0.0181%" height="15" fill="rgb(214,192,32)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="405" width="0.0181%" height="15" fill="rgb(209,36,54)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="389" width="0.0181%" height="15" fill="rgb(220,10,11)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="373" width="0.0181%" height="15" fill="rgb(221,106,17)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="357" width="0.0181%" height="15" fill="rgb(251,142,44)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="341" width="0.0181%" height="15" fill="rgb(238,13,15)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.2178%" y="325" width="0.0181%" height="15" fill="rgb(208,107,27)" fg:x="1114" fg:w="1"/><text x="20.4678%" y="335.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.33%)</title><rect x="20.2359%" y="437" width="0.3267%" height="15" fill="rgb(205,136,37)" fg:x="1115" fg:w="18"/><text x="20.4859%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.31%)</title><rect x="20.2541%" y="421" width="0.3085%" height="15" fill="rgb(250,205,27)" fg:x="1116" fg:w="17"/><text x="20.5041%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.20%)</title><rect x="20.3630%" y="405" width="0.1996%" height="15" fill="rgb(210,80,43)" fg:x="1122" fg:w="11"/><text x="20.6130%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="20.5445%" y="389" width="0.0181%" height="15" fill="rgb(247,160,36)" fg:x="1132" fg:w="1"/><text x="20.7945%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="20.5445%" y="373" width="0.0181%" height="15" fill="rgb(234,13,49)" fg:x="1132" fg:w="1"/><text x="20.7945%" y="383.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="20.5626%" y="437" width="0.0181%" height="15" fill="rgb(234,122,0)" fg:x="1133" fg:w="1"/><text x="20.8126%" y="447.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="20.5808%" y="437" width="0.0181%" height="15" fill="rgb(207,146,38)" fg:x="1134" fg:w="1"/><text x="20.8308%" y="447.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.09%)</title><rect x="20.5989%" y="437" width="0.0907%" height="15" fill="rgb(207,177,25)" fg:x="1135" fg:w="5"/><text x="20.8489%" y="447.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="20.6897%" y="437" width="0.0363%" height="15" fill="rgb(211,178,42)" fg:x="1140" fg:w="2"/><text x="20.9397%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="20.7260%" y="437" width="0.0181%" height="15" fill="rgb(230,69,54)" fg:x="1142" fg:w="1"/><text x="20.9760%" y="447.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.8893%" y="181" width="0.0181%" height="15" fill="rgb(214,135,41)" fg:x="1151" fg:w="1"/><text x="21.1393%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="20.8893%" y="165" width="0.0181%" height="15" fill="rgb(237,67,25)" fg:x="1151" fg:w="1"/><text x="21.1393%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="20.8893%" y="149" width="0.0181%" height="15" fill="rgb(222,189,50)" fg:x="1151" fg:w="1"/><text x="21.1393%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="20.8893%" y="213" width="0.0363%" height="15" fill="rgb(245,148,34)" fg:x="1151" fg:w="2"/><text x="21.1393%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="20.8893%" y="197" width="0.0363%" height="15" fill="rgb(222,29,6)" fg:x="1151" fg:w="2"/><text x="21.1393%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="20.9074%" y="181" width="0.0181%" height="15" fill="rgb(221,189,43)" fg:x="1152" fg:w="1"/><text x="21.1574%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="20.8893%" y="245" width="0.0726%" height="15" fill="rgb(207,36,27)" fg:x="1151" fg:w="4"/><text x="21.1393%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="20.8893%" y="229" width="0.0726%" height="15" fill="rgb(217,90,24)" fg:x="1151" fg:w="4"/><text x="21.1393%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="20.9256%" y="213" width="0.0363%" height="15" fill="rgb(224,66,35)" fg:x="1153" fg:w="2"/><text x="21.1756%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="20.8893%" y="261" width="0.1270%" height="15" fill="rgb(221,13,50)" fg:x="1151" fg:w="7"/><text x="21.1393%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="20.9619%" y="245" width="0.0544%" height="15" fill="rgb(236,68,49)" fg:x="1155" fg:w="3"/><text x="21.2119%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="21.0163%" y="261" width="0.0181%" height="15" fill="rgb(229,146,28)" fg:x="1158" fg:w="1"/><text x="21.2663%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="20.8711%" y="277" width="0.1815%" height="15" fill="rgb(225,31,38)" fg:x="1150" fg:w="10"/><text x="21.1211%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="21.0345%" y="261" width="0.0181%" height="15" fill="rgb(250,208,3)" fg:x="1159" fg:w="1"/><text x="21.2845%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.24%)</title><rect x="20.8530%" y="293" width="0.2359%" height="15" fill="rgb(246,54,23)" fg:x="1149" fg:w="13"/><text x="21.1030%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="21.0526%" y="277" width="0.0363%" height="15" fill="rgb(243,76,11)" fg:x="1160" fg:w="2"/><text x="21.3026%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="20.8530%" y="309" width="0.2541%" height="15" fill="rgb(245,21,50)" fg:x="1149" fg:w="14"/><text x="21.1030%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="21.0889%" y="293" width="0.0181%" height="15" fill="rgb(228,9,43)" fg:x="1162" fg:w="1"/><text x="21.3389%" y="303.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="21.0889%" y="277" width="0.0181%" height="15" fill="rgb(208,100,47)" fg:x="1162" fg:w="1"/><text x="21.3389%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.33%)</title><rect x="20.8530%" y="325" width="0.3267%" height="15" fill="rgb(232,26,8)" fg:x="1149" fg:w="18"/><text x="21.1030%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="21.1071%" y="309" width="0.0726%" height="15" fill="rgb(216,166,38)" fg:x="1163" fg:w="4"/><text x="21.3571%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="21.1797%" y="325" width="0.0181%" height="15" fill="rgb(251,202,51)" fg:x="1167" fg:w="1"/><text x="21.4297%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (24 samples, 0.44%)</title><rect x="20.8348%" y="341" width="0.4356%" height="15" fill="rgb(254,216,34)" fg:x="1148" fg:w="24"/><text x="21.0848%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="21.1978%" y="325" width="0.0726%" height="15" fill="rgb(251,32,27)" fg:x="1168" fg:w="4"/><text x="21.4478%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (26 samples, 0.47%)</title><rect x="20.8348%" y="357" width="0.4719%" height="15" fill="rgb(208,127,28)" fg:x="1148" fg:w="26"/><text x="21.0848%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="21.2704%" y="341" width="0.0363%" height="15" fill="rgb(224,137,22)" fg:x="1172" fg:w="2"/><text x="21.5204%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.51%)</title><rect x="20.8348%" y="373" width="0.5082%" height="15" fill="rgb(254,70,32)" fg:x="1148" fg:w="28"/><text x="21.0848%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="21.3067%" y="357" width="0.0363%" height="15" fill="rgb(229,75,37)" fg:x="1174" fg:w="2"/><text x="21.5567%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (32 samples, 0.58%)</title><rect x="20.8167%" y="389" width="0.5808%" height="15" fill="rgb(252,64,23)" fg:x="1147" fg:w="32"/><text x="21.0667%" y="399.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="21.3430%" y="373" width="0.0544%" height="15" fill="rgb(232,162,48)" fg:x="1176" fg:w="3"/><text x="21.5930%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (34 samples, 0.62%)</title><rect x="20.7985%" y="405" width="0.6171%" height="15" fill="rgb(246,160,12)" fg:x="1146" fg:w="34"/><text x="21.0485%" y="415.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="21.3975%" y="389" width="0.0181%" height="15" fill="rgb(247,166,0)" fg:x="1179" fg:w="1"/><text x="21.6475%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (36 samples, 0.65%)</title><rect x="20.7804%" y="421" width="0.6534%" height="15" fill="rgb(249,219,21)" fg:x="1145" fg:w="36"/><text x="21.0304%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4156%" y="405" width="0.0181%" height="15" fill="rgb(205,209,3)" fg:x="1180" fg:w="1"/><text x="21.6656%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4338%" y="277" width="0.0181%" height="15" fill="rgb(243,44,1)" fg:x="1181" fg:w="1"/><text x="21.6838%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4338%" y="261" width="0.0181%" height="15" fill="rgb(206,159,16)" fg:x="1181" fg:w="1"/><text x="21.6838%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="21.4338%" y="405" width="0.0363%" height="15" fill="rgb(244,77,30)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="415.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="21.4338%" y="389" width="0.0363%" height="15" fill="rgb(218,69,12)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="373" width="0.0363%" height="15" fill="rgb(212,87,7)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="357" width="0.0363%" height="15" fill="rgb(245,114,25)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="341" width="0.0363%" height="15" fill="rgb(210,61,42)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="325" width="0.0363%" height="15" fill="rgb(211,52,33)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="309" width="0.0363%" height="15" fill="rgb(234,58,33)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="21.4338%" y="293" width="0.0363%" height="15" fill="rgb(220,115,36)" fg:x="1181" fg:w="2"/><text x="21.6838%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="21.4519%" y="277" width="0.0181%" height="15" fill="rgb(243,153,54)" fg:x="1182" fg:w="1"/><text x="21.7019%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="21.4338%" y="421" width="0.0544%" height="15" fill="rgb(251,47,18)" fg:x="1181" fg:w="3"/><text x="21.6838%" y="431.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="21.4701%" y="405" width="0.0181%" height="15" fill="rgb(242,102,42)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4701%" y="389" width="0.0181%" height="15" fill="rgb(234,31,38)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4701%" y="373" width="0.0181%" height="15" fill="rgb(221,117,51)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4701%" y="357" width="0.0181%" height="15" fill="rgb(212,20,18)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4701%" y="341" width="0.0181%" height="15" fill="rgb(245,133,36)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.4701%" y="325" width="0.0181%" height="15" fill="rgb(212,6,19)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="21.4701%" y="309" width="0.0181%" height="15" fill="rgb(218,1,36)" fg:x="1183" fg:w="1"/><text x="21.7201%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="21.6515%" y="389" width="0.0181%" height="15" fill="rgb(246,84,54)" fg:x="1193" fg:w="1"/><text x="21.9015%" y="399.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (20 samples, 0.36%)</title><rect x="21.4882%" y="421" width="0.3630%" height="15" fill="rgb(242,110,6)" fg:x="1184" fg:w="20"/><text x="21.7382%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.31%)</title><rect x="21.5426%" y="405" width="0.3085%" height="15" fill="rgb(214,47,5)" fg:x="1187" fg:w="17"/><text x="21.7926%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.18%)</title><rect x="21.6697%" y="389" width="0.1815%" height="15" fill="rgb(218,159,25)" fg:x="1194" fg:w="10"/><text x="21.9197%" y="399.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.04%)</title><rect x="21.8512%" y="421" width="0.0363%" height="15" fill="rgb(215,211,28)" fg:x="1204" fg:w="2"/><text x="22.1012%" y="431.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="21.8875%" y="421" width="0.0181%" height="15" fill="rgb(238,59,32)" fg:x="1206" fg:w="1"/><text x="22.1375%" y="431.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="21.9056%" y="421" width="0.0181%" height="15" fill="rgb(226,82,3)" fg:x="1207" fg:w="1"/><text x="22.1556%" y="431.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="21.9238%" y="421" width="0.0363%" height="15" fill="rgb(240,164,32)" fg:x="1208" fg:w="2"/><text x="22.1738%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="21.9601%" y="421" width="0.0181%" height="15" fill="rgb(232,46,7)" fg:x="1210" fg:w="1"/><text x="22.2101%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="22.0690%" y="405" width="0.0181%" height="15" fill="rgb(229,129,53)" fg:x="1216" fg:w="1"/><text x="22.3190%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="22.0871%" y="405" width="0.0181%" height="15" fill="rgb(234,188,29)" fg:x="1217" fg:w="1"/><text x="22.3371%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="22.2323%" y="101" width="0.0181%" height="15" fill="rgb(246,141,4)" fg:x="1225" fg:w="1"/><text x="22.4823%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="22.2323%" y="85" width="0.0181%" height="15" fill="rgb(229,23,39)" fg:x="1225" fg:w="1"/><text x="22.4823%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="22.2323%" y="69" width="0.0181%" height="15" fill="rgb(206,12,3)" fg:x="1225" fg:w="1"/><text x="22.4823%" y="79.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.2323%" y="53" width="0.0181%" height="15" fill="rgb(252,226,20)" fg:x="1225" fg:w="1"/><text x="22.4823%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="22.2323%" y="133" width="0.0544%" height="15" fill="rgb(216,123,35)" fg:x="1225" fg:w="3"/><text x="22.4823%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="22.2323%" y="117" width="0.0544%" height="15" fill="rgb(212,68,40)" fg:x="1225" fg:w="3"/><text x="22.4823%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.2505%" y="101" width="0.0363%" height="15" fill="rgb(254,125,32)" fg:x="1226" fg:w="2"/><text x="22.5005%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="22.2323%" y="165" width="0.0726%" height="15" fill="rgb(253,97,22)" fg:x="1225" fg:w="4"/><text x="22.4823%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="22.2323%" y="149" width="0.0726%" height="15" fill="rgb(241,101,14)" fg:x="1225" fg:w="4"/><text x="22.4823%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.2868%" y="133" width="0.0181%" height="15" fill="rgb(238,103,29)" fg:x="1228" fg:w="1"/><text x="22.5368%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="22.2323%" y="197" width="0.0907%" height="15" fill="rgb(233,195,47)" fg:x="1225" fg:w="5"/><text x="22.4823%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="22.2323%" y="181" width="0.0907%" height="15" fill="rgb(246,218,30)" fg:x="1225" fg:w="5"/><text x="22.4823%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.3049%" y="165" width="0.0181%" height="15" fill="rgb(219,145,47)" fg:x="1229" fg:w="1"/><text x="22.5549%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="22.2142%" y="213" width="0.1270%" height="15" fill="rgb(243,12,26)" fg:x="1224" fg:w="7"/><text x="22.4642%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.3230%" y="197" width="0.0181%" height="15" fill="rgb(214,87,16)" fg:x="1230" fg:w="1"/><text x="22.5730%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="22.2142%" y="229" width="0.1633%" height="15" fill="rgb(208,99,42)" fg:x="1224" fg:w="9"/><text x="22.4642%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.3412%" y="213" width="0.0363%" height="15" fill="rgb(253,99,2)" fg:x="1231" fg:w="2"/><text x="22.5912%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="22.2142%" y="245" width="0.1815%" height="15" fill="rgb(220,168,23)" fg:x="1224" fg:w="10"/><text x="22.4642%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.3775%" y="229" width="0.0181%" height="15" fill="rgb(242,38,24)" fg:x="1233" fg:w="1"/><text x="22.6275%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="22.3956%" y="245" width="0.0181%" height="15" fill="rgb(225,182,9)" fg:x="1234" fg:w="1"/><text x="22.6456%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="22.2142%" y="261" width="0.2541%" height="15" fill="rgb(243,178,37)" fg:x="1224" fg:w="14"/><text x="22.4642%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="22.4138%" y="245" width="0.0544%" height="15" fill="rgb(232,139,19)" fg:x="1235" fg:w="3"/><text x="22.6638%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="22.2142%" y="277" width="0.2722%" height="15" fill="rgb(225,201,24)" fg:x="1224" fg:w="15"/><text x="22.4642%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.4682%" y="261" width="0.0181%" height="15" fill="rgb(221,47,46)" fg:x="1238" fg:w="1"/><text x="22.7182%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="22.2142%" y="293" width="0.2904%" height="15" fill="rgb(249,23,13)" fg:x="1224" fg:w="16"/><text x="22.4642%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.4864%" y="277" width="0.0181%" height="15" fill="rgb(219,9,5)" fg:x="1239" fg:w="1"/><text x="22.7364%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.33%)</title><rect x="22.2142%" y="309" width="0.3267%" height="15" fill="rgb(254,171,16)" fg:x="1224" fg:w="18"/><text x="22.4642%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.5045%" y="293" width="0.0363%" height="15" fill="rgb(230,171,20)" fg:x="1240" fg:w="2"/><text x="22.7545%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.38%)</title><rect x="22.1960%" y="325" width="0.3811%" height="15" fill="rgb(210,71,41)" fg:x="1223" fg:w="21"/><text x="22.4460%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.5408%" y="309" width="0.0363%" height="15" fill="rgb(206,173,20)" fg:x="1242" fg:w="2"/><text x="22.7908%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.40%)</title><rect x="22.1960%" y="341" width="0.3993%" height="15" fill="rgb(233,88,34)" fg:x="1223" fg:w="22"/><text x="22.4460%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.5771%" y="325" width="0.0181%" height="15" fill="rgb(223,209,46)" fg:x="1244" fg:w="1"/><text x="22.8271%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="22.1960%" y="357" width="0.4537%" height="15" fill="rgb(250,43,18)" fg:x="1223" fg:w="25"/><text x="22.4460%" y="367.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="22.5953%" y="341" width="0.0544%" height="15" fill="rgb(208,13,10)" fg:x="1245" fg:w="3"/><text x="22.8453%" y="351.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="22.6316%" y="325" width="0.0181%" height="15" fill="rgb(212,200,36)" fg:x="1247" fg:w="1"/><text x="22.8816%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (30 samples, 0.54%)</title><rect x="22.1416%" y="389" width="0.5445%" height="15" fill="rgb(225,90,30)" fg:x="1220" fg:w="30"/><text x="22.3916%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.51%)</title><rect x="22.1779%" y="373" width="0.5082%" height="15" fill="rgb(236,182,39)" fg:x="1222" fg:w="28"/><text x="22.4279%" y="383.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.6497%" y="357" width="0.0363%" height="15" fill="rgb(212,144,35)" fg:x="1248" fg:w="2"/><text x="22.8997%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="22.6860%" y="389" width="0.0181%" height="15" fill="rgb(228,63,44)" fg:x="1250" fg:w="1"/><text x="22.9360%" y="399.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="22.6860%" y="373" width="0.0181%" height="15" fill="rgb(228,109,6)" fg:x="1250" fg:w="1"/><text x="22.9360%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.02%)</title><rect x="22.6860%" y="357" width="0.0181%" height="15" fill="rgb(238,117,24)" fg:x="1250" fg:w="1"/><text x="22.9360%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="22.6860%" y="341" width="0.0181%" height="15" fill="rgb(242,26,26)" fg:x="1250" fg:w="1"/><text x="22.9360%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="22.6860%" y="325" width="0.0181%" height="15" fill="rgb(221,92,48)" fg:x="1250" fg:w="1"/><text x="22.9360%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.69%)</title><rect x="22.1053%" y="405" width="0.6897%" height="15" fill="rgb(209,209,32)" fg:x="1218" fg:w="38"/><text x="22.3553%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="22.7042%" y="389" width="0.0907%" height="15" fill="rgb(221,70,22)" fg:x="1251" fg:w="5"/><text x="22.9542%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="22.7949%" y="277" width="0.0181%" height="15" fill="rgb(248,145,5)" fg:x="1256" fg:w="1"/><text x="23.0449%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="22.7949%" y="261" width="0.0181%" height="15" fill="rgb(226,116,26)" fg:x="1256" fg:w="1"/><text x="23.0449%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.7949%" y="245" width="0.0181%" height="15" fill="rgb(244,5,17)" fg:x="1256" fg:w="1"/><text x="23.0449%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="22.7949%" y="293" width="0.0363%" height="15" fill="rgb(252,159,33)" fg:x="1256" fg:w="2"/><text x="23.0449%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.8131%" y="277" width="0.0181%" height="15" fill="rgb(206,71,0)" fg:x="1257" fg:w="1"/><text x="23.0631%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="22.7949%" y="325" width="0.0544%" height="15" fill="rgb(233,118,54)" fg:x="1256" fg:w="3"/><text x="23.0449%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="22.7949%" y="309" width="0.0544%" height="15" fill="rgb(234,83,48)" fg:x="1256" fg:w="3"/><text x="23.0449%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="22.8312%" y="293" width="0.0181%" height="15" fill="rgb(228,3,54)" fg:x="1258" fg:w="1"/><text x="23.0812%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.09%)</title><rect x="22.7949%" y="405" width="0.0907%" height="15" fill="rgb(226,155,13)" fg:x="1256" fg:w="5"/><text x="23.0449%" y="415.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.09%)</title><rect x="22.7949%" y="389" width="0.0907%" height="15" fill="rgb(241,28,37)" fg:x="1256" fg:w="5"/><text x="23.0449%" y="399.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="22.7949%" y="373" width="0.0907%" height="15" fill="rgb(233,93,10)" fg:x="1256" fg:w="5"/><text x="23.0449%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="22.7949%" y="357" width="0.0907%" height="15" fill="rgb(225,113,19)" fg:x="1256" fg:w="5"/><text x="23.0449%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="22.7949%" y="341" width="0.0907%" height="15" fill="rgb(241,2,18)" fg:x="1256" fg:w="5"/><text x="23.0449%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="22.8494%" y="325" width="0.0363%" height="15" fill="rgb(228,207,21)" fg:x="1259" fg:w="2"/><text x="23.0994%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.04%)</title><rect x="23.0127%" y="373" width="0.0363%" height="15" fill="rgb(213,211,35)" fg:x="1268" fg:w="2"/><text x="23.2627%" y="383.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.34%)</title><rect x="22.8857%" y="405" width="0.3448%" height="15" fill="rgb(209,83,10)" fg:x="1261" fg:w="19"/><text x="23.1357%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.33%)</title><rect x="22.9038%" y="389" width="0.3267%" height="15" fill="rgb(209,164,1)" fg:x="1262" fg:w="18"/><text x="23.1538%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.18%)</title><rect x="23.0490%" y="373" width="0.1815%" height="15" fill="rgb(213,184,43)" fg:x="1270" fg:w="10"/><text x="23.2990%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="23.2123%" y="357" width="0.0181%" height="15" fill="rgb(231,61,34)" fg:x="1279" fg:w="1"/><text x="23.4623%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="23.2123%" y="341" width="0.0181%" height="15" fill="rgb(235,75,3)" fg:x="1279" fg:w="1"/><text x="23.4623%" y="351.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="23.2305%" y="405" width="0.0181%" height="15" fill="rgb(220,106,47)" fg:x="1280" fg:w="1"/><text x="23.4805%" y="415.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="23.2486%" y="405" width="0.0181%" height="15" fill="rgb(210,196,33)" fg:x="1281" fg:w="1"/><text x="23.4986%" y="415.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="23.2668%" y="405" width="0.0181%" height="15" fill="rgb(229,154,42)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="23.2668%" y="389" width="0.0181%" height="15" fill="rgb(228,114,26)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="23.2668%" y="373" width="0.0181%" height="15" fill="rgb(208,144,1)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="23.2668%" y="357" width="0.0181%" height="15" fill="rgb(239,112,37)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="23.2668%" y="341" width="0.0181%" height="15" fill="rgb(210,96,50)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="23.2668%" y="325" width="0.0181%" height="15" fill="rgb(222,178,2)" fg:x="1282" fg:w="1"/><text x="23.5168%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="23.2849%" y="405" width="0.0181%" height="15" fill="rgb(226,74,18)" fg:x="1283" fg:w="1"/><text x="23.5349%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="23.3575%" y="389" width="0.0181%" height="15" fill="rgb(225,67,54)" fg:x="1287" fg:w="1"/><text x="23.6075%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="23.3757%" y="389" width="0.0181%" height="15" fill="rgb(251,92,32)" fg:x="1288" fg:w="1"/><text x="23.6257%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="23.3757%" y="373" width="0.0181%" height="15" fill="rgb(228,149,22)" fg:x="1288" fg:w="1"/><text x="23.6257%" y="383.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="23.4846%" y="181" width="0.0181%" height="15" fill="rgb(243,54,13)" fg:x="1294" fg:w="1"/><text x="23.7346%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="23.4664%" y="197" width="0.0544%" height="15" fill="rgb(243,180,28)" fg:x="1293" fg:w="3"/><text x="23.7164%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="23.5027%" y="181" width="0.0181%" height="15" fill="rgb(208,167,24)" fg:x="1295" fg:w="1"/><text x="23.7527%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="23.4664%" y="213" width="0.1089%" height="15" fill="rgb(245,73,45)" fg:x="1293" fg:w="6"/><text x="23.7164%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="23.5209%" y="197" width="0.0544%" height="15" fill="rgb(237,203,48)" fg:x="1296" fg:w="3"/><text x="23.7709%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="23.5753%" y="213" width="0.0181%" height="15" fill="rgb(211,197,16)" fg:x="1299" fg:w="1"/><text x="23.8253%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="23.4483%" y="229" width="0.1633%" height="15" fill="rgb(243,99,51)" fg:x="1292" fg:w="9"/><text x="23.6983%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="23.5935%" y="213" width="0.0181%" height="15" fill="rgb(215,123,29)" fg:x="1300" fg:w="1"/><text x="23.8435%" y="223.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="23.6116%" y="229" width="0.0181%" height="15" fill="rgb(239,186,37)" fg:x="1301" fg:w="1"/><text x="23.8616%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="23.4483%" y="245" width="0.2722%" height="15" fill="rgb(252,136,39)" fg:x="1292" fg:w="15"/><text x="23.6983%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="23.6298%" y="229" width="0.0907%" height="15" fill="rgb(223,213,32)" fg:x="1302" fg:w="5"/><text x="23.8798%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="23.7205%" y="245" width="0.0544%" height="15" fill="rgb(233,115,5)" fg:x="1307" fg:w="3"/><text x="23.9705%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.34%)</title><rect x="23.4483%" y="261" width="0.3448%" height="15" fill="rgb(207,226,44)" fg:x="1292" fg:w="19"/><text x="23.6983%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="23.7750%" y="245" width="0.0181%" height="15" fill="rgb(208,126,0)" fg:x="1310" fg:w="1"/><text x="24.0250%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.36%)</title><rect x="23.4483%" y="277" width="0.3630%" height="15" fill="rgb(244,66,21)" fg:x="1292" fg:w="20"/><text x="23.6983%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="23.7931%" y="261" width="0.0181%" height="15" fill="rgb(222,97,12)" fg:x="1311" fg:w="1"/><text x="24.0431%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.40%)</title><rect x="23.4483%" y="293" width="0.3993%" height="15" fill="rgb(219,213,19)" fg:x="1292" fg:w="22"/><text x="23.6983%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="23.8113%" y="277" width="0.0363%" height="15" fill="rgb(252,169,30)" fg:x="1312" fg:w="2"/><text x="24.0613%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="23.8294%" y="261" width="0.0181%" height="15" fill="rgb(206,32,51)" fg:x="1313" fg:w="1"/><text x="24.0794%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="23.4301%" y="325" width="0.4537%" height="15" fill="rgb(250,172,42)" fg:x="1291" fg:w="25"/><text x="23.6801%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (24 samples, 0.44%)</title><rect x="23.4483%" y="309" width="0.4356%" height="15" fill="rgb(209,34,43)" fg:x="1292" fg:w="24"/><text x="23.6983%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="23.8475%" y="293" width="0.0363%" height="15" fill="rgb(223,11,35)" fg:x="1314" fg:w="2"/><text x="24.0975%" y="303.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="23.8657%" y="277" width="0.0181%" height="15" fill="rgb(251,219,26)" fg:x="1315" fg:w="1"/><text x="24.1157%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (27 samples, 0.49%)</title><rect x="23.4301%" y="341" width="0.4900%" height="15" fill="rgb(231,119,3)" fg:x="1291" fg:w="27"/><text x="23.6801%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="23.8838%" y="325" width="0.0363%" height="15" fill="rgb(216,97,11)" fg:x="1316" fg:w="2"/><text x="24.1338%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="23.9201%" y="341" width="0.0181%" height="15" fill="rgb(223,59,9)" fg:x="1318" fg:w="1"/><text x="24.1701%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="23.9383%" y="341" width="0.0363%" height="15" fill="rgb(233,93,31)" fg:x="1319" fg:w="2"/><text x="24.1883%" y="351.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="23.9564%" y="325" width="0.0181%" height="15" fill="rgb(239,81,33)" fg:x="1320" fg:w="1"/><text x="24.2064%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (32 samples, 0.58%)</title><rect x="23.4120%" y="373" width="0.5808%" height="15" fill="rgb(213,120,34)" fg:x="1290" fg:w="32"/><text x="23.6620%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (32 samples, 0.58%)</title><rect x="23.4120%" y="357" width="0.5808%" height="15" fill="rgb(243,49,53)" fg:x="1290" fg:w="32"/><text x="23.6620%" y="367.50"></text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="23.9746%" y="341" width="0.0181%" height="15" fill="rgb(247,216,33)" fg:x="1321" fg:w="1"/><text x="24.2246%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="23.9746%" y="325" width="0.0181%" height="15" fill="rgb(226,26,14)" fg:x="1321" fg:w="1"/><text x="24.2246%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.04%)</title><rect x="23.9927%" y="341" width="0.0363%" height="15" fill="rgb(215,49,53)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.04%)</title><rect x="23.9927%" y="325" width="0.0363%" height="15" fill="rgb(245,162,40)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.04%)</title><rect x="23.9927%" y="309" width="0.0363%" height="15" fill="rgb(229,68,17)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.04%)</title><rect x="23.9927%" y="293" width="0.0363%" height="15" fill="rgb(213,182,10)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.04%)</title><rect x="23.9927%" y="277" width="0.0363%" height="15" fill="rgb(245,125,30)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.04%)</title><rect x="23.9927%" y="261" width="0.0363%" height="15" fill="rgb(232,202,2)" fg:x="1322" fg:w="2"/><text x="24.2427%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.05%)</title><rect x="23.9927%" y="373" width="0.0544%" height="15" fill="rgb(237,140,51)" fg:x="1322" fg:w="3"/><text x="24.2427%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="23.9927%" y="357" width="0.0544%" height="15" fill="rgb(236,157,25)" fg:x="1322" fg:w="3"/><text x="24.2427%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="24.0290%" y="341" width="0.0181%" height="15" fill="rgb(219,209,0)" fg:x="1324" fg:w="1"/><text x="24.2790%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="24.0290%" y="325" width="0.0181%" height="15" fill="rgb(240,116,54)" fg:x="1324" fg:w="1"/><text x="24.2790%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="24.0290%" y="309" width="0.0181%" height="15" fill="rgb(216,10,36)" fg:x="1324" fg:w="1"/><text x="24.2790%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 0.67%)</title><rect x="23.3938%" y="389" width="0.6715%" height="15" fill="rgb(222,72,44)" fg:x="1289" fg:w="37"/><text x="23.6438%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.0472%" y="373" width="0.0181%" height="15" fill="rgb(232,159,9)" fg:x="1325" fg:w="1"/><text x="24.2972%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.0653%" y="245" width="0.0181%" height="15" fill="rgb(210,39,32)" fg:x="1326" fg:w="1"/><text x="24.3153%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.0653%" y="229" width="0.0181%" height="15" fill="rgb(216,194,45)" fg:x="1326" fg:w="1"/><text x="24.3153%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.0653%" y="213" width="0.0181%" height="15" fill="rgb(218,18,35)" fg:x="1326" fg:w="1"/><text x="24.3153%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.0653%" y="197" width="0.0181%" height="15" fill="rgb(207,83,51)" fg:x="1326" fg:w="1"/><text x="24.3153%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.0653%" y="181" width="0.0181%" height="15" fill="rgb(225,63,43)" fg:x="1326" fg:w="1"/><text x="24.3153%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="24.0653%" y="261" width="0.0363%" height="15" fill="rgb(207,57,36)" fg:x="1326" fg:w="2"/><text x="24.3153%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.0835%" y="245" width="0.0181%" height="15" fill="rgb(216,99,33)" fg:x="1327" fg:w="1"/><text x="24.3335%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.05%)</title><rect x="24.0653%" y="373" width="0.0544%" height="15" fill="rgb(225,42,16)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.05%)</title><rect x="24.0653%" y="357" width="0.0544%" height="15" fill="rgb(220,201,45)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.0653%" y="341" width="0.0544%" height="15" fill="rgb(225,33,4)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.0653%" y="325" width="0.0544%" height="15" fill="rgb(224,33,50)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.0653%" y="309" width="0.0544%" height="15" fill="rgb(246,198,51)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.0653%" y="293" width="0.0544%" height="15" fill="rgb(205,22,4)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.0653%" y="277" width="0.0544%" height="15" fill="rgb(206,3,8)" fg:x="1326" fg:w="3"/><text x="24.3153%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.1016%" y="261" width="0.0181%" height="15" fill="rgb(251,23,15)" fg:x="1328" fg:w="1"/><text x="24.3516%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="24.0653%" y="389" width="0.0726%" height="15" fill="rgb(252,88,28)" fg:x="1326" fg:w="4"/><text x="24.3153%" y="399.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="24.1198%" y="373" width="0.0181%" height="15" fill="rgb(212,127,14)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="357" width="0.0181%" height="15" fill="rgb(247,145,37)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="341" width="0.0181%" height="15" fill="rgb(209,117,53)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="325" width="0.0181%" height="15" fill="rgb(212,90,42)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="309" width="0.0181%" height="15" fill="rgb(218,164,37)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="293" width="0.0181%" height="15" fill="rgb(246,65,34)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="277" width="0.0181%" height="15" fill="rgb(231,100,33)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="261" width="0.0181%" height="15" fill="rgb(228,126,14)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.1198%" y="245" width="0.0181%" height="15" fill="rgb(215,173,21)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.1198%" y="229" width="0.0181%" height="15" fill="rgb(210,6,40)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="239.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="24.1198%" y="213" width="0.0181%" height="15" fill="rgb(212,48,18)" fg:x="1329" fg:w="1"/><text x="24.3698%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.16%)</title><rect x="24.1379%" y="389" width="0.1633%" height="15" fill="rgb(230,214,11)" fg:x="1330" fg:w="9"/><text x="24.3879%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.15%)</title><rect x="24.1561%" y="373" width="0.1452%" height="15" fill="rgb(254,105,39)" fg:x="1331" fg:w="8"/><text x="24.4061%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.07%)</title><rect x="24.2287%" y="357" width="0.0726%" height="15" fill="rgb(245,158,5)" fg:x="1335" fg:w="4"/><text x="24.4787%" y="367.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="24.3013%" y="389" width="0.0181%" height="15" fill="rgb(249,208,11)" fg:x="1339" fg:w="1"/><text x="24.5513%" y="399.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.04%)</title><rect x="24.3194%" y="389" width="0.0363%" height="15" fill="rgb(210,39,28)" fg:x="1340" fg:w="2"/><text x="24.5694%" y="399.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="24.3557%" y="389" width="0.0181%" height="15" fill="rgb(211,56,53)" fg:x="1342" fg:w="1"/><text x="24.6057%" y="399.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="24.3739%" y="389" width="0.0181%" height="15" fill="rgb(226,201,30)" fg:x="1343" fg:w="1"/><text x="24.6239%" y="399.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="24.3920%" y="389" width="0.0726%" height="15" fill="rgb(239,101,34)" fg:x="1344" fg:w="4"/><text x="24.6420%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="24.4283%" y="373" width="0.0363%" height="15" fill="rgb(226,209,5)" fg:x="1346" fg:w="2"/><text x="24.6783%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.4465%" y="357" width="0.0181%" height="15" fill="rgb(250,105,47)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.4465%" y="341" width="0.0181%" height="15" fill="rgb(230,72,3)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.4465%" y="325" width="0.0181%" height="15" fill="rgb(232,218,39)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.4465%" y="309" width="0.0181%" height="15" fill="rgb(248,166,6)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.4465%" y="293" width="0.0181%" height="15" fill="rgb(247,89,20)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.4465%" y="277" width="0.0181%" height="15" fill="rgb(248,130,54)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="24.4465%" y="261" width="0.0181%" height="15" fill="rgb(234,196,4)" fg:x="1347" fg:w="1"/><text x="24.6965%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="24.6824%" y="213" width="0.0363%" height="15" fill="rgb(250,143,31)" fg:x="1360" fg:w="2"/><text x="24.9324%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="24.7005%" y="197" width="0.0181%" height="15" fill="rgb(211,110,34)" fg:x="1361" fg:w="1"/><text x="24.9505%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="24.6824%" y="229" width="0.0544%" height="15" fill="rgb(215,124,48)" fg:x="1360" fg:w="3"/><text x="24.9324%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.7187%" y="213" width="0.0181%" height="15" fill="rgb(216,46,13)" fg:x="1362" fg:w="1"/><text x="24.9687%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="24.6824%" y="245" width="0.0907%" height="15" fill="rgb(205,184,25)" fg:x="1360" fg:w="5"/><text x="24.9324%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="24.7368%" y="229" width="0.0363%" height="15" fill="rgb(228,1,10)" fg:x="1363" fg:w="2"/><text x="24.9868%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="24.7731%" y="245" width="0.0181%" height="15" fill="rgb(213,116,27)" fg:x="1365" fg:w="1"/><text x="25.0231%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="24.6824%" y="261" width="0.1270%" height="15" fill="rgb(241,95,50)" fg:x="1360" fg:w="7"/><text x="24.9324%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="24.7913%" y="245" width="0.0181%" height="15" fill="rgb(238,48,32)" fg:x="1366" fg:w="1"/><text x="25.0413%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="24.8094%" y="261" width="0.0181%" height="15" fill="rgb(235,113,49)" fg:x="1367" fg:w="1"/><text x="25.0594%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="24.6824%" y="277" width="0.1815%" height="15" fill="rgb(205,127,43)" fg:x="1360" fg:w="10"/><text x="24.9324%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="24.8276%" y="261" width="0.0363%" height="15" fill="rgb(250,162,2)" fg:x="1368" fg:w="2"/><text x="25.0776%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="24.8639%" y="277" width="0.0181%" height="15" fill="rgb(220,13,41)" fg:x="1370" fg:w="1"/><text x="25.1139%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="24.6642%" y="293" width="0.2722%" height="15" fill="rgb(249,221,25)" fg:x="1359" fg:w="15"/><text x="24.9142%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="24.8820%" y="277" width="0.0544%" height="15" fill="rgb(215,208,19)" fg:x="1371" fg:w="3"/><text x="25.1320%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.38%)</title><rect x="24.6642%" y="309" width="0.3811%" height="15" fill="rgb(236,175,2)" fg:x="1359" fg:w="21"/><text x="24.9142%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (6 samples, 0.11%)</title><rect x="24.9365%" y="293" width="0.1089%" height="15" fill="rgb(241,52,2)" fg:x="1374" fg:w="6"/><text x="25.1865%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="25.0454%" y="309" width="0.0181%" height="15" fill="rgb(248,140,14)" fg:x="1380" fg:w="1"/><text x="25.2954%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (24 samples, 0.44%)</title><rect x="24.6642%" y="325" width="0.4356%" height="15" fill="rgb(253,22,42)" fg:x="1359" fg:w="24"/><text x="24.9142%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="25.0635%" y="309" width="0.0363%" height="15" fill="rgb(234,61,47)" fg:x="1381" fg:w="2"/><text x="25.3135%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="25.0998%" y="325" width="0.0181%" height="15" fill="rgb(208,226,15)" fg:x="1383" fg:w="1"/><text x="25.3498%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (28 samples, 0.51%)</title><rect x="24.6279%" y="357" width="0.5082%" height="15" fill="rgb(217,221,4)" fg:x="1357" fg:w="28"/><text x="24.8779%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (27 samples, 0.49%)</title><rect x="24.6461%" y="341" width="0.4900%" height="15" fill="rgb(212,174,34)" fg:x="1358" fg:w="27"/><text x="24.8961%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.1180%" y="325" width="0.0181%" height="15" fill="rgb(253,83,4)" fg:x="1384" fg:w="1"/><text x="25.3680%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.62%)</title><rect x="24.5735%" y="373" width="0.6171%" height="15" fill="rgb(250,195,49)" fg:x="1354" fg:w="34"/><text x="24.8235%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="25.1361%" y="357" width="0.0544%" height="15" fill="rgb(241,192,25)" fg:x="1385" fg:w="3"/><text x="25.3861%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="25.2269%" y="245" width="0.0181%" height="15" fill="rgb(208,124,10)" fg:x="1390" fg:w="1"/><text x="25.4769%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="25.2269%" y="229" width="0.0181%" height="15" fill="rgb(222,33,0)" fg:x="1390" fg:w="1"/><text x="25.4769%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.2269%" y="213" width="0.0181%" height="15" fill="rgb(234,209,28)" fg:x="1390" fg:w="1"/><text x="25.4769%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.2269%" y="277" width="0.0363%" height="15" fill="rgb(224,11,23)" fg:x="1390" fg:w="2"/><text x="25.4769%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.2269%" y="261" width="0.0363%" height="15" fill="rgb(232,99,1)" fg:x="1390" fg:w="2"/><text x="25.4769%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.2450%" y="245" width="0.0181%" height="15" fill="rgb(237,95,45)" fg:x="1391" fg:w="1"/><text x="25.4950%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.09%)</title><rect x="25.1906%" y="357" width="0.0907%" height="15" fill="rgb(208,109,11)" fg:x="1388" fg:w="5"/><text x="25.4406%" y="367.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="25.1906%" y="341" width="0.0907%" height="15" fill="rgb(216,190,48)" fg:x="1388" fg:w="5"/><text x="25.4406%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="25.1906%" y="325" width="0.0907%" height="15" fill="rgb(251,171,36)" fg:x="1388" fg:w="5"/><text x="25.4406%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="25.1906%" y="309" width="0.0907%" height="15" fill="rgb(230,62,22)" fg:x="1388" fg:w="5"/><text x="25.4406%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="25.2087%" y="293" width="0.0726%" height="15" fill="rgb(225,114,35)" fg:x="1389" fg:w="4"/><text x="25.4587%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.2632%" y="277" width="0.0181%" height="15" fill="rgb(215,118,42)" fg:x="1392" fg:w="1"/><text x="25.5132%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.2813%" y="293" width="0.0363%" height="15" fill="rgb(243,119,21)" fg:x="1393" fg:w="2"/><text x="25.5313%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="25.2995%" y="277" width="0.0181%" height="15" fill="rgb(252,177,53)" fg:x="1394" fg:w="1"/><text x="25.5495%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="25.2995%" y="261" width="0.0181%" height="15" fill="rgb(237,209,29)" fg:x="1394" fg:w="1"/><text x="25.5495%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.2995%" y="245" width="0.0181%" height="15" fill="rgb(212,65,23)" fg:x="1394" fg:w="1"/><text x="25.5495%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="25.2813%" y="325" width="0.0544%" height="15" fill="rgb(230,222,46)" fg:x="1393" fg:w="3"/><text x="25.5313%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="25.2813%" y="309" width="0.0544%" height="15" fill="rgb(215,135,32)" fg:x="1393" fg:w="3"/><text x="25.5313%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.3176%" y="293" width="0.0181%" height="15" fill="rgb(246,101,22)" fg:x="1395" fg:w="1"/><text x="25.5676%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.18%)</title><rect x="25.1906%" y="373" width="0.1815%" height="15" fill="rgb(206,107,13)" fg:x="1388" fg:w="10"/><text x="25.4406%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="25.2813%" y="357" width="0.0907%" height="15" fill="rgb(250,100,44)" fg:x="1393" fg:w="5"/><text x="25.5313%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="25.2813%" y="341" width="0.0907%" height="15" fill="rgb(231,147,38)" fg:x="1393" fg:w="5"/><text x="25.5313%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="25.3358%" y="325" width="0.0363%" height="15" fill="rgb(229,8,40)" fg:x="1396" fg:w="2"/><text x="25.5858%" y="335.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="25.4991%" y="341" width="0.0181%" height="15" fill="rgb(221,135,30)" fg:x="1405" fg:w="1"/><text x="25.7491%" y="351.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.18%)</title><rect x="25.3721%" y="373" width="0.1815%" height="15" fill="rgb(249,193,18)" fg:x="1398" fg:w="10"/><text x="25.6221%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.16%)</title><rect x="25.3902%" y="357" width="0.1633%" height="15" fill="rgb(209,133,39)" fg:x="1399" fg:w="9"/><text x="25.6402%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="25.5172%" y="341" width="0.0363%" height="15" fill="rgb(232,100,14)" fg:x="1406" fg:w="2"/><text x="25.7672%" y="351.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="25.5535%" y="373" width="0.0181%" height="15" fill="rgb(224,185,1)" fg:x="1408" fg:w="1"/><text x="25.8035%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="25.5535%" y="357" width="0.0181%" height="15" fill="rgb(223,139,8)" fg:x="1408" fg:w="1"/><text x="25.8035%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="25.5535%" y="341" width="0.0181%" height="15" fill="rgb(232,213,38)" fg:x="1408" fg:w="1"/><text x="25.8035%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="25.5535%" y="325" width="0.0181%" height="15" fill="rgb(207,94,22)" fg:x="1408" fg:w="1"/><text x="25.8035%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="25.5535%" y="309" width="0.0181%" height="15" fill="rgb(219,183,54)" fg:x="1408" fg:w="1"/><text x="25.8035%" y="319.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.07%)</title><rect x="25.5717%" y="373" width="0.0726%" height="15" fill="rgb(216,185,54)" fg:x="1409" fg:w="4"/><text x="25.8217%" y="383.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="25.6443%" y="373" width="0.0181%" height="15" fill="rgb(254,217,39)" fg:x="1413" fg:w="1"/><text x="25.8943%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="25.6987%" y="277" width="0.0181%" height="15" fill="rgb(240,178,23)" fg:x="1416" fg:w="1"/><text x="25.9487%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="25.6987%" y="261" width="0.0181%" height="15" fill="rgb(218,11,47)" fg:x="1416" fg:w="1"/><text x="25.9487%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="25.6624%" y="373" width="0.0726%" height="15" fill="rgb(218,51,51)" fg:x="1414" fg:w="4"/><text x="25.9124%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="25.6806%" y="357" width="0.0544%" height="15" fill="rgb(238,126,27)" fg:x="1415" fg:w="3"/><text x="25.9306%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.6987%" y="341" width="0.0363%" height="15" fill="rgb(249,202,22)" fg:x="1416" fg:w="2"/><text x="25.9487%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.6987%" y="325" width="0.0363%" height="15" fill="rgb(254,195,49)" fg:x="1416" fg:w="2"/><text x="25.9487%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.6987%" y="309" width="0.0363%" height="15" fill="rgb(208,123,14)" fg:x="1416" fg:w="2"/><text x="25.9487%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="25.6987%" y="293" width="0.0363%" height="15" fill="rgb(224,200,8)" fg:x="1416" fg:w="2"/><text x="25.9487%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="25.7169%" y="277" width="0.0181%" height="15" fill="rgb(217,61,36)" fg:x="1417" fg:w="1"/><text x="25.9669%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="25.7350%" y="373" width="0.0181%" height="15" fill="rgb(206,35,45)" fg:x="1418" fg:w="1"/><text x="25.9850%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="25.8258%" y="357" width="0.0181%" height="15" fill="rgb(217,65,33)" fg:x="1423" fg:w="1"/><text x="26.0758%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="25.8439%" y="357" width="0.0181%" height="15" fill="rgb(222,158,48)" fg:x="1424" fg:w="1"/><text x="26.0939%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="25.8621%" y="357" width="0.0181%" height="15" fill="rgb(254,2,54)" fg:x="1425" fg:w="1"/><text x="26.1121%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="25.8621%" y="341" width="0.0181%" height="15" fill="rgb(250,143,38)" fg:x="1425" fg:w="1"/><text x="26.1121%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="25.8621%" y="325" width="0.0181%" height="15" fill="rgb(248,25,0)" fg:x="1425" fg:w="1"/><text x="26.1121%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="26.0254%" y="181" width="0.0363%" height="15" fill="rgb(206,152,27)" fg:x="1434" fg:w="2"/><text x="26.2754%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.0254%" y="165" width="0.0363%" height="15" fill="rgb(240,77,30)" fg:x="1434" fg:w="2"/><text x="26.2754%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="26.0617%" y="181" width="0.0181%" height="15" fill="rgb(231,5,3)" fg:x="1436" fg:w="1"/><text x="26.3117%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="26.0254%" y="197" width="0.1089%" height="15" fill="rgb(207,226,32)" fg:x="1434" fg:w="6"/><text x="26.2754%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="26.0799%" y="181" width="0.0544%" height="15" fill="rgb(222,207,47)" fg:x="1437" fg:w="3"/><text x="26.3299%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="26.0254%" y="213" width="0.1270%" height="15" fill="rgb(229,115,45)" fg:x="1434" fg:w="7"/><text x="26.2754%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="26.1343%" y="197" width="0.0181%" height="15" fill="rgb(224,191,6)" fg:x="1440" fg:w="1"/><text x="26.3843%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="26.0254%" y="229" width="0.1633%" height="15" fill="rgb(230,227,24)" fg:x="1434" fg:w="9"/><text x="26.2754%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.1525%" y="213" width="0.0363%" height="15" fill="rgb(228,80,19)" fg:x="1441" fg:w="2"/><text x="26.4025%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.20%)</title><rect x="26.0254%" y="245" width="0.1996%" height="15" fill="rgb(247,229,0)" fg:x="1434" fg:w="11"/><text x="26.2754%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.1887%" y="229" width="0.0363%" height="15" fill="rgb(237,194,15)" fg:x="1443" fg:w="2"/><text x="26.4387%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="26.2250%" y="245" width="0.0363%" height="15" fill="rgb(219,203,20)" fg:x="1445" fg:w="2"/><text x="26.4750%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.29%)</title><rect x="25.9891%" y="261" width="0.2904%" height="15" fill="rgb(234,128,8)" fg:x="1432" fg:w="16"/><text x="26.2391%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="26.2613%" y="245" width="0.0181%" height="15" fill="rgb(248,202,8)" fg:x="1447" fg:w="1"/><text x="26.5113%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.36%)</title><rect x="25.9891%" y="277" width="0.3630%" height="15" fill="rgb(206,104,37)" fg:x="1432" fg:w="20"/><text x="26.2391%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="26.2795%" y="261" width="0.0726%" height="15" fill="rgb(223,8,27)" fg:x="1448" fg:w="4"/><text x="26.5295%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.40%)</title><rect x="25.9891%" y="293" width="0.3993%" height="15" fill="rgb(216,217,28)" fg:x="1432" fg:w="22"/><text x="26.2391%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.3521%" y="277" width="0.0363%" height="15" fill="rgb(249,199,1)" fg:x="1452" fg:w="2"/><text x="26.6021%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="26.3884%" y="293" width="0.0181%" height="15" fill="rgb(240,85,17)" fg:x="1454" fg:w="1"/><text x="26.6384%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="25.9891%" y="309" width="0.5445%" height="15" fill="rgb(206,108,45)" fg:x="1432" fg:w="30"/><text x="26.2391%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (7 samples, 0.13%)</title><rect x="26.4065%" y="293" width="0.1270%" height="15" fill="rgb(245,210,41)" fg:x="1455" fg:w="7"/><text x="26.6565%" y="303.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="26.5154%" y="277" width="0.0181%" height="15" fill="rgb(206,13,37)" fg:x="1461" fg:w="1"/><text x="26.7654%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="26.5336%" y="309" width="0.0181%" height="15" fill="rgb(250,61,18)" fg:x="1462" fg:w="1"/><text x="26.7836%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="26.5517%" y="309" width="0.0544%" height="15" fill="rgb(235,172,48)" fg:x="1463" fg:w="3"/><text x="26.8017%" y="319.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (37 samples, 0.67%)</title><rect x="25.9528%" y="341" width="0.6715%" height="15" fill="rgb(249,201,17)" fg:x="1430" fg:w="37"/><text x="26.2028%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (37 samples, 0.67%)</title><rect x="25.9528%" y="325" width="0.6715%" height="15" fill="rgb(219,208,6)" fg:x="1430" fg:w="37"/><text x="26.2028%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="26.6062%" y="309" width="0.0181%" height="15" fill="rgb(248,31,23)" fg:x="1466" fg:w="1"/><text x="26.8562%" y="319.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="26.6243%" y="341" width="0.0181%" height="15" fill="rgb(245,15,42)" fg:x="1467" fg:w="1"/><text x="26.8743%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="26.6243%" y="325" width="0.0181%" height="15" fill="rgb(222,217,39)" fg:x="1467" fg:w="1"/><text x="26.8743%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="26.6243%" y="309" width="0.0181%" height="15" fill="rgb(210,219,27)" fg:x="1467" fg:w="1"/><text x="26.8743%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="26.6243%" y="293" width="0.0181%" height="15" fill="rgb(252,166,36)" fg:x="1467" fg:w="1"/><text x="26.8743%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="26.6243%" y="277" width="0.0181%" height="15" fill="rgb(245,132,34)" fg:x="1467" fg:w="1"/><text x="26.8743%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (46 samples, 0.83%)</title><rect x="25.8802%" y="357" width="0.8348%" height="15" fill="rgb(236,54,3)" fg:x="1426" fg:w="46"/><text x="26.1302%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="26.6425%" y="341" width="0.0726%" height="15" fill="rgb(241,173,43)" fg:x="1468" fg:w="4"/><text x="26.8925%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="26.7695%" y="245" width="0.0363%" height="15" fill="rgb(215,190,9)" fg:x="1475" fg:w="2"/><text x="27.0195%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="26.7695%" y="229" width="0.0363%" height="15" fill="rgb(242,101,16)" fg:x="1475" fg:w="2"/><text x="27.0195%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.7695%" y="213" width="0.0363%" height="15" fill="rgb(223,190,21)" fg:x="1475" fg:w="2"/><text x="27.0195%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="26.7151%" y="261" width="0.1270%" height="15" fill="rgb(215,228,25)" fg:x="1472" fg:w="7"/><text x="26.9651%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.8058%" y="245" width="0.0363%" height="15" fill="rgb(225,36,22)" fg:x="1477" fg:w="2"/><text x="27.0558%" y="255.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="26.8240%" y="229" width="0.0181%" height="15" fill="rgb(251,106,46)" fg:x="1478" fg:w="1"/><text x="27.0740%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="26.7151%" y="277" width="0.1633%" height="15" fill="rgb(208,90,1)" fg:x="1472" fg:w="9"/><text x="26.9651%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.8421%" y="261" width="0.0363%" height="15" fill="rgb(243,10,4)" fg:x="1479" fg:w="2"/><text x="27.0921%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="26.7151%" y="293" width="0.1815%" height="15" fill="rgb(212,137,27)" fg:x="1472" fg:w="10"/><text x="26.9651%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="26.8784%" y="277" width="0.0181%" height="15" fill="rgb(231,220,49)" fg:x="1481" fg:w="1"/><text x="27.1284%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="26.8966%" y="293" width="0.0181%" height="15" fill="rgb(237,96,20)" fg:x="1482" fg:w="1"/><text x="27.1466%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.24%)</title><rect x="26.7151%" y="341" width="0.2359%" height="15" fill="rgb(239,229,30)" fg:x="1472" fg:w="13"/><text x="26.9651%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (13 samples, 0.24%)</title><rect x="26.7151%" y="325" width="0.2359%" height="15" fill="rgb(219,65,33)" fg:x="1472" fg:w="13"/><text x="26.9651%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.24%)</title><rect x="26.7151%" y="309" width="0.2359%" height="15" fill="rgb(243,134,7)" fg:x="1472" fg:w="13"/><text x="26.9651%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="26.9147%" y="293" width="0.0363%" height="15" fill="rgb(216,177,54)" fg:x="1483" fg:w="2"/><text x="27.1647%" y="303.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="26.9328%" y="277" width="0.0181%" height="15" fill="rgb(211,160,20)" fg:x="1484" fg:w="1"/><text x="27.1828%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.25%)</title><rect x="26.7151%" y="357" width="0.2541%" height="15" fill="rgb(239,85,39)" fg:x="1472" fg:w="14"/><text x="26.9651%" y="367.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="26.9510%" y="341" width="0.0181%" height="15" fill="rgb(232,125,22)" fg:x="1485" fg:w="1"/><text x="27.2010%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="26.9510%" y="325" width="0.0181%" height="15" fill="rgb(244,57,34)" fg:x="1485" fg:w="1"/><text x="27.2010%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="26.9510%" y="309" width="0.0181%" height="15" fill="rgb(214,203,32)" fg:x="1485" fg:w="1"/><text x="27.2010%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="26.9510%" y="293" width="0.0181%" height="15" fill="rgb(207,58,43)" fg:x="1485" fg:w="1"/><text x="27.2010%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="27.2777%" y="309" width="0.0181%" height="15" fill="rgb(215,193,15)" fg:x="1503" fg:w="1"/><text x="27.5277%" y="319.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (20 samples, 0.36%)</title><rect x="26.9691%" y="357" width="0.3630%" height="15" fill="rgb(232,15,44)" fg:x="1486" fg:w="20"/><text x="27.2191%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.33%)</title><rect x="27.0054%" y="341" width="0.3267%" height="15" fill="rgb(212,3,48)" fg:x="1488" fg:w="18"/><text x="27.2554%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.18%)</title><rect x="27.1506%" y="325" width="0.1815%" height="15" fill="rgb(218,128,7)" fg:x="1496" fg:w="10"/><text x="27.4006%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.04%)</title><rect x="27.2958%" y="309" width="0.0363%" height="15" fill="rgb(226,216,39)" fg:x="1504" fg:w="2"/><text x="27.5458%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="27.3140%" y="293" width="0.0181%" height="15" fill="rgb(243,47,51)" fg:x="1505" fg:w="1"/><text x="27.5640%" y="303.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.09%)</title><rect x="27.3321%" y="357" width="0.0907%" height="15" fill="rgb(241,183,40)" fg:x="1506" fg:w="5"/><text x="27.5821%" y="367.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="27.4229%" y="357" width="0.0363%" height="15" fill="rgb(231,217,32)" fg:x="1511" fg:w="2"/><text x="27.6729%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="27.4229%" y="341" width="0.0363%" height="15" fill="rgb(229,61,38)" fg:x="1511" fg:w="2"/><text x="27.6729%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="27.4410%" y="325" width="0.0181%" height="15" fill="rgb(225,210,5)" fg:x="1512" fg:w="1"/><text x="27.6910%" y="335.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="27.4410%" y="309" width="0.0181%" height="15" fill="rgb(231,79,45)" fg:x="1512" fg:w="1"/><text x="27.6910%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="27.4592%" y="357" width="0.0181%" height="15" fill="rgb(224,100,7)" fg:x="1513" fg:w="1"/><text x="27.7092%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.02%)</title><rect x="27.6407%" y="341" width="0.0181%" height="15" fill="rgb(241,198,18)" fg:x="1523" fg:w="1"/><text x="27.8907%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="27.6588%" y="341" width="0.0181%" height="15" fill="rgb(252,97,53)" fg:x="1524" fg:w="1"/><text x="27.9088%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="27.7858%" y="197" width="0.0181%" height="15" fill="rgb(220,88,7)" fg:x="1531" fg:w="1"/><text x="28.0358%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="27.7858%" y="181" width="0.0181%" height="15" fill="rgb(213,176,14)" fg:x="1531" fg:w="1"/><text x="28.0358%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="27.7858%" y="229" width="0.0363%" height="15" fill="rgb(246,73,7)" fg:x="1531" fg:w="2"/><text x="28.0358%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="27.7858%" y="213" width="0.0363%" height="15" fill="rgb(245,64,36)" fg:x="1531" fg:w="2"/><text x="28.0358%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="27.8040%" y="197" width="0.0181%" height="15" fill="rgb(245,80,10)" fg:x="1532" fg:w="1"/><text x="28.0540%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="27.7677%" y="245" width="0.0907%" height="15" fill="rgb(232,107,50)" fg:x="1530" fg:w="5"/><text x="28.0177%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="27.8221%" y="229" width="0.0363%" height="15" fill="rgb(253,3,0)" fg:x="1533" fg:w="2"/><text x="28.0721%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="27.8584%" y="245" width="0.0181%" height="15" fill="rgb(212,99,53)" fg:x="1535" fg:w="1"/><text x="28.1084%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="27.7677%" y="261" width="0.1633%" height="15" fill="rgb(249,111,54)" fg:x="1530" fg:w="9"/><text x="28.0177%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="27.8766%" y="245" width="0.0544%" height="15" fill="rgb(249,55,30)" fg:x="1536" fg:w="3"/><text x="28.1266%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="27.9310%" y="261" width="0.0181%" height="15" fill="rgb(237,47,42)" fg:x="1539" fg:w="1"/><text x="28.1810%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.24%)</title><rect x="27.7677%" y="277" width="0.2359%" height="15" fill="rgb(211,20,18)" fg:x="1530" fg:w="13"/><text x="28.0177%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="27.9492%" y="261" width="0.0544%" height="15" fill="rgb(231,203,46)" fg:x="1540" fg:w="3"/><text x="28.1992%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="28.0036%" y="277" width="0.0181%" height="15" fill="rgb(237,142,3)" fg:x="1543" fg:w="1"/><text x="28.2536%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.40%)</title><rect x="27.7677%" y="293" width="0.3993%" height="15" fill="rgb(241,107,1)" fg:x="1530" fg:w="22"/><text x="28.0177%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (8 samples, 0.15%)</title><rect x="28.0218%" y="277" width="0.1452%" height="15" fill="rgb(229,83,13)" fg:x="1544" fg:w="8"/><text x="28.2718%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="28.1488%" y="261" width="0.0181%" height="15" fill="rgb(241,91,40)" fg:x="1551" fg:w="1"/><text x="28.3988%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (29 samples, 0.53%)</title><rect x="27.6951%" y="325" width="0.5263%" height="15" fill="rgb(225,3,45)" fg:x="1526" fg:w="29"/><text x="27.9451%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.51%)</title><rect x="27.7132%" y="309" width="0.5082%" height="15" fill="rgb(244,223,14)" fg:x="1527" fg:w="28"/><text x="27.9632%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="28.1670%" y="293" width="0.0544%" height="15" fill="rgb(224,124,37)" fg:x="1552" fg:w="3"/><text x="28.4170%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (32 samples, 0.58%)</title><rect x="27.6770%" y="341" width="0.5808%" height="15" fill="rgb(251,171,30)" fg:x="1525" fg:w="32"/><text x="27.9270%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="28.2214%" y="325" width="0.0363%" height="15" fill="rgb(236,46,54)" fg:x="1555" fg:w="2"/><text x="28.4714%" y="335.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="28.2396%" y="309" width="0.0181%" height="15" fill="rgb(245,213,5)" fg:x="1556" fg:w="1"/><text x="28.4896%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="28.2396%" y="293" width="0.0181%" height="15" fill="rgb(230,144,27)" fg:x="1556" fg:w="1"/><text x="28.4896%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="28.2396%" y="277" width="0.0181%" height="15" fill="rgb(220,86,6)" fg:x="1556" fg:w="1"/><text x="28.4896%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="28.2759%" y="197" width="0.0181%" height="15" fill="rgb(240,20,13)" fg:x="1558" fg:w="1"/><text x="28.5259%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="28.2759%" y="181" width="0.0181%" height="15" fill="rgb(217,89,34)" fg:x="1558" fg:w="1"/><text x="28.5259%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="28.2577%" y="229" width="0.0544%" height="15" fill="rgb(229,13,5)" fg:x="1557" fg:w="3"/><text x="28.5077%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="28.2577%" y="213" width="0.0544%" height="15" fill="rgb(244,67,35)" fg:x="1557" fg:w="3"/><text x="28.5077%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="28.2940%" y="197" width="0.0181%" height="15" fill="rgb(221,40,2)" fg:x="1559" fg:w="1"/><text x="28.5440%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="28.2577%" y="245" width="0.1089%" height="15" fill="rgb(237,157,21)" fg:x="1557" fg:w="6"/><text x="28.5077%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="28.3122%" y="229" width="0.0544%" height="15" fill="rgb(222,94,11)" fg:x="1560" fg:w="3"/><text x="28.5622%" y="239.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="28.3485%" y="213" width="0.0181%" height="15" fill="rgb(249,113,6)" fg:x="1562" fg:w="1"/><text x="28.5985%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="28.2577%" y="261" width="0.1270%" height="15" fill="rgb(238,137,36)" fg:x="1557" fg:w="7"/><text x="28.5077%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="28.3666%" y="245" width="0.0181%" height="15" fill="rgb(210,102,26)" fg:x="1563" fg:w="1"/><text x="28.6166%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="28.2577%" y="277" width="0.1633%" height="15" fill="rgb(218,30,30)" fg:x="1557" fg:w="9"/><text x="28.5077%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="28.3848%" y="261" width="0.0363%" height="15" fill="rgb(214,67,26)" fg:x="1564" fg:w="2"/><text x="28.6348%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.18%)</title><rect x="28.2577%" y="325" width="0.1815%" height="15" fill="rgb(251,9,53)" fg:x="1557" fg:w="10"/><text x="28.5077%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (10 samples, 0.18%)</title><rect x="28.2577%" y="309" width="0.1815%" height="15" fill="rgb(228,204,25)" fg:x="1557" fg:w="10"/><text x="28.5077%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="28.2577%" y="293" width="0.1815%" height="15" fill="rgb(207,153,8)" fg:x="1557" fg:w="10"/><text x="28.5077%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="28.4211%" y="277" width="0.0181%" height="15" fill="rgb(242,9,16)" fg:x="1566" fg:w="1"/><text x="28.6711%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="28.4211%" y="261" width="0.0181%" height="15" fill="rgb(217,211,10)" fg:x="1566" fg:w="1"/><text x="28.6711%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="28.4392%" y="277" width="0.0181%" height="15" fill="rgb(219,228,52)" fg:x="1567" fg:w="1"/><text x="28.6892%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="28.4392%" y="261" width="0.0181%" height="15" fill="rgb(231,92,29)" fg:x="1567" fg:w="1"/><text x="28.6892%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.22%)</title><rect x="28.2577%" y="341" width="0.2178%" height="15" fill="rgb(232,8,23)" fg:x="1557" fg:w="12"/><text x="28.5077%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="28.4392%" y="325" width="0.0363%" height="15" fill="rgb(216,211,34)" fg:x="1567" fg:w="2"/><text x="28.6892%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="28.4392%" y="309" width="0.0363%" height="15" fill="rgb(236,151,0)" fg:x="1567" fg:w="2"/><text x="28.6892%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="28.4392%" y="293" width="0.0363%" height="15" fill="rgb(209,168,3)" fg:x="1567" fg:w="2"/><text x="28.6892%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="28.4574%" y="277" width="0.0181%" height="15" fill="rgb(208,129,28)" fg:x="1568" fg:w="1"/><text x="28.7074%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="28.4936%" y="325" width="0.0181%" height="15" fill="rgb(229,78,22)" fg:x="1570" fg:w="1"/><text x="28.7436%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="28.4936%" y="309" width="0.0181%" height="15" fill="rgb(228,187,13)" fg:x="1570" fg:w="1"/><text x="28.7436%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="28.7296%" y="293" width="0.0181%" height="15" fill="rgb(240,119,24)" fg:x="1583" fg:w="1"/><text x="28.9796%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="28.7296%" y="277" width="0.0181%" height="15" fill="rgb(209,194,42)" fg:x="1583" fg:w="1"/><text x="28.9796%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="28.7477%" y="293" width="0.0363%" height="15" fill="rgb(247,200,46)" fg:x="1584" fg:w="2"/><text x="28.9977%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="28.7659%" y="277" width="0.0181%" height="15" fill="rgb(218,76,16)" fg:x="1585" fg:w="1"/><text x="29.0159%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="28.7659%" y="261" width="0.0181%" height="15" fill="rgb(225,21,48)" fg:x="1585" fg:w="1"/><text x="29.0159%" y="271.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.33%)</title><rect x="28.4755%" y="341" width="0.3267%" height="15" fill="rgb(239,223,50)" fg:x="1569" fg:w="18"/><text x="28.7255%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.29%)</title><rect x="28.5118%" y="325" width="0.2904%" height="15" fill="rgb(244,45,21)" fg:x="1571" fg:w="16"/><text x="28.7618%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.20%)</title><rect x="28.6025%" y="309" width="0.1996%" height="15" fill="rgb(232,33,43)" fg:x="1576" fg:w="11"/><text x="28.8525%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="28.7840%" y="293" width="0.0181%" height="15" fill="rgb(209,8,3)" fg:x="1586" fg:w="1"/><text x="29.0340%" y="303.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="28.8022%" y="341" width="0.0544%" height="15" fill="rgb(214,25,53)" fg:x="1587" fg:w="3"/><text x="29.0522%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="28.8203%" y="325" width="0.0363%" height="15" fill="rgb(254,186,54)" fg:x="1588" fg:w="2"/><text x="29.0703%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="28.8203%" y="309" width="0.0363%" height="15" fill="rgb(208,174,49)" fg:x="1588" fg:w="2"/><text x="29.0703%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="28.8203%" y="293" width="0.0363%" height="15" fill="rgb(233,191,51)" fg:x="1588" fg:w="2"/><text x="29.0703%" y="303.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="28.8566%" y="341" width="0.0181%" height="15" fill="rgb(222,134,10)" fg:x="1590" fg:w="1"/><text x="29.1066%" y="351.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (7 samples, 0.13%)</title><rect x="28.8748%" y="341" width="0.1270%" height="15" fill="rgb(230,226,20)" fg:x="1591" fg:w="7"/><text x="29.1248%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="29.0018%" y="341" width="0.0363%" height="15" fill="rgb(251,111,25)" fg:x="1598" fg:w="2"/><text x="29.2518%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="29.0381%" y="341" width="0.0181%" height="15" fill="rgb(224,40,46)" fg:x="1600" fg:w="1"/><text x="29.2881%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="29.0563%" y="341" width="0.0181%" height="15" fill="rgb(236,108,47)" fg:x="1601" fg:w="1"/><text x="29.3063%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="29.1470%" y="325" width="0.0363%" height="15" fill="rgb(234,93,0)" fg:x="1606" fg:w="2"/><text x="29.3970%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="29.1833%" y="325" width="0.0181%" height="15" fill="rgb(224,213,32)" fg:x="1608" fg:w="1"/><text x="29.4333%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="29.1833%" y="309" width="0.0181%" height="15" fill="rgb(251,11,48)" fg:x="1608" fg:w="1"/><text x="29.4333%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="29.2015%" y="325" width="0.0181%" height="15" fill="rgb(236,173,5)" fg:x="1609" fg:w="1"/><text x="29.4515%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="29.4374%" y="165" width="0.0363%" height="15" fill="rgb(230,95,12)" fg:x="1622" fg:w="2"/><text x="29.6874%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="29.4374%" y="149" width="0.0363%" height="15" fill="rgb(232,209,1)" fg:x="1622" fg:w="2"/><text x="29.6874%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="29.4192%" y="181" width="0.0907%" height="15" fill="rgb(232,6,1)" fg:x="1621" fg:w="5"/><text x="29.6692%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="29.4737%" y="165" width="0.0363%" height="15" fill="rgb(210,224,50)" fg:x="1624" fg:w="2"/><text x="29.7237%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="29.4192%" y="213" width="0.1089%" height="15" fill="rgb(228,127,35)" fg:x="1621" fg:w="6"/><text x="29.6692%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="29.4192%" y="197" width="0.1089%" height="15" fill="rgb(245,102,45)" fg:x="1621" fg:w="6"/><text x="29.6692%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="29.5100%" y="181" width="0.0181%" height="15" fill="rgb(214,1,49)" fg:x="1626" fg:w="1"/><text x="29.7600%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="29.5281%" y="213" width="0.0181%" height="15" fill="rgb(226,163,40)" fg:x="1627" fg:w="1"/><text x="29.7781%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="29.4192%" y="229" width="0.1633%" height="15" fill="rgb(239,212,28)" fg:x="1621" fg:w="9"/><text x="29.6692%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="29.5463%" y="213" width="0.0363%" height="15" fill="rgb(220,20,13)" fg:x="1628" fg:w="2"/><text x="29.7963%" y="223.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="29.5644%" y="197" width="0.0181%" height="15" fill="rgb(210,164,35)" fg:x="1629" fg:w="1"/><text x="29.8144%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="29.4192%" y="245" width="0.2178%" height="15" fill="rgb(248,109,41)" fg:x="1621" fg:w="12"/><text x="29.6692%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="29.5826%" y="229" width="0.0544%" height="15" fill="rgb(238,23,50)" fg:x="1630" fg:w="3"/><text x="29.8326%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.31%)</title><rect x="29.4192%" y="261" width="0.3085%" height="15" fill="rgb(211,48,49)" fg:x="1621" fg:w="17"/><text x="29.6692%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="29.6370%" y="245" width="0.0907%" height="15" fill="rgb(223,36,21)" fg:x="1633" fg:w="5"/><text x="29.8870%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (23 samples, 0.42%)</title><rect x="29.4011%" y="277" width="0.4174%" height="15" fill="rgb(207,123,46)" fg:x="1620" fg:w="23"/><text x="29.6511%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="29.7278%" y="261" width="0.0907%" height="15" fill="rgb(240,218,32)" fg:x="1638" fg:w="5"/><text x="29.9778%" y="271.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="29.8004%" y="245" width="0.0181%" height="15" fill="rgb(252,5,43)" fg:x="1642" fg:w="1"/><text x="30.0504%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (31 samples, 0.56%)</title><rect x="29.3285%" y="309" width="0.5626%" height="15" fill="rgb(252,84,19)" fg:x="1616" fg:w="31"/><text x="29.5785%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (30 samples, 0.54%)</title><rect x="29.3466%" y="293" width="0.5445%" height="15" fill="rgb(243,152,39)" fg:x="1617" fg:w="30"/><text x="29.5966%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="29.8185%" y="277" width="0.0726%" height="15" fill="rgb(234,160,15)" fg:x="1643" fg:w="4"/><text x="30.0685%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.69%)</title><rect x="29.2196%" y="325" width="0.6897%" height="15" fill="rgb(237,34,20)" fg:x="1610" fg:w="38"/><text x="29.4696%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="29.8911%" y="309" width="0.0181%" height="15" fill="rgb(229,97,13)" fg:x="1647" fg:w="1"/><text x="30.1411%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="29.9274%" y="197" width="0.0363%" height="15" fill="rgb(234,71,50)" fg:x="1649" fg:w="2"/><text x="30.1774%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="29.9274%" y="181" width="0.0363%" height="15" fill="rgb(253,155,4)" fg:x="1649" fg:w="2"/><text x="30.1774%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="29.9274%" y="165" width="0.0363%" height="15" fill="rgb(222,185,37)" fg:x="1649" fg:w="2"/><text x="30.1774%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="29.9274%" y="149" width="0.0363%" height="15" fill="rgb(251,177,13)" fg:x="1649" fg:w="2"/><text x="30.1774%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="29.9274%" y="213" width="0.0544%" height="15" fill="rgb(250,179,40)" fg:x="1649" fg:w="3"/><text x="30.1774%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="29.9637%" y="197" width="0.0181%" height="15" fill="rgb(242,44,2)" fg:x="1651" fg:w="1"/><text x="30.2137%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="29.9819%" y="213" width="0.0181%" height="15" fill="rgb(216,177,13)" fg:x="1652" fg:w="1"/><text x="30.2319%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="29.9274%" y="229" width="0.0907%" height="15" fill="rgb(216,106,43)" fg:x="1649" fg:w="5"/><text x="30.1774%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="30.0000%" y="213" width="0.0181%" height="15" fill="rgb(216,183,2)" fg:x="1653" fg:w="1"/><text x="30.2500%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="29.9274%" y="245" width="0.1270%" height="15" fill="rgb(249,75,3)" fg:x="1649" fg:w="7"/><text x="30.1774%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="30.0181%" y="229" width="0.0363%" height="15" fill="rgb(219,67,39)" fg:x="1654" fg:w="2"/><text x="30.2681%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="30.0544%" y="245" width="0.0181%" height="15" fill="rgb(253,228,2)" fg:x="1656" fg:w="1"/><text x="30.3044%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="29.9274%" y="261" width="0.1815%" height="15" fill="rgb(235,138,27)" fg:x="1649" fg:w="10"/><text x="30.1774%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="30.0726%" y="245" width="0.0363%" height="15" fill="rgb(236,97,51)" fg:x="1657" fg:w="2"/><text x="30.3226%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.22%)</title><rect x="29.9274%" y="309" width="0.2178%" height="15" fill="rgb(240,80,30)" fg:x="1649" fg:w="12"/><text x="30.1774%" y="319.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (12 samples, 0.22%)</title><rect x="29.9274%" y="293" width="0.2178%" height="15" fill="rgb(230,178,19)" fg:x="1649" fg:w="12"/><text x="30.1774%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.22%)</title><rect x="29.9274%" y="277" width="0.2178%" height="15" fill="rgb(210,190,27)" fg:x="1649" fg:w="12"/><text x="30.1774%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="30.1089%" y="261" width="0.0363%" height="15" fill="rgb(222,107,31)" fg:x="1659" fg:w="2"/><text x="30.3589%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="30.1452%" y="245" width="0.0181%" height="15" fill="rgb(216,127,34)" fg:x="1661" fg:w="1"/><text x="30.3952%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="30.1452%" y="229" width="0.0181%" height="15" fill="rgb(234,116,52)" fg:x="1661" fg:w="1"/><text x="30.3952%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="30.1452%" y="213" width="0.0181%" height="15" fill="rgb(222,124,15)" fg:x="1661" fg:w="1"/><text x="30.3952%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="30.1452%" y="261" width="0.0363%" height="15" fill="rgb(231,179,28)" fg:x="1661" fg:w="2"/><text x="30.3952%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="30.1633%" y="245" width="0.0181%" height="15" fill="rgb(226,93,45)" fg:x="1662" fg:w="1"/><text x="30.4133%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="30.1452%" y="277" width="0.0544%" height="15" fill="rgb(215,8,51)" fg:x="1661" fg:w="3"/><text x="30.3952%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="30.1815%" y="261" width="0.0181%" height="15" fill="rgb(223,106,5)" fg:x="1663" fg:w="1"/><text x="30.4315%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.31%)</title><rect x="29.9093%" y="325" width="0.3085%" height="15" fill="rgb(250,191,5)" fg:x="1648" fg:w="17"/><text x="30.1593%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="30.1452%" y="309" width="0.0726%" height="15" fill="rgb(242,132,44)" fg:x="1661" fg:w="4"/><text x="30.3952%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="30.1452%" y="293" width="0.0726%" height="15" fill="rgb(251,152,29)" fg:x="1661" fg:w="4"/><text x="30.3952%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="30.1996%" y="277" width="0.0181%" height="15" fill="rgb(218,179,5)" fg:x="1664" fg:w="1"/><text x="30.4496%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="30.2541%" y="309" width="0.0181%" height="15" fill="rgb(227,67,19)" fg:x="1667" fg:w="1"/><text x="30.5041%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="30.2722%" y="277" width="0.0181%" height="15" fill="rgb(233,119,31)" fg:x="1668" fg:w="1"/><text x="30.5222%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.04%)</title><rect x="30.2722%" y="309" width="0.0363%" height="15" fill="rgb(241,120,22)" fg:x="1668" fg:w="2"/><text x="30.5222%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.04%)</title><rect x="30.2722%" y="293" width="0.0363%" height="15" fill="rgb(224,102,30)" fg:x="1668" fg:w="2"/><text x="30.5222%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="30.2904%" y="277" width="0.0181%" height="15" fill="rgb(210,164,37)" fg:x="1669" fg:w="1"/><text x="30.5404%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="30.4900%" y="277" width="0.0181%" height="15" fill="rgb(226,191,16)" fg:x="1680" fg:w="1"/><text x="30.7400%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="30.5082%" y="245" width="0.0181%" height="15" fill="rgb(214,40,45)" fg:x="1681" fg:w="1"/><text x="30.7582%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="30.5082%" y="277" width="0.0363%" height="15" fill="rgb(244,29,26)" fg:x="1681" fg:w="2"/><text x="30.7582%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="30.5082%" y="261" width="0.0363%" height="15" fill="rgb(216,16,5)" fg:x="1681" fg:w="2"/><text x="30.7582%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="30.5263%" y="245" width="0.0181%" height="15" fill="rgb(249,76,35)" fg:x="1682" fg:w="1"/><text x="30.7763%" y="255.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.34%)</title><rect x="30.2178%" y="325" width="0.3448%" height="15" fill="rgb(207,11,44)" fg:x="1665" fg:w="19"/><text x="30.4678%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.25%)</title><rect x="30.3085%" y="309" width="0.2541%" height="15" fill="rgb(228,190,49)" fg:x="1670" fg:w="14"/><text x="30.5585%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.11%)</title><rect x="30.4537%" y="293" width="0.1089%" height="15" fill="rgb(214,173,12)" fg:x="1678" fg:w="6"/><text x="30.7037%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="30.5445%" y="277" width="0.0181%" height="15" fill="rgb(218,26,35)" fg:x="1683" fg:w="1"/><text x="30.7945%" y="287.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="30.5626%" y="325" width="0.0181%" height="15" fill="rgb(220,200,19)" fg:x="1684" fg:w="1"/><text x="30.8126%" y="335.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.07%)</title><rect x="30.5808%" y="325" width="0.0726%" height="15" fill="rgb(239,95,49)" fg:x="1685" fg:w="4"/><text x="30.8308%" y="335.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="30.6534%" y="325" width="0.0181%" height="15" fill="rgb(235,85,53)" fg:x="1689" fg:w="1"/><text x="30.9034%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="30.6715%" y="293" width="0.0363%" height="15" fill="rgb(233,133,31)" fg:x="1690" fg:w="2"/><text x="30.9215%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="30.6715%" y="277" width="0.0363%" height="15" fill="rgb(218,25,20)" fg:x="1690" fg:w="2"/><text x="30.9215%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="30.6715%" y="261" width="0.0363%" height="15" fill="rgb(252,210,38)" fg:x="1690" fg:w="2"/><text x="30.9215%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="30.6715%" y="325" width="0.0726%" height="15" fill="rgb(242,134,21)" fg:x="1690" fg:w="4"/><text x="30.9215%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="30.6715%" y="309" width="0.0726%" height="15" fill="rgb(213,28,48)" fg:x="1690" fg:w="4"/><text x="30.9215%" y="319.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="30.7078%" y="293" width="0.0363%" height="15" fill="rgb(250,196,2)" fg:x="1692" fg:w="2"/><text x="30.9578%" y="303.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="30.7260%" y="277" width="0.0181%" height="15" fill="rgb(227,5,17)" fg:x="1693" fg:w="1"/><text x="30.9760%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddOr (1 samples, 0.02%)</title><rect x="30.7441%" y="325" width="0.0181%" height="15" fill="rgb(221,226,24)" fg:x="1694" fg:w="1"/><text x="30.9941%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="30.7623%" y="325" width="0.0181%" height="15" fill="rgb(211,5,48)" fg:x="1695" fg:w="1"/><text x="31.0123%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="30.7804%" y="325" width="0.0181%" height="15" fill="rgb(219,150,6)" fg:x="1696" fg:w="1"/><text x="31.0304%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="30.8711%" y="309" width="0.0181%" height="15" fill="rgb(251,46,16)" fg:x="1701" fg:w="1"/><text x="31.1211%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.05%)</title><rect x="30.8893%" y="309" width="0.0544%" height="15" fill="rgb(220,204,40)" fg:x="1702" fg:w="3"/><text x="31.1393%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="30.9437%" y="309" width="0.0181%" height="15" fill="rgb(211,85,2)" fg:x="1705" fg:w="1"/><text x="31.1937%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.0708%" y="213" width="0.0181%" height="15" fill="rgb(229,17,7)" fg:x="1712" fg:w="1"/><text x="31.3208%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.0708%" y="197" width="0.0181%" height="15" fill="rgb(239,72,28)" fg:x="1712" fg:w="1"/><text x="31.3208%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.0708%" y="181" width="0.0181%" height="15" fill="rgb(230,47,54)" fg:x="1712" fg:w="1"/><text x="31.3208%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="31.0708%" y="229" width="0.0363%" height="15" fill="rgb(214,50,8)" fg:x="1712" fg:w="2"/><text x="31.3208%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.0889%" y="213" width="0.0181%" height="15" fill="rgb(216,198,43)" fg:x="1713" fg:w="1"/><text x="31.3389%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="31.0526%" y="245" width="0.0726%" height="15" fill="rgb(234,20,35)" fg:x="1711" fg:w="4"/><text x="31.3026%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.1071%" y="229" width="0.0181%" height="15" fill="rgb(254,45,19)" fg:x="1714" fg:w="1"/><text x="31.3571%" y="239.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="31.1071%" y="213" width="0.0181%" height="15" fill="rgb(219,14,44)" fg:x="1714" fg:w="1"/><text x="31.3571%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="31.0345%" y="261" width="0.1089%" height="15" fill="rgb(217,220,26)" fg:x="1710" fg:w="6"/><text x="31.2845%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.1252%" y="245" width="0.0181%" height="15" fill="rgb(213,158,28)" fg:x="1715" fg:w="1"/><text x="31.3752%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="31.1434%" y="261" width="0.0181%" height="15" fill="rgb(252,51,52)" fg:x="1716" fg:w="1"/><text x="31.3934%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (14 samples, 0.25%)</title><rect x="30.9982%" y="293" width="0.2541%" height="15" fill="rgb(246,89,16)" fg:x="1708" fg:w="14"/><text x="31.2482%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (14 samples, 0.25%)</title><rect x="30.9982%" y="277" width="0.2541%" height="15" fill="rgb(216,158,49)" fg:x="1708" fg:w="14"/><text x="31.2482%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="31.1615%" y="261" width="0.0907%" height="15" fill="rgb(236,107,19)" fg:x="1717" fg:w="5"/><text x="31.4115%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="31.2523%" y="277" width="0.0181%" height="15" fill="rgb(228,185,30)" fg:x="1722" fg:w="1"/><text x="31.5023%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4 samples, 0.07%)</title><rect x="31.2523%" y="293" width="0.0726%" height="15" fill="rgb(246,134,8)" fg:x="1722" fg:w="4"/><text x="31.5023%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="31.2704%" y="277" width="0.0544%" height="15" fill="rgb(214,143,50)" fg:x="1723" fg:w="3"/><text x="31.5204%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.05%)</title><rect x="31.2704%" y="261" width="0.0544%" height="15" fill="rgb(228,75,8)" fg:x="1723" fg:w="3"/><text x="31.5204%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.05%)</title><rect x="31.2704%" y="245" width="0.0544%" height="15" fill="rgb(207,175,4)" fg:x="1723" fg:w="3"/><text x="31.5204%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="31.3067%" y="229" width="0.0181%" height="15" fill="rgb(205,108,24)" fg:x="1725" fg:w="1"/><text x="31.5567%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 0.38%)</title><rect x="30.9619%" y="309" width="0.3811%" height="15" fill="rgb(244,120,49)" fg:x="1706" fg:w="21"/><text x="31.2119%" y="319.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="31.3249%" y="293" width="0.0181%" height="15" fill="rgb(223,47,38)" fg:x="1726" fg:w="1"/><text x="31.5749%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.3612%" y="181" width="0.0181%" height="15" fill="rgb(229,179,11)" fg:x="1728" fg:w="1"/><text x="31.6112%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.3612%" y="165" width="0.0181%" height="15" fill="rgb(231,122,1)" fg:x="1728" fg:w="1"/><text x="31.6112%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="31.3612%" y="229" width="0.0363%" height="15" fill="rgb(245,119,9)" fg:x="1728" fg:w="2"/><text x="31.6112%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="31.3612%" y="213" width="0.0363%" height="15" fill="rgb(241,163,25)" fg:x="1728" fg:w="2"/><text x="31.6112%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="31.3612%" y="197" width="0.0363%" height="15" fill="rgb(217,214,3)" fg:x="1728" fg:w="2"/><text x="31.6112%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.3793%" y="181" width="0.0181%" height="15" fill="rgb(240,86,28)" fg:x="1729" fg:w="1"/><text x="31.6293%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="31.3430%" y="245" width="0.0907%" height="15" fill="rgb(215,47,9)" fg:x="1727" fg:w="5"/><text x="31.5930%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="31.3975%" y="229" width="0.0363%" height="15" fill="rgb(252,25,45)" fg:x="1730" fg:w="2"/><text x="31.6475%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheResize (2 samples, 0.04%)</title><rect x="31.3975%" y="213" width="0.0363%" height="15" fill="rgb(251,164,9)" fg:x="1730" fg:w="2"/><text x="31.6475%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.11%)</title><rect x="31.3430%" y="293" width="0.1089%" height="15" fill="rgb(233,194,0)" fg:x="1727" fg:w="6"/><text x="31.5930%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.11%)</title><rect x="31.3430%" y="277" width="0.1089%" height="15" fill="rgb(249,111,24)" fg:x="1727" fg:w="6"/><text x="31.5930%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="31.3430%" y="261" width="0.1089%" height="15" fill="rgb(250,223,3)" fg:x="1727" fg:w="6"/><text x="31.5930%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.4338%" y="245" width="0.0181%" height="15" fill="rgb(236,178,37)" fg:x="1732" fg:w="1"/><text x="31.6838%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.4882%" y="229" width="0.0181%" height="15" fill="rgb(241,158,50)" fg:x="1735" fg:w="1"/><text x="31.7382%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="31.4882%" y="213" width="0.0181%" height="15" fill="rgb(213,121,41)" fg:x="1735" fg:w="1"/><text x="31.7382%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="31.4882%" y="197" width="0.0181%" height="15" fill="rgb(240,92,3)" fg:x="1735" fg:w="1"/><text x="31.7382%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="31.5064%" y="229" width="0.0181%" height="15" fill="rgb(205,123,3)" fg:x="1736" fg:w="1"/><text x="31.7564%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="31.4701%" y="245" width="0.1089%" height="15" fill="rgb(205,97,47)" fg:x="1734" fg:w="6"/><text x="31.7201%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="31.5245%" y="229" width="0.0544%" height="15" fill="rgb(247,152,14)" fg:x="1737" fg:w="3"/><text x="31.7745%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.27%)</title><rect x="31.3430%" y="309" width="0.2722%" height="15" fill="rgb(248,195,53)" fg:x="1727" fg:w="15"/><text x="31.5930%" y="319.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (9 samples, 0.16%)</title><rect x="31.4519%" y="293" width="0.1633%" height="15" fill="rgb(226,201,16)" fg:x="1733" fg:w="9"/><text x="31.7019%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="31.4519%" y="277" width="0.1633%" height="15" fill="rgb(205,98,0)" fg:x="1733" fg:w="9"/><text x="31.7019%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="31.4701%" y="261" width="0.1452%" height="15" fill="rgb(214,191,48)" fg:x="1734" fg:w="8"/><text x="31.7201%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="31.5789%" y="245" width="0.0363%" height="15" fill="rgb(237,112,39)" fg:x="1740" fg:w="2"/><text x="31.8289%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="31.7241%" y="293" width="0.0181%" height="15" fill="rgb(247,203,27)" fg:x="1748" fg:w="1"/><text x="31.9741%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="31.7423%" y="293" width="0.0181%" height="15" fill="rgb(235,124,28)" fg:x="1749" fg:w="1"/><text x="31.9923%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="31.9056%" y="277" width="0.0181%" height="15" fill="rgb(208,207,46)" fg:x="1758" fg:w="1"/><text x="32.1556%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="31.9238%" y="277" width="0.0181%" height="15" fill="rgb(234,176,4)" fg:x="1759" fg:w="1"/><text x="32.1738%" y="287.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="31.9419%" y="277" width="0.0181%" height="15" fill="rgb(230,133,28)" fg:x="1760" fg:w="1"/><text x="32.1919%" y="287.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="31.9601%" y="277" width="0.0181%" height="15" fill="rgb(211,137,40)" fg:x="1761" fg:w="1"/><text x="32.2101%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="32.1416%" y="261" width="0.0181%" height="15" fill="rgb(254,35,13)" fg:x="1771" fg:w="1"/><text x="32.3916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="32.1779%" y="229" width="0.0181%" height="15" fill="rgb(225,49,51)" fg:x="1773" fg:w="1"/><text x="32.4279%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.05%)</title><rect x="32.1597%" y="261" width="0.0544%" height="15" fill="rgb(251,10,15)" fg:x="1772" fg:w="3"/><text x="32.4097%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="32.1779%" y="245" width="0.0363%" height="15" fill="rgb(228,207,15)" fg:x="1773" fg:w="2"/><text x="32.4279%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="32.1960%" y="229" width="0.0181%" height="15" fill="rgb(241,99,19)" fg:x="1774" fg:w="1"/><text x="32.4460%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.47%)</title><rect x="31.7604%" y="293" width="0.4719%" height="15" fill="rgb(207,104,49)" fg:x="1750" fg:w="26"/><text x="32.0104%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.25%)</title><rect x="31.9782%" y="277" width="0.2541%" height="15" fill="rgb(234,99,18)" fg:x="1762" fg:w="14"/><text x="32.2282%" y="287.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="32.2142%" y="261" width="0.0181%" height="15" fill="rgb(213,191,49)" fg:x="1775" fg:w="1"/><text x="32.4642%" y="271.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (35 samples, 0.64%)</title><rect x="31.6152%" y="309" width="0.6352%" height="15" fill="rgb(210,226,19)" fg:x="1742" fg:w="35"/><text x="31.8652%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="32.2323%" y="293" width="0.0181%" height="15" fill="rgb(229,97,18)" fg:x="1776" fg:w="1"/><text x="32.4823%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="32.2323%" y="277" width="0.0181%" height="15" fill="rgb(211,167,15)" fg:x="1776" fg:w="1"/><text x="32.4823%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="32.2323%" y="261" width="0.0181%" height="15" fill="rgb(210,169,34)" fg:x="1776" fg:w="1"/><text x="32.4823%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="32.2323%" y="245" width="0.0181%" height="15" fill="rgb(241,121,31)" fg:x="1776" fg:w="1"/><text x="32.4823%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="32.2323%" y="229" width="0.0181%" height="15" fill="rgb(232,40,11)" fg:x="1776" fg:w="1"/><text x="32.4823%" y="239.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="32.2505%" y="309" width="0.0181%" height="15" fill="rgb(205,86,26)" fg:x="1777" fg:w="1"/><text x="32.5005%" y="319.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.07%)</title><rect x="32.2686%" y="309" width="0.0726%" height="15" fill="rgb(231,126,28)" fg:x="1778" fg:w="4"/><text x="32.5186%" y="319.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="32.3412%" y="309" width="0.0181%" height="15" fill="rgb(219,221,18)" fg:x="1782" fg:w="1"/><text x="32.5912%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="32.3956%" y="245" width="0.0181%" height="15" fill="rgb(211,40,0)" fg:x="1785" fg:w="1"/><text x="32.6456%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="32.3956%" y="229" width="0.0181%" height="15" fill="rgb(239,85,43)" fg:x="1785" fg:w="1"/><text x="32.6456%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="32.3956%" y="213" width="0.0181%" height="15" fill="rgb(231,55,21)" fg:x="1785" fg:w="1"/><text x="32.6456%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="32.3956%" y="197" width="0.0181%" height="15" fill="rgb(225,184,43)" fg:x="1785" fg:w="1"/><text x="32.6456%" y="207.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="32.3956%" y="181" width="0.0181%" height="15" fill="rgb(251,158,41)" fg:x="1785" fg:w="1"/><text x="32.6456%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="32.3956%" y="261" width="0.0544%" height="15" fill="rgb(234,159,37)" fg:x="1785" fg:w="3"/><text x="32.6456%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="32.4138%" y="245" width="0.0363%" height="15" fill="rgb(216,204,22)" fg:x="1786" fg:w="2"/><text x="32.6638%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="32.3956%" y="277" width="0.0726%" height="15" fill="rgb(214,17,3)" fg:x="1785" fg:w="4"/><text x="32.6456%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="32.4501%" y="261" width="0.0181%" height="15" fill="rgb(212,111,17)" fg:x="1788" fg:w="1"/><text x="32.7001%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.15%)</title><rect x="32.3593%" y="309" width="0.1452%" height="15" fill="rgb(221,157,24)" fg:x="1783" fg:w="8"/><text x="32.6093%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="32.3593%" y="293" width="0.1452%" height="15" fill="rgb(252,16,13)" fg:x="1783" fg:w="8"/><text x="32.6093%" y="303.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="32.4682%" y="277" width="0.0363%" height="15" fill="rgb(221,62,2)" fg:x="1789" fg:w="2"/><text x="32.7182%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.05%)</title><rect x="32.6316%" y="293" width="0.0544%" height="15" fill="rgb(247,87,22)" fg:x="1798" fg:w="3"/><text x="32.8816%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.05%)</title><rect x="32.6860%" y="293" width="0.0544%" height="15" fill="rgb(215,73,9)" fg:x="1801" fg:w="3"/><text x="32.9360%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.15%)</title><rect x="32.7405%" y="293" width="0.1452%" height="15" fill="rgb(207,175,33)" fg:x="1804" fg:w="8"/><text x="32.9905%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="32.8857%" y="293" width="0.0181%" height="15" fill="rgb(243,129,54)" fg:x="1812" fg:w="1"/><text x="33.1357%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="32.9038%" y="293" width="0.0181%" height="15" fill="rgb(227,119,45)" fg:x="1813" fg:w="1"/><text x="33.1538%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.04%)</title><rect x="32.9220%" y="293" width="0.0363%" height="15" fill="rgb(205,109,36)" fg:x="1814" fg:w="2"/><text x="33.1720%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.07%)</title><rect x="32.9946%" y="277" width="0.0726%" height="15" fill="rgb(205,6,39)" fg:x="1818" fg:w="4"/><text x="33.2446%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="33.0127%" y="261" width="0.0544%" height="15" fill="rgb(221,32,16)" fg:x="1819" fg:w="3"/><text x="33.2627%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="33.0127%" y="245" width="0.0544%" height="15" fill="rgb(228,144,50)" fg:x="1819" fg:w="3"/><text x="33.2627%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="33.0127%" y="229" width="0.0544%" height="15" fill="rgb(229,201,53)" fg:x="1819" fg:w="3"/><text x="33.2627%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="33.0309%" y="213" width="0.0363%" height="15" fill="rgb(249,153,27)" fg:x="1820" fg:w="2"/><text x="33.2809%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.0490%" y="197" width="0.0181%" height="15" fill="rgb(227,106,25)" fg:x="1821" fg:w="1"/><text x="33.2990%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="33.0672%" y="261" width="0.0181%" height="15" fill="rgb(230,65,29)" fg:x="1822" fg:w="1"/><text x="33.3172%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (7 samples, 0.13%)</title><rect x="33.0672%" y="277" width="0.1270%" height="15" fill="rgb(221,57,46)" fg:x="1822" fg:w="7"/><text x="33.3172%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (6 samples, 0.11%)</title><rect x="33.0853%" y="261" width="0.1089%" height="15" fill="rgb(229,161,17)" fg:x="1823" fg:w="6"/><text x="33.3353%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.11%)</title><rect x="33.0853%" y="245" width="0.1089%" height="15" fill="rgb(222,213,11)" fg:x="1823" fg:w="6"/><text x="33.3353%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.07%)</title><rect x="33.1216%" y="229" width="0.0726%" height="15" fill="rgb(235,35,13)" fg:x="1825" fg:w="4"/><text x="33.3716%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="33.1760%" y="213" width="0.0181%" height="15" fill="rgb(233,158,34)" fg:x="1828" fg:w="1"/><text x="33.4260%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.25%)</title><rect x="32.9583%" y="293" width="0.2541%" height="15" fill="rgb(215,151,48)" fg:x="1816" fg:w="14"/><text x="33.2083%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="33.1942%" y="277" width="0.0181%" height="15" fill="rgb(229,84,14)" fg:x="1829" fg:w="1"/><text x="33.4442%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="33.2305%" y="277" width="0.0181%" height="15" fill="rgb(229,68,14)" fg:x="1831" fg:w="1"/><text x="33.4805%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="33.2305%" y="261" width="0.0181%" height="15" fill="rgb(243,106,26)" fg:x="1831" fg:w="1"/><text x="33.4805%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="33.2668%" y="197" width="0.0181%" height="15" fill="rgb(206,45,38)" fg:x="1833" fg:w="1"/><text x="33.5168%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="33.2668%" y="181" width="0.0181%" height="15" fill="rgb(226,6,15)" fg:x="1833" fg:w="1"/><text x="33.5168%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.2668%" y="165" width="0.0181%" height="15" fill="rgb(232,22,54)" fg:x="1833" fg:w="1"/><text x="33.5168%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="33.2486%" y="213" width="0.0907%" height="15" fill="rgb(229,222,32)" fg:x="1832" fg:w="5"/><text x="33.4986%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="33.2849%" y="197" width="0.0544%" height="15" fill="rgb(228,62,29)" fg:x="1834" fg:w="3"/><text x="33.5349%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.11%)</title><rect x="33.2486%" y="229" width="0.1089%" height="15" fill="rgb(251,103,34)" fg:x="1832" fg:w="6"/><text x="33.4986%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.3394%" y="213" width="0.0181%" height="15" fill="rgb(233,12,30)" fg:x="1837" fg:w="1"/><text x="33.5894%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.13%)</title><rect x="33.2486%" y="277" width="0.1270%" height="15" fill="rgb(238,52,0)" fg:x="1832" fg:w="7"/><text x="33.4986%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.13%)</title><rect x="33.2486%" y="261" width="0.1270%" height="15" fill="rgb(223,98,5)" fg:x="1832" fg:w="7"/><text x="33.4986%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="33.2486%" y="245" width="0.1270%" height="15" fill="rgb(228,75,37)" fg:x="1832" fg:w="7"/><text x="33.4986%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.3575%" y="229" width="0.0181%" height="15" fill="rgb(205,115,49)" fg:x="1838" fg:w="1"/><text x="33.6075%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="33.3938%" y="213" width="0.0181%" height="15" fill="rgb(250,154,43)" fg:x="1840" fg:w="1"/><text x="33.6438%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="33.3938%" y="229" width="0.0363%" height="15" fill="rgb(226,43,29)" fg:x="1840" fg:w="2"/><text x="33.6438%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.4120%" y="213" width="0.0181%" height="15" fill="rgb(249,228,39)" fg:x="1841" fg:w="1"/><text x="33.6620%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="33.3938%" y="245" width="0.0544%" height="15" fill="rgb(216,79,43)" fg:x="1840" fg:w="3"/><text x="33.6438%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.4301%" y="229" width="0.0181%" height="15" fill="rgb(228,95,12)" fg:x="1842" fg:w="1"/><text x="33.6801%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.25%)</title><rect x="33.2123%" y="293" width="0.2541%" height="15" fill="rgb(249,221,15)" fg:x="1830" fg:w="14"/><text x="33.4623%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="33.3757%" y="277" width="0.0907%" height="15" fill="rgb(233,34,13)" fg:x="1839" fg:w="5"/><text x="33.6257%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="33.3757%" y="261" width="0.0907%" height="15" fill="rgb(214,103,39)" fg:x="1839" fg:w="5"/><text x="33.6257%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="33.4483%" y="245" width="0.0181%" height="15" fill="rgb(251,126,39)" fg:x="1843" fg:w="1"/><text x="33.6983%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="33.5209%" y="277" width="0.0181%" height="15" fill="rgb(214,216,36)" fg:x="1847" fg:w="1"/><text x="33.7709%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="33.5390%" y="277" width="0.0181%" height="15" fill="rgb(220,221,8)" fg:x="1848" fg:w="1"/><text x="33.7890%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.04%)</title><rect x="33.6661%" y="261" width="0.0363%" height="15" fill="rgb(240,216,3)" fg:x="1855" fg:w="2"/><text x="33.9161%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="33.8294%" y="245" width="0.0181%" height="15" fill="rgb(232,218,17)" fg:x="1864" fg:w="1"/><text x="34.0794%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="33.8475%" y="245" width="0.0181%" height="15" fill="rgb(229,163,45)" fg:x="1865" fg:w="1"/><text x="34.0975%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.02%)</title><rect x="33.8838%" y="213" width="0.0181%" height="15" fill="rgb(231,110,42)" fg:x="1867" fg:w="1"/><text x="34.1338%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (25 samples, 0.45%)</title><rect x="33.4664%" y="293" width="0.4537%" height="15" fill="rgb(208,170,48)" fg:x="1844" fg:w="25"/><text x="33.7164%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.36%)</title><rect x="33.5572%" y="277" width="0.3630%" height="15" fill="rgb(239,116,25)" fg:x="1849" fg:w="20"/><text x="33.8072%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.22%)</title><rect x="33.7024%" y="261" width="0.2178%" height="15" fill="rgb(219,200,50)" fg:x="1857" fg:w="12"/><text x="33.9524%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.05%)</title><rect x="33.8657%" y="245" width="0.0544%" height="15" fill="rgb(245,200,0)" fg:x="1866" fg:w="3"/><text x="34.1157%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="33.8838%" y="229" width="0.0363%" height="15" fill="rgb(245,119,33)" fg:x="1867" fg:w="2"/><text x="34.1338%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="33.9020%" y="213" width="0.0181%" height="15" fill="rgb(231,125,12)" fg:x="1868" fg:w="1"/><text x="34.1520%" y="223.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="33.9201%" y="293" width="0.0181%" height="15" fill="rgb(216,96,41)" fg:x="1869" fg:w="1"/><text x="34.1701%" y="303.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.04%)</title><rect x="33.9383%" y="293" width="0.0363%" height="15" fill="rgb(248,43,45)" fg:x="1870" fg:w="2"/><text x="34.1883%" y="303.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="33.9746%" y="293" width="0.0363%" height="15" fill="rgb(217,222,7)" fg:x="1872" fg:w="2"/><text x="34.2246%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.0472%" y="229" width="0.0181%" height="15" fill="rgb(233,28,6)" fg:x="1876" fg:w="1"/><text x="34.2972%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.0472%" y="213" width="0.0181%" height="15" fill="rgb(231,218,15)" fg:x="1876" fg:w="1"/><text x="34.2972%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.0472%" y="197" width="0.0181%" height="15" fill="rgb(226,171,48)" fg:x="1876" fg:w="1"/><text x="34.2972%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.0472%" y="181" width="0.0181%" height="15" fill="rgb(235,201,9)" fg:x="1876" fg:w="1"/><text x="34.2972%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="34.0472%" y="261" width="0.0363%" height="15" fill="rgb(217,80,15)" fg:x="1876" fg:w="2"/><text x="34.2972%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="34.0472%" y="245" width="0.0363%" height="15" fill="rgb(219,152,8)" fg:x="1876" fg:w="2"/><text x="34.2972%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.0653%" y="229" width="0.0181%" height="15" fill="rgb(243,107,38)" fg:x="1877" fg:w="1"/><text x="34.3153%" y="239.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="34.0109%" y="293" width="0.0907%" height="15" fill="rgb(231,17,5)" fg:x="1874" fg:w="5"/><text x="34.2609%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="34.0290%" y="277" width="0.0726%" height="15" fill="rgb(209,25,54)" fg:x="1875" fg:w="4"/><text x="34.2790%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.0835%" y="261" width="0.0181%" height="15" fill="rgb(219,0,2)" fg:x="1878" fg:w="1"/><text x="34.3335%" y="271.50"></text></g><g><title>rust-gkat`ahash::random_state::RandomState::from_keys (2 samples, 0.04%)</title><rect x="34.1016%" y="293" width="0.0363%" height="15" fill="rgb(246,9,5)" fg:x="1879" fg:w="2"/><text x="34.3516%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="34.1379%" y="293" width="0.0181%" height="15" fill="rgb(226,159,4)" fg:x="1881" fg:w="1"/><text x="34.3879%" y="303.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="34.1561%" y="293" width="0.0181%" height="15" fill="rgb(219,175,34)" fg:x="1882" fg:w="1"/><text x="34.4061%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="34.3013%" y="277" width="0.0181%" height="15" fill="rgb(236,10,46)" fg:x="1890" fg:w="1"/><text x="34.5513%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="34.3194%" y="277" width="0.0181%" height="15" fill="rgb(240,211,16)" fg:x="1891" fg:w="1"/><text x="34.5694%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.09%)</title><rect x="34.3376%" y="277" width="0.0907%" height="15" fill="rgb(205,3,43)" fg:x="1892" fg:w="5"/><text x="34.5876%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="34.4283%" y="277" width="0.0181%" height="15" fill="rgb(245,7,22)" fg:x="1897" fg:w="1"/><text x="34.6783%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.5191%" y="213" width="0.0181%" height="15" fill="rgb(239,132,32)" fg:x="1902" fg:w="1"/><text x="34.7691%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.5191%" y="197" width="0.0181%" height="15" fill="rgb(228,202,34)" fg:x="1902" fg:w="1"/><text x="34.7691%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.5191%" y="181" width="0.0181%" height="15" fill="rgb(254,200,22)" fg:x="1902" fg:w="1"/><text x="34.7691%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.13%)</title><rect x="34.4646%" y="261" width="0.1270%" height="15" fill="rgb(219,10,39)" fg:x="1899" fg:w="7"/><text x="34.7146%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.13%)</title><rect x="34.4646%" y="245" width="0.1270%" height="15" fill="rgb(226,210,39)" fg:x="1899" fg:w="7"/><text x="34.7146%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="34.5191%" y="229" width="0.0726%" height="15" fill="rgb(208,219,16)" fg:x="1902" fg:w="4"/><text x="34.7691%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.05%)</title><rect x="34.5372%" y="213" width="0.0544%" height="15" fill="rgb(216,158,51)" fg:x="1903" fg:w="3"/><text x="34.7872%" y="223.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (7 samples, 0.13%)</title><rect x="34.5917%" y="261" width="0.1270%" height="15" fill="rgb(233,14,44)" fg:x="1906" fg:w="7"/><text x="34.8417%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (7 samples, 0.13%)</title><rect x="34.5917%" y="245" width="0.1270%" height="15" fill="rgb(237,97,39)" fg:x="1906" fg:w="7"/><text x="34.8417%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.11%)</title><rect x="34.6098%" y="229" width="0.1089%" height="15" fill="rgb(218,198,43)" fg:x="1907" fg:w="6"/><text x="34.8598%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.07%)</title><rect x="34.6461%" y="213" width="0.0726%" height="15" fill="rgb(231,104,20)" fg:x="1909" fg:w="4"/><text x="34.8961%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.04%)</title><rect x="34.6824%" y="197" width="0.0363%" height="15" fill="rgb(254,36,13)" fg:x="1911" fg:w="2"/><text x="34.9324%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.29%)</title><rect x="34.4465%" y="277" width="0.2904%" height="15" fill="rgb(248,14,50)" fg:x="1898" fg:w="16"/><text x="34.6965%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.7187%" y="261" width="0.0181%" height="15" fill="rgb(217,107,29)" fg:x="1913" fg:w="1"/><text x="34.9687%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="34.7368%" y="261" width="0.0181%" height="15" fill="rgb(251,169,33)" fg:x="1914" fg:w="1"/><text x="34.9868%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="34.7368%" y="245" width="0.0181%" height="15" fill="rgb(217,108,32)" fg:x="1914" fg:w="1"/><text x="34.9868%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="34.7368%" y="229" width="0.0181%" height="15" fill="rgb(219,66,42)" fg:x="1914" fg:w="1"/><text x="34.9868%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.7550%" y="197" width="0.0181%" height="15" fill="rgb(206,180,7)" fg:x="1915" fg:w="1"/><text x="35.0050%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.7550%" y="181" width="0.0181%" height="15" fill="rgb(208,226,31)" fg:x="1915" fg:w="1"/><text x="35.0050%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.7550%" y="165" width="0.0181%" height="15" fill="rgb(218,26,49)" fg:x="1915" fg:w="1"/><text x="35.0050%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="34.7550%" y="261" width="0.0363%" height="15" fill="rgb(233,197,48)" fg:x="1915" fg:w="2"/><text x="35.0050%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="34.7550%" y="245" width="0.0363%" height="15" fill="rgb(252,181,51)" fg:x="1915" fg:w="2"/><text x="35.0050%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="34.7550%" y="229" width="0.0363%" height="15" fill="rgb(253,90,19)" fg:x="1915" fg:w="2"/><text x="35.0050%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="34.7550%" y="213" width="0.0363%" height="15" fill="rgb(215,171,30)" fg:x="1915" fg:w="2"/><text x="35.0050%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="34.7731%" y="197" width="0.0181%" height="15" fill="rgb(214,222,9)" fg:x="1916" fg:w="1"/><text x="35.0231%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="34.7368%" y="277" width="0.0726%" height="15" fill="rgb(223,3,22)" fg:x="1914" fg:w="4"/><text x="34.9868%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="34.7913%" y="261" width="0.0181%" height="15" fill="rgb(225,196,46)" fg:x="1917" fg:w="1"/><text x="35.0413%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="34.7913%" y="245" width="0.0181%" height="15" fill="rgb(209,110,37)" fg:x="1917" fg:w="1"/><text x="35.0413%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="34.7913%" y="229" width="0.0181%" height="15" fill="rgb(249,89,12)" fg:x="1917" fg:w="1"/><text x="35.0413%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="34.8276%" y="261" width="0.0181%" height="15" fill="rgb(226,27,33)" fg:x="1919" fg:w="1"/><text x="35.0776%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="34.9546%" y="229" width="0.0181%" height="15" fill="rgb(213,82,22)" fg:x="1926" fg:w="1"/><text x="35.2046%" y="239.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.18%)</title><rect x="34.8094%" y="277" width="0.1815%" height="15" fill="rgb(248,140,0)" fg:x="1918" fg:w="10"/><text x="35.0594%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.15%)</title><rect x="34.8457%" y="261" width="0.1452%" height="15" fill="rgb(228,106,3)" fg:x="1920" fg:w="8"/><text x="35.0957%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.09%)</title><rect x="34.9002%" y="245" width="0.0907%" height="15" fill="rgb(209,23,37)" fg:x="1923" fg:w="5"/><text x="35.1502%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="34.9728%" y="229" width="0.0181%" height="15" fill="rgb(241,93,50)" fg:x="1927" fg:w="1"/><text x="35.2228%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="34.9728%" y="213" width="0.0181%" height="15" fill="rgb(253,46,43)" fg:x="1927" fg:w="1"/><text x="35.2228%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="34.9728%" y="197" width="0.0181%" height="15" fill="rgb(226,206,43)" fg:x="1927" fg:w="1"/><text x="35.2228%" y="207.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="34.9909%" y="277" width="0.0363%" height="15" fill="rgb(217,54,7)" fg:x="1928" fg:w="2"/><text x="35.2409%" y="287.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="35.0272%" y="277" width="0.0181%" height="15" fill="rgb(223,5,52)" fg:x="1930" fg:w="1"/><text x="35.2772%" y="287.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="35.0454%" y="277" width="0.0181%" height="15" fill="rgb(206,52,46)" fg:x="1931" fg:w="1"/><text x="35.2954%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.09%)</title><rect x="35.0635%" y="277" width="0.0907%" height="15" fill="rgb(253,136,11)" fg:x="1932" fg:w="5"/><text x="35.3135%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.07%)</title><rect x="35.0817%" y="261" width="0.0726%" height="15" fill="rgb(208,106,33)" fg:x="1933" fg:w="4"/><text x="35.3317%" y="271.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="35.1543%" y="277" width="0.0181%" height="15" fill="rgb(206,54,4)" fg:x="1937" fg:w="1"/><text x="35.4043%" y="287.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="35.1724%" y="277" width="0.0181%" height="15" fill="rgb(213,3,15)" fg:x="1938" fg:w="1"/><text x="35.4224%" y="287.50"></text></g><g><title>rust-gkat`ahash::random_state::RandomState::from_keys (2 samples, 0.04%)</title><rect x="35.1906%" y="277" width="0.0363%" height="15" fill="rgb(252,211,39)" fg:x="1939" fg:w="2"/><text x="35.4406%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="35.2269%" y="277" width="0.0181%" height="15" fill="rgb(223,6,36)" fg:x="1941" fg:w="1"/><text x="35.4769%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.16%)</title><rect x="35.2450%" y="277" width="0.1633%" height="15" fill="rgb(252,169,45)" fg:x="1942" fg:w="9"/><text x="35.4950%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.11%)</title><rect x="35.2995%" y="261" width="0.1089%" height="15" fill="rgb(212,48,26)" fg:x="1945" fg:w="6"/><text x="35.5495%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.05%)</title><rect x="35.3539%" y="245" width="0.0544%" height="15" fill="rgb(251,102,48)" fg:x="1948" fg:w="3"/><text x="35.6039%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="35.5172%" y="261" width="0.0363%" height="15" fill="rgb(243,208,16)" fg:x="1957" fg:w="2"/><text x="35.7672%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="35.5535%" y="261" width="0.0363%" height="15" fill="rgb(219,96,24)" fg:x="1959" fg:w="2"/><text x="35.8035%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="35.5898%" y="245" width="0.0181%" height="15" fill="rgb(219,33,29)" fg:x="1961" fg:w="1"/><text x="35.8398%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="35.5898%" y="229" width="0.0181%" height="15" fill="rgb(223,176,5)" fg:x="1961" fg:w="1"/><text x="35.8398%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.07%)</title><rect x="35.5898%" y="261" width="0.0726%" height="15" fill="rgb(228,140,14)" fg:x="1961" fg:w="4"/><text x="35.8398%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.05%)</title><rect x="35.6080%" y="245" width="0.0544%" height="15" fill="rgb(217,179,31)" fg:x="1962" fg:w="3"/><text x="35.8580%" y="255.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="35.6080%" y="229" width="0.0544%" height="15" fill="rgb(230,9,30)" fg:x="1962" fg:w="3"/><text x="35.8580%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.05%)</title><rect x="35.6080%" y="213" width="0.0544%" height="15" fill="rgb(230,136,20)" fg:x="1962" fg:w="3"/><text x="35.8580%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.04%)</title><rect x="35.6261%" y="197" width="0.0363%" height="15" fill="rgb(215,210,22)" fg:x="1963" fg:w="2"/><text x="35.8761%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="35.6443%" y="181" width="0.0181%" height="15" fill="rgb(218,43,5)" fg:x="1964" fg:w="1"/><text x="35.8943%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="35.6624%" y="245" width="0.0181%" height="15" fill="rgb(216,11,5)" fg:x="1965" fg:w="1"/><text x="35.9124%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="35.6624%" y="229" width="0.0181%" height="15" fill="rgb(209,82,29)" fg:x="1965" fg:w="1"/><text x="35.9124%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="35.6806%" y="197" width="0.0181%" height="15" fill="rgb(244,115,12)" fg:x="1966" fg:w="1"/><text x="35.9306%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="35.6806%" y="181" width="0.0181%" height="15" fill="rgb(222,82,18)" fg:x="1966" fg:w="1"/><text x="35.9306%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="35.6806%" y="245" width="0.0363%" height="15" fill="rgb(249,227,8)" fg:x="1966" fg:w="2"/><text x="35.9306%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="35.6806%" y="229" width="0.0363%" height="15" fill="rgb(253,141,45)" fg:x="1966" fg:w="2"/><text x="35.9306%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="35.6806%" y="213" width="0.0363%" height="15" fill="rgb(234,184,4)" fg:x="1966" fg:w="2"/><text x="35.9306%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="35.6987%" y="197" width="0.0181%" height="15" fill="rgb(218,194,23)" fg:x="1967" fg:w="1"/><text x="35.9487%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="35.6624%" y="261" width="0.0726%" height="15" fill="rgb(235,66,41)" fg:x="1965" fg:w="4"/><text x="35.9124%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="35.7169%" y="245" width="0.0181%" height="15" fill="rgb(245,217,1)" fg:x="1968" fg:w="1"/><text x="35.9669%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="35.7169%" y="229" width="0.0181%" height="15" fill="rgb(229,91,1)" fg:x="1968" fg:w="1"/><text x="35.9669%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="35.7169%" y="213" width="0.0181%" height="15" fill="rgb(207,101,30)" fg:x="1968" fg:w="1"/><text x="35.9669%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="35.7169%" y="197" width="0.0181%" height="15" fill="rgb(223,82,49)" fg:x="1968" fg:w="1"/><text x="35.9669%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="35.7350%" y="245" width="0.0181%" height="15" fill="rgb(218,167,17)" fg:x="1969" fg:w="1"/><text x="35.9850%" y="255.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.09%)</title><rect x="35.7350%" y="261" width="0.0907%" height="15" fill="rgb(208,103,14)" fg:x="1969" fg:w="5"/><text x="35.9850%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.07%)</title><rect x="35.7532%" y="245" width="0.0726%" height="15" fill="rgb(238,20,8)" fg:x="1970" fg:w="4"/><text x="36.0032%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.05%)</title><rect x="35.7713%" y="229" width="0.0544%" height="15" fill="rgb(218,80,54)" fg:x="1971" fg:w="3"/><text x="36.0213%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="35.8076%" y="213" width="0.0181%" height="15" fill="rgb(240,144,17)" fg:x="1973" fg:w="1"/><text x="36.0576%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="35.8076%" y="197" width="0.0181%" height="15" fill="rgb(245,27,50)" fg:x="1973" fg:w="1"/><text x="36.0576%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="35.8076%" y="181" width="0.0181%" height="15" fill="rgb(251,51,7)" fg:x="1973" fg:w="1"/><text x="36.0576%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.04%)</title><rect x="35.8258%" y="261" width="0.0363%" height="15" fill="rgb(245,217,29)" fg:x="1974" fg:w="2"/><text x="36.0758%" y="271.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="35.8621%" y="261" width="0.0181%" height="15" fill="rgb(221,176,29)" fg:x="1976" fg:w="1"/><text x="36.1121%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="35.8802%" y="261" width="0.0181%" height="15" fill="rgb(212,180,24)" fg:x="1977" fg:w="1"/><text x="36.1302%" y="271.50"></text></g><g><title>rust-gkat`__rdl_dealloc (1 samples, 0.02%)</title><rect x="35.8984%" y="261" width="0.0181%" height="15" fill="rgb(254,24,2)" fg:x="1978" fg:w="1"/><text x="36.1484%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="35.9347%" y="245" width="0.0181%" height="15" fill="rgb(230,100,2)" fg:x="1980" fg:w="1"/><text x="36.1847%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.07%)</title><rect x="35.9165%" y="261" width="0.0726%" height="15" fill="rgb(219,142,25)" fg:x="1979" fg:w="4"/><text x="36.1665%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="35.9528%" y="245" width="0.0363%" height="15" fill="rgb(240,73,43)" fg:x="1981" fg:w="2"/><text x="36.2028%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="35.9528%" y="229" width="0.0363%" height="15" fill="rgb(214,114,15)" fg:x="1981" fg:w="2"/><text x="36.2028%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="36.0073%" y="245" width="0.0181%" height="15" fill="rgb(207,130,4)" fg:x="1984" fg:w="1"/><text x="36.2573%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.07%)</title><rect x="36.0254%" y="245" width="0.0726%" height="15" fill="rgb(221,25,40)" fg:x="1985" fg:w="4"/><text x="36.2754%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="36.0980%" y="245" width="0.0181%" height="15" fill="rgb(241,184,7)" fg:x="1989" fg:w="1"/><text x="36.3480%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="36.0980%" y="229" width="0.0181%" height="15" fill="rgb(235,159,4)" fg:x="1989" fg:w="1"/><text x="36.3480%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="36.0980%" y="213" width="0.0181%" height="15" fill="rgb(214,87,48)" fg:x="1989" fg:w="1"/><text x="36.3480%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="36.0980%" y="197" width="0.0181%" height="15" fill="rgb(246,198,24)" fg:x="1989" fg:w="1"/><text x="36.3480%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="36.0980%" y="181" width="0.0181%" height="15" fill="rgb(209,66,40)" fg:x="1989" fg:w="1"/><text x="36.3480%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="36.1162%" y="229" width="0.0363%" height="15" fill="rgb(233,147,39)" fg:x="1990" fg:w="2"/><text x="36.3662%" y="239.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.05%)</title><rect x="36.1162%" y="245" width="0.0544%" height="15" fill="rgb(231,145,52)" fg:x="1990" fg:w="3"/><text x="36.3662%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="36.1525%" y="229" width="0.0181%" height="15" fill="rgb(206,20,26)" fg:x="1992" fg:w="1"/><text x="36.4025%" y="239.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="36.1706%" y="229" width="0.0181%" height="15" fill="rgb(238,220,4)" fg:x="1993" fg:w="1"/><text x="36.4206%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.07%)</title><rect x="36.1706%" y="245" width="0.0726%" height="15" fill="rgb(252,195,42)" fg:x="1993" fg:w="4"/><text x="36.4206%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.05%)</title><rect x="36.1887%" y="229" width="0.0544%" height="15" fill="rgb(209,10,6)" fg:x="1994" fg:w="3"/><text x="36.4387%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="36.2069%" y="213" width="0.0363%" height="15" fill="rgb(229,3,52)" fg:x="1995" fg:w="2"/><text x="36.4569%" y="223.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="36.2432%" y="245" width="0.0181%" height="15" fill="rgb(253,49,37)" fg:x="1997" fg:w="1"/><text x="36.4932%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (17 samples, 0.31%)</title><rect x="35.9891%" y="261" width="0.3085%" height="15" fill="rgb(240,103,49)" fg:x="1983" fg:w="17"/><text x="36.2391%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (2 samples, 0.04%)</title><rect x="36.2613%" y="245" width="0.0363%" height="15" fill="rgb(250,182,30)" fg:x="1998" fg:w="2"/><text x="36.5113%" y="255.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="36.2795%" y="229" width="0.0181%" height="15" fill="rgb(248,8,30)" fg:x="1999" fg:w="1"/><text x="36.5295%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (118 samples, 2.14%)</title><rect x="34.1742%" y="293" width="2.1416%" height="15" fill="rgb(237,120,30)" fg:x="1883" fg:w="118"/><text x="34.4242%" y="303.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (50 samples, 0.91%)</title><rect x="35.4083%" y="277" width="0.9074%" height="15" fill="rgb(221,146,34)" fg:x="1951" fg:w="50"/><text x="35.6583%" y="287.50"></text></g><g><title>rust-gkat`stacker::remaining_stack (1 samples, 0.02%)</title><rect x="36.2976%" y="261" width="0.0181%" height="15" fill="rgb(242,55,13)" fg:x="2000" fg:w="1"/><text x="36.5476%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (654 samples, 11.87%)</title><rect x="24.4646%" y="389" width="11.8693%" height="15" fill="rgb(242,112,31)" fg:x="1348" fg:w="654"/><text x="24.7146%" y="399.50">rust-gkat`rust_gka..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (583 samples, 10.58%)</title><rect x="25.7532%" y="373" width="10.5808%" height="15" fill="rgb(249,192,27)" fg:x="1419" fg:w="583"/><text x="26.0032%" y="383.50">rust-gkat`rust_..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (488 samples, 8.86%)</title><rect x="27.4773%" y="357" width="8.8566%" height="15" fill="rgb(208,204,44)" fg:x="1514" fg:w="488"/><text x="27.7273%" y="367.50">rust-gkat`rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (400 samples, 7.26%)</title><rect x="29.0744%" y="341" width="7.2595%" height="15" fill="rgb(208,93,54)" fg:x="1602" fg:w="400"/><text x="29.3244%" y="351.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (305 samples, 5.54%)</title><rect x="30.7985%" y="325" width="5.5354%" height="15" fill="rgb(242,1,31)" fg:x="1697" fg:w="305"/><text x="31.0485%" y="335.50">rust-gk..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (211 samples, 3.83%)</title><rect x="32.5045%" y="309" width="3.8294%" height="15" fill="rgb(241,83,25)" fg:x="1791" fg:w="211"/><text x="32.7545%" y="319.50">rust..</text></g><g><title>rust-gkat`rust_psm_stack_pointer (1 samples, 0.02%)</title><rect x="36.3158%" y="293" width="0.0181%" height="15" fill="rgb(205,169,50)" fg:x="2001" fg:w="1"/><text x="36.5658%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_automaton (1,807 samples, 32.79%)</title><rect x="3.5572%" y="613" width="32.7949%" height="15" fill="rgb(239,186,37)" fg:x="196" fg:w="1807"/><text x="3.8072%" y="623.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,805 samples, 32.76%)</title><rect x="3.5935%" y="597" width="32.7586%" height="15" fill="rgb(205,221,10)" fg:x="198" fg:w="1805"/><text x="3.8435%" y="607.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,662 samples, 30.16%)</title><rect x="6.1887%" y="581" width="30.1633%" height="15" fill="rgb(218,196,15)" fg:x="341" fg:w="1662"/><text x="6.4387%" y="591.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl r..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,562 samples, 28.35%)</title><rect x="8.0036%" y="565" width="28.3485%" height="15" fill="rgb(218,196,35)" fg:x="441" fg:w="1562"/><text x="8.2536%" y="575.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;imp..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,506 samples, 27.33%)</title><rect x="9.0200%" y="549" width="27.3321%" height="15" fill="rgb(233,63,24)" fg:x="497" fg:w="1506"/><text x="9.2700%" y="559.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;i..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,360 samples, 24.68%)</title><rect x="11.6697%" y="533" width="24.6824%" height="15" fill="rgb(225,8,4)" fg:x="643" fg:w="1360"/><text x="11.9197%" y="543.50">rust-gkat`rust_gkat::kernel2::automaton..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,280 samples, 23.23%)</title><rect x="13.1216%" y="517" width="23.2305%" height="15" fill="rgb(234,105,35)" fg:x="723" fg:w="1280"/><text x="13.3716%" y="527.50">rust-gkat`rust_gkat::kernel2::automat..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,151 samples, 20.89%)</title><rect x="15.4628%" y="501" width="20.8893%" height="15" fill="rgb(236,21,32)" fg:x="852" fg:w="1151"/><text x="15.7128%" y="511.50">rust-gkat`rust_gkat::kernel2::aut..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (1,056 samples, 19.17%)</title><rect x="17.1869%" y="485" width="19.1652%" height="15" fill="rgb(228,109,6)" fg:x="947" fg:w="1056"/><text x="17.4369%" y="495.50">rust-gkat`rust_gkat::kernel2::..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (983 samples, 17.84%)</title><rect x="18.5118%" y="469" width="17.8403%" height="15" fill="rgb(229,215,31)" fg:x="1020" fg:w="983"/><text x="18.7618%" y="479.50">rust-gkat`rust_gkat::kernel2..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (912 samples, 16.55%)</title><rect x="19.8004%" y="453" width="16.5517%" height="15" fill="rgb(221,52,54)" fg:x="1091" fg:w="912"/><text x="20.0504%" y="463.50">rust-gkat`rust_gkat::kerne..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (860 samples, 15.61%)</title><rect x="20.7441%" y="437" width="15.6080%" height="15" fill="rgb(252,129,43)" fg:x="1143" fg:w="860"/><text x="20.9941%" y="447.50">rust-gkat`rust_gkat::ker..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (792 samples, 14.37%)</title><rect x="21.9782%" y="421" width="14.3739%" height="15" fill="rgb(248,183,27)" fg:x="1211" fg:w="792"/><text x="22.2282%" y="431.50">rust-gkat`rust_gkat::k..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::mk_raw (719 samples, 13.05%)</title><rect x="23.3031%" y="405" width="13.0490%" height="15" fill="rgb(250,0,22)" fg:x="1284" fg:w="719"/><text x="23.5531%" y="415.50">rust-gkat`rust_gkat:..</text></g><g><title>rust-gkat`stacker::remaining_stack (1 samples, 0.02%)</title><rect x="36.3339%" y="389" width="0.0181%" height="15" fill="rgb(213,166,10)" fg:x="2002" fg:w="1"/><text x="36.5839%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.09%)</title><rect x="36.6969%" y="597" width="0.0907%" height="15" fill="rgb(207,163,36)" fg:x="2022" fg:w="5"/><text x="36.9469%" y="607.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (91 samples, 1.65%)</title><rect x="36.7877%" y="597" width="1.6515%" height="15" fill="rgb(208,122,22)" fg:x="2027" fg:w="91"/><text x="37.0377%" y="607.50"></text></g><g><title>rust-gkat`Cudd_Ref (17 samples, 0.31%)</title><rect x="38.4392%" y="597" width="0.3085%" height="15" fill="rgb(207,104,49)" fg:x="2118" fg:w="17"/><text x="38.6892%" y="607.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="53.8475%" y="53" width="0.0181%" height="15" fill="rgb(248,211,50)" fg:x="2967" fg:w="1"/><text x="54.0975%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.05%)</title><rect x="53.8475%" y="69" width="0.0544%" height="15" fill="rgb(217,13,45)" fg:x="2967" fg:w="3"/><text x="54.0975%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="53.8657%" y="53" width="0.0363%" height="15" fill="rgb(211,216,49)" fg:x="2968" fg:w="2"/><text x="54.1157%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.09%)</title><rect x="53.8294%" y="85" width="0.0907%" height="15" fill="rgb(221,58,53)" fg:x="2966" fg:w="5"/><text x="54.0794%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="53.9020%" y="69" width="0.0181%" height="15" fill="rgb(220,112,41)" fg:x="2970" fg:w="1"/><text x="54.1520%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="53.8113%" y="101" width="0.1452%" height="15" fill="rgb(236,38,28)" fg:x="2965" fg:w="8"/><text x="54.0613%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="53.9201%" y="85" width="0.0363%" height="15" fill="rgb(227,195,22)" fg:x="2971" fg:w="2"/><text x="54.1701%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.18%)</title><rect x="53.8113%" y="117" width="0.1815%" height="15" fill="rgb(214,55,33)" fg:x="2965" fg:w="10"/><text x="54.0613%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="53.9564%" y="101" width="0.0363%" height="15" fill="rgb(248,80,13)" fg:x="2973" fg:w="2"/><text x="54.2064%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="53.9927%" y="117" width="0.0363%" height="15" fill="rgb(238,52,6)" fg:x="2975" fg:w="2"/><text x="54.2427%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.45%)</title><rect x="53.6842%" y="133" width="0.4537%" height="15" fill="rgb(224,198,47)" fg:x="2958" fg:w="25"/><text x="53.9342%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (6 samples, 0.11%)</title><rect x="54.0290%" y="117" width="0.1089%" height="15" fill="rgb(233,171,20)" fg:x="2977" fg:w="6"/><text x="54.2790%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="54.1379%" y="133" width="0.0181%" height="15" fill="rgb(241,30,25)" fg:x="2983" fg:w="1"/><text x="54.3879%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (5 samples, 0.09%)</title><rect x="54.1561%" y="133" width="0.0907%" height="15" fill="rgb(207,171,38)" fg:x="2984" fg:w="5"/><text x="54.4061%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (37 samples, 0.67%)</title><rect x="53.5935%" y="149" width="0.6715%" height="15" fill="rgb(234,70,1)" fg:x="2953" fg:w="37"/><text x="53.8435%" y="159.50"></text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="54.2468%" y="133" width="0.0181%" height="15" fill="rgb(232,178,18)" fg:x="2989" fg:w="1"/><text x="54.4968%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="54.2468%" y="117" width="0.0181%" height="15" fill="rgb(241,78,40)" fg:x="2989" fg:w="1"/><text x="54.4968%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.16%)</title><rect x="54.2650%" y="149" width="0.1633%" height="15" fill="rgb(222,35,25)" fg:x="2990" fg:w="9"/><text x="54.5150%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (51 samples, 0.93%)</title><rect x="53.5209%" y="165" width="0.9256%" height="15" fill="rgb(207,92,16)" fg:x="2949" fg:w="51"/><text x="53.7709%" y="175.50"></text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="54.4283%" y="149" width="0.0181%" height="15" fill="rgb(216,59,51)" fg:x="2999" fg:w="1"/><text x="54.6783%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="54.4283%" y="133" width="0.0181%" height="15" fill="rgb(213,80,28)" fg:x="2999" fg:w="1"/><text x="54.6783%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="54.4465%" y="165" width="0.0181%" height="15" fill="rgb(220,93,7)" fg:x="3000" fg:w="1"/><text x="54.6965%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (77 samples, 1.40%)</title><rect x="53.3031%" y="181" width="1.3975%" height="15" fill="rgb(225,24,44)" fg:x="2937" fg:w="77"/><text x="53.5531%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (13 samples, 0.24%)</title><rect x="54.4646%" y="165" width="0.2359%" height="15" fill="rgb(243,74,40)" fg:x="3001" fg:w="13"/><text x="54.7146%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (98 samples, 1.78%)</title><rect x="53.0853%" y="197" width="1.7786%" height="15" fill="rgb(228,39,7)" fg:x="2925" fg:w="98"/><text x="53.3353%" y="207.50">r..</text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.16%)</title><rect x="54.7005%" y="181" width="0.1633%" height="15" fill="rgb(227,79,8)" fg:x="3014" fg:w="9"/><text x="54.9505%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (3 samples, 0.05%)</title><rect x="54.8639%" y="197" width="0.0544%" height="15" fill="rgb(236,58,11)" fg:x="3023" fg:w="3"/><text x="55.1139%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (18 samples, 0.33%)</title><rect x="54.9183%" y="197" width="0.3267%" height="15" fill="rgb(249,63,35)" fg:x="3026" fg:w="18"/><text x="55.1683%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (144 samples, 2.61%)</title><rect x="52.6497%" y="213" width="2.6134%" height="15" fill="rgb(252,114,16)" fg:x="2901" fg:w="144"/><text x="52.8997%" y="223.50">ru..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="55.2450%" y="197" width="0.0181%" height="15" fill="rgb(254,151,24)" fg:x="3044" fg:w="1"/><text x="55.4950%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="55.2450%" y="181" width="0.0181%" height="15" fill="rgb(253,54,39)" fg:x="3044" fg:w="1"/><text x="55.4950%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="55.2632%" y="213" width="0.0363%" height="15" fill="rgb(243,25,45)" fg:x="3045" fg:w="2"/><text x="55.5132%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (184 samples, 3.34%)</title><rect x="52.3412%" y="229" width="3.3394%" height="15" fill="rgb(234,134,9)" fg:x="2884" fg:w="184"/><text x="52.5912%" y="239.50">rus..</text></g><g><title>rust-gkat`cuddCacheLookup2 (21 samples, 0.38%)</title><rect x="55.2995%" y="213" width="0.3811%" height="15" fill="rgb(227,166,31)" fg:x="3047" fg:w="21"/><text x="55.5495%" y="223.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="55.6806%" y="229" width="0.0726%" height="15" fill="rgb(245,143,41)" fg:x="3068" fg:w="4"/><text x="55.9306%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (33 samples, 0.60%)</title><rect x="55.7532%" y="229" width="0.5989%" height="15" fill="rgb(238,181,32)" fg:x="3072" fg:w="33"/><text x="56.0032%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (248 samples, 4.50%)</title><rect x="51.8693%" y="245" width="4.5009%" height="15" fill="rgb(224,113,18)" fg:x="2858" fg:w="248"/><text x="52.1193%" y="255.50">rust-..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="56.3521%" y="229" width="0.0181%" height="15" fill="rgb(240,229,28)" fg:x="3105" fg:w="1"/><text x="56.6021%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="56.3521%" y="213" width="0.0181%" height="15" fill="rgb(250,185,3)" fg:x="3105" fg:w="1"/><text x="56.6021%" y="223.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="56.3702%" y="245" width="0.0726%" height="15" fill="rgb(212,59,25)" fg:x="3106" fg:w="4"/><text x="56.6202%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (30 samples, 0.54%)</title><rect x="56.4428%" y="245" width="0.5445%" height="15" fill="rgb(221,87,20)" fg:x="3110" fg:w="30"/><text x="56.6928%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (315 samples, 5.72%)</title><rect x="51.2886%" y="261" width="5.7169%" height="15" fill="rgb(213,74,28)" fg:x="2826" fg:w="315"/><text x="51.5386%" y="271.50">rust-gk..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="56.9873%" y="245" width="0.0181%" height="15" fill="rgb(224,132,34)" fg:x="3140" fg:w="1"/><text x="57.2373%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="56.9873%" y="229" width="0.0181%" height="15" fill="rgb(222,101,24)" fg:x="3140" fg:w="1"/><text x="57.2373%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (5 samples, 0.09%)</title><rect x="57.0054%" y="261" width="0.0907%" height="15" fill="rgb(254,142,4)" fg:x="3141" fg:w="5"/><text x="57.2554%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (30 samples, 0.54%)</title><rect x="57.0962%" y="261" width="0.5445%" height="15" fill="rgb(230,229,49)" fg:x="3146" fg:w="30"/><text x="57.3462%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (391 samples, 7.10%)</title><rect x="50.5626%" y="277" width="7.0962%" height="15" fill="rgb(238,70,47)" fg:x="2786" fg:w="391"/><text x="50.8126%" y="287.50">rust-gkat`..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="57.6407%" y="261" width="0.0181%" height="15" fill="rgb(231,160,17)" fg:x="3176" fg:w="1"/><text x="57.8907%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="57.6407%" y="245" width="0.0181%" height="15" fill="rgb(218,68,53)" fg:x="3176" fg:w="1"/><text x="57.8907%" y="255.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="57.6588%" y="277" width="0.0726%" height="15" fill="rgb(236,111,10)" fg:x="3177" fg:w="4"/><text x="57.9088%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (30 samples, 0.54%)</title><rect x="57.7314%" y="277" width="0.5445%" height="15" fill="rgb(224,34,41)" fg:x="3181" fg:w="30"/><text x="57.9814%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (466 samples, 8.46%)</title><rect x="49.8730%" y="293" width="8.4574%" height="15" fill="rgb(241,118,19)" fg:x="2748" fg:w="466"/><text x="50.1230%" y="303.50">rust-gkat`cu..</text></g><g><title>rust-gkat`util_cpu_time (3 samples, 0.05%)</title><rect x="58.2759%" y="277" width="0.0544%" height="15" fill="rgb(238,129,25)" fg:x="3211" fg:w="3"/><text x="58.5259%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (3 samples, 0.05%)</title><rect x="58.2759%" y="261" width="0.0544%" height="15" fill="rgb(238,22,31)" fg:x="3211" fg:w="3"/><text x="58.5259%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (7 samples, 0.13%)</title><rect x="58.3303%" y="293" width="0.1270%" height="15" fill="rgb(222,174,48)" fg:x="3214" fg:w="7"/><text x="58.5803%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (546 samples, 9.91%)</title><rect x="49.0563%" y="309" width="9.9093%" height="15" fill="rgb(206,152,40)" fg:x="2703" fg:w="546"/><text x="49.3063%" y="319.50">rust-gkat`cudd..</text></g><g><title>rust-gkat`cuddCacheLookup2 (28 samples, 0.51%)</title><rect x="58.4574%" y="293" width="0.5082%" height="15" fill="rgb(218,99,54)" fg:x="3221" fg:w="28"/><text x="58.7074%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="58.9655%" y="309" width="0.0181%" height="15" fill="rgb(220,174,26)" fg:x="3249" fg:w="1"/><text x="59.2155%" y="319.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (31 samples, 0.56%)</title><rect x="58.9837%" y="309" width="0.5626%" height="15" fill="rgb(245,116,9)" fg:x="3250" fg:w="31"/><text x="59.2337%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (628 samples, 11.40%)</title><rect x="48.1670%" y="325" width="11.3975%" height="15" fill="rgb(209,72,35)" fg:x="2654" fg:w="628"/><text x="48.4170%" y="335.50">rust-gkat`cuddBdd..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="59.5463%" y="309" width="0.0181%" height="15" fill="rgb(226,126,21)" fg:x="3281" fg:w="1"/><text x="59.7963%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="59.5463%" y="293" width="0.0181%" height="15" fill="rgb(227,192,1)" fg:x="3281" fg:w="1"/><text x="59.7963%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="59.5644%" y="325" width="0.0726%" height="15" fill="rgb(237,180,29)" fg:x="3282" fg:w="4"/><text x="59.8144%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (705 samples, 12.79%)</title><rect x="47.3140%" y="341" width="12.7949%" height="15" fill="rgb(230,197,35)" fg:x="2607" fg:w="705"/><text x="47.5640%" y="351.50">rust-gkat`cuddBddAn..</text></g><g><title>rust-gkat`cuddCacheLookup2 (26 samples, 0.47%)</title><rect x="59.6370%" y="325" width="0.4719%" height="15" fill="rgb(246,193,31)" fg:x="3286" fg:w="26"/><text x="59.8870%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (6 samples, 0.11%)</title><rect x="60.1089%" y="341" width="0.1089%" height="15" fill="rgb(241,36,4)" fg:x="3312" fg:w="6"/><text x="60.3589%" y="351.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (23 samples, 0.42%)</title><rect x="60.2178%" y="341" width="0.4174%" height="15" fill="rgb(241,130,17)" fg:x="3318" fg:w="23"/><text x="60.4678%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (783 samples, 14.21%)</title><rect x="46.4428%" y="357" width="14.2105%" height="15" fill="rgb(206,137,32)" fg:x="2559" fg:w="783"/><text x="46.6928%" y="367.50">rust-gkat`cuddBddAndRe..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="60.6352%" y="341" width="0.0181%" height="15" fill="rgb(237,228,51)" fg:x="3341" fg:w="1"/><text x="60.8852%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="60.6352%" y="325" width="0.0181%" height="15" fill="rgb(243,6,42)" fg:x="3341" fg:w="1"/><text x="60.8852%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (6 samples, 0.11%)</title><rect x="60.6534%" y="357" width="0.1089%" height="15" fill="rgb(251,74,28)" fg:x="3342" fg:w="6"/><text x="60.9034%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (856 samples, 15.54%)</title><rect x="45.6987%" y="373" width="15.5354%" height="15" fill="rgb(218,20,49)" fg:x="2518" fg:w="856"/><text x="45.9487%" y="383.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (26 samples, 0.47%)</title><rect x="60.7623%" y="357" width="0.4719%" height="15" fill="rgb(238,28,14)" fg:x="3348" fg:w="26"/><text x="61.0123%" y="367.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (3 samples, 0.05%)</title><rect x="61.2341%" y="373" width="0.0544%" height="15" fill="rgb(229,40,46)" fg:x="3374" fg:w="3"/><text x="61.4841%" y="383.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (29 samples, 0.53%)</title><rect x="61.2886%" y="373" width="0.5263%" height="15" fill="rgb(244,195,20)" fg:x="3377" fg:w="29"/><text x="61.5386%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (928 samples, 16.84%)</title><rect x="44.9909%" y="389" width="16.8421%" height="15" fill="rgb(253,56,35)" fg:x="2479" fg:w="928"/><text x="45.2409%" y="399.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="61.8149%" y="373" width="0.0181%" height="15" fill="rgb(210,149,44)" fg:x="3406" fg:w="1"/><text x="62.0649%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="61.8149%" y="357" width="0.0181%" height="15" fill="rgb(240,135,12)" fg:x="3406" fg:w="1"/><text x="62.0649%" y="367.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (6 samples, 0.11%)</title><rect x="61.8330%" y="389" width="0.1089%" height="15" fill="rgb(251,24,50)" fg:x="3407" fg:w="6"/><text x="62.0830%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (997 samples, 18.09%)</title><rect x="44.3194%" y="405" width="18.0944%" height="15" fill="rgb(243,200,47)" fg:x="2442" fg:w="997"/><text x="44.5694%" y="415.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (26 samples, 0.47%)</title><rect x="61.9419%" y="389" width="0.4719%" height="15" fill="rgb(224,166,26)" fg:x="3413" fg:w="26"/><text x="62.1919%" y="399.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (3 samples, 0.05%)</title><rect x="62.4138%" y="405" width="0.0544%" height="15" fill="rgb(233,0,47)" fg:x="3439" fg:w="3"/><text x="62.6638%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,054 samples, 19.13%)</title><rect x="43.7024%" y="421" width="19.1289%" height="15" fill="rgb(253,80,5)" fg:x="2408" fg:w="1054"/><text x="43.9524%" y="431.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (20 samples, 0.36%)</title><rect x="62.4682%" y="405" width="0.3630%" height="15" fill="rgb(214,133,25)" fg:x="3442" fg:w="20"/><text x="62.7182%" y="415.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="62.8312%" y="421" width="0.0726%" height="15" fill="rgb(209,27,14)" fg:x="3462" fg:w="4"/><text x="63.0812%" y="431.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (21 samples, 0.38%)</title><rect x="62.9038%" y="421" width="0.3811%" height="15" fill="rgb(219,102,51)" fg:x="3466" fg:w="21"/><text x="63.1538%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,121 samples, 20.34%)</title><rect x="42.9583%" y="437" width="20.3448%" height="15" fill="rgb(237,18,16)" fg:x="2367" fg:w="1121"/><text x="43.2083%" y="447.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="63.2849%" y="421" width="0.0181%" height="15" fill="rgb(241,85,17)" fg:x="3487" fg:w="1"/><text x="63.5349%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="63.2849%" y="405" width="0.0181%" height="15" fill="rgb(236,90,42)" fg:x="3487" fg:w="1"/><text x="63.5349%" y="415.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="63.3031%" y="437" width="0.0363%" height="15" fill="rgb(249,57,21)" fg:x="3488" fg:w="2"/><text x="63.5531%" y="447.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (30 samples, 0.54%)</title><rect x="63.3394%" y="437" width="0.5445%" height="15" fill="rgb(243,12,36)" fg:x="3490" fg:w="30"/><text x="63.5894%" y="447.50"></text></g><g><title>rust-gkat`cuddCacheResize (3 samples, 0.05%)</title><rect x="63.8294%" y="421" width="0.0544%" height="15" fill="rgb(253,128,47)" fg:x="3517" fg:w="3"/><text x="64.0794%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="63.8657%" y="405" width="0.0181%" height="15" fill="rgb(207,33,20)" fg:x="3519" fg:w="1"/><text x="64.1157%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="63.8657%" y="389" width="0.0181%" height="15" fill="rgb(233,215,35)" fg:x="3519" fg:w="1"/><text x="64.1157%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,194 samples, 21.67%)</title><rect x="42.2686%" y="453" width="21.6697%" height="15" fill="rgb(249,188,52)" fg:x="2329" fg:w="1194"/><text x="42.5186%" y="463.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`util_cpu_time (3 samples, 0.05%)</title><rect x="63.8838%" y="437" width="0.0544%" height="15" fill="rgb(225,12,32)" fg:x="3520" fg:w="3"/><text x="64.1338%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (3 samples, 0.05%)</title><rect x="63.8838%" y="421" width="0.0544%" height="15" fill="rgb(247,98,14)" fg:x="3520" fg:w="3"/><text x="64.1338%" y="431.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="63.9383%" y="453" width="0.0363%" height="15" fill="rgb(247,219,48)" fg:x="3523" fg:w="2"/><text x="64.1883%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,247 samples, 22.63%)</title><rect x="41.7423%" y="469" width="22.6316%" height="15" fill="rgb(253,60,48)" fg:x="2300" fg:w="1247"/><text x="41.9923%" y="479.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (22 samples, 0.40%)</title><rect x="63.9746%" y="453" width="0.3993%" height="15" fill="rgb(245,15,52)" fg:x="3525" fg:w="22"/><text x="64.2246%" y="463.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="64.3739%" y="469" width="0.0363%" height="15" fill="rgb(220,133,28)" fg:x="3547" fg:w="2"/><text x="64.6239%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,294 samples, 23.48%)</title><rect x="41.1797%" y="485" width="23.4846%" height="15" fill="rgb(217,180,4)" fg:x="2269" fg:w="1294"/><text x="41.4297%" y="495.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (14 samples, 0.25%)</title><rect x="64.4102%" y="469" width="0.2541%" height="15" fill="rgb(251,24,1)" fg:x="3549" fg:w="14"/><text x="64.6602%" y="479.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="64.6642%" y="485" width="0.0181%" height="15" fill="rgb(212,185,49)" fg:x="3563" fg:w="1"/><text x="64.9142%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,330 samples, 24.14%)</title><rect x="40.7441%" y="501" width="24.1379%" height="15" fill="rgb(215,175,22)" fg:x="2245" fg:w="1330"/><text x="40.9941%" y="511.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (11 samples, 0.20%)</title><rect x="64.6824%" y="485" width="0.1996%" height="15" fill="rgb(250,205,14)" fg:x="3564" fg:w="11"/><text x="64.9324%" y="495.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="64.8820%" y="501" width="0.0363%" height="15" fill="rgb(225,211,22)" fg:x="3575" fg:w="2"/><text x="65.1320%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,362 samples, 24.72%)</title><rect x="40.3630%" y="517" width="24.7187%" height="15" fill="rgb(251,179,42)" fg:x="2224" fg:w="1362"/><text x="40.6130%" y="527.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.16%)</title><rect x="64.9183%" y="501" width="0.1633%" height="15" fill="rgb(208,216,51)" fg:x="3577" fg:w="9"/><text x="65.1683%" y="511.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (3 samples, 0.05%)</title><rect x="65.0817%" y="517" width="0.0544%" height="15" fill="rgb(235,36,11)" fg:x="3586" fg:w="3"/><text x="65.3317%" y="527.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,408 samples, 25.55%)</title><rect x="39.8185%" y="533" width="25.5535%" height="15" fill="rgb(213,189,28)" fg:x="2194" fg:w="1408"/><text x="40.0685%" y="543.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (13 samples, 0.24%)</title><rect x="65.1361%" y="517" width="0.2359%" height="15" fill="rgb(227,203,42)" fg:x="3589" fg:w="13"/><text x="65.3861%" y="527.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (4 samples, 0.07%)</title><rect x="65.3721%" y="533" width="0.0726%" height="15" fill="rgb(244,72,36)" fg:x="3602" fg:w="4"/><text x="65.6221%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,436 samples, 26.06%)</title><rect x="39.5100%" y="549" width="26.0617%" height="15" fill="rgb(213,53,17)" fg:x="2177" fg:w="1436"/><text x="39.7600%" y="559.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (7 samples, 0.13%)</title><rect x="65.4446%" y="533" width="0.1270%" height="15" fill="rgb(207,167,3)" fg:x="3606" fg:w="7"/><text x="65.6946%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,456 samples, 26.42%)</title><rect x="39.2922%" y="565" width="26.4247%" height="15" fill="rgb(216,98,30)" fg:x="2165" fg:w="1456"/><text x="39.5422%" y="575.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (8 samples, 0.15%)</title><rect x="65.5717%" y="549" width="0.1452%" height="15" fill="rgb(236,123,15)" fg:x="3613" fg:w="8"/><text x="65.8217%" y="559.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="65.7169%" y="565" width="0.0181%" height="15" fill="rgb(248,81,50)" fg:x="3621" fg:w="1"/><text x="65.9669%" y="575.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,489 samples, 27.02%)</title><rect x="38.9292%" y="581" width="27.0236%" height="15" fill="rgb(214,120,4)" fg:x="2145" fg:w="1489"/><text x="39.1792%" y="591.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddCacheLookup2 (12 samples, 0.22%)</title><rect x="65.7350%" y="565" width="0.2178%" height="15" fill="rgb(208,179,34)" fg:x="3622" fg:w="12"/><text x="65.9850%" y="575.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="65.9528%" y="581" width="0.0363%" height="15" fill="rgb(227,140,7)" fg:x="3634" fg:w="2"/><text x="66.2028%" y="591.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1,502 samples, 27.26%)</title><rect x="38.7477%" y="597" width="27.2595%" height="15" fill="rgb(214,22,6)" fg:x="2135" fg:w="1502"/><text x="38.9977%" y="607.50">rust-gkat`Cudd_bddAnd</text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="65.9891%" y="581" width="0.0181%" height="15" fill="rgb(207,137,27)" fg:x="3636" fg:w="1"/><text x="66.2391%" y="591.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;disjoint_sets::tree::UnionFindNode&gt; (2 samples, 0.04%)</title><rect x="66.0073%" y="597" width="0.0363%" height="15" fill="rgb(210,8,46)" fg:x="3637" fg:w="2"/><text x="66.2573%" y="607.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="66.0436%" y="597" width="0.1452%" height="15" fill="rgb(240,16,54)" fg:x="3639" fg:w="8"/><text x="66.2936%" y="607.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::equiv (3 samples, 0.05%)</title><rect x="66.1887%" y="597" width="0.0544%" height="15" fill="rgb(211,209,29)" fg:x="3647" fg:w="3"/><text x="66.4387%" y="607.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find (3 samples, 0.05%)</title><rect x="66.1887%" y="581" width="0.0544%" height="15" fill="rgb(226,228,24)" fg:x="3647" fg:w="3"/><text x="66.4387%" y="591.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find (1 samples, 0.02%)</title><rect x="66.2432%" y="597" width="0.0181%" height="15" fill="rgb(222,84,9)" fg:x="3650" fg:w="1"/><text x="66.4932%" y="607.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find_with_rank (2 samples, 0.04%)</title><rect x="66.2613%" y="597" width="0.0363%" height="15" fill="rgb(234,203,30)" fg:x="3651" fg:w="2"/><text x="66.5113%" y="607.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::union (4 samples, 0.07%)</title><rect x="66.2976%" y="597" width="0.0726%" height="15" fill="rgb(238,109,14)" fg:x="3653" fg:w="4"/><text x="66.5476%" y="607.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find_with_rank (4 samples, 0.07%)</title><rect x="66.2976%" y="581" width="0.0726%" height="15" fill="rgb(233,206,34)" fg:x="3653" fg:w="4"/><text x="66.5476%" y="591.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find_with_rank (1 samples, 0.02%)</title><rect x="66.3521%" y="565" width="0.0181%" height="15" fill="rgb(220,167,47)" fg:x="3656" fg:w="1"/><text x="66.6021%" y="575.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="69.3466%" y="213" width="0.0181%" height="15" fill="rgb(238,105,10)" fg:x="3821" fg:w="1"/><text x="69.5966%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="69.7096%" y="53" width="0.0181%" height="15" fill="rgb(213,227,17)" fg:x="3841" fg:w="1"/><text x="69.9596%" y="63.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="69.7096%" y="37" width="0.0181%" height="15" fill="rgb(217,132,38)" fg:x="3841" fg:w="1"/><text x="69.9596%" y="47.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="69.7096%" y="69" width="0.0363%" height="15" fill="rgb(242,146,4)" fg:x="3841" fg:w="2"/><text x="69.9596%" y="79.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="69.7278%" y="53" width="0.0181%" height="15" fill="rgb(212,61,9)" fg:x="3842" fg:w="1"/><text x="69.9778%" y="63.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="69.7459%" y="69" width="0.0181%" height="15" fill="rgb(247,126,22)" fg:x="3843" fg:w="1"/><text x="69.9959%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.15%)</title><rect x="69.7096%" y="85" width="0.1452%" height="15" fill="rgb(220,196,2)" fg:x="3841" fg:w="8"/><text x="69.9596%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="69.7641%" y="69" width="0.0907%" height="15" fill="rgb(208,46,4)" fg:x="3844" fg:w="5"/><text x="70.0141%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="69.8548%" y="85" width="0.0181%" height="15" fill="rgb(252,104,46)" fg:x="3849" fg:w="1"/><text x="70.1048%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.27%)</title><rect x="69.6915%" y="101" width="0.2722%" height="15" fill="rgb(237,152,48)" fg:x="3840" fg:w="15"/><text x="69.9415%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.09%)</title><rect x="69.8730%" y="85" width="0.0907%" height="15" fill="rgb(221,59,37)" fg:x="3850" fg:w="5"/><text x="70.1230%" y="95.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="69.9456%" y="69" width="0.0181%" height="15" fill="rgb(209,202,51)" fg:x="3854" fg:w="1"/><text x="70.1956%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="69.9637%" y="101" width="0.0726%" height="15" fill="rgb(228,81,30)" fg:x="3855" fg:w="4"/><text x="70.2137%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (23 samples, 0.42%)</title><rect x="69.6915%" y="117" width="0.4174%" height="15" fill="rgb(227,42,39)" fg:x="3840" fg:w="23"/><text x="69.9415%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.07%)</title><rect x="70.0363%" y="101" width="0.0726%" height="15" fill="rgb(221,26,2)" fg:x="3859" fg:w="4"/><text x="70.2863%" y="111.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="70.0907%" y="85" width="0.0181%" height="15" fill="rgb(254,61,31)" fg:x="3862" fg:w="1"/><text x="70.3407%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="70.1089%" y="117" width="0.0181%" height="15" fill="rgb(222,173,38)" fg:x="3863" fg:w="1"/><text x="70.3589%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (32 samples, 0.58%)</title><rect x="69.6915%" y="133" width="0.5808%" height="15" fill="rgb(218,50,12)" fg:x="3840" fg:w="32"/><text x="69.9415%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (8 samples, 0.15%)</title><rect x="70.1270%" y="117" width="0.1452%" height="15" fill="rgb(223,88,40)" fg:x="3864" fg:w="8"/><text x="70.3770%" y="127.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="70.2541%" y="101" width="0.0181%" height="15" fill="rgb(237,54,19)" fg:x="3871" fg:w="1"/><text x="70.5041%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (1 samples, 0.02%)</title><rect x="70.2722%" y="133" width="0.0181%" height="15" fill="rgb(251,129,25)" fg:x="3872" fg:w="1"/><text x="70.5222%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (51 samples, 0.93%)</title><rect x="69.6370%" y="149" width="0.9256%" height="15" fill="rgb(238,97,19)" fg:x="3837" fg:w="51"/><text x="69.8870%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (15 samples, 0.27%)</title><rect x="70.2904%" y="133" width="0.2722%" height="15" fill="rgb(240,169,18)" fg:x="3873" fg:w="15"/><text x="70.5404%" y="143.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="70.5263%" y="117" width="0.0363%" height="15" fill="rgb(230,187,49)" fg:x="3886" fg:w="2"/><text x="70.7763%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="70.5626%" y="149" width="0.0726%" height="15" fill="rgb(209,44,26)" fg:x="3888" fg:w="4"/><text x="70.8126%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (74 samples, 1.34%)</title><rect x="69.6189%" y="165" width="1.3430%" height="15" fill="rgb(244,0,6)" fg:x="3836" fg:w="74"/><text x="69.8689%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (18 samples, 0.33%)</title><rect x="70.6352%" y="149" width="0.3267%" height="15" fill="rgb(248,18,21)" fg:x="3892" fg:w="18"/><text x="70.8852%" y="159.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="70.9256%" y="133" width="0.0363%" height="15" fill="rgb(245,180,19)" fg:x="3908" fg:w="2"/><text x="71.1756%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="70.9619%" y="165" width="0.0544%" height="15" fill="rgb(252,118,36)" fg:x="3910" fg:w="3"/><text x="71.2119%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (22 samples, 0.40%)</title><rect x="71.0163%" y="165" width="0.3993%" height="15" fill="rgb(210,224,19)" fg:x="3913" fg:w="22"/><text x="71.2663%" y="175.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="71.3793%" y="149" width="0.0363%" height="15" fill="rgb(218,30,24)" fg:x="3933" fg:w="2"/><text x="71.6293%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (106 samples, 1.92%)</title><rect x="69.5100%" y="181" width="1.9238%" height="15" fill="rgb(219,75,50)" fg:x="3830" fg:w="106"/><text x="69.7600%" y="191.50">r..</text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="71.4156%" y="165" width="0.0181%" height="15" fill="rgb(234,72,50)" fg:x="3935" fg:w="1"/><text x="71.6656%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="71.4156%" y="149" width="0.0181%" height="15" fill="rgb(219,100,48)" fg:x="3935" fg:w="1"/><text x="71.6656%" y="159.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (7 samples, 0.13%)</title><rect x="71.4338%" y="181" width="0.1270%" height="15" fill="rgb(253,5,41)" fg:x="3936" fg:w="7"/><text x="71.6838%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (158 samples, 2.87%)</title><rect x="69.4555%" y="197" width="2.8675%" height="15" fill="rgb(247,181,11)" fg:x="3827" fg:w="158"/><text x="69.7055%" y="207.50">ru..</text></g><g><title>rust-gkat`cuddUniqueInter (42 samples, 0.76%)</title><rect x="71.5608%" y="181" width="0.7623%" height="15" fill="rgb(222,223,25)" fg:x="3943" fg:w="42"/><text x="71.8108%" y="191.50"></text></g><g><title>rust-gkat`cuddRehash (6 samples, 0.11%)</title><rect x="72.2142%" y="165" width="0.1089%" height="15" fill="rgb(214,198,28)" fg:x="3979" fg:w="6"/><text x="72.4642%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="72.3230%" y="197" width="0.0181%" height="15" fill="rgb(230,46,43)" fg:x="3985" fg:w="1"/><text x="72.5730%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="72.3412%" y="197" width="0.0363%" height="15" fill="rgb(233,65,53)" fg:x="3986" fg:w="2"/><text x="72.5912%" y="207.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="72.8857%" y="181" width="0.0181%" height="15" fill="rgb(221,121,27)" fg:x="4016" fg:w="1"/><text x="73.1357%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (198 samples, 3.59%)</title><rect x="69.3648%" y="213" width="3.5935%" height="15" fill="rgb(247,70,47)" fg:x="3822" fg:w="198"/><text x="69.6148%" y="223.50">rust..</text></g><g><title>rust-gkat`cuddUniqueInter (32 samples, 0.58%)</title><rect x="72.3775%" y="197" width="0.5808%" height="15" fill="rgb(228,85,35)" fg:x="3988" fg:w="32"/><text x="72.6275%" y="207.50"></text></g><g><title>rust-gkat`cuddRehash (3 samples, 0.05%)</title><rect x="72.9038%" y="181" width="0.0544%" height="15" fill="rgb(209,50,18)" fg:x="4017" fg:w="3"/><text x="73.1538%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="72.9583%" y="213" width="0.0544%" height="15" fill="rgb(250,19,35)" fg:x="4020" fg:w="3"/><text x="73.2083%" y="223.50"></text></g><g><title>rust-gkat`cuddAllocNode (2 samples, 0.04%)</title><rect x="73.6842%" y="197" width="0.0363%" height="15" fill="rgb(253,107,29)" fg:x="4060" fg:w="2"/><text x="73.9342%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (247 samples, 4.48%)</title><rect x="69.2559%" y="229" width="4.4828%" height="15" fill="rgb(252,179,29)" fg:x="3816" fg:w="247"/><text x="69.5059%" y="239.50">rust-..</text></g><g><title>rust-gkat`cuddUniqueInter (40 samples, 0.73%)</title><rect x="73.0127%" y="213" width="0.7260%" height="15" fill="rgb(238,194,6)" fg:x="4023" fg:w="40"/><text x="73.2627%" y="223.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="73.7205%" y="197" width="0.0181%" height="15" fill="rgb(238,164,29)" fg:x="4062" fg:w="1"/><text x="73.9705%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (8 samples, 0.15%)</title><rect x="73.7387%" y="229" width="0.1452%" height="15" fill="rgb(224,25,9)" fg:x="4063" fg:w="8"/><text x="73.9887%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (312 samples, 5.66%)</title><rect x="69.0563%" y="245" width="5.6624%" height="15" fill="rgb(244,153,23)" fg:x="3805" fg:w="312"/><text x="69.3063%" y="255.50">rust-gk..</text></g><g><title>rust-gkat`cuddUniqueInter (46 samples, 0.83%)</title><rect x="73.8838%" y="229" width="0.8348%" height="15" fill="rgb(212,203,14)" fg:x="4071" fg:w="46"/><text x="74.1338%" y="239.50"></text></g><g><title>rust-gkat`cuddRehash (6 samples, 0.11%)</title><rect x="74.6098%" y="213" width="0.1089%" height="15" fill="rgb(220,164,20)" fg:x="4111" fg:w="6"/><text x="74.8598%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="74.7005%" y="197" width="0.0181%" height="15" fill="rgb(222,203,48)" fg:x="4116" fg:w="1"/><text x="74.9505%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="74.7005%" y="181" width="0.0181%" height="15" fill="rgb(215,159,22)" fg:x="4116" fg:w="1"/><text x="74.9505%" y="191.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="74.7187%" y="245" width="0.0544%" height="15" fill="rgb(216,183,47)" fg:x="4117" fg:w="3"/><text x="74.9687%" y="255.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="75.3721%" y="229" width="0.0181%" height="15" fill="rgb(229,195,25)" fg:x="4153" fg:w="1"/><text x="75.6221%" y="239.50"></text></g><g><title>rust-gkat`cuddGarbageCollect (83 samples, 1.51%)</title><rect x="75.3902%" y="229" width="1.5064%" height="15" fill="rgb(224,132,51)" fg:x="4154" fg:w="83"/><text x="75.6402%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (442 samples, 8.02%)</title><rect x="68.9655%" y="261" width="8.0218%" height="15" fill="rgb(240,63,7)" fg:x="3800" fg:w="442"/><text x="69.2155%" y="271.50">rust-gkat`c..</text></g><g><title>rust-gkat`cuddUniqueInter (122 samples, 2.21%)</title><rect x="74.7731%" y="245" width="2.2142%" height="15" fill="rgb(249,182,41)" fg:x="4120" fg:w="122"/><text x="75.0231%" y="255.50">r..</text></g><g><title>rust-gkat`cuddRehash (5 samples, 0.09%)</title><rect x="76.8966%" y="229" width="0.0907%" height="15" fill="rgb(243,47,26)" fg:x="4237" fg:w="5"/><text x="77.1466%" y="239.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="76.9873%" y="261" width="0.0544%" height="15" fill="rgb(233,48,2)" fg:x="4242" fg:w="3"/><text x="77.2373%" y="271.50"></text></g><g><title>rust-gkat`cuddAllocNode (1 samples, 0.02%)</title><rect x="77.4410%" y="245" width="0.0181%" height="15" fill="rgb(244,165,34)" fg:x="4267" fg:w="1"/><text x="77.6910%" y="255.50"></text></g><g><title>rust-gkat`util_cpu_time (1 samples, 0.02%)</title><rect x="77.4410%" y="229" width="0.0181%" height="15" fill="rgb(207,89,7)" fg:x="4267" fg:w="1"/><text x="77.6910%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.02%)</title><rect x="77.4410%" y="213" width="0.0181%" height="15" fill="rgb(244,117,36)" fg:x="4267" fg:w="1"/><text x="77.6910%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (480 samples, 8.71%)</title><rect x="68.9111%" y="277" width="8.7114%" height="15" fill="rgb(226,144,34)" fg:x="3797" fg:w="480"/><text x="69.1611%" y="287.50">rust-gkat`cu..</text></g><g><title>rust-gkat`cuddUniqueInter (32 samples, 0.58%)</title><rect x="77.0417%" y="261" width="0.5808%" height="15" fill="rgb(213,23,19)" fg:x="4245" fg:w="32"/><text x="77.2917%" y="271.50"></text></g><g><title>rust-gkat`cuddRehash (9 samples, 0.16%)</title><rect x="77.4592%" y="245" width="0.1633%" height="15" fill="rgb(217,75,12)" fg:x="4268" fg:w="9"/><text x="77.7092%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="77.6044%" y="229" width="0.0181%" height="15" fill="rgb(224,159,17)" fg:x="4276" fg:w="1"/><text x="77.8544%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="77.6044%" y="213" width="0.0181%" height="15" fill="rgb(217,118,1)" fg:x="4276" fg:w="1"/><text x="77.8544%" y="223.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (6 samples, 0.11%)</title><rect x="77.6225%" y="277" width="0.1089%" height="15" fill="rgb(232,180,48)" fg:x="4277" fg:w="6"/><text x="77.8725%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (525 samples, 9.53%)</title><rect x="68.8022%" y="293" width="9.5281%" height="15" fill="rgb(230,27,33)" fg:x="3791" fg:w="525"/><text x="69.0522%" y="303.50">rust-gkat`cudd..</text></g><g><title>rust-gkat`cuddUniqueInter (33 samples, 0.60%)</title><rect x="77.7314%" y="277" width="0.5989%" height="15" fill="rgb(205,31,21)" fg:x="4283" fg:w="33"/><text x="77.9814%" y="287.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="78.2940%" y="261" width="0.0363%" height="15" fill="rgb(253,59,4)" fg:x="4314" fg:w="2"/><text x="78.5440%" y="271.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (2 samples, 0.04%)</title><rect x="78.3303%" y="293" width="0.0363%" height="15" fill="rgb(224,201,9)" fg:x="4316" fg:w="2"/><text x="78.5803%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (12 samples, 0.22%)</title><rect x="78.3666%" y="293" width="0.2178%" height="15" fill="rgb(229,206,30)" fg:x="4318" fg:w="12"/><text x="78.6166%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheResize (7 samples, 0.13%)</title><rect x="78.4574%" y="277" width="0.1270%" height="15" fill="rgb(212,67,47)" fg:x="4323" fg:w="7"/><text x="78.7074%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="78.5662%" y="261" width="0.0181%" height="15" fill="rgb(211,96,50)" fg:x="4329" fg:w="1"/><text x="78.8162%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="78.5662%" y="245" width="0.0181%" height="15" fill="rgb(252,114,18)" fg:x="4329" fg:w="1"/><text x="78.8162%" y="255.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.04%)</title><rect x="78.5844%" y="293" width="0.0363%" height="15" fill="rgb(223,58,37)" fg:x="4330" fg:w="2"/><text x="78.8344%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (570 samples, 10.34%)</title><rect x="68.7477%" y="309" width="10.3448%" height="15" fill="rgb(237,70,4)" fg:x="3788" fg:w="570"/><text x="68.9977%" y="319.50">rust-gkat`cuddB..</text></g><g><title>rust-gkat`cuddUniqueInter (26 samples, 0.47%)</title><rect x="78.6207%" y="293" width="0.4719%" height="15" fill="rgb(244,85,46)" fg:x="4332" fg:w="26"/><text x="78.8707%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (6 samples, 0.11%)</title><rect x="79.0926%" y="309" width="0.1089%" height="15" fill="rgb(223,39,52)" fg:x="4358" fg:w="6"/><text x="79.3426%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (616 samples, 11.18%)</title><rect x="68.6388%" y="325" width="11.1797%" height="15" fill="rgb(218,200,14)" fg:x="3782" fg:w="616"/><text x="68.8888%" y="335.50">rust-gkat`cuddBd..</text></g><g><title>rust-gkat`cuddUniqueInter (34 samples, 0.62%)</title><rect x="79.2015%" y="309" width="0.6171%" height="15" fill="rgb(208,171,16)" fg:x="4364" fg:w="34"/><text x="79.4515%" y="319.50"></text></g><g><title>rust-gkat`cuddRehash (6 samples, 0.11%)</title><rect x="79.7096%" y="293" width="0.1089%" height="15" fill="rgb(234,200,18)" fg:x="4392" fg:w="6"/><text x="79.9596%" y="303.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="79.8185%" y="325" width="0.0726%" height="15" fill="rgb(228,45,11)" fg:x="4398" fg:w="4"/><text x="80.0685%" y="335.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.04%)</title><rect x="79.8911%" y="325" width="0.0363%" height="15" fill="rgb(237,182,11)" fg:x="4402" fg:w="2"/><text x="80.1411%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (653 samples, 11.85%)</title><rect x="68.5844%" y="341" width="11.8512%" height="15" fill="rgb(241,175,49)" fg:x="3779" fg:w="653"/><text x="68.8344%" y="351.50">rust-gkat`cuddBddA..</text></g><g><title>rust-gkat`cuddUniqueInter (28 samples, 0.51%)</title><rect x="79.9274%" y="325" width="0.5082%" height="15" fill="rgb(247,38,35)" fg:x="4404" fg:w="28"/><text x="80.1774%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="80.4356%" y="341" width="0.0181%" height="15" fill="rgb(228,39,49)" fg:x="4432" fg:w="1"/><text x="80.6856%" y="351.50"></text></g><g><title>rust-gkat`cuddReclaim (1 samples, 0.02%)</title><rect x="80.4537%" y="341" width="0.0181%" height="15" fill="rgb(226,101,26)" fg:x="4433" fg:w="1"/><text x="80.7037%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (695 samples, 12.61%)</title><rect x="68.4755%" y="357" width="12.6134%" height="15" fill="rgb(206,141,19)" fg:x="3773" fg:w="695"/><text x="68.7255%" y="367.50">rust-gkat`cuddBddAn..</text></g><g><title>rust-gkat`cuddUniqueInter (34 samples, 0.62%)</title><rect x="80.4719%" y="341" width="0.6171%" height="15" fill="rgb(211,200,13)" fg:x="4434" fg:w="34"/><text x="80.7219%" y="351.50"></text></g><g><title>rust-gkat`cuddRehash (3 samples, 0.05%)</title><rect x="81.0345%" y="325" width="0.0544%" height="15" fill="rgb(241,121,6)" fg:x="4465" fg:w="3"/><text x="81.2845%" y="335.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="81.0889%" y="357" width="0.0726%" height="15" fill="rgb(234,221,29)" fg:x="4468" fg:w="4"/><text x="81.3389%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (738 samples, 13.39%)</title><rect x="68.3666%" y="373" width="13.3938%" height="15" fill="rgb(229,136,5)" fg:x="3767" fg:w="738"/><text x="68.6166%" y="383.50">rust-gkat`cuddBddAnd..</text></g><g><title>rust-gkat`cuddUniqueInter (33 samples, 0.60%)</title><rect x="81.1615%" y="357" width="0.5989%" height="15" fill="rgb(238,36,11)" fg:x="4472" fg:w="33"/><text x="81.4115%" y="367.50"></text></g><g><title>rust-gkat`cuddRehash (6 samples, 0.11%)</title><rect x="81.6515%" y="341" width="0.1089%" height="15" fill="rgb(251,55,41)" fg:x="4499" fg:w="6"/><text x="81.9015%" y="351.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="81.7604%" y="373" width="0.0726%" height="15" fill="rgb(242,34,40)" fg:x="4505" fg:w="4"/><text x="82.0104%" y="383.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (775 samples, 14.07%)</title><rect x="68.2940%" y="389" width="14.0653%" height="15" fill="rgb(215,42,17)" fg:x="3763" fg:w="775"/><text x="68.5440%" y="399.50">rust-gkat`cuddBddAndR..</text></g><g><title>rust-gkat`cuddUniqueInter (29 samples, 0.53%)</title><rect x="81.8330%" y="373" width="0.5263%" height="15" fill="rgb(207,44,46)" fg:x="4509" fg:w="29"/><text x="82.0830%" y="383.50"></text></g><g><title>rust-gkat`cuddRehash (4 samples, 0.07%)</title><rect x="82.2868%" y="357" width="0.0726%" height="15" fill="rgb(211,206,28)" fg:x="4534" fg:w="4"/><text x="82.5368%" y="367.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="82.3593%" y="389" width="0.0181%" height="15" fill="rgb(237,167,16)" fg:x="4538" fg:w="1"/><text x="82.6093%" y="399.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (808 samples, 14.66%)</title><rect x="68.2396%" y="405" width="14.6642%" height="15" fill="rgb(233,66,6)" fg:x="3760" fg:w="808"/><text x="68.4896%" y="415.50">rust-gkat`cuddBddAndRe..</text></g><g><title>rust-gkat`cuddUniqueInter (29 samples, 0.53%)</title><rect x="82.3775%" y="389" width="0.5263%" height="15" fill="rgb(246,123,29)" fg:x="4539" fg:w="29"/><text x="82.6275%" y="399.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="82.8675%" y="373" width="0.0363%" height="15" fill="rgb(209,62,40)" fg:x="4566" fg:w="2"/><text x="83.1175%" y="383.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="82.9038%" y="405" width="0.0181%" height="15" fill="rgb(218,4,25)" fg:x="4568" fg:w="1"/><text x="83.1538%" y="415.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (828 samples, 15.03%)</title><rect x="68.1851%" y="421" width="15.0272%" height="15" fill="rgb(253,91,49)" fg:x="3757" fg:w="828"/><text x="68.4351%" y="431.50">rust-gkat`cuddBddAndRec..</text></g><g><title>rust-gkat`cuddUniqueInter (16 samples, 0.29%)</title><rect x="82.9220%" y="405" width="0.2904%" height="15" fill="rgb(228,155,29)" fg:x="4569" fg:w="16"/><text x="83.1720%" y="415.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="83.2123%" y="421" width="0.0181%" height="15" fill="rgb(243,57,37)" fg:x="4585" fg:w="1"/><text x="83.4623%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (859 samples, 15.59%)</title><rect x="68.1125%" y="437" width="15.5898%" height="15" fill="rgb(244,167,17)" fg:x="3753" fg:w="859"/><text x="68.3625%" y="447.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (26 samples, 0.47%)</title><rect x="83.2305%" y="421" width="0.4719%" height="15" fill="rgb(207,181,38)" fg:x="4586" fg:w="26"/><text x="83.4805%" y="431.50"></text></g><g><title>rust-gkat`cuddRehash (4 samples, 0.07%)</title><rect x="83.6298%" y="405" width="0.0726%" height="15" fill="rgb(211,8,23)" fg:x="4608" fg:w="4"/><text x="83.8798%" y="415.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="83.7024%" y="437" width="0.0363%" height="15" fill="rgb(235,11,44)" fg:x="4612" fg:w="2"/><text x="83.9524%" y="447.50"></text></g><g><title>rust-gkat`cuddAllocNode (3 samples, 0.05%)</title><rect x="84.0835%" y="421" width="0.0544%" height="15" fill="rgb(248,18,52)" fg:x="4633" fg:w="3"/><text x="84.3335%" y="431.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (889 samples, 16.13%)</title><rect x="68.0399%" y="453" width="16.1343%" height="15" fill="rgb(208,4,7)" fg:x="3749" fg:w="889"/><text x="68.2899%" y="463.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (24 samples, 0.44%)</title><rect x="83.7387%" y="437" width="0.4356%" height="15" fill="rgb(240,17,39)" fg:x="4614" fg:w="24"/><text x="83.9887%" y="447.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="84.1379%" y="421" width="0.0363%" height="15" fill="rgb(207,170,3)" fg:x="4636" fg:w="2"/><text x="84.3879%" y="431.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="84.1742%" y="453" width="0.0181%" height="15" fill="rgb(236,100,52)" fg:x="4638" fg:w="1"/><text x="84.4242%" y="463.50"></text></g><g><title>rust-gkat`cuddReclaim (1 samples, 0.02%)</title><rect x="84.1924%" y="453" width="0.0181%" height="15" fill="rgb(246,78,51)" fg:x="4639" fg:w="1"/><text x="84.4424%" y="463.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (918 samples, 16.66%)</title><rect x="67.9673%" y="469" width="16.6606%" height="15" fill="rgb(211,17,15)" fg:x="3745" fg:w="918"/><text x="68.2173%" y="479.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (23 samples, 0.42%)</title><rect x="84.2105%" y="453" width="0.4174%" height="15" fill="rgb(209,59,46)" fg:x="4640" fg:w="23"/><text x="84.4605%" y="463.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="84.6098%" y="437" width="0.0181%" height="15" fill="rgb(210,92,25)" fg:x="4662" fg:w="1"/><text x="84.8598%" y="447.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="84.6279%" y="469" width="0.0181%" height="15" fill="rgb(238,174,52)" fg:x="4663" fg:w="1"/><text x="84.8779%" y="479.50"></text></g><g><title>rust-gkat`cuddReclaim (1 samples, 0.02%)</title><rect x="84.6461%" y="469" width="0.0181%" height="15" fill="rgb(230,73,7)" fg:x="4664" fg:w="1"/><text x="84.8961%" y="479.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (937 samples, 17.01%)</title><rect x="67.9310%" y="485" width="17.0054%" height="15" fill="rgb(243,124,40)" fg:x="3743" fg:w="937"/><text x="68.1810%" y="495.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (15 samples, 0.27%)</title><rect x="84.6642%" y="469" width="0.2722%" height="15" fill="rgb(244,170,11)" fg:x="4665" fg:w="15"/><text x="84.9142%" y="479.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="84.9183%" y="453" width="0.0181%" height="15" fill="rgb(207,114,54)" fg:x="4679" fg:w="1"/><text x="85.1683%" y="463.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.05%)</title><rect x="84.9365%" y="485" width="0.0544%" height="15" fill="rgb(205,42,20)" fg:x="4680" fg:w="3"/><text x="85.1865%" y="495.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (968 samples, 17.57%)</title><rect x="67.7677%" y="501" width="17.5681%" height="15" fill="rgb(230,30,28)" fg:x="3734" fg:w="968"/><text x="68.0177%" y="511.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (19 samples, 0.34%)</title><rect x="84.9909%" y="485" width="0.3448%" height="15" fill="rgb(205,73,54)" fg:x="4683" fg:w="19"/><text x="85.2409%" y="495.50"></text></g><g><title>rust-gkat`cuddRehash (2 samples, 0.04%)</title><rect x="85.2995%" y="469" width="0.0363%" height="15" fill="rgb(254,227,23)" fg:x="4700" fg:w="2"/><text x="85.5495%" y="479.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="85.3358%" y="501" width="0.0363%" height="15" fill="rgb(228,202,34)" fg:x="4702" fg:w="2"/><text x="85.5858%" y="511.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,000 samples, 18.15%)</title><rect x="67.6407%" y="517" width="18.1488%" height="15" fill="rgb(222,225,37)" fg:x="3727" fg:w="1000"/><text x="67.8907%" y="527.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (23 samples, 0.42%)</title><rect x="85.3721%" y="501" width="0.4174%" height="15" fill="rgb(221,14,54)" fg:x="4704" fg:w="23"/><text x="85.6221%" y="511.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.04%)</title><rect x="85.7895%" y="517" width="0.0363%" height="15" fill="rgb(254,102,2)" fg:x="4727" fg:w="2"/><text x="86.0395%" y="527.50"></text></g><g><title>rust-gkat`cuddReclaim (1 samples, 0.02%)</title><rect x="85.8258%" y="517" width="0.0181%" height="15" fill="rgb(232,104,17)" fg:x="4729" fg:w="1"/><text x="86.0758%" y="527.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,024 samples, 18.58%)</title><rect x="67.6225%" y="533" width="18.5844%" height="15" fill="rgb(250,220,14)" fg:x="3726" fg:w="1024"/><text x="67.8725%" y="543.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (20 samples, 0.36%)</title><rect x="85.8439%" y="517" width="0.3630%" height="15" fill="rgb(241,158,9)" fg:x="4730" fg:w="20"/><text x="86.0939%" y="527.50"></text></g><g><title>rust-gkat`cuddRehash (1 samples, 0.02%)</title><rect x="86.1887%" y="501" width="0.0181%" height="15" fill="rgb(246,9,43)" fg:x="4749" fg:w="1"/><text x="86.4387%" y="511.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="86.2069%" y="533" width="0.0181%" height="15" fill="rgb(206,73,33)" fg:x="4750" fg:w="1"/><text x="86.4569%" y="543.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.04%)</title><rect x="86.2250%" y="533" width="0.0363%" height="15" fill="rgb(222,79,8)" fg:x="4751" fg:w="2"/><text x="86.4750%" y="543.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,046 samples, 18.98%)</title><rect x="67.5862%" y="549" width="18.9837%" height="15" fill="rgb(234,8,54)" fg:x="3724" fg:w="1046"/><text x="67.8362%" y="559.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (17 samples, 0.31%)</title><rect x="86.2613%" y="533" width="0.3085%" height="15" fill="rgb(209,134,38)" fg:x="4753" fg:w="17"/><text x="86.5113%" y="543.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.07%)</title><rect x="86.5699%" y="549" width="0.0726%" height="15" fill="rgb(230,127,29)" fg:x="4770" fg:w="4"/><text x="86.8199%" y="559.50"></text></g><g><title>rust-gkat`cuddReclaim (47 samples, 0.85%)</title><rect x="86.6425%" y="549" width="0.8530%" height="15" fill="rgb(242,44,41)" fg:x="4774" fg:w="47"/><text x="86.8925%" y="559.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1,172 samples, 21.27%)</title><rect x="66.4791%" y="565" width="21.2704%" height="15" fill="rgb(222,56,43)" fg:x="3663" fg:w="1172"/><text x="66.7291%" y="575.50">rust-gkat`cuddBddAndRecur</text></g><g><title>rust-gkat`cuddUniqueInter (14 samples, 0.25%)</title><rect x="87.4955%" y="549" width="0.2541%" height="15" fill="rgb(238,39,47)" fg:x="4821" fg:w="14"/><text x="87.7455%" y="559.50"></text></g><g><title>rust-gkat`cuddCacheInsert2 (1 samples, 0.02%)</title><rect x="87.7495%" y="565" width="0.0181%" height="15" fill="rgb(226,79,43)" fg:x="4835" fg:w="1"/><text x="87.9995%" y="575.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1,175 samples, 21.32%)</title><rect x="66.4610%" y="581" width="21.3249%" height="15" fill="rgb(242,105,53)" fg:x="3662" fg:w="1175"/><text x="66.7110%" y="591.50">rust-gkat`Cudd_bddAnd</text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="87.7677%" y="565" width="0.0181%" height="15" fill="rgb(251,132,46)" fg:x="4836" fg:w="1"/><text x="88.0177%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::search::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::reject (1,189 samples, 21.58%)</title><rect x="66.3702%" y="597" width="21.5789%" height="15" fill="rgb(231,77,14)" fg:x="3657" fg:w="1189"/><text x="66.6202%" y="607.50">rust-gkat`rust_gkat::kernel2::sear..</text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.16%)</title><rect x="87.7858%" y="581" width="0.1633%" height="15" fill="rgb(240,135,9)" fg:x="4837" fg:w="9"/><text x="88.0358%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.11%)</title><rect x="88.3122%" y="581" width="0.1089%" height="15" fill="rgb(248,109,14)" fg:x="4866" fg:w="6"/><text x="88.5622%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.05%)</title><rect x="88.3666%" y="565" width="0.0544%" height="15" fill="rgb(227,146,52)" fg:x="4869" fg:w="3"/><text x="88.6166%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="88.4029%" y="549" width="0.0181%" height="15" fill="rgb(232,54,3)" fg:x="4871" fg:w="1"/><text x="88.6529%" y="559.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::equiv_iter (2,882 samples, 52.30%)</title><rect x="36.3521%" y="613" width="52.3049%" height="15" fill="rgb(229,201,43)" fg:x="2003" fg:w="2882"/><text x="36.6021%" y="623.50">rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::..</text></g><g><title>rust-gkat`rust_gkat::kernel2::solver::Solver::get_uf (39 samples, 0.71%)</title><rect x="87.9492%" y="597" width="0.7078%" height="15" fill="rgb(252,161,33)" fg:x="4846" fg:w="39"/><text x="88.1992%" y="607.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.24%)</title><rect x="88.4211%" y="581" width="0.2359%" height="15" fill="rgb(226,146,40)" fg:x="4872" fg:w="13"/><text x="88.6711%" y="591.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.22%)</title><rect x="88.4392%" y="565" width="0.2178%" height="15" fill="rgb(219,47,25)" fg:x="4873" fg:w="12"/><text x="88.6892%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::search::_&lt;impl rust_gkat::kernel2::solver::Solver&gt;::reject (6 samples, 0.11%)</title><rect x="88.6570%" y="613" width="0.1089%" height="15" fill="rgb(250,135,13)" fg:x="4885" fg:w="6"/><text x="88.9070%" y="623.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="88.7659%" y="597" width="0.0544%" height="15" fill="rgb(219,229,18)" fg:x="4891" fg:w="3"/><text x="89.0159%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.07%)</title><rect x="89.0926%" y="581" width="0.0726%" height="15" fill="rgb(217,152,27)" fg:x="4909" fg:w="4"/><text x="89.3426%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="89.1652%" y="581" width="0.0363%" height="15" fill="rgb(225,71,47)" fg:x="4913" fg:w="2"/><text x="89.4152%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="89.2015%" y="581" width="0.0181%" height="15" fill="rgb(220,139,14)" fg:x="4915" fg:w="1"/><text x="89.4515%" y="591.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_len (4 samples, 0.07%)</title><rect x="90.1633%" y="565" width="0.0726%" height="15" fill="rgb(247,54,32)" fg:x="4968" fg:w="4"/><text x="90.4133%" y="575.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 1.13%)</title><rect x="89.2196%" y="581" width="1.1252%" height="15" fill="rgb(252,131,39)" fg:x="4916" fg:w="62"/><text x="89.4696%" y="591.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_pattern (6 samples, 0.11%)</title><rect x="90.2359%" y="565" width="0.1089%" height="15" fill="rgb(210,108,39)" fg:x="4972" fg:w="6"/><text x="90.4859%" y="575.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="90.3448%" y="581" width="0.0181%" height="15" fill="rgb(205,23,29)" fg:x="4978" fg:w="1"/><text x="90.5948%" y="591.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::parsing::parser::spec::__parse__Input::__Symbol&gt; (1 samples, 0.02%)</title><rect x="90.3630%" y="581" width="0.0181%" height="15" fill="rgb(246,139,46)" fg:x="4979" fg:w="1"/><text x="90.6130%" y="591.50"></text></g><g><title>rust-gkat`regex_automata::hybrid::dfa::LazyRef::get_cached_state (10 samples, 0.18%)</title><rect x="90.3811%" y="581" width="0.1815%" height="15" fill="rgb(250,81,26)" fg:x="4980" fg:w="10"/><text x="90.6311%" y="591.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_pattern (1 samples, 0.02%)</title><rect x="90.5626%" y="581" width="0.0181%" height="15" fill="rgb(214,104,7)" fg:x="4990" fg:w="1"/><text x="90.8126%" y="591.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__goto (4 samples, 0.07%)</title><rect x="90.5808%" y="581" width="0.0726%" height="15" fill="rgb(233,189,8)" fg:x="4991" fg:w="4"/><text x="90.8308%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="91.3975%" y="565" width="0.0181%" height="15" fill="rgb(228,141,17)" fg:x="5036" fg:w="1"/><text x="91.6475%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="91.4156%" y="565" width="0.0363%" height="15" fill="rgb(247,157,1)" fg:x="5037" fg:w="2"/><text x="91.6656%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="91.4519%" y="565" width="0.0363%" height="15" fill="rgb(249,225,5)" fg:x="5039" fg:w="2"/><text x="91.7019%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.24%)</title><rect x="91.4882%" y="565" width="0.2359%" height="15" fill="rgb(242,55,13)" fg:x="5041" fg:w="13"/><text x="91.7382%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (6 samples, 0.11%)</title><rect x="91.6152%" y="549" width="0.1089%" height="15" fill="rgb(230,49,50)" fg:x="5048" fg:w="6"/><text x="91.8652%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.05%)</title><rect x="91.6697%" y="533" width="0.0544%" height="15" fill="rgb(241,111,38)" fg:x="5051" fg:w="3"/><text x="91.9197%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.05%)</title><rect x="91.7241%" y="517" width="0.0544%" height="15" fill="rgb(252,155,4)" fg:x="5054" fg:w="3"/><text x="91.9741%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.04%)</title><rect x="91.7423%" y="501" width="0.0363%" height="15" fill="rgb(212,69,32)" fg:x="5055" fg:w="2"/><text x="91.9923%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="91.7604%" y="485" width="0.0181%" height="15" fill="rgb(243,107,47)" fg:x="5056" fg:w="1"/><text x="92.0104%" y="495.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.07%)</title><rect x="91.7241%" y="565" width="0.0726%" height="15" fill="rgb(247,130,12)" fg:x="5054" fg:w="4"/><text x="91.9741%" y="575.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (4 samples, 0.07%)</title><rect x="91.7241%" y="549" width="0.0726%" height="15" fill="rgb(233,74,16)" fg:x="5054" fg:w="4"/><text x="91.9741%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.07%)</title><rect x="91.7241%" y="533" width="0.0726%" height="15" fill="rgb(208,58,18)" fg:x="5054" fg:w="4"/><text x="91.9741%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="91.7786%" y="517" width="0.0181%" height="15" fill="rgb(242,225,1)" fg:x="5057" fg:w="1"/><text x="92.0286%" y="527.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::parsing::parser::spec::__parse__Input::__Symbol&gt; (2 samples, 0.04%)</title><rect x="91.7967%" y="565" width="0.0363%" height="15" fill="rgb(249,39,40)" fg:x="5058" fg:w="2"/><text x="92.0467%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action10 (1 samples, 0.02%)</title><rect x="91.8330%" y="565" width="0.0181%" height="15" fill="rgb(207,72,44)" fg:x="5060" fg:w="1"/><text x="92.0830%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="91.8330%" y="549" width="0.0181%" height="15" fill="rgb(215,193,12)" fg:x="5060" fg:w="1"/><text x="92.0830%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="91.8330%" y="533" width="0.0181%" height="15" fill="rgb(248,41,39)" fg:x="5060" fg:w="1"/><text x="92.0830%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.05%)</title><rect x="91.8693%" y="549" width="0.0544%" height="15" fill="rgb(253,85,4)" fg:x="5062" fg:w="3"/><text x="92.1193%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="91.9238%" y="549" width="0.0181%" height="15" fill="rgb(243,70,31)" fg:x="5065" fg:w="1"/><text x="92.1738%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="91.9238%" y="533" width="0.0181%" height="15" fill="rgb(253,195,26)" fg:x="5065" fg:w="1"/><text x="92.1738%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="91.9238%" y="517" width="0.0181%" height="15" fill="rgb(243,42,11)" fg:x="5065" fg:w="1"/><text x="92.1738%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (15 samples, 0.27%)</title><rect x="91.9419%" y="549" width="0.2722%" height="15" fill="rgb(239,66,17)" fg:x="5066" fg:w="15"/><text x="92.1919%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.16%)</title><rect x="92.0508%" y="533" width="0.1633%" height="15" fill="rgb(217,132,21)" fg:x="5072" fg:w="9"/><text x="92.3008%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.07%)</title><rect x="92.1416%" y="517" width="0.0726%" height="15" fill="rgb(252,202,21)" fg:x="5077" fg:w="4"/><text x="92.3916%" y="527.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action12 (21 samples, 0.38%)</title><rect x="91.8512%" y="565" width="0.3811%" height="15" fill="rgb(233,98,36)" fg:x="5061" fg:w="21"/><text x="92.1012%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="92.2142%" y="549" width="0.0181%" height="15" fill="rgb(216,153,54)" fg:x="5081" fg:w="1"/><text x="92.4642%" y="559.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action13 (3 samples, 0.05%)</title><rect x="92.2323%" y="565" width="0.0544%" height="15" fill="rgb(250,99,7)" fg:x="5082" fg:w="3"/><text x="92.4823%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.05%)</title><rect x="92.2323%" y="549" width="0.0544%" height="15" fill="rgb(207,56,50)" fg:x="5082" fg:w="3"/><text x="92.4823%" y="559.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (193 samples, 3.50%)</title><rect x="88.8203%" y="597" width="3.5027%" height="15" fill="rgb(244,61,34)" fg:x="4894" fg:w="193"/><text x="89.0703%" y="607.50">rus..</text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (92 samples, 1.67%)</title><rect x="90.6534%" y="581" width="1.6697%" height="15" fill="rgb(241,50,38)" fg:x="4995" fg:w="92"/><text x="90.9034%" y="591.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action9 (2 samples, 0.04%)</title><rect x="92.2868%" y="565" width="0.0363%" height="15" fill="rgb(212,166,30)" fg:x="5085" fg:w="2"/><text x="92.5368%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="92.2868%" y="549" width="0.0363%" height="15" fill="rgb(249,127,32)" fg:x="5085" fg:w="2"/><text x="92.5368%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.04%)</title><rect x="92.2868%" y="533" width="0.0363%" height="15" fill="rgb(209,103,0)" fg:x="5085" fg:w="2"/><text x="92.5368%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="92.3049%" y="517" width="0.0181%" height="15" fill="rgb(238,209,51)" fg:x="5086" fg:w="1"/><text x="92.5549%" y="527.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (199 samples, 3.61%)</title><rect x="88.7659%" y="613" width="3.6116%" height="15" fill="rgb(237,56,23)" fg:x="4891" fg:w="199"/><text x="89.0159%" y="623.50">rust..</text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (3 samples, 0.05%)</title><rect x="92.3230%" y="597" width="0.0544%" height="15" fill="rgb(215,153,46)" fg:x="5087" fg:w="3"/><text x="92.5730%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="92.3775%" y="453" width="0.0181%" height="15" fill="rgb(224,49,31)" fg:x="5090" fg:w="1"/><text x="92.6275%" y="463.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="92.3956%" y="421" width="0.0181%" height="15" fill="rgb(250,18,42)" fg:x="5091" fg:w="1"/><text x="92.6456%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="92.3956%" y="405" width="0.0181%" height="15" fill="rgb(215,176,39)" fg:x="5091" fg:w="1"/><text x="92.6456%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.3956%" y="389" width="0.0181%" height="15" fill="rgb(223,77,29)" fg:x="5091" fg:w="1"/><text x="92.6456%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="92.4864%" y="373" width="0.0181%" height="15" fill="rgb(234,94,52)" fg:x="5096" fg:w="1"/><text x="92.7364%" y="383.50"></text></g><g><title>rust-gkat`Cudd_bddOr (1 samples, 0.02%)</title><rect x="92.4864%" y="357" width="0.0181%" height="15" fill="rgb(220,154,50)" fg:x="5096" fg:w="1"/><text x="92.7364%" y="367.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="92.4864%" y="341" width="0.0181%" height="15" fill="rgb(212,11,10)" fg:x="5096" fg:w="1"/><text x="92.7364%" y="351.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="92.4864%" y="325" width="0.0181%" height="15" fill="rgb(205,166,19)" fg:x="5096" fg:w="1"/><text x="92.7364%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="92.5408%" y="357" width="0.0181%" height="15" fill="rgb(244,198,16)" fg:x="5099" fg:w="1"/><text x="92.7908%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="92.5408%" y="341" width="0.0181%" height="15" fill="rgb(219,69,12)" fg:x="5099" fg:w="1"/><text x="92.7908%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="92.5408%" y="325" width="0.0181%" height="15" fill="rgb(245,30,7)" fg:x="5099" fg:w="1"/><text x="92.7908%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="92.5590%" y="357" width="0.0181%" height="15" fill="rgb(218,221,48)" fg:x="5100" fg:w="1"/><text x="92.8090%" y="367.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.04%)</title><rect x="92.5771%" y="357" width="0.0363%" height="15" fill="rgb(216,66,15)" fg:x="5101" fg:w="2"/><text x="92.8271%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.5953%" y="341" width="0.0181%" height="15" fill="rgb(226,122,50)" fg:x="5102" fg:w="1"/><text x="92.8453%" y="351.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="92.6134%" y="357" width="0.0181%" height="15" fill="rgb(239,156,16)" fg:x="5103" fg:w="1"/><text x="92.8634%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="92.6316%" y="357" width="0.0181%" height="15" fill="rgb(224,27,38)" fg:x="5104" fg:w="1"/><text x="92.8816%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="92.6316%" y="341" width="0.0181%" height="15" fill="rgb(224,39,27)" fg:x="5104" fg:w="1"/><text x="92.8816%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="92.6316%" y="325" width="0.0181%" height="15" fill="rgb(215,92,29)" fg:x="5104" fg:w="1"/><text x="92.8816%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="92.6497%" y="341" width="0.0181%" height="15" fill="rgb(207,159,16)" fg:x="5105" fg:w="1"/><text x="92.8997%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="92.6679%" y="341" width="0.0181%" height="15" fill="rgb(238,163,47)" fg:x="5106" fg:w="1"/><text x="92.9179%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="92.6860%" y="341" width="0.0181%" height="15" fill="rgb(219,91,49)" fg:x="5107" fg:w="1"/><text x="92.9360%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="92.6860%" y="325" width="0.0181%" height="15" fill="rgb(227,167,31)" fg:x="5107" fg:w="1"/><text x="92.9360%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="92.6860%" y="309" width="0.0181%" height="15" fill="rgb(234,80,54)" fg:x="5107" fg:w="1"/><text x="92.9360%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="92.7042%" y="341" width="0.0181%" height="15" fill="rgb(212,114,2)" fg:x="5108" fg:w="1"/><text x="92.9542%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="92.7405%" y="325" width="0.0181%" height="15" fill="rgb(234,50,24)" fg:x="5110" fg:w="1"/><text x="92.9905%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="92.7405%" y="309" width="0.0181%" height="15" fill="rgb(221,68,8)" fg:x="5110" fg:w="1"/><text x="92.9905%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="92.7405%" y="293" width="0.0181%" height="15" fill="rgb(254,180,31)" fg:x="5110" fg:w="1"/><text x="92.9905%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.7586%" y="325" width="0.0181%" height="15" fill="rgb(247,130,50)" fg:x="5111" fg:w="1"/><text x="93.0086%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.7768%" y="325" width="0.0181%" height="15" fill="rgb(211,109,4)" fg:x="5112" fg:w="1"/><text x="93.0268%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.7949%" y="309" width="0.0181%" height="15" fill="rgb(238,50,21)" fg:x="5113" fg:w="1"/><text x="93.0449%" y="319.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.11%)</title><rect x="92.7223%" y="341" width="0.1089%" height="15" fill="rgb(225,57,45)" fg:x="5109" fg:w="6"/><text x="92.9723%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.04%)</title><rect x="92.7949%" y="325" width="0.0363%" height="15" fill="rgb(209,196,50)" fg:x="5113" fg:w="2"/><text x="93.0449%" y="335.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="92.8131%" y="309" width="0.0181%" height="15" fill="rgb(242,140,13)" fg:x="5114" fg:w="1"/><text x="93.0631%" y="319.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="92.8312%" y="341" width="0.0181%" height="15" fill="rgb(217,111,7)" fg:x="5115" fg:w="1"/><text x="93.0812%" y="351.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="92.8494%" y="341" width="0.0181%" height="15" fill="rgb(253,193,51)" fg:x="5116" fg:w="1"/><text x="93.0994%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (1 samples, 0.02%)</title><rect x="92.8857%" y="325" width="0.0181%" height="15" fill="rgb(252,70,29)" fg:x="5118" fg:w="1"/><text x="93.1357%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="92.8857%" y="309" width="0.0181%" height="15" fill="rgb(232,127,12)" fg:x="5118" fg:w="1"/><text x="93.1357%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="92.9038%" y="309" width="0.0181%" height="15" fill="rgb(211,180,21)" fg:x="5119" fg:w="1"/><text x="93.1538%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (6 samples, 0.11%)</title><rect x="92.8675%" y="341" width="0.1089%" height="15" fill="rgb(229,72,13)" fg:x="5117" fg:w="6"/><text x="93.1175%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (4 samples, 0.07%)</title><rect x="92.9038%" y="325" width="0.0726%" height="15" fill="rgb(240,211,49)" fg:x="5119" fg:w="4"/><text x="93.1538%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (3 samples, 0.05%)</title><rect x="92.9220%" y="309" width="0.0544%" height="15" fill="rgb(219,149,40)" fg:x="5120" fg:w="3"/><text x="93.1720%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="92.9401%" y="293" width="0.0363%" height="15" fill="rgb(210,127,46)" fg:x="5121" fg:w="2"/><text x="93.1901%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="93.0309%" y="325" width="0.0181%" height="15" fill="rgb(220,106,7)" fg:x="5126" fg:w="1"/><text x="93.2809%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="93.0490%" y="325" width="0.0181%" height="15" fill="rgb(249,31,22)" fg:x="5127" fg:w="1"/><text x="93.2990%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.04%)</title><rect x="93.0672%" y="325" width="0.0363%" height="15" fill="rgb(253,1,49)" fg:x="5128" fg:w="2"/><text x="93.3172%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.04%)</title><rect x="93.0672%" y="309" width="0.0363%" height="15" fill="rgb(227,144,33)" fg:x="5128" fg:w="2"/><text x="93.3172%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.04%)</title><rect x="93.0672%" y="293" width="0.0363%" height="15" fill="rgb(249,163,44)" fg:x="5128" fg:w="2"/><text x="93.3172%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="93.1579%" y="309" width="0.0181%" height="15" fill="rgb(234,15,39)" fg:x="5133" fg:w="1"/><text x="93.4079%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="93.1579%" y="293" width="0.0181%" height="15" fill="rgb(207,66,16)" fg:x="5133" fg:w="1"/><text x="93.4079%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="93.1579%" y="277" width="0.0181%" height="15" fill="rgb(233,112,24)" fg:x="5133" fg:w="1"/><text x="93.4079%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1760%" y="309" width="0.0181%" height="15" fill="rgb(230,90,22)" fg:x="5134" fg:w="1"/><text x="93.4260%" y="319.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="93.1942%" y="309" width="0.0181%" height="15" fill="rgb(229,61,13)" fg:x="5135" fg:w="1"/><text x="93.4442%" y="319.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 0.13%)</title><rect x="93.1034%" y="325" width="0.1270%" height="15" fill="rgb(225,57,24)" fg:x="5130" fg:w="7"/><text x="93.3534%" y="335.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="93.2123%" y="309" width="0.0181%" height="15" fill="rgb(208,169,48)" fg:x="5136" fg:w="1"/><text x="93.4623%" y="319.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (1 samples, 0.02%)</title><rect x="93.2305%" y="325" width="0.0181%" height="15" fill="rgb(244,218,51)" fg:x="5137" fg:w="1"/><text x="93.4805%" y="335.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="93.2486%" y="325" width="0.0181%" height="15" fill="rgb(214,148,10)" fg:x="5138" fg:w="1"/><text x="93.4986%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.04%)</title><rect x="93.2849%" y="309" width="0.0363%" height="15" fill="rgb(225,174,27)" fg:x="5140" fg:w="2"/><text x="93.5349%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="93.3212%" y="293" width="0.0181%" height="15" fill="rgb(230,96,26)" fg:x="5142" fg:w="1"/><text x="93.5712%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="93.3212%" y="277" width="0.0181%" height="15" fill="rgb(232,10,30)" fg:x="5142" fg:w="1"/><text x="93.5712%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="93.3212%" y="261" width="0.0181%" height="15" fill="rgb(222,8,50)" fg:x="5142" fg:w="1"/><text x="93.5712%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddOr (1 samples, 0.02%)</title><rect x="93.3394%" y="293" width="0.0181%" height="15" fill="rgb(213,81,27)" fg:x="5143" fg:w="1"/><text x="93.5894%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="93.3394%" y="277" width="0.0181%" height="15" fill="rgb(245,50,10)" fg:x="5143" fg:w="1"/><text x="93.5894%" y="287.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (1 samples, 0.02%)</title><rect x="93.3394%" y="261" width="0.0181%" height="15" fill="rgb(216,100,18)" fg:x="5143" fg:w="1"/><text x="93.5894%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="93.3575%" y="293" width="0.0181%" height="15" fill="rgb(236,147,54)" fg:x="5144" fg:w="1"/><text x="93.6075%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (7 samples, 0.13%)</title><rect x="93.2668%" y="325" width="0.1270%" height="15" fill="rgb(205,143,26)" fg:x="5139" fg:w="7"/><text x="93.5168%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (4 samples, 0.07%)</title><rect x="93.3212%" y="309" width="0.0726%" height="15" fill="rgb(236,26,9)" fg:x="5142" fg:w="4"/><text x="93.5712%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="93.3757%" y="293" width="0.0181%" height="15" fill="rgb(221,165,53)" fg:x="5145" fg:w="1"/><text x="93.6257%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="93.3757%" y="277" width="0.0181%" height="15" fill="rgb(214,110,17)" fg:x="5145" fg:w="1"/><text x="93.6257%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.04%)</title><rect x="93.5753%" y="309" width="0.0363%" height="15" fill="rgb(237,197,12)" fg:x="5156" fg:w="2"/><text x="93.8253%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="93.6116%" y="309" width="0.0181%" height="15" fill="rgb(205,84,17)" fg:x="5158" fg:w="1"/><text x="93.8616%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.07%)</title><rect x="93.6298%" y="309" width="0.0726%" height="15" fill="rgb(237,18,45)" fg:x="5159" fg:w="4"/><text x="93.8798%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3 samples, 0.05%)</title><rect x="93.7024%" y="309" width="0.0544%" height="15" fill="rgb(221,87,14)" fg:x="5163" fg:w="3"/><text x="93.9524%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (3 samples, 0.05%)</title><rect x="93.7024%" y="293" width="0.0544%" height="15" fill="rgb(238,186,15)" fg:x="5163" fg:w="3"/><text x="93.9524%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="93.7024%" y="277" width="0.0544%" height="15" fill="rgb(208,115,11)" fg:x="5163" fg:w="3"/><text x="93.9524%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="93.7568%" y="309" width="0.0181%" height="15" fill="rgb(254,175,0)" fg:x="5166" fg:w="1"/><text x="94.0068%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="93.8475%" y="293" width="0.0363%" height="15" fill="rgb(227,24,42)" fg:x="5171" fg:w="2"/><text x="94.0975%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.04%)</title><rect x="93.8475%" y="277" width="0.0363%" height="15" fill="rgb(223,211,37)" fg:x="5171" fg:w="2"/><text x="94.0975%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.04%)</title><rect x="93.8475%" y="261" width="0.0363%" height="15" fill="rgb(235,49,27)" fg:x="5171" fg:w="2"/><text x="94.0975%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="93.8838%" y="293" width="0.0363%" height="15" fill="rgb(254,97,51)" fg:x="5173" fg:w="2"/><text x="94.1338%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.22%)</title><rect x="93.7750%" y="309" width="0.2178%" height="15" fill="rgb(249,51,40)" fg:x="5167" fg:w="12"/><text x="94.0250%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.07%)</title><rect x="93.9201%" y="293" width="0.0726%" height="15" fill="rgb(210,128,45)" fg:x="5175" fg:w="4"/><text x="94.1701%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.9746%" y="277" width="0.0181%" height="15" fill="rgb(224,137,50)" fg:x="5178" fg:w="1"/><text x="94.2246%" y="287.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="93.9927%" y="309" width="0.0181%" height="15" fill="rgb(242,15,9)" fg:x="5179" fg:w="1"/><text x="94.2427%" y="319.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.04%)</title><rect x="94.0109%" y="309" width="0.0363%" height="15" fill="rgb(233,187,41)" fg:x="5180" fg:w="2"/><text x="94.2609%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="94.0472%" y="293" width="0.0181%" height="15" fill="rgb(227,2,29)" fg:x="5182" fg:w="1"/><text x="94.2972%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="94.0653%" y="293" width="0.0363%" height="15" fill="rgb(222,70,3)" fg:x="5183" fg:w="2"/><text x="94.3153%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="94.0653%" y="277" width="0.0363%" height="15" fill="rgb(213,11,42)" fg:x="5183" fg:w="2"/><text x="94.3153%" y="287.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="94.0835%" y="261" width="0.0181%" height="15" fill="rgb(225,150,9)" fg:x="5184" fg:w="1"/><text x="94.3335%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="94.1198%" y="277" width="0.0181%" height="15" fill="rgb(230,162,45)" fg:x="5186" fg:w="1"/><text x="94.3698%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (6 samples, 0.11%)</title><rect x="94.0472%" y="309" width="0.1089%" height="15" fill="rgb(222,14,52)" fg:x="5182" fg:w="6"/><text x="94.2972%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (3 samples, 0.05%)</title><rect x="94.1016%" y="293" width="0.0544%" height="15" fill="rgb(254,198,14)" fg:x="5185" fg:w="3"/><text x="94.3516%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddOr (1 samples, 0.02%)</title><rect x="94.1379%" y="277" width="0.0181%" height="15" fill="rgb(220,217,30)" fg:x="5187" fg:w="1"/><text x="94.3879%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="94.1379%" y="261" width="0.0181%" height="15" fill="rgb(215,146,41)" fg:x="5187" fg:w="1"/><text x="94.3879%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (1 samples, 0.02%)</title><rect x="94.1379%" y="245" width="0.0181%" height="15" fill="rgb(217,27,36)" fg:x="5187" fg:w="1"/><text x="94.3879%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.05%)</title><rect x="94.3194%" y="293" width="0.0544%" height="15" fill="rgb(219,218,39)" fg:x="5197" fg:w="3"/><text x="94.5694%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.09%)</title><rect x="94.3739%" y="293" width="0.0907%" height="15" fill="rgb(219,4,42)" fg:x="5200" fg:w="5"/><text x="94.6239%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3 samples, 0.05%)</title><rect x="94.4646%" y="293" width="0.0544%" height="15" fill="rgb(249,119,36)" fg:x="5205" fg:w="3"/><text x="94.7146%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (3 samples, 0.05%)</title><rect x="94.4646%" y="277" width="0.0544%" height="15" fill="rgb(209,23,33)" fg:x="5205" fg:w="3"/><text x="94.7146%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="94.4646%" y="261" width="0.0544%" height="15" fill="rgb(211,10,0)" fg:x="5205" fg:w="3"/><text x="94.7146%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="94.5191%" y="293" width="0.0181%" height="15" fill="rgb(208,99,37)" fg:x="5208" fg:w="1"/><text x="94.7691%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="94.5735%" y="277" width="0.0181%" height="15" fill="rgb(213,132,31)" fg:x="5211" fg:w="1"/><text x="94.8235%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="94.5917%" y="277" width="0.0363%" height="15" fill="rgb(243,129,40)" fg:x="5212" fg:w="2"/><text x="94.8417%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.05%)</title><rect x="94.6279%" y="277" width="0.0544%" height="15" fill="rgb(210,66,33)" fg:x="5214" fg:w="3"/><text x="94.8779%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (11 samples, 0.20%)</title><rect x="94.5372%" y="293" width="0.1996%" height="15" fill="rgb(209,189,4)" fg:x="5209" fg:w="11"/><text x="94.7872%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.05%)</title><rect x="94.6824%" y="277" width="0.0544%" height="15" fill="rgb(214,107,37)" fg:x="5217" fg:w="3"/><text x="94.9324%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="94.7005%" y="261" width="0.0363%" height="15" fill="rgb(245,88,54)" fg:x="5218" fg:w="2"/><text x="94.9505%" y="271.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="94.7368%" y="293" width="0.0181%" height="15" fill="rgb(205,146,20)" fg:x="5220" fg:w="1"/><text x="94.9868%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="94.7550%" y="293" width="0.0181%" height="15" fill="rgb(220,161,25)" fg:x="5221" fg:w="1"/><text x="95.0050%" y="303.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="94.7731%" y="293" width="0.0181%" height="15" fill="rgb(215,152,15)" fg:x="5222" fg:w="1"/><text x="95.0231%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="94.7913%" y="277" width="0.0181%" height="15" fill="rgb(233,192,44)" fg:x="5223" fg:w="1"/><text x="95.0413%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.04%)</title><rect x="94.8094%" y="277" width="0.0363%" height="15" fill="rgb(240,170,46)" fg:x="5224" fg:w="2"/><text x="95.0594%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.04%)</title><rect x="94.8094%" y="261" width="0.0363%" height="15" fill="rgb(207,104,33)" fg:x="5224" fg:w="2"/><text x="95.0594%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.04%)</title><rect x="94.8094%" y="245" width="0.0363%" height="15" fill="rgb(219,21,39)" fg:x="5224" fg:w="2"/><text x="95.0594%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="94.8639%" y="261" width="0.0181%" height="15" fill="rgb(214,133,29)" fg:x="5227" fg:w="1"/><text x="95.1139%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="94.8820%" y="261" width="0.0181%" height="15" fill="rgb(226,93,6)" fg:x="5228" fg:w="1"/><text x="95.1320%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (7 samples, 0.13%)</title><rect x="94.7913%" y="293" width="0.1270%" height="15" fill="rgb(252,222,34)" fg:x="5223" fg:w="7"/><text x="95.0413%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (4 samples, 0.07%)</title><rect x="94.8457%" y="277" width="0.0726%" height="15" fill="rgb(252,92,48)" fg:x="5226" fg:w="4"/><text x="95.0957%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="94.9002%" y="261" width="0.0181%" height="15" fill="rgb(245,223,24)" fg:x="5229" fg:w="1"/><text x="95.1502%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="94.9002%" y="245" width="0.0181%" height="15" fill="rgb(205,176,3)" fg:x="5229" fg:w="1"/><text x="95.1502%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="94.9365%" y="277" width="0.0181%" height="15" fill="rgb(235,151,15)" fg:x="5231" fg:w="1"/><text x="95.1865%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.11%)</title><rect x="94.9546%" y="277" width="0.1089%" height="15" fill="rgb(237,209,11)" fg:x="5232" fg:w="6"/><text x="95.2046%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3 samples, 0.05%)</title><rect x="95.0635%" y="277" width="0.0544%" height="15" fill="rgb(243,227,24)" fg:x="5238" fg:w="3"/><text x="95.3135%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (3 samples, 0.05%)</title><rect x="95.0635%" y="261" width="0.0544%" height="15" fill="rgb(239,193,16)" fg:x="5238" fg:w="3"/><text x="95.3135%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.05%)</title><rect x="95.0635%" y="245" width="0.0544%" height="15" fill="rgb(231,27,9)" fg:x="5238" fg:w="3"/><text x="95.3135%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="95.1180%" y="277" width="0.0181%" height="15" fill="rgb(219,169,10)" fg:x="5241" fg:w="1"/><text x="95.3680%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="95.1361%" y="261" width="0.0181%" height="15" fill="rgb(244,229,43)" fg:x="5242" fg:w="1"/><text x="95.3861%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="95.1543%" y="261" width="0.0181%" height="15" fill="rgb(254,38,20)" fg:x="5243" fg:w="1"/><text x="95.4043%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.05%)</title><rect x="95.1724%" y="261" width="0.0544%" height="15" fill="rgb(250,47,30)" fg:x="5244" fg:w="3"/><text x="95.4224%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.15%)</title><rect x="95.1361%" y="277" width="0.1452%" height="15" fill="rgb(224,124,36)" fg:x="5242" fg:w="8"/><text x="95.3861%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.05%)</title><rect x="95.2269%" y="261" width="0.0544%" height="15" fill="rgb(246,68,51)" fg:x="5247" fg:w="3"/><text x="95.4769%" y="271.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="95.2450%" y="245" width="0.0363%" height="15" fill="rgb(253,43,49)" fg:x="5248" fg:w="2"/><text x="95.4950%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (1 samples, 0.02%)</title><rect x="95.2813%" y="277" width="0.0181%" height="15" fill="rgb(219,54,36)" fg:x="5250" fg:w="1"/><text x="95.5313%" y="287.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="95.2995%" y="277" width="0.0181%" height="15" fill="rgb(227,133,34)" fg:x="5251" fg:w="1"/><text x="95.5495%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="95.3176%" y="277" width="0.0181%" height="15" fill="rgb(247,227,15)" fg:x="5252" fg:w="1"/><text x="95.5676%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="95.3176%" y="261" width="0.0181%" height="15" fill="rgb(229,96,14)" fg:x="5252" fg:w="1"/><text x="95.5676%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="95.3539%" y="261" width="0.0181%" height="15" fill="rgb(220,79,17)" fg:x="5254" fg:w="1"/><text x="95.6039%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="95.3539%" y="245" width="0.0181%" height="15" fill="rgb(205,131,53)" fg:x="5254" fg:w="1"/><text x="95.6039%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="95.3539%" y="229" width="0.0181%" height="15" fill="rgb(209,50,29)" fg:x="5254" fg:w="1"/><text x="95.6039%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="95.3721%" y="261" width="0.0181%" height="15" fill="rgb(245,86,46)" fg:x="5255" fg:w="1"/><text x="95.6221%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="95.3721%" y="245" width="0.0181%" height="15" fill="rgb(235,66,46)" fg:x="5255" fg:w="1"/><text x="95.6221%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.04%)</title><rect x="95.3902%" y="261" width="0.0363%" height="15" fill="rgb(232,148,31)" fg:x="5256" fg:w="2"/><text x="95.6402%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (1 samples, 0.02%)</title><rect x="95.4265%" y="245" width="0.0181%" height="15" fill="rgb(217,149,8)" fg:x="5258" fg:w="1"/><text x="95.6765%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (2 samples, 0.04%)</title><rect x="95.4265%" y="261" width="0.0363%" height="15" fill="rgb(209,183,11)" fg:x="5258" fg:w="2"/><text x="95.6765%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="95.4446%" y="245" width="0.0181%" height="15" fill="rgb(208,55,20)" fg:x="5259" fg:w="1"/><text x="95.6946%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_bexp (1 samples, 0.02%)</title><rect x="95.4446%" y="229" width="0.0181%" height="15" fill="rgb(218,39,14)" fg:x="5259" fg:w="1"/><text x="95.6946%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="95.4446%" y="213" width="0.0181%" height="15" fill="rgb(216,169,33)" fg:x="5259" fg:w="1"/><text x="95.6946%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="95.4991%" y="245" width="0.0181%" height="15" fill="rgb(233,80,24)" fg:x="5262" fg:w="1"/><text x="95.7491%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="95.4991%" y="229" width="0.0181%" height="15" fill="rgb(213,179,31)" fg:x="5262" fg:w="1"/><text x="95.7491%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="95.4991%" y="213" width="0.0181%" height="15" fill="rgb(209,19,5)" fg:x="5262" fg:w="1"/><text x="95.7491%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="95.5172%" y="229" width="0.0181%" height="15" fill="rgb(219,18,35)" fg:x="5263" fg:w="1"/><text x="95.7672%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (5 samples, 0.09%)</title><rect x="95.4628%" y="261" width="0.0907%" height="15" fill="rgb(209,169,16)" fg:x="5260" fg:w="5"/><text x="95.7128%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.04%)</title><rect x="95.5172%" y="245" width="0.0363%" height="15" fill="rgb(245,90,51)" fg:x="5263" fg:w="2"/><text x="95.7672%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="95.5354%" y="229" width="0.0181%" height="15" fill="rgb(220,99,45)" fg:x="5264" fg:w="1"/><text x="95.7854%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="95.5354%" y="213" width="0.0181%" height="15" fill="rgb(249,89,25)" fg:x="5264" fg:w="1"/><text x="95.7854%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.04%)</title><rect x="95.5535%" y="245" width="0.0363%" height="15" fill="rgb(239,193,0)" fg:x="5265" fg:w="2"/><text x="95.8035%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="95.6080%" y="229" width="0.0181%" height="15" fill="rgb(231,126,1)" fg:x="5268" fg:w="1"/><text x="95.8580%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="95.6261%" y="229" width="0.0181%" height="15" fill="rgb(243,166,3)" fg:x="5269" fg:w="1"/><text x="95.8761%" y="239.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="95.6443%" y="213" width="0.0181%" height="15" fill="rgb(223,22,34)" fg:x="5270" fg:w="1"/><text x="95.8943%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (20 samples, 0.36%)</title><rect x="95.3358%" y="277" width="0.3630%" height="15" fill="rgb(251,52,51)" fg:x="5253" fg:w="20"/><text x="95.5858%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (8 samples, 0.15%)</title><rect x="95.5535%" y="261" width="0.1452%" height="15" fill="rgb(221,165,28)" fg:x="5265" fg:w="8"/><text x="95.8035%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.11%)</title><rect x="95.5898%" y="245" width="0.1089%" height="15" fill="rgb(218,121,47)" fg:x="5267" fg:w="6"/><text x="95.8398%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.05%)</title><rect x="95.6443%" y="229" width="0.0544%" height="15" fill="rgb(209,120,9)" fg:x="5270" fg:w="3"/><text x="95.8943%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.04%)</title><rect x="95.6624%" y="213" width="0.0363%" height="15" fill="rgb(236,68,12)" fg:x="5271" fg:w="2"/><text x="95.9124%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="95.6806%" y="197" width="0.0181%" height="15" fill="rgb(225,194,26)" fg:x="5272" fg:w="1"/><text x="95.9306%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="95.6987%" y="261" width="0.0181%" height="15" fill="rgb(231,84,39)" fg:x="5273" fg:w="1"/><text x="95.9487%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="95.7169%" y="261" width="0.0181%" height="15" fill="rgb(210,11,45)" fg:x="5274" fg:w="1"/><text x="95.9669%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="95.8258%" y="245" width="0.0363%" height="15" fill="rgb(224,54,52)" fg:x="5280" fg:w="2"/><text x="96.0758%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.11%)</title><rect x="95.8621%" y="245" width="0.1089%" height="15" fill="rgb(238,102,14)" fg:x="5282" fg:w="6"/><text x="96.1121%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.07%)</title><rect x="95.8984%" y="229" width="0.0726%" height="15" fill="rgb(243,160,52)" fg:x="5284" fg:w="4"/><text x="96.1484%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.05%)</title><rect x="95.9165%" y="213" width="0.0544%" height="15" fill="rgb(216,114,19)" fg:x="5285" fg:w="3"/><text x="96.1665%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="95.9710%" y="245" width="0.0181%" height="15" fill="rgb(244,166,37)" fg:x="5288" fg:w="1"/><text x="96.2210%" y="255.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="95.9891%" y="245" width="0.0181%" height="15" fill="rgb(246,29,44)" fg:x="5289" fg:w="1"/><text x="96.2391%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="96.0073%" y="245" width="0.0181%" height="15" fill="rgb(215,56,53)" fg:x="5290" fg:w="1"/><text x="96.2573%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (17 samples, 0.31%)</title><rect x="95.7350%" y="261" width="0.3085%" height="15" fill="rgb(217,60,2)" fg:x="5275" fg:w="17"/><text x="95.9850%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="96.0254%" y="245" width="0.0181%" height="15" fill="rgb(207,26,24)" fg:x="5291" fg:w="1"/><text x="96.2754%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="96.0254%" y="229" width="0.0181%" height="15" fill="rgb(252,210,15)" fg:x="5291" fg:w="1"/><text x="96.2754%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (64 samples, 1.16%)</title><rect x="94.9183%" y="293" width="1.1615%" height="15" fill="rgb(253,209,26)" fg:x="5230" fg:w="64"/><text x="95.1683%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (21 samples, 0.38%)</title><rect x="95.6987%" y="277" width="0.3811%" height="15" fill="rgb(238,170,14)" fg:x="5273" fg:w="21"/><text x="95.9487%" y="287.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.04%)</title><rect x="96.0436%" y="261" width="0.0363%" height="15" fill="rgb(216,178,15)" fg:x="5292" fg:w="2"/><text x="96.2936%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="96.0799%" y="277" width="0.0181%" height="15" fill="rgb(250,197,2)" fg:x="5294" fg:w="1"/><text x="96.3299%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="96.2613%" y="261" width="0.0181%" height="15" fill="rgb(212,70,42)" fg:x="5304" fg:w="1"/><text x="96.5113%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (14 samples, 0.25%)</title><rect x="96.2795%" y="261" width="0.2541%" height="15" fill="rgb(227,213,9)" fg:x="5305" fg:w="14"/><text x="96.5295%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (11 samples, 0.20%)</title><rect x="96.3339%" y="245" width="0.1996%" height="15" fill="rgb(245,99,25)" fg:x="5308" fg:w="11"/><text x="96.5839%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (9 samples, 0.16%)</title><rect x="96.3702%" y="229" width="0.1633%" height="15" fill="rgb(250,82,29)" fg:x="5310" fg:w="9"/><text x="96.6202%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="96.5336%" y="261" width="0.0363%" height="15" fill="rgb(241,226,54)" fg:x="5319" fg:w="2"/><text x="96.7836%" y="271.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="96.5699%" y="261" width="0.0181%" height="15" fill="rgb(221,99,41)" fg:x="5321" fg:w="1"/><text x="96.8199%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="96.5880%" y="261" width="0.0181%" height="15" fill="rgb(213,90,21)" fg:x="5322" fg:w="1"/><text x="96.8380%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="96.6062%" y="245" width="0.0363%" height="15" fill="rgb(205,208,24)" fg:x="5323" fg:w="2"/><text x="96.8562%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="96.6425%" y="245" width="0.0726%" height="15" fill="rgb(246,31,12)" fg:x="5325" fg:w="4"/><text x="96.8925%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="96.7151%" y="245" width="0.0363%" height="15" fill="rgb(213,154,6)" fg:x="5329" fg:w="2"/><text x="96.9651%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="96.9873%" y="229" width="0.0181%" height="15" fill="rgb(222,163,29)" fg:x="5344" fg:w="1"/><text x="97.2373%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="96.9873%" y="213" width="0.0181%" height="15" fill="rgb(227,201,8)" fg:x="5344" fg:w="1"/><text x="97.2373%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="97.0054%" y="229" width="0.0544%" height="15" fill="rgb(233,9,32)" fg:x="5345" fg:w="3"/><text x="97.2554%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.09%)</title><rect x="97.0599%" y="229" width="0.0907%" height="15" fill="rgb(217,54,24)" fg:x="5348" fg:w="5"/><text x="97.3099%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (60 samples, 1.09%)</title><rect x="96.0980%" y="277" width="1.0889%" height="15" fill="rgb(235,192,0)" fg:x="5295" fg:w="60"/><text x="96.3480%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.58%)</title><rect x="96.6062%" y="261" width="0.5808%" height="15" fill="rgb(235,45,9)" fg:x="5323" fg:w="32"/><text x="96.8562%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.44%)</title><rect x="96.7514%" y="245" width="0.4356%" height="15" fill="rgb(246,42,40)" fg:x="5331" fg:w="24"/><text x="97.0014%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="97.1506%" y="229" width="0.0363%" height="15" fill="rgb(248,111,24)" fg:x="5353" fg:w="2"/><text x="97.4006%" y="239.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="97.1869%" y="277" width="0.0181%" height="15" fill="rgb(249,65,22)" fg:x="5355" fg:w="1"/><text x="97.4369%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (169 samples, 3.07%)</title><rect x="94.1561%" y="309" width="3.0672%" height="15" fill="rgb(238,111,51)" fg:x="5188" fg:w="169"/><text x="94.4061%" y="319.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (63 samples, 1.14%)</title><rect x="96.0799%" y="293" width="1.1434%" height="15" fill="rgb(250,118,22)" fg:x="5294" fg:w="63"/><text x="96.3299%" y="303.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="97.2051%" y="277" width="0.0181%" height="15" fill="rgb(234,84,26)" fg:x="5356" fg:w="1"/><text x="97.4551%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="97.2232%" y="293" width="0.0181%" height="15" fill="rgb(243,172,12)" fg:x="5357" fg:w="1"/><text x="97.4732%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="97.2414%" y="293" width="0.0181%" height="15" fill="rgb(236,150,49)" fg:x="5358" fg:w="1"/><text x="97.4914%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.05%)</title><rect x="97.3866%" y="277" width="0.0544%" height="15" fill="rgb(225,197,26)" fg:x="5366" fg:w="3"/><text x="97.6366%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (10 samples, 0.18%)</title><rect x="97.4410%" y="277" width="0.1815%" height="15" fill="rgb(214,17,42)" fg:x="5369" fg:w="10"/><text x="97.6910%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (8 samples, 0.15%)</title><rect x="97.4773%" y="261" width="0.1452%" height="15" fill="rgb(224,165,40)" fg:x="5371" fg:w="8"/><text x="97.7273%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (8 samples, 0.15%)</title><rect x="97.4773%" y="245" width="0.1452%" height="15" fill="rgb(246,100,4)" fg:x="5371" fg:w="8"/><text x="97.7273%" y="255.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="97.6225%" y="277" width="0.0181%" height="15" fill="rgb(222,103,0)" fg:x="5379" fg:w="1"/><text x="97.8725%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.09%)</title><rect x="97.6407%" y="277" width="0.0907%" height="15" fill="rgb(227,189,26)" fg:x="5380" fg:w="5"/><text x="97.8907%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.09%)</title><rect x="97.7314%" y="277" width="0.0907%" height="15" fill="rgb(214,202,17)" fg:x="5385" fg:w="5"/><text x="97.9814%" y="287.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="97.8221%" y="277" width="0.0181%" height="15" fill="rgb(229,111,3)" fg:x="5390" fg:w="1"/><text x="98.0721%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="97.8766%" y="261" width="0.0544%" height="15" fill="rgb(229,172,15)" fg:x="5393" fg:w="3"/><text x="98.1266%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="97.9310%" y="261" width="0.0726%" height="15" fill="rgb(230,224,35)" fg:x="5396" fg:w="4"/><text x="98.1810%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (44 samples, 0.80%)</title><rect x="97.2595%" y="293" width="0.7985%" height="15" fill="rgb(251,141,6)" fg:x="5359" fg:w="44"/><text x="97.5095%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.22%)</title><rect x="97.8403%" y="277" width="0.2178%" height="15" fill="rgb(225,208,6)" fg:x="5391" fg:w="12"/><text x="98.0903%" y="287.50"></text></g><g><title>rust-gkat`core::ptr::hash (3 samples, 0.05%)</title><rect x="98.0036%" y="261" width="0.0544%" height="15" fill="rgb(246,181,16)" fg:x="5400" fg:w="3"/><text x="98.2536%" y="271.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.04%)</title><rect x="98.0581%" y="293" width="0.0363%" height="15" fill="rgb(227,129,36)" fg:x="5403" fg:w="2"/><text x="98.3081%" y="303.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.05%)</title><rect x="98.0944%" y="293" width="0.0544%" height="15" fill="rgb(248,117,24)" fg:x="5405" fg:w="3"/><text x="98.3444%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.07%)</title><rect x="98.1488%" y="293" width="0.0726%" height="15" fill="rgb(214,185,35)" fg:x="5408" fg:w="4"/><text x="98.3988%" y="303.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (1 samples, 0.02%)</title><rect x="98.2214%" y="293" width="0.0181%" height="15" fill="rgb(236,150,34)" fg:x="5412" fg:w="1"/><text x="98.4714%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (268 samples, 4.86%)</title><rect x="93.3938%" y="325" width="4.8639%" height="15" fill="rgb(243,228,27)" fg:x="5146" fg:w="268"/><text x="93.6438%" y="335.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (57 samples, 1.03%)</title><rect x="97.2232%" y="309" width="1.0345%" height="15" fill="rgb(245,77,44)" fg:x="5357" fg:w="57"/><text x="97.4732%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.2396%" y="293" width="0.0181%" height="15" fill="rgb(235,214,42)" fg:x="5413" fg:w="1"/><text x="98.4896%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="98.2759%" y="309" width="0.0181%" height="15" fill="rgb(221,74,3)" fg:x="5415" fg:w="1"/><text x="98.5259%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.2940%" y="309" width="0.0181%" height="15" fill="rgb(206,121,29)" fg:x="5416" fg:w="1"/><text x="98.5440%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.04%)</title><rect x="98.3848%" y="293" width="0.0363%" height="15" fill="rgb(249,131,53)" fg:x="5421" fg:w="2"/><text x="98.6348%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.07%)</title><rect x="98.4211%" y="293" width="0.0726%" height="15" fill="rgb(236,170,29)" fg:x="5423" fg:w="4"/><text x="98.6711%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.11%)</title><rect x="98.4936%" y="293" width="0.1089%" height="15" fill="rgb(247,96,15)" fg:x="5427" fg:w="6"/><text x="98.7436%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.09%)</title><rect x="98.5118%" y="277" width="0.0907%" height="15" fill="rgb(211,210,7)" fg:x="5428" fg:w="5"/><text x="98.7618%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.09%)</title><rect x="98.5118%" y="261" width="0.0907%" height="15" fill="rgb(240,88,50)" fg:x="5428" fg:w="5"/><text x="98.7618%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="98.6025%" y="293" width="0.0363%" height="15" fill="rgb(209,229,26)" fg:x="5433" fg:w="2"/><text x="98.8525%" y="303.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.04%)</title><rect x="98.6388%" y="293" width="0.0363%" height="15" fill="rgb(210,68,23)" fg:x="5435" fg:w="2"/><text x="98.8888%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="98.6751%" y="293" width="0.0363%" height="15" fill="rgb(229,180,13)" fg:x="5437" fg:w="2"/><text x="98.9251%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.05%)</title><rect x="98.7477%" y="277" width="0.0544%" height="15" fill="rgb(236,53,44)" fg:x="5441" fg:w="3"/><text x="98.9977%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (33 samples, 0.60%)</title><rect x="98.3122%" y="309" width="0.5989%" height="15" fill="rgb(244,214,29)" fg:x="5417" fg:w="33"/><text x="98.5622%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.20%)</title><rect x="98.7114%" y="293" width="0.1996%" height="15" fill="rgb(220,75,29)" fg:x="5439" fg:w="11"/><text x="98.9614%" y="303.50"></text></g><g><title>rust-gkat`core::ptr::hash (6 samples, 0.11%)</title><rect x="98.8022%" y="277" width="0.1089%" height="15" fill="rgb(214,183,37)" fg:x="5444" fg:w="6"/><text x="99.0522%" y="287.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (1 samples, 0.02%)</title><rect x="98.9111%" y="309" width="0.0181%" height="15" fill="rgb(239,117,29)" fg:x="5450" fg:w="1"/><text x="99.1611%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (329 samples, 5.97%)</title><rect x="92.9764%" y="341" width="5.9710%" height="15" fill="rgb(237,171,35)" fg:x="5123" fg:w="329"/><text x="93.2264%" y="351.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (38 samples, 0.69%)</title><rect x="98.2577%" y="325" width="0.6897%" height="15" fill="rgb(229,178,53)" fg:x="5414" fg:w="38"/><text x="98.5077%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.9292%" y="309" width="0.0181%" height="15" fill="rgb(210,102,19)" fg:x="5451" fg:w="1"/><text x="99.1792%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="98.9474%" y="325" width="0.0181%" height="15" fill="rgb(235,127,22)" fg:x="5452" fg:w="1"/><text x="99.1974%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="98.9655%" y="325" width="0.0181%" height="15" fill="rgb(244,31,31)" fg:x="5453" fg:w="1"/><text x="99.2155%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.05%)</title><rect x="99.0744%" y="309" width="0.0544%" height="15" fill="rgb(231,43,21)" fg:x="5459" fg:w="3"/><text x="99.3244%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.05%)</title><rect x="99.0744%" y="293" width="0.0544%" height="15" fill="rgb(217,131,35)" fg:x="5459" fg:w="3"/><text x="99.3244%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.05%)</title><rect x="99.0744%" y="277" width="0.0544%" height="15" fill="rgb(221,149,4)" fg:x="5459" fg:w="3"/><text x="99.3244%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.04%)</title><rect x="99.1289%" y="309" width="0.0363%" height="15" fill="rgb(232,170,28)" fg:x="5462" fg:w="2"/><text x="99.3789%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.05%)</title><rect x="99.1652%" y="309" width="0.0544%" height="15" fill="rgb(238,56,10)" fg:x="5464" fg:w="3"/><text x="99.4152%" y="319.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="99.2196%" y="309" width="0.0181%" height="15" fill="rgb(235,196,14)" fg:x="5467" fg:w="1"/><text x="99.4696%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.2377%" y="293" width="0.0181%" height="15" fill="rgb(216,45,48)" fg:x="5468" fg:w="1"/><text x="99.4877%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (17 samples, 0.31%)</title><rect x="98.9837%" y="325" width="0.3085%" height="15" fill="rgb(238,213,17)" fg:x="5454" fg:w="17"/><text x="99.2337%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.05%)</title><rect x="99.2377%" y="309" width="0.0544%" height="15" fill="rgb(212,13,2)" fg:x="5468" fg:w="3"/><text x="99.4877%" y="319.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="99.2559%" y="293" width="0.0363%" height="15" fill="rgb(240,114,20)" fg:x="5469" fg:w="2"/><text x="99.5059%" y="303.50"></text></g><g><title>rust-gkat`Cudd_Ref (1 samples, 0.02%)</title><rect x="99.2922%" y="325" width="0.0181%" height="15" fill="rgb(228,41,40)" fg:x="5471" fg:w="1"/><text x="99.5422%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (368 samples, 6.68%)</title><rect x="92.6497%" y="357" width="6.6788%" height="15" fill="rgb(244,132,35)" fg:x="5105" fg:w="368"/><text x="92.8997%" y="367.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (21 samples, 0.38%)</title><rect x="98.9474%" y="341" width="0.3811%" height="15" fill="rgb(253,189,4)" fg:x="5452" fg:w="21"/><text x="99.1974%" y="351.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="99.3103%" y="325" width="0.0181%" height="15" fill="rgb(224,37,19)" fg:x="5472" fg:w="1"/><text x="99.5603%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="99.4011%" y="325" width="0.0363%" height="15" fill="rgb(235,223,18)" fg:x="5477" fg:w="2"/><text x="99.6511%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="99.4374%" y="325" width="0.0181%" height="15" fill="rgb(235,163,25)" fg:x="5479" fg:w="1"/><text x="99.6874%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.4555%" y="309" width="0.0181%" height="15" fill="rgb(217,145,28)" fg:x="5480" fg:w="1"/><text x="99.7055%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.4737%" y="309" width="0.0181%" height="15" fill="rgb(223,223,32)" fg:x="5481" fg:w="1"/><text x="99.7237%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (387 samples, 7.02%)</title><rect x="92.5045%" y="373" width="7.0236%" height="15" fill="rgb(227,189,39)" fg:x="5097" fg:w="387"/><text x="92.7545%" y="383.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (11 samples, 0.20%)</title><rect x="99.3285%" y="357" width="0.1996%" height="15" fill="rgb(248,10,22)" fg:x="5473" fg:w="11"/><text x="99.5785%" y="367.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (11 samples, 0.20%)</title><rect x="99.3285%" y="341" width="0.1996%" height="15" fill="rgb(248,46,39)" fg:x="5473" fg:w="11"/><text x="99.5785%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.07%)</title><rect x="99.4555%" y="325" width="0.0726%" height="15" fill="rgb(248,113,48)" fg:x="5480" fg:w="4"/><text x="99.7055%" y="335.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="99.4918%" y="309" width="0.0363%" height="15" fill="rgb(245,16,25)" fg:x="5482" fg:w="2"/><text x="99.7418%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.04%)</title><rect x="99.5281%" y="341" width="0.0363%" height="15" fill="rgb(249,152,16)" fg:x="5484" fg:w="2"/><text x="99.7781%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="99.5463%" y="325" width="0.0181%" height="15" fill="rgb(250,16,1)" fg:x="5485" fg:w="1"/><text x="99.7963%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="99.5463%" y="309" width="0.0181%" height="15" fill="rgb(249,138,3)" fg:x="5485" fg:w="1"/><text x="99.7963%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.5644%" y="341" width="0.0181%" height="15" fill="rgb(227,71,41)" fg:x="5486" fg:w="1"/><text x="99.8144%" y="351.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.09%)</title><rect x="99.5281%" y="357" width="0.0907%" height="15" fill="rgb(209,184,23)" fg:x="5484" fg:w="5"/><text x="99.7781%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.04%)</title><rect x="99.5826%" y="341" width="0.0363%" height="15" fill="rgb(223,215,31)" fg:x="5487" fg:w="2"/><text x="99.8326%" y="351.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.04%)</title><rect x="99.5826%" y="325" width="0.0363%" height="15" fill="rgb(210,146,28)" fg:x="5487" fg:w="2"/><text x="99.8326%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (397 samples, 7.21%)</title><rect x="92.4319%" y="389" width="7.2051%" height="15" fill="rgb(209,183,41)" fg:x="5093" fg:w="397"/><text x="92.6819%" y="399.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (6 samples, 0.11%)</title><rect x="99.5281%" y="373" width="0.1089%" height="15" fill="rgb(209,224,45)" fg:x="5484" fg:w="6"/><text x="99.7781%" y="383.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (1 samples, 0.02%)</title><rect x="99.6189%" y="357" width="0.0181%" height="15" fill="rgb(224,209,51)" fg:x="5489" fg:w="1"/><text x="99.8689%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="99.6370%" y="357" width="0.0181%" height="15" fill="rgb(223,17,39)" fg:x="5490" fg:w="1"/><text x="99.8870%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.6552%" y="357" width="0.0181%" height="15" fill="rgb(234,204,37)" fg:x="5491" fg:w="1"/><text x="99.9052%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (401 samples, 7.28%)</title><rect x="92.4138%" y="405" width="7.2777%" height="15" fill="rgb(236,120,5)" fg:x="5092" fg:w="401"/><text x="92.6638%" y="415.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (3 samples, 0.05%)</title><rect x="99.6370%" y="389" width="0.0544%" height="15" fill="rgb(248,97,27)" fg:x="5490" fg:w="3"/><text x="99.8870%" y="399.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.05%)</title><rect x="99.6370%" y="373" width="0.0544%" height="15" fill="rgb(240,66,17)" fg:x="5490" fg:w="3"/><text x="99.8870%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.6733%" y="357" width="0.0181%" height="15" fill="rgb(210,79,3)" fg:x="5492" fg:w="1"/><text x="99.9233%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.6733%" y="341" width="0.0181%" height="15" fill="rgb(214,176,27)" fg:x="5492" fg:w="1"/><text x="99.9233%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="99.6915%" y="373" width="0.0181%" height="15" fill="rgb(235,185,3)" fg:x="5493" fg:w="1"/><text x="99.9415%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="99.6915%" y="357" width="0.0181%" height="15" fill="rgb(227,24,12)" fg:x="5493" fg:w="1"/><text x="99.9415%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="99.6915%" y="341" width="0.0181%" height="15" fill="rgb(252,169,48)" fg:x="5493" fg:w="1"/><text x="99.9415%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (403 samples, 7.31%)</title><rect x="92.4138%" y="421" width="7.3140%" height="15" fill="rgb(212,65,1)" fg:x="5092" fg:w="403"/><text x="92.6638%" y="431.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (2 samples, 0.04%)</title><rect x="99.6915%" y="405" width="0.0363%" height="15" fill="rgb(242,39,24)" fg:x="5493" fg:w="2"/><text x="99.9415%" y="415.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.04%)</title><rect x="99.6915%" y="389" width="0.0363%" height="15" fill="rgb(249,32,23)" fg:x="5493" fg:w="2"/><text x="99.9415%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.7096%" y="373" width="0.0181%" height="15" fill="rgb(251,195,23)" fg:x="5494" fg:w="1"/><text x="99.9596%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="613" width="7.3684%" height="15" fill="rgb(236,174,8)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="623.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="597" width="7.3684%" height="15" fill="rgb(220,197,8)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="607.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="581" width="7.3684%" height="15" fill="rgb(240,108,37)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="591.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="565" width="7.3684%" height="15" fill="rgb(232,176,24)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="575.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="549" width="7.3684%" height="15" fill="rgb(243,35,29)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="559.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="533" width="7.3684%" height="15" fill="rgb(210,37,18)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="543.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="517" width="7.3684%" height="15" fill="rgb(224,184,40)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="527.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="501" width="7.3684%" height="15" fill="rgb(236,39,29)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="511.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="485" width="7.3684%" height="15" fill="rgb(232,48,39)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="495.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (406 samples, 7.37%)</title><rect x="92.3775%" y="469" width="7.3684%" height="15" fill="rgb(236,34,42)" fg:x="5090" fg:w="406"/><text x="92.6275%" y="479.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (405 samples, 7.35%)</title><rect x="92.3956%" y="453" width="7.3503%" height="15" fill="rgb(243,106,37)" fg:x="5091" fg:w="405"/><text x="92.6456%" y="463.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (405 samples, 7.35%)</title><rect x="92.3956%" y="437" width="7.3503%" height="15" fill="rgb(218,96,6)" fg:x="5091" fg:w="405"/><text x="92.6456%" y="447.50">rust-gkat`..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (1 samples, 0.02%)</title><rect x="99.7278%" y="421" width="0.0181%" height="15" fill="rgb(235,130,12)" fg:x="5495" fg:w="1"/><text x="99.9778%" y="431.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="99.7278%" y="405" width="0.0181%" height="15" fill="rgb(231,95,0)" fg:x="5495" fg:w="1"/><text x="99.9778%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.7278%" y="389" width="0.0181%" height="15" fill="rgb(228,12,23)" fg:x="5495" fg:w="1"/><text x="99.9778%" y="399.50"></text></g><g><title>rust-gkat`core::ptr::hash (1 samples, 0.02%)</title><rect x="99.7278%" y="373" width="0.0181%" height="15" fill="rgb(216,12,1)" fg:x="5495" fg:w="1"/><text x="99.9778%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 0.02%)</title><rect x="99.7459%" y="597" width="0.0181%" height="15" fill="rgb(219,59,3)" fg:x="5496" fg:w="1"/><text x="99.9959%" y="607.50"></text></g><g><title>rust-gkat`std::fs::read_to_string::inner (2 samples, 0.04%)</title><rect x="99.7459%" y="613" width="0.0363%" height="15" fill="rgb(215,208,46)" fg:x="5496" fg:w="2"/><text x="99.9959%" y="623.50"></text></g><g><title>rust-gkat`core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="99.7641%" y="597" width="0.0181%" height="15" fill="rgb(254,224,29)" fg:x="5497" fg:w="1"/><text x="100.0141%" y="607.50"></text></g><g><title>dyld`start (5,499 samples, 99.80%)</title><rect x="0.0000%" y="709" width="99.8004%" height="15" fill="rgb(232,14,29)" fg:x="0" fg:w="5499"/><text x="0.2500%" y="719.50">dyld`start</text></g><g><title>rust-gkat`main (5,496 samples, 99.75%)</title><rect x="0.0544%" y="693" width="99.7459%" height="15" fill="rgb(208,45,52)" fg:x="3" fg:w="5496"/><text x="0.3044%" y="703.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (5,496 samples, 99.75%)</title><rect x="0.0544%" y="677" width="99.7459%" height="15" fill="rgb(234,191,28)" fg:x="3" fg:w="5496"/><text x="0.3044%" y="687.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (5,496 samples, 99.75%)</title><rect x="0.0544%" y="661" width="99.7459%" height="15" fill="rgb(244,67,43)" fg:x="3" fg:w="5496"/><text x="0.3044%" y="671.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (5,496 samples, 99.75%)</title><rect x="0.0544%" y="645" width="99.7459%" height="15" fill="rgb(236,189,24)" fg:x="3" fg:w="5496"/><text x="0.3044%" y="655.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (5,495 samples, 99.73%)</title><rect x="0.0726%" y="629" width="99.7278%" height="15" fill="rgb(239,214,33)" fg:x="4" fg:w="5495"/><text x="0.3226%" y="639.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.7822%" y="613" width="0.0181%" height="15" fill="rgb(226,176,41)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="623.50"></text></g><g><title>rust-gkat`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.7822%" y="597" width="0.0181%" height="15" fill="rgb(248,47,8)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="607.50"></text></g><g><title>rust-gkat`core::fmt::write (1 samples, 0.02%)</title><rect x="99.7822%" y="581" width="0.0181%" height="15" fill="rgb(218,81,44)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="591.50"></text></g><g><title>rust-gkat`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.7822%" y="565" width="0.0181%" height="15" fill="rgb(213,98,6)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="575.50"></text></g><g><title>rust-gkat`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.7822%" y="549" width="0.0181%" height="15" fill="rgb(222,85,22)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.02%)</title><rect x="99.7822%" y="533" width="0.0181%" height="15" fill="rgb(239,46,39)" fg:x="5498" fg:w="1"/><text x="100.0322%" y="543.50"></text></g><g><title>all (5,510 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(237,12,29)" fg:x="0" fg:w="5510"/><text x="0.2500%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__exit (11 samples, 0.20%)</title><rect x="99.8004%" y="709" width="0.1996%" height="15" fill="rgb(214,77,8)" fg:x="5499" fg:w="11"/><text x="100.0504%" y="719.50"></text></g></svg></svg>