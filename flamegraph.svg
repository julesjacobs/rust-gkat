<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="597.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="201"><g><title>rust-gkat`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.50%)</title><rect x="0.0000%" y="389" width="0.4975%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.4975%" y="389" width="0.4975%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.7475%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.4975%" y="373" width="0.4975%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.7475%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.4975%" y="357" width="0.4975%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.7475%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.4975%" y="341" width="0.4975%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.7475%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.4975%" y="325" width="0.4975%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.7475%" y="335.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="0.4975%" y="309" width="0.4975%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.7475%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="0.4975%" y="293" width="0.4975%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.7475%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="0.4975%" y="277" width="0.4975%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.7475%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="0.4975%" y="261" width="0.4975%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.7475%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="0.4975%" y="245" width="0.4975%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.7475%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.9950%" y="357" width="0.4975%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="1.2450%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="0.9950%" y="341" width="0.4975%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="1.2450%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="0.9950%" y="325" width="0.4975%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="1.2450%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="0.9950%" y="309" width="0.4975%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="1.2450%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="0.9950%" y="293" width="0.4975%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="1.2450%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="1.4925%" y="341" width="0.4975%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="1.7425%" y="351.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="1.4925%" y="325" width="0.4975%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="1.7425%" y="335.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="1.4925%" y="309" width="0.4975%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.7425%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="1.9900%" y="325" width="0.4975%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="2.2400%" y="335.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="1.9900%" y="309" width="0.4975%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="2.2400%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="1.9900%" y="293" width="0.4975%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="2.2400%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.50%)</title><rect x="2.4876%" y="309" width="0.4975%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="2.7376%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="3.4826%" y="277" width="0.4975%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="3.7326%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 1.49%)</title><rect x="2.9851%" y="293" width="1.4925%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="3"/><text x="3.2351%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="3.9801%" y="277" width="0.4975%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="4.2301%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 1.99%)</title><rect x="2.9851%" y="309" width="1.9900%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="4"/><text x="3.2351%" y="319.50">r..</text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="4.4776%" y="293" width="0.4975%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="4.7276%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="4.9751%" y="309" width="0.4975%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="5.2251%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="4.9751%" y="293" width="0.4975%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="1"/><text x="5.2251%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="4.9751%" y="277" width="0.4975%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="1"/><text x="5.2251%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="4.9751%" y="261" width="0.4975%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="5.2251%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (1 samples, 0.50%)</title><rect x="4.9751%" y="245" width="0.4975%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="5.2251%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="4.9751%" y="229" width="0.4975%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="5.2251%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="4.9751%" y="213" width="0.4975%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="5.2251%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.50%)</title><rect x="5.4726%" y="293" width="0.4975%" height="15" fill="rgb(233,36,39)" fg:x="11" fg:w="1"/><text x="5.7226%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="5.9701%" y="293" width="0.4975%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="1"/><text x="6.2201%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="6.4677%" y="293" width="0.4975%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="1"/><text x="6.7177%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="6.4677%" y="277" width="0.4975%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="1"/><text x="6.7177%" y="287.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="6.9652%" y="277" width="0.4975%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="1"/><text x="7.2152%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="6.9652%" y="261" width="0.4975%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="7.2152%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="6.9652%" y="245" width="0.4975%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="1"/><text x="7.2152%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="6.9652%" y="229" width="0.4975%" height="15" fill="rgb(235,93,37)" fg:x="14" fg:w="1"/><text x="7.2152%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="6.9652%" y="213" width="0.4975%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="1"/><text x="7.2152%" y="223.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.50%)</title><rect x="7.9602%" y="229" width="0.4975%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="1"/><text x="8.2102%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.50%)</title><rect x="7.9602%" y="213" width="0.4975%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="1"/><text x="8.2102%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.50%)</title><rect x="7.9602%" y="197" width="0.4975%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="1"/><text x="8.2102%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="8.4577%" y="213" width="0.9950%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="2"/><text x="8.7077%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="8.4577%" y="197" width="0.9950%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="2"/><text x="8.7077%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="8.4577%" y="181" width="0.9950%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="2"/><text x="8.7077%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="8.4577%" y="165" width="0.9950%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="2"/><text x="8.7077%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="9.4527%" y="197" width="0.4975%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="1"/><text x="9.7027%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 3.48%)</title><rect x="6.9652%" y="293" width="3.4826%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="7"/><text x="7.2152%" y="303.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="7.4627%" y="277" width="2.9851%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="6"/><text x="7.7127%" y="287.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="7.4627%" y="261" width="2.9851%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="6"/><text x="7.7127%" y="271.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="7.9602%" y="245" width="2.4876%" height="15" fill="rgb(251,118,11)" fg:x="16" fg:w="5"/><text x="8.2102%" y="255.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="8.4577%" y="229" width="1.9900%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="4"/><text x="8.7077%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="9.4527%" y="213" width="0.9950%" height="15" fill="rgb(247,81,37)" fg:x="19" fg:w="2"/><text x="9.7027%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="9.9502%" y="197" width="0.4975%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="1"/><text x="10.2002%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="9.9502%" y="181" width="0.4975%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="1"/><text x="10.2002%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (1 samples, 0.50%)</title><rect x="10.4478%" y="213" width="0.4975%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="1"/><text x="10.6978%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="10.4478%" y="197" width="0.4975%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="1"/><text x="10.6978%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="10.4478%" y="181" width="0.4975%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="1"/><text x="10.6978%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="10.4478%" y="293" width="0.9950%" height="15" fill="rgb(222,148,37)" fg:x="21" fg:w="2"/><text x="10.6978%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="10.4478%" y="277" width="0.9950%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="2"/><text x="10.6978%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="10.4478%" y="261" width="0.9950%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="2"/><text x="10.6978%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="10.4478%" y="245" width="0.9950%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="2"/><text x="10.6978%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="10.4478%" y="229" width="0.9950%" height="15" fill="rgb(213,79,30)" fg:x="21" fg:w="2"/><text x="10.6978%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="10.9453%" y="213" width="0.4975%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="11.1953%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (1 samples, 0.50%)</title><rect x="10.9453%" y="197" width="0.4975%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="11.1953%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="10.9453%" y="181" width="0.4975%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="11.1953%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="10.9453%" y="165" width="0.4975%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="11.1953%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="11.4428%" y="277" width="0.4975%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="1"/><text x="11.6928%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.50%)</title><rect x="11.9403%" y="277" width="0.4975%" height="15" fill="rgb(240,54,50)" fg:x="24" fg:w="1"/><text x="12.1903%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="11.9403%" y="261" width="0.4975%" height="15" fill="rgb(233,84,52)" fg:x="24" fg:w="1"/><text x="12.1903%" y="271.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.50%)</title><rect x="12.4378%" y="277" width="0.4975%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="1"/><text x="12.6878%" y="287.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="12.9353%" y="277" width="0.4975%" height="15" fill="rgb(249,43,39)" fg:x="26" fg:w="1"/><text x="13.1853%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 1.49%)</title><rect x="14.9254%" y="245" width="1.4925%" height="15" fill="rgb(209,38,44)" fg:x="30" fg:w="3"/><text x="15.1754%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 3.48%)</title><rect x="14.4279%" y="261" width="3.4826%" height="15" fill="rgb(236,212,23)" fg:x="29" fg:w="7"/><text x="14.6779%" y="271.50">rus..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 1.49%)</title><rect x="16.4179%" y="245" width="1.4925%" height="15" fill="rgb(242,79,21)" fg:x="33" fg:w="3"/><text x="16.6679%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (12 samples, 5.97%)</title><rect x="13.4328%" y="277" width="5.9701%" height="15" fill="rgb(211,96,35)" fg:x="27" fg:w="12"/><text x="13.6828%" y="287.50">rust-gka..</text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 1.49%)</title><rect x="17.9104%" y="261" width="1.4925%" height="15" fill="rgb(253,215,40)" fg:x="36" fg:w="3"/><text x="18.1604%" y="271.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="19.4030%" y="261" width="0.4975%" height="15" fill="rgb(211,81,21)" fg:x="39" fg:w="1"/><text x="19.6530%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="19.4030%" y="245" width="0.4975%" height="15" fill="rgb(208,190,38)" fg:x="39" fg:w="1"/><text x="19.6530%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="19.4030%" y="229" width="0.4975%" height="15" fill="rgb(235,213,38)" fg:x="39" fg:w="1"/><text x="19.6530%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="19.4030%" y="213" width="0.4975%" height="15" fill="rgb(237,122,38)" fg:x="39" fg:w="1"/><text x="19.6530%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="19.4030%" y="197" width="0.4975%" height="15" fill="rgb(244,218,35)" fg:x="39" fg:w="1"/><text x="19.6530%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="19.9005%" y="213" width="0.9950%" height="15" fill="rgb(240,68,47)" fg:x="40" fg:w="2"/><text x="20.1505%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="20.3980%" y="197" width="0.4975%" height="15" fill="rgb(210,16,53)" fg:x="41" fg:w="1"/><text x="20.6480%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="20.3980%" y="181" width="0.4975%" height="15" fill="rgb(235,124,12)" fg:x="41" fg:w="1"/><text x="20.6480%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="19.9005%" y="245" width="1.4925%" height="15" fill="rgb(224,169,11)" fg:x="40" fg:w="3"/><text x="20.1505%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="19.9005%" y="229" width="1.4925%" height="15" fill="rgb(250,166,2)" fg:x="40" fg:w="3"/><text x="20.1505%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="20.8955%" y="213" width="0.4975%" height="15" fill="rgb(242,216,29)" fg:x="42" fg:w="1"/><text x="21.1455%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="20.8955%" y="197" width="0.4975%" height="15" fill="rgb(230,116,27)" fg:x="42" fg:w="1"/><text x="21.1455%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="20.8955%" y="181" width="0.4975%" height="15" fill="rgb(228,99,48)" fg:x="42" fg:w="1"/><text x="21.1455%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="20.8955%" y="165" width="0.4975%" height="15" fill="rgb(253,11,6)" fg:x="42" fg:w="1"/><text x="21.1455%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="20.8955%" y="149" width="0.4975%" height="15" fill="rgb(247,143,39)" fg:x="42" fg:w="1"/><text x="21.1455%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="19.9005%" y="261" width="1.9900%" height="15" fill="rgb(236,97,10)" fg:x="40" fg:w="4"/><text x="20.1505%" y="271.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.3930%" y="245" width="0.4975%" height="15" fill="rgb(233,208,19)" fg:x="43" fg:w="1"/><text x="21.6430%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.3930%" y="229" width="0.4975%" height="15" fill="rgb(216,164,2)" fg:x="43" fg:w="1"/><text x="21.6430%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="21.3930%" y="213" width="0.4975%" height="15" fill="rgb(220,129,5)" fg:x="43" fg:w="1"/><text x="21.6430%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="21.3930%" y="197" width="0.4975%" height="15" fill="rgb(242,17,10)" fg:x="43" fg:w="1"/><text x="21.6430%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="19.4030%" y="277" width="2.9851%" height="15" fill="rgb(242,107,0)" fg:x="39" fg:w="6"/><text x="19.6530%" y="287.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.8905%" y="261" width="0.4975%" height="15" fill="rgb(251,28,31)" fg:x="44" fg:w="1"/><text x="22.1405%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.8905%" y="245" width="0.4975%" height="15" fill="rgb(233,223,10)" fg:x="44" fg:w="1"/><text x="22.1405%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.8905%" y="229" width="0.4975%" height="15" fill="rgb(215,21,27)" fg:x="44" fg:w="1"/><text x="22.1405%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="21.8905%" y="213" width="0.4975%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="1"/><text x="22.1405%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="23.3831%" y="245" width="0.4975%" height="15" fill="rgb(244,5,23)" fg:x="47" fg:w="1"/><text x="23.6331%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 1.49%)</title><rect x="22.8856%" y="261" width="1.4925%" height="15" fill="rgb(226,81,46)" fg:x="46" fg:w="3"/><text x="23.1356%" y="271.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.50%)</title><rect x="23.8806%" y="245" width="0.4975%" height="15" fill="rgb(247,70,30)" fg:x="48" fg:w="1"/><text x="24.1306%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="24.8756%" y="229" width="0.4975%" height="15" fill="rgb(212,68,19)" fg:x="50" fg:w="1"/><text x="25.1256%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 2.49%)</title><rect x="24.3781%" y="245" width="2.4876%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="5"/><text x="24.6281%" y="255.50">ru..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 1.49%)</title><rect x="25.3731%" y="229" width="1.4925%" height="15" fill="rgb(223,113,26)" fg:x="51" fg:w="3"/><text x="25.6231%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 2.99%)</title><rect x="24.3781%" y="261" width="2.9851%" height="15" fill="rgb(206,192,2)" fg:x="49" fg:w="6"/><text x="24.6281%" y="271.50">rus..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="26.8657%" y="245" width="0.4975%" height="15" fill="rgb(241,108,4)" fg:x="54" fg:w="1"/><text x="27.1157%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="27.3632%" y="261" width="0.4975%" height="15" fill="rgb(247,173,49)" fg:x="55" fg:w="1"/><text x="27.6132%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="27.3632%" y="245" width="0.4975%" height="15" fill="rgb(224,114,35)" fg:x="55" fg:w="1"/><text x="27.6132%" y="255.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="27.3632%" y="229" width="0.4975%" height="15" fill="rgb(245,159,27)" fg:x="55" fg:w="1"/><text x="27.6132%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="27.3632%" y="213" width="0.4975%" height="15" fill="rgb(245,172,44)" fg:x="55" fg:w="1"/><text x="27.6132%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="27.3632%" y="197" width="0.4975%" height="15" fill="rgb(236,23,11)" fg:x="55" fg:w="1"/><text x="27.6132%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.50%)</title><rect x="27.8607%" y="245" width="0.4975%" height="15" fill="rgb(205,117,38)" fg:x="56" fg:w="1"/><text x="28.1107%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="28.3582%" y="245" width="0.4975%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="1"/><text x="28.6082%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="29.8507%" y="213" width="0.4975%" height="15" fill="rgb(244,70,9)" fg:x="60" fg:w="1"/><text x="30.1007%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 1.99%)</title><rect x="28.8557%" y="245" width="1.9900%" height="15" fill="rgb(217,125,39)" fg:x="58" fg:w="4"/><text x="29.1057%" y="255.50">r..</text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 1.99%)</title><rect x="28.8557%" y="229" width="1.9900%" height="15" fill="rgb(235,36,10)" fg:x="58" fg:w="4"/><text x="29.1057%" y="239.50">r..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="30.3483%" y="213" width="0.4975%" height="15" fill="rgb(251,123,47)" fg:x="61" fg:w="1"/><text x="30.5983%" y="223.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="30.8458%" y="229" width="0.4975%" height="15" fill="rgb(221,13,13)" fg:x="62" fg:w="1"/><text x="31.0958%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="30.8458%" y="213" width="0.4975%" height="15" fill="rgb(238,131,9)" fg:x="62" fg:w="1"/><text x="31.0958%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="30.8458%" y="197" width="0.4975%" height="15" fill="rgb(211,50,8)" fg:x="62" fg:w="1"/><text x="31.0958%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="31.3433%" y="213" width="0.4975%" height="15" fill="rgb(245,182,24)" fg:x="63" fg:w="1"/><text x="31.5933%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="31.3433%" y="197" width="0.4975%" height="15" fill="rgb(242,14,37)" fg:x="63" fg:w="1"/><text x="31.5933%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="31.3433%" y="181" width="0.4975%" height="15" fill="rgb(246,228,12)" fg:x="63" fg:w="1"/><text x="31.5933%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="31.3433%" y="165" width="0.4975%" height="15" fill="rgb(213,55,15)" fg:x="63" fg:w="1"/><text x="31.5933%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="31.3433%" y="149" width="0.4975%" height="15" fill="rgb(209,9,3)" fg:x="63" fg:w="1"/><text x="31.5933%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="31.8408%" y="213" width="0.4975%" height="15" fill="rgb(230,59,30)" fg:x="64" fg:w="1"/><text x="32.0908%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="31.8408%" y="197" width="0.4975%" height="15" fill="rgb(209,121,21)" fg:x="64" fg:w="1"/><text x="32.0908%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="31.8408%" y="181" width="0.4975%" height="15" fill="rgb(220,109,13)" fg:x="64" fg:w="1"/><text x="32.0908%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="31.8408%" y="165" width="0.4975%" height="15" fill="rgb(232,18,1)" fg:x="64" fg:w="1"/><text x="32.0908%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="31.8408%" y="149" width="0.4975%" height="15" fill="rgb(215,41,42)" fg:x="64" fg:w="1"/><text x="32.0908%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="31.8408%" y="133" width="0.4975%" height="15" fill="rgb(224,123,36)" fg:x="64" fg:w="1"/><text x="32.0908%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="31.8408%" y="117" width="0.4975%" height="15" fill="rgb(240,125,3)" fg:x="64" fg:w="1"/><text x="32.0908%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="31.8408%" y="101" width="0.4975%" height="15" fill="rgb(205,98,50)" fg:x="64" fg:w="1"/><text x="32.0908%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="30.8458%" y="245" width="1.9900%" height="15" fill="rgb(205,185,37)" fg:x="62" fg:w="4"/><text x="31.0958%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="31.3433%" y="229" width="1.4925%" height="15" fill="rgb(238,207,15)" fg:x="63" fg:w="3"/><text x="31.5933%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="32.3383%" y="213" width="0.4975%" height="15" fill="rgb(213,199,42)" fg:x="65" fg:w="1"/><text x="32.5883%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="32.3383%" y="197" width="0.4975%" height="15" fill="rgb(235,201,11)" fg:x="65" fg:w="1"/><text x="32.5883%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="32.3383%" y="181" width="0.4975%" height="15" fill="rgb(207,46,11)" fg:x="65" fg:w="1"/><text x="32.5883%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.50%)</title><rect x="32.8358%" y="229" width="0.4975%" height="15" fill="rgb(241,35,35)" fg:x="66" fg:w="1"/><text x="33.0858%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="32.8358%" y="213" width="0.4975%" height="15" fill="rgb(243,32,47)" fg:x="66" fg:w="1"/><text x="33.0858%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (2 samples, 1.00%)</title><rect x="33.3333%" y="229" width="0.9950%" height="15" fill="rgb(247,202,23)" fg:x="67" fg:w="2"/><text x="33.5833%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="33.3333%" y="213" width="0.9950%" height="15" fill="rgb(219,102,11)" fg:x="67" fg:w="2"/><text x="33.5833%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="33.8308%" y="197" width="0.4975%" height="15" fill="rgb(243,110,44)" fg:x="68" fg:w="1"/><text x="34.0808%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="34.3284%" y="213" width="0.4975%" height="15" fill="rgb(222,74,54)" fg:x="69" fg:w="1"/><text x="34.5784%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="34.3284%" y="197" width="0.4975%" height="15" fill="rgb(216,99,12)" fg:x="69" fg:w="1"/><text x="34.5784%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="34.3284%" y="181" width="0.4975%" height="15" fill="rgb(226,22,26)" fg:x="69" fg:w="1"/><text x="34.5784%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="34.3284%" y="165" width="0.4975%" height="15" fill="rgb(217,163,10)" fg:x="69" fg:w="1"/><text x="34.5784%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="34.8259%" y="181" width="0.4975%" height="15" fill="rgb(213,25,53)" fg:x="70" fg:w="1"/><text x="35.0759%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="34.8259%" y="165" width="0.4975%" height="15" fill="rgb(252,105,26)" fg:x="70" fg:w="1"/><text x="35.0759%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="34.8259%" y="149" width="0.4975%" height="15" fill="rgb(220,39,43)" fg:x="70" fg:w="1"/><text x="35.0759%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="34.8259%" y="133" width="0.4975%" height="15" fill="rgb(229,68,48)" fg:x="70" fg:w="1"/><text x="35.0759%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="34.8259%" y="117" width="0.4975%" height="15" fill="rgb(252,8,32)" fg:x="70" fg:w="1"/><text x="35.0759%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="35.3234%" y="165" width="0.9950%" height="15" fill="rgb(223,20,43)" fg:x="71" fg:w="2"/><text x="35.5734%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="35.3234%" y="149" width="0.9950%" height="15" fill="rgb(229,81,49)" fg:x="71" fg:w="2"/><text x="35.5734%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="35.8209%" y="133" width="0.4975%" height="15" fill="rgb(236,28,36)" fg:x="72" fg:w="1"/><text x="36.0709%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="36.3184%" y="149" width="0.4975%" height="15" fill="rgb(249,185,26)" fg:x="73" fg:w="1"/><text x="36.5684%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="36.3184%" y="133" width="0.4975%" height="15" fill="rgb(249,174,33)" fg:x="73" fg:w="1"/><text x="36.5684%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="36.3184%" y="117" width="0.4975%" height="15" fill="rgb(233,201,37)" fg:x="73" fg:w="1"/><text x="36.5684%" y="127.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[(hashconsing::HConsed&lt;rust_gkat::gkat_ast::bexp::BExp_&gt;,(hashconsing::HConsed&lt;rust_gkat::gkat_ast::exp::Exp_&gt;,rust_gkat::gkat_ast::exp::Action))]&gt; (1 samples, 0.50%)</title><rect x="36.8159%" y="149" width="0.4975%" height="15" fill="rgb(221,78,26)" fg:x="74" fg:w="1"/><text x="37.0659%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="37.3134%" y="149" width="0.4975%" height="15" fill="rgb(250,127,30)" fg:x="75" fg:w="1"/><text x="37.5634%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="37.3134%" y="133" width="0.4975%" height="15" fill="rgb(230,49,44)" fg:x="75" fg:w="1"/><text x="37.5634%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.50%)</title><rect x="37.3134%" y="117" width="0.4975%" height="15" fill="rgb(229,67,23)" fg:x="75" fg:w="1"/><text x="37.5634%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 3.48%)</title><rect x="34.8259%" y="197" width="3.4826%" height="15" fill="rgb(249,83,47)" fg:x="70" fg:w="7"/><text x="35.0759%" y="207.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="35.3234%" y="181" width="2.9851%" height="15" fill="rgb(215,43,3)" fg:x="71" fg:w="6"/><text x="35.5734%" y="191.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="36.3184%" y="165" width="1.9900%" height="15" fill="rgb(238,154,13)" fg:x="73" fg:w="4"/><text x="36.5684%" y="175.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="37.8109%" y="149" width="0.4975%" height="15" fill="rgb(219,56,2)" fg:x="76" fg:w="1"/><text x="38.0609%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="37.8109%" y="133" width="0.4975%" height="15" fill="rgb(233,0,4)" fg:x="76" fg:w="1"/><text x="38.0609%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="37.8109%" y="117" width="0.4975%" height="15" fill="rgb(235,30,7)" fg:x="76" fg:w="1"/><text x="38.0609%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="37.8109%" y="101" width="0.4975%" height="15" fill="rgb(250,79,13)" fg:x="76" fg:w="1"/><text x="38.0609%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="38.3085%" y="181" width="0.4975%" height="15" fill="rgb(211,146,34)" fg:x="77" fg:w="1"/><text x="38.5585%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="38.3085%" y="165" width="0.4975%" height="15" fill="rgb(228,22,38)" fg:x="77" fg:w="1"/><text x="38.5585%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (10 samples, 4.98%)</title><rect x="34.3284%" y="229" width="4.9751%" height="15" fill="rgb(235,168,5)" fg:x="69" fg:w="10"/><text x="34.5784%" y="239.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (9 samples, 4.48%)</title><rect x="34.8259%" y="213" width="4.4776%" height="15" fill="rgb(221,155,16)" fg:x="70" fg:w="9"/><text x="35.0759%" y="223.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="38.3085%" y="197" width="0.9950%" height="15" fill="rgb(215,215,53)" fg:x="77" fg:w="2"/><text x="38.5585%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="38.8060%" y="181" width="0.4975%" height="15" fill="rgb(223,4,10)" fg:x="78" fg:w="1"/><text x="39.0560%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="38.8060%" y="165" width="0.4975%" height="15" fill="rgb(234,103,6)" fg:x="78" fg:w="1"/><text x="39.0560%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="38.8060%" y="149" width="0.4975%" height="15" fill="rgb(227,97,0)" fg:x="78" fg:w="1"/><text x="39.0560%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="38.8060%" y="133" width="0.4975%" height="15" fill="rgb(234,150,53)" fg:x="78" fg:w="1"/><text x="39.0560%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="38.8060%" y="117" width="0.4975%" height="15" fill="rgb(228,201,54)" fg:x="78" fg:w="1"/><text x="39.0560%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 1.00%)</title><rect x="39.3035%" y="213" width="0.9950%" height="15" fill="rgb(222,22,37)" fg:x="79" fg:w="2"/><text x="39.5535%" y="223.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (2 samples, 1.00%)</title><rect x="40.2985%" y="213" width="0.9950%" height="15" fill="rgb(237,53,32)" fg:x="81" fg:w="2"/><text x="40.5485%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 1.00%)</title><rect x="42.7861%" y="181" width="0.9950%" height="15" fill="rgb(233,25,53)" fg:x="86" fg:w="2"/><text x="43.0361%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (8 samples, 3.98%)</title><rect x="41.2935%" y="213" width="3.9801%" height="15" fill="rgb(210,40,34)" fg:x="83" fg:w="8"/><text x="41.5435%" y="223.50">rust..</text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 2.49%)</title><rect x="42.7861%" y="197" width="2.4876%" height="15" fill="rgb(241,220,44)" fg:x="86" fg:w="5"/><text x="43.0361%" y="207.50">ru..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 1.49%)</title><rect x="43.7811%" y="181" width="1.4925%" height="15" fill="rgb(235,28,35)" fg:x="88" fg:w="3"/><text x="44.0311%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="45.2736%" y="165" width="0.4975%" height="15" fill="rgb(210,56,17)" fg:x="91" fg:w="1"/><text x="45.5236%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="45.2736%" y="149" width="0.4975%" height="15" fill="rgb(224,130,29)" fg:x="91" fg:w="1"/><text x="45.5236%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="45.2736%" y="133" width="0.4975%" height="15" fill="rgb(235,212,8)" fg:x="91" fg:w="1"/><text x="45.5236%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="45.2736%" y="117" width="0.4975%" height="15" fill="rgb(223,33,50)" fg:x="91" fg:w="1"/><text x="45.5236%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="45.2736%" y="101" width="0.4975%" height="15" fill="rgb(219,149,13)" fg:x="91" fg:w="1"/><text x="45.5236%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="45.2736%" y="213" width="0.9950%" height="15" fill="rgb(250,156,29)" fg:x="91" fg:w="2"/><text x="45.5236%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="45.2736%" y="197" width="0.9950%" height="15" fill="rgb(216,193,19)" fg:x="91" fg:w="2"/><text x="45.5236%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="45.2736%" y="181" width="0.9950%" height="15" fill="rgb(216,135,14)" fg:x="91" fg:w="2"/><text x="45.5236%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="45.7711%" y="165" width="0.4975%" height="15" fill="rgb(241,47,5)" fg:x="92" fg:w="1"/><text x="46.0211%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="45.7711%" y="149" width="0.4975%" height="15" fill="rgb(233,42,35)" fg:x="92" fg:w="1"/><text x="46.0211%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="45.7711%" y="133" width="0.4975%" height="15" fill="rgb(231,13,6)" fg:x="92" fg:w="1"/><text x="46.0211%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="45.7711%" y="117" width="0.4975%" height="15" fill="rgb(207,181,40)" fg:x="92" fg:w="1"/><text x="46.0211%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="45.7711%" y="101" width="0.4975%" height="15" fill="rgb(254,173,49)" fg:x="92" fg:w="1"/><text x="46.0211%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="46.7662%" y="197" width="0.4975%" height="15" fill="rgb(221,1,38)" fg:x="94" fg:w="1"/><text x="47.0162%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.50%)</title><rect x="47.2637%" y="197" width="0.4975%" height="15" fill="rgb(206,124,46)" fg:x="95" fg:w="1"/><text x="47.5137%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="47.7612%" y="197" width="0.4975%" height="15" fill="rgb(249,21,11)" fg:x="96" fg:w="1"/><text x="48.0112%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 1.99%)</title><rect x="50.2488%" y="165" width="1.9900%" height="15" fill="rgb(222,201,40)" fg:x="101" fg:w="4"/><text x="50.4988%" y="175.50">r..</text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (18 samples, 8.96%)</title><rect x="48.7562%" y="181" width="8.9552%" height="15" fill="rgb(235,61,29)" fg:x="98" fg:w="18"/><text x="49.0062%" y="191.50">rust-gkat`&lt;&amp;m..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 5.47%)</title><rect x="52.2388%" y="165" width="5.4726%" height="15" fill="rgb(219,207,3)" fg:x="105" fg:w="11"/><text x="52.4888%" y="175.50">rust-gk..</text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (20 samples, 9.95%)</title><rect x="48.2587%" y="197" width="9.9502%" height="15" fill="rgb(222,56,46)" fg:x="97" fg:w="20"/><text x="48.5087%" y="207.50">rust-gkat`rust..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="57.7114%" y="181" width="0.4975%" height="15" fill="rgb(239,76,54)" fg:x="116" fg:w="1"/><text x="57.9614%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (1 samples, 0.50%)</title><rect x="58.2090%" y="197" width="0.4975%" height="15" fill="rgb(231,124,27)" fg:x="117" fg:w="1"/><text x="58.4590%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (1 samples, 0.50%)</title><rect x="58.2090%" y="181" width="0.4975%" height="15" fill="rgb(249,195,6)" fg:x="117" fg:w="1"/><text x="58.4590%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (1 samples, 0.50%)</title><rect x="58.2090%" y="165" width="0.4975%" height="15" fill="rgb(237,174,47)" fg:x="117" fg:w="1"/><text x="58.4590%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (1 samples, 0.50%)</title><rect x="58.2090%" y="149" width="0.4975%" height="15" fill="rgb(206,201,31)" fg:x="117" fg:w="1"/><text x="58.4590%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (1 samples, 0.50%)</title><rect x="58.2090%" y="133" width="0.4975%" height="15" fill="rgb(231,57,52)" fg:x="117" fg:w="1"/><text x="58.4590%" y="143.50"></text></g><g><title>rust-gkat`rsdd::builder::bdd::builder::_&lt;impl rsdd::builder::BottomUpBuilder&lt;rsdd::repr::bdd::BddPtr&gt; for T&gt;::ite (1 samples, 0.50%)</title><rect x="58.2090%" y="117" width="0.4975%" height="15" fill="rgb(248,177,22)" fg:x="117" fg:w="1"/><text x="58.4590%" y="127.50"></text></g><g><title>rust-gkat`rsdd::builder::cache::ite::Ite&lt;T&gt;::new (1 samples, 0.50%)</title><rect x="58.2090%" y="101" width="0.4975%" height="15" fill="rgb(215,211,37)" fg:x="117" fg:w="1"/><text x="58.4590%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="58.7065%" y="149" width="0.4975%" height="15" fill="rgb(241,128,51)" fg:x="118" fg:w="1"/><text x="58.9565%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="58.7065%" y="133" width="0.4975%" height="15" fill="rgb(227,165,31)" fg:x="118" fg:w="1"/><text x="58.9565%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="59.2040%" y="117" width="0.4975%" height="15" fill="rgb(228,167,24)" fg:x="119" fg:w="1"/><text x="59.4540%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 1.49%)</title><rect x="58.7065%" y="181" width="1.4925%" height="15" fill="rgb(228,143,12)" fg:x="118" fg:w="3"/><text x="58.9565%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.49%)</title><rect x="58.7065%" y="165" width="1.4925%" height="15" fill="rgb(249,149,8)" fg:x="118" fg:w="3"/><text x="58.9565%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="59.2040%" y="149" width="0.9950%" height="15" fill="rgb(243,35,44)" fg:x="119" fg:w="2"/><text x="59.4540%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="59.2040%" y="133" width="0.9950%" height="15" fill="rgb(246,89,9)" fg:x="119" fg:w="2"/><text x="59.4540%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="59.7015%" y="117" width="0.4975%" height="15" fill="rgb(233,213,13)" fg:x="120" fg:w="1"/><text x="59.9515%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="60.1990%" y="149" width="0.4975%" height="15" fill="rgb(233,141,41)" fg:x="121" fg:w="1"/><text x="60.4490%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="60.1990%" y="133" width="0.4975%" height="15" fill="rgb(239,167,4)" fg:x="121" fg:w="1"/><text x="60.4490%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="60.1990%" y="117" width="0.4975%" height="15" fill="rgb(209,217,16)" fg:x="121" fg:w="1"/><text x="60.4490%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="60.1990%" y="101" width="0.4975%" height="15" fill="rgb(219,88,35)" fg:x="121" fg:w="1"/><text x="60.4490%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="60.6965%" y="133" width="0.4975%" height="15" fill="rgb(220,193,23)" fg:x="122" fg:w="1"/><text x="60.9465%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="60.6965%" y="117" width="0.4975%" height="15" fill="rgb(230,90,52)" fg:x="122" fg:w="1"/><text x="60.9465%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="60.6965%" y="101" width="0.4975%" height="15" fill="rgb(252,106,19)" fg:x="122" fg:w="1"/><text x="60.9465%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="60.6965%" y="85" width="0.4975%" height="15" fill="rgb(206,74,20)" fg:x="122" fg:w="1"/><text x="60.9465%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="60.6965%" y="69" width="0.4975%" height="15" fill="rgb(230,138,44)" fg:x="122" fg:w="1"/><text x="60.9465%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="61.1940%" y="133" width="0.4975%" height="15" fill="rgb(235,182,43)" fg:x="123" fg:w="1"/><text x="61.4440%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="61.1940%" y="117" width="0.4975%" height="15" fill="rgb(242,16,51)" fg:x="123" fg:w="1"/><text x="61.4440%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="61.1940%" y="101" width="0.4975%" height="15" fill="rgb(248,9,4)" fg:x="123" fg:w="1"/><text x="61.4440%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="61.1940%" y="85" width="0.4975%" height="15" fill="rgb(210,31,22)" fg:x="123" fg:w="1"/><text x="61.4440%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="61.1940%" y="69" width="0.4975%" height="15" fill="rgb(239,54,39)" fg:x="123" fg:w="1"/><text x="61.4440%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="60.1990%" y="165" width="1.9900%" height="15" fill="rgb(230,99,41)" fg:x="121" fg:w="4"/><text x="60.4490%" y="175.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="60.6965%" y="149" width="1.4925%" height="15" fill="rgb(253,106,12)" fg:x="122" fg:w="3"/><text x="60.9465%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="61.6915%" y="133" width="0.4975%" height="15" fill="rgb(213,46,41)" fg:x="124" fg:w="1"/><text x="61.9415%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="61.6915%" y="117" width="0.4975%" height="15" fill="rgb(215,133,35)" fg:x="124" fg:w="1"/><text x="61.9415%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="61.6915%" y="101" width="0.4975%" height="15" fill="rgb(213,28,5)" fg:x="124" fg:w="1"/><text x="61.9415%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="62.1891%" y="133" width="0.4975%" height="15" fill="rgb(215,77,49)" fg:x="125" fg:w="1"/><text x="62.4391%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="62.1891%" y="117" width="0.4975%" height="15" fill="rgb(248,100,22)" fg:x="125" fg:w="1"/><text x="62.4391%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="62.1891%" y="101" width="0.4975%" height="15" fill="rgb(208,67,9)" fg:x="125" fg:w="1"/><text x="62.4391%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="60.1990%" y="181" width="2.9851%" height="15" fill="rgb(219,133,21)" fg:x="121" fg:w="6"/><text x="60.4490%" y="191.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="62.1891%" y="165" width="0.9950%" height="15" fill="rgb(246,46,29)" fg:x="125" fg:w="2"/><text x="62.4391%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="62.1891%" y="149" width="0.9950%" height="15" fill="rgb(246,185,52)" fg:x="125" fg:w="2"/><text x="62.4391%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="62.6866%" y="133" width="0.4975%" height="15" fill="rgb(252,136,11)" fg:x="126" fg:w="1"/><text x="62.9366%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="62.6866%" y="117" width="0.4975%" height="15" fill="rgb(219,138,53)" fg:x="126" fg:w="1"/><text x="62.9366%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="62.6866%" y="101" width="0.4975%" height="15" fill="rgb(211,51,23)" fg:x="126" fg:w="1"/><text x="62.9366%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (10 samples, 4.98%)</title><rect x="58.7065%" y="197" width="4.9751%" height="15" fill="rgb(247,221,28)" fg:x="118" fg:w="10"/><text x="58.9565%" y="207.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="63.1841%" y="181" width="0.4975%" height="15" fill="rgb(251,222,45)" fg:x="127" fg:w="1"/><text x="63.4341%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="63.1841%" y="165" width="0.4975%" height="15" fill="rgb(217,162,53)" fg:x="127" fg:w="1"/><text x="63.4341%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="63.1841%" y="149" width="0.4975%" height="15" fill="rgb(229,93,14)" fg:x="127" fg:w="1"/><text x="63.4341%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="63.1841%" y="133" width="0.4975%" height="15" fill="rgb(209,67,49)" fg:x="127" fg:w="1"/><text x="63.4341%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="63.1841%" y="117" width="0.4975%" height="15" fill="rgb(213,87,29)" fg:x="127" fg:w="1"/><text x="63.4341%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="63.1841%" y="101" width="0.4975%" height="15" fill="rgb(205,151,52)" fg:x="127" fg:w="1"/><text x="63.4341%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="63.1841%" y="85" width="0.4975%" height="15" fill="rgb(253,215,39)" fg:x="127" fg:w="1"/><text x="63.4341%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="63.6816%" y="149" width="0.4975%" height="15" fill="rgb(221,220,41)" fg:x="128" fg:w="1"/><text x="63.9316%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (2 samples, 1.00%)</title><rect x="63.6816%" y="181" width="0.9950%" height="15" fill="rgb(218,133,21)" fg:x="128" fg:w="2"/><text x="63.9316%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="63.6816%" y="165" width="0.9950%" height="15" fill="rgb(221,193,43)" fg:x="128" fg:w="2"/><text x="63.9316%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="64.1791%" y="149" width="0.4975%" height="15" fill="rgb(240,128,52)" fg:x="129" fg:w="1"/><text x="64.4291%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="64.6766%" y="181" width="0.4975%" height="15" fill="rgb(253,114,12)" fg:x="130" fg:w="1"/><text x="64.9266%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="64.6766%" y="165" width="0.4975%" height="15" fill="rgb(215,223,47)" fg:x="130" fg:w="1"/><text x="64.9266%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="64.6766%" y="149" width="0.4975%" height="15" fill="rgb(248,225,23)" fg:x="130" fg:w="1"/><text x="64.9266%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="64.6766%" y="133" width="0.4975%" height="15" fill="rgb(250,108,0)" fg:x="130" fg:w="1"/><text x="64.9266%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="64.6766%" y="117" width="0.4975%" height="15" fill="rgb(228,208,7)" fg:x="130" fg:w="1"/><text x="64.9266%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="65.1741%" y="133" width="0.4975%" height="15" fill="rgb(244,45,10)" fg:x="131" fg:w="1"/><text x="65.4241%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="65.1741%" y="117" width="0.4975%" height="15" fill="rgb(207,125,25)" fg:x="131" fg:w="1"/><text x="65.4241%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="65.1741%" y="101" width="0.4975%" height="15" fill="rgb(210,195,18)" fg:x="131" fg:w="1"/><text x="65.4241%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="65.1741%" y="85" width="0.4975%" height="15" fill="rgb(249,80,12)" fg:x="131" fg:w="1"/><text x="65.4241%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="65.1741%" y="69" width="0.4975%" height="15" fill="rgb(221,65,9)" fg:x="131" fg:w="1"/><text x="65.4241%" y="79.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="65.1741%" y="53" width="0.4975%" height="15" fill="rgb(235,49,36)" fg:x="131" fg:w="1"/><text x="65.4241%" y="63.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (2 samples, 1.00%)</title><rect x="65.1741%" y="181" width="0.9950%" height="15" fill="rgb(225,32,20)" fg:x="131" fg:w="2"/><text x="65.4241%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (2 samples, 1.00%)</title><rect x="65.1741%" y="165" width="0.9950%" height="15" fill="rgb(215,141,46)" fg:x="131" fg:w="2"/><text x="65.4241%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="65.1741%" y="149" width="0.9950%" height="15" fill="rgb(250,160,47)" fg:x="131" fg:w="2"/><text x="65.4241%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="65.6716%" y="133" width="0.4975%" height="15" fill="rgb(216,222,40)" fg:x="132" fg:w="1"/><text x="65.9216%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="65.6716%" y="117" width="0.4975%" height="15" fill="rgb(234,217,39)" fg:x="132" fg:w="1"/><text x="65.9216%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="65.6716%" y="101" width="0.4975%" height="15" fill="rgb(207,178,40)" fg:x="132" fg:w="1"/><text x="65.9216%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (1 samples, 0.50%)</title><rect x="66.1692%" y="165" width="0.4975%" height="15" fill="rgb(221,136,13)" fg:x="133" fg:w="1"/><text x="66.4192%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="66.1692%" y="149" width="0.4975%" height="15" fill="rgb(249,199,10)" fg:x="133" fg:w="1"/><text x="66.4192%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="66.1692%" y="133" width="0.4975%" height="15" fill="rgb(249,222,13)" fg:x="133" fg:w="1"/><text x="66.4192%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="66.6667%" y="117" width="0.4975%" height="15" fill="rgb(244,185,38)" fg:x="134" fg:w="1"/><text x="66.9167%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="66.6667%" y="101" width="0.4975%" height="15" fill="rgb(236,202,9)" fg:x="134" fg:w="1"/><text x="66.9167%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="66.6667%" y="85" width="0.4975%" height="15" fill="rgb(250,229,37)" fg:x="134" fg:w="1"/><text x="66.9167%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.50%)</title><rect x="67.1642%" y="101" width="0.4975%" height="15" fill="rgb(206,174,23)" fg:x="135" fg:w="1"/><text x="67.4142%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="67.6617%" y="85" width="0.4975%" height="15" fill="rgb(211,33,43)" fg:x="136" fg:w="1"/><text x="67.9117%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 1.99%)</title><rect x="66.6667%" y="149" width="1.9900%" height="15" fill="rgb(245,58,50)" fg:x="134" fg:w="4"/><text x="66.9167%" y="159.50">r..</text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 1.99%)</title><rect x="66.6667%" y="133" width="1.9900%" height="15" fill="rgb(244,68,36)" fg:x="134" fg:w="4"/><text x="66.9167%" y="143.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (3 samples, 1.49%)</title><rect x="67.1642%" y="117" width="1.4925%" height="15" fill="rgb(232,229,15)" fg:x="135" fg:w="3"/><text x="67.4142%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="67.6617%" y="101" width="0.9950%" height="15" fill="rgb(254,30,23)" fg:x="136" fg:w="2"/><text x="67.9117%" y="111.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (1 samples, 0.50%)</title><rect x="68.1592%" y="85" width="0.4975%" height="15" fill="rgb(235,160,14)" fg:x="137" fg:w="1"/><text x="68.4092%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (2 samples, 1.00%)</title><rect x="68.6567%" y="101" width="0.9950%" height="15" fill="rgb(212,155,44)" fg:x="138" fg:w="2"/><text x="68.9067%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="69.1542%" y="85" width="0.4975%" height="15" fill="rgb(226,2,50)" fg:x="139" fg:w="1"/><text x="69.4042%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 1.49%)</title><rect x="68.6567%" y="133" width="1.4925%" height="15" fill="rgb(234,177,6)" fg:x="138" fg:w="3"/><text x="68.9067%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.49%)</title><rect x="68.6567%" y="117" width="1.4925%" height="15" fill="rgb(217,24,9)" fg:x="138" fg:w="3"/><text x="68.9067%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="69.6517%" y="101" width="0.4975%" height="15" fill="rgb(220,13,46)" fg:x="140" fg:w="1"/><text x="69.9017%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="69.6517%" y="85" width="0.4975%" height="15" fill="rgb(239,221,27)" fg:x="140" fg:w="1"/><text x="69.9017%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.50%)</title><rect x="69.6517%" y="69" width="0.4975%" height="15" fill="rgb(222,198,25)" fg:x="140" fg:w="1"/><text x="69.9017%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="70.1493%" y="69" width="0.4975%" height="15" fill="rgb(211,99,13)" fg:x="141" fg:w="1"/><text x="70.3993%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="70.1493%" y="117" width="0.9950%" height="15" fill="rgb(232,111,31)" fg:x="141" fg:w="2"/><text x="70.3993%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="70.1493%" y="101" width="0.9950%" height="15" fill="rgb(245,82,37)" fg:x="141" fg:w="2"/><text x="70.3993%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="70.1493%" y="85" width="0.9950%" height="15" fill="rgb(227,149,46)" fg:x="141" fg:w="2"/><text x="70.3993%" y="95.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="70.6468%" y="69" width="0.4975%" height="15" fill="rgb(218,36,50)" fg:x="142" fg:w="1"/><text x="70.8968%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="71.1443%" y="101" width="0.4975%" height="15" fill="rgb(226,80,48)" fg:x="143" fg:w="1"/><text x="71.3943%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="71.6418%" y="101" width="0.4975%" height="15" fill="rgb(238,224,15)" fg:x="144" fg:w="1"/><text x="71.8918%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (1 samples, 0.50%)</title><rect x="71.6418%" y="85" width="0.4975%" height="15" fill="rgb(241,136,10)" fg:x="144" fg:w="1"/><text x="71.8918%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="71.6418%" y="69" width="0.4975%" height="15" fill="rgb(208,32,45)" fg:x="144" fg:w="1"/><text x="71.8918%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="71.6418%" y="53" width="0.4975%" height="15" fill="rgb(207,135,9)" fg:x="144" fg:w="1"/><text x="71.8918%" y="63.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="71.6418%" y="37" width="0.4975%" height="15" fill="rgb(206,86,44)" fg:x="144" fg:w="1"/><text x="71.8918%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="71.1443%" y="117" width="1.4925%" height="15" fill="rgb(245,177,15)" fg:x="143" fg:w="3"/><text x="71.3943%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="72.1393%" y="101" width="0.4975%" height="15" fill="rgb(206,64,50)" fg:x="145" fg:w="1"/><text x="72.3893%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="72.1393%" y="85" width="0.4975%" height="15" fill="rgb(234,36,40)" fg:x="145" fg:w="1"/><text x="72.3893%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="72.1393%" y="69" width="0.4975%" height="15" fill="rgb(213,64,8)" fg:x="145" fg:w="1"/><text x="72.3893%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (9 samples, 4.48%)</title><rect x="68.6567%" y="149" width="4.4776%" height="15" fill="rgb(210,75,36)" fg:x="138" fg:w="9"/><text x="68.9067%" y="159.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="70.1493%" y="133" width="2.9851%" height="15" fill="rgb(229,88,21)" fg:x="141" fg:w="6"/><text x="70.3993%" y="143.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="72.6368%" y="117" width="0.4975%" height="15" fill="rgb(252,204,47)" fg:x="146" fg:w="1"/><text x="72.8868%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="72.6368%" y="101" width="0.4975%" height="15" fill="rgb(208,77,27)" fg:x="146" fg:w="1"/><text x="72.8868%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="72.6368%" y="85" width="0.4975%" height="15" fill="rgb(221,76,26)" fg:x="146" fg:w="1"/><text x="72.8868%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (14 samples, 6.97%)</title><rect x="66.6667%" y="165" width="6.9652%" height="15" fill="rgb(225,139,18)" fg:x="134" fg:w="14"/><text x="66.9167%" y="175.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.1343%" y="149" width="0.4975%" height="15" fill="rgb(230,137,11)" fg:x="147" fg:w="1"/><text x="73.3843%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.1343%" y="133" width="0.4975%" height="15" fill="rgb(212,28,1)" fg:x="147" fg:w="1"/><text x="73.3843%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="73.1343%" y="117" width="0.4975%" height="15" fill="rgb(248,164,17)" fg:x="147" fg:w="1"/><text x="73.3843%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="73.1343%" y="101" width="0.4975%" height="15" fill="rgb(222,171,42)" fg:x="147" fg:w="1"/><text x="73.3843%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (21 samples, 10.45%)</title><rect x="63.6816%" y="197" width="10.4478%" height="15" fill="rgb(243,84,45)" fg:x="128" fg:w="21"/><text x="63.9316%" y="207.50">rust-gkat`rust_..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (16 samples, 7.96%)</title><rect x="66.1692%" y="181" width="7.9602%" height="15" fill="rgb(252,49,23)" fg:x="133" fg:w="16"/><text x="66.4192%" y="191.50">rust-gkat`r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.6318%" y="165" width="0.4975%" height="15" fill="rgb(215,19,7)" fg:x="148" fg:w="1"/><text x="73.8818%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.6318%" y="149" width="0.4975%" height="15" fill="rgb(238,81,41)" fg:x="148" fg:w="1"/><text x="73.8818%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.6318%" y="133" width="0.4975%" height="15" fill="rgb(210,199,37)" fg:x="148" fg:w="1"/><text x="73.8818%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="73.6318%" y="117" width="0.4975%" height="15" fill="rgb(244,192,49)" fg:x="148" fg:w="1"/><text x="73.8818%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="73.6318%" y="101" width="0.4975%" height="15" fill="rgb(226,211,11)" fg:x="148" fg:w="1"/><text x="73.8818%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="73.6318%" y="85" width="0.4975%" height="15" fill="rgb(236,162,54)" fg:x="148" fg:w="1"/><text x="73.8818%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="74.1294%" y="165" width="0.4975%" height="15" fill="rgb(220,229,9)" fg:x="149" fg:w="1"/><text x="74.3794%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="74.1294%" y="149" width="0.4975%" height="15" fill="rgb(250,87,22)" fg:x="149" fg:w="1"/><text x="74.3794%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="74.1294%" y="133" width="0.4975%" height="15" fill="rgb(239,43,17)" fg:x="149" fg:w="1"/><text x="74.3794%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="74.1294%" y="117" width="0.4975%" height="15" fill="rgb(231,177,25)" fg:x="149" fg:w="1"/><text x="74.3794%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="74.6269%" y="101" width="0.4975%" height="15" fill="rgb(219,179,1)" fg:x="150" fg:w="1"/><text x="74.8769%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (2 samples, 1.00%)</title><rect x="74.6269%" y="117" width="0.9950%" height="15" fill="rgb(238,219,53)" fg:x="150" fg:w="2"/><text x="74.8769%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="75.1244%" y="101" width="0.4975%" height="15" fill="rgb(232,167,36)" fg:x="151" fg:w="1"/><text x="75.3744%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 1.49%)</title><rect x="74.6269%" y="149" width="1.4925%" height="15" fill="rgb(244,19,51)" fg:x="150" fg:w="3"/><text x="74.8769%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.49%)</title><rect x="74.6269%" y="133" width="1.4925%" height="15" fill="rgb(224,6,22)" fg:x="150" fg:w="3"/><text x="74.8769%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="75.6219%" y="117" width="0.4975%" height="15" fill="rgb(224,145,5)" fg:x="152" fg:w="1"/><text x="75.8719%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="75.6219%" y="101" width="0.4975%" height="15" fill="rgb(234,130,49)" fg:x="152" fg:w="1"/><text x="75.8719%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.50%)</title><rect x="75.6219%" y="85" width="0.4975%" height="15" fill="rgb(254,6,2)" fg:x="152" fg:w="1"/><text x="75.8719%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="75.6219%" y="69" width="0.4975%" height="15" fill="rgb(208,96,46)" fg:x="152" fg:w="1"/><text x="75.8719%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="76.1194%" y="133" width="0.4975%" height="15" fill="rgb(239,3,39)" fg:x="153" fg:w="1"/><text x="76.3694%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="76.1194%" y="117" width="0.4975%" height="15" fill="rgb(233,210,1)" fg:x="153" fg:w="1"/><text x="76.3694%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="76.1194%" y="101" width="0.4975%" height="15" fill="rgb(244,137,37)" fg:x="153" fg:w="1"/><text x="76.3694%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="76.1194%" y="85" width="0.4975%" height="15" fill="rgb(240,136,2)" fg:x="153" fg:w="1"/><text x="76.3694%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="76.6169%" y="133" width="0.4975%" height="15" fill="rgb(239,18,37)" fg:x="154" fg:w="1"/><text x="76.8669%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="76.6169%" y="117" width="0.4975%" height="15" fill="rgb(218,185,22)" fg:x="154" fg:w="1"/><text x="76.8669%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="76.6169%" y="101" width="0.4975%" height="15" fill="rgb(225,218,4)" fg:x="154" fg:w="1"/><text x="76.8669%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="76.6169%" y="85" width="0.4975%" height="15" fill="rgb(230,182,32)" fg:x="154" fg:w="1"/><text x="76.8669%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="76.6169%" y="69" width="0.4975%" height="15" fill="rgb(242,56,43)" fg:x="154" fg:w="1"/><text x="76.8669%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (1 samples, 0.50%)</title><rect x="77.1144%" y="117" width="0.4975%" height="15" fill="rgb(233,99,24)" fg:x="155" fg:w="1"/><text x="77.3644%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="77.1144%" y="101" width="0.4975%" height="15" fill="rgb(234,209,42)" fg:x="155" fg:w="1"/><text x="77.3644%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="77.1144%" y="85" width="0.4975%" height="15" fill="rgb(227,7,12)" fg:x="155" fg:w="1"/><text x="77.3644%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="76.1194%" y="149" width="1.9900%" height="15" fill="rgb(245,203,43)" fg:x="153" fg:w="4"/><text x="76.3694%" y="159.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (2 samples, 1.00%)</title><rect x="77.1144%" y="133" width="0.9950%" height="15" fill="rgb(238,205,33)" fg:x="155" fg:w="2"/><text x="77.3644%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="77.6119%" y="117" width="0.4975%" height="15" fill="rgb(231,56,7)" fg:x="156" fg:w="1"/><text x="77.8619%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="77.6119%" y="101" width="0.4975%" height="15" fill="rgb(244,186,29)" fg:x="156" fg:w="1"/><text x="77.8619%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="77.6119%" y="85" width="0.4975%" height="15" fill="rgb(234,111,31)" fg:x="156" fg:w="1"/><text x="77.8619%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (9 samples, 4.48%)</title><rect x="74.1294%" y="181" width="4.4776%" height="15" fill="rgb(241,149,10)" fg:x="149" fg:w="9"/><text x="74.3794%" y="191.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (8 samples, 3.98%)</title><rect x="74.6269%" y="165" width="3.9801%" height="15" fill="rgb(249,206,44)" fg:x="150" fg:w="8"/><text x="74.8769%" y="175.50">rust..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="78.1095%" y="149" width="0.4975%" height="15" fill="rgb(251,153,30)" fg:x="157" fg:w="1"/><text x="78.3595%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="78.1095%" y="133" width="0.4975%" height="15" fill="rgb(239,152,38)" fg:x="157" fg:w="1"/><text x="78.3595%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="78.1095%" y="117" width="0.4975%" height="15" fill="rgb(249,139,47)" fg:x="157" fg:w="1"/><text x="78.3595%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="78.1095%" y="101" width="0.4975%" height="15" fill="rgb(244,64,35)" fg:x="157" fg:w="1"/><text x="78.3595%" y="111.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="78.1095%" y="85" width="0.4975%" height="15" fill="rgb(216,46,15)" fg:x="157" fg:w="1"/><text x="78.3595%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (66 samples, 32.84%)</title><rect x="46.2687%" y="213" width="32.8358%" height="15" fill="rgb(250,74,19)" fg:x="93" fg:w="66"/><text x="46.5187%" y="223.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (10 samples, 4.98%)</title><rect x="74.1294%" y="197" width="4.9751%" height="15" fill="rgb(249,42,33)" fg:x="149" fg:w="10"/><text x="74.3794%" y="207.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="78.6070%" y="181" width="0.4975%" height="15" fill="rgb(242,149,17)" fg:x="158" fg:w="1"/><text x="78.8570%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="78.6070%" y="165" width="0.4975%" height="15" fill="rgb(244,29,21)" fg:x="158" fg:w="1"/><text x="78.8570%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="78.6070%" y="149" width="0.4975%" height="15" fill="rgb(220,130,37)" fg:x="158" fg:w="1"/><text x="78.8570%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="79.1045%" y="165" width="0.4975%" height="15" fill="rgb(211,67,2)" fg:x="159" fg:w="1"/><text x="79.3545%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="79.1045%" y="149" width="0.4975%" height="15" fill="rgb(235,68,52)" fg:x="159" fg:w="1"/><text x="79.3545%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="79.6020%" y="165" width="0.4975%" height="15" fill="rgb(246,142,3)" fg:x="160" fg:w="1"/><text x="79.8520%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="79.6020%" y="149" width="0.4975%" height="15" fill="rgb(241,25,7)" fg:x="160" fg:w="1"/><text x="79.8520%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="79.6020%" y="133" width="0.4975%" height="15" fill="rgb(242,119,39)" fg:x="160" fg:w="1"/><text x="79.8520%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="79.6020%" y="117" width="0.4975%" height="15" fill="rgb(241,98,45)" fg:x="160" fg:w="1"/><text x="79.8520%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="80.0995%" y="117" width="0.4975%" height="15" fill="rgb(254,28,30)" fg:x="161" fg:w="1"/><text x="80.3495%" y="127.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="80.0995%" y="101" width="0.4975%" height="15" fill="rgb(241,142,54)" fg:x="161" fg:w="1"/><text x="80.3495%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="80.0995%" y="149" width="0.9950%" height="15" fill="rgb(222,85,15)" fg:x="161" fg:w="2"/><text x="80.3495%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="80.0995%" y="133" width="0.9950%" height="15" fill="rgb(210,85,47)" fg:x="161" fg:w="2"/><text x="80.3495%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="80.5970%" y="117" width="0.4975%" height="15" fill="rgb(224,206,25)" fg:x="162" fg:w="1"/><text x="80.8470%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="81.0945%" y="133" width="0.4975%" height="15" fill="rgb(243,201,19)" fg:x="163" fg:w="1"/><text x="81.3445%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="81.0945%" y="117" width="0.4975%" height="15" fill="rgb(236,59,4)" fg:x="163" fg:w="1"/><text x="81.3445%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="81.0945%" y="101" width="0.4975%" height="15" fill="rgb(254,179,45)" fg:x="163" fg:w="1"/><text x="81.3445%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="81.0945%" y="85" width="0.4975%" height="15" fill="rgb(226,14,10)" fg:x="163" fg:w="1"/><text x="81.3445%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="81.0945%" y="69" width="0.4975%" height="15" fill="rgb(244,27,41)" fg:x="163" fg:w="1"/><text x="81.3445%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="80.0995%" y="165" width="1.9900%" height="15" fill="rgb(235,35,32)" fg:x="161" fg:w="4"/><text x="80.3495%" y="175.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="81.0945%" y="149" width="0.9950%" height="15" fill="rgb(218,68,31)" fg:x="163" fg:w="2"/><text x="81.3445%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="81.5920%" y="133" width="0.4975%" height="15" fill="rgb(207,120,37)" fg:x="164" fg:w="1"/><text x="81.8420%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="81.5920%" y="117" width="0.4975%" height="15" fill="rgb(227,98,0)" fg:x="164" fg:w="1"/><text x="81.8420%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="81.5920%" y="101" width="0.4975%" height="15" fill="rgb(207,7,3)" fg:x="164" fg:w="1"/><text x="81.8420%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (1 samples, 0.50%)</title><rect x="81.5920%" y="85" width="0.4975%" height="15" fill="rgb(206,98,19)" fg:x="164" fg:w="1"/><text x="81.8420%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="81.5920%" y="69" width="0.4975%" height="15" fill="rgb(217,5,26)" fg:x="164" fg:w="1"/><text x="81.8420%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="81.5920%" y="53" width="0.4975%" height="15" fill="rgb(235,190,38)" fg:x="164" fg:w="1"/><text x="81.8420%" y="63.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (87 samples, 43.28%)</title><rect x="39.3035%" y="229" width="43.2836%" height="15" fill="rgb(247,86,24)" fg:x="79" fg:w="87"/><text x="39.5535%" y="239.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (7 samples, 3.48%)</title><rect x="79.1045%" y="213" width="3.4826%" height="15" fill="rgb(205,101,16)" fg:x="159" fg:w="7"/><text x="79.3545%" y="223.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 3.48%)</title><rect x="79.1045%" y="197" width="3.4826%" height="15" fill="rgb(246,168,33)" fg:x="159" fg:w="7"/><text x="79.3545%" y="207.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 3.48%)</title><rect x="79.1045%" y="181" width="3.4826%" height="15" fill="rgb(231,114,1)" fg:x="159" fg:w="7"/><text x="79.3545%" y="191.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="82.0896%" y="165" width="0.4975%" height="15" fill="rgb(207,184,53)" fg:x="165" fg:w="1"/><text x="82.3396%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="82.0896%" y="149" width="0.4975%" height="15" fill="rgb(224,95,51)" fg:x="165" fg:w="1"/><text x="82.3396%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="82.0896%" y="133" width="0.4975%" height="15" fill="rgb(212,188,45)" fg:x="165" fg:w="1"/><text x="82.3396%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (1 samples, 0.50%)</title><rect x="82.0896%" y="117" width="0.4975%" height="15" fill="rgb(223,154,38)" fg:x="165" fg:w="1"/><text x="82.3396%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="82.0896%" y="101" width="0.4975%" height="15" fill="rgb(251,22,52)" fg:x="165" fg:w="1"/><text x="82.3396%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="82.0896%" y="85" width="0.4975%" height="15" fill="rgb(229,209,22)" fg:x="165" fg:w="1"/><text x="82.3396%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="82.5871%" y="197" width="0.4975%" height="15" fill="rgb(234,138,34)" fg:x="166" fg:w="1"/><text x="82.8371%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="82.5871%" y="181" width="0.4975%" height="15" fill="rgb(212,95,11)" fg:x="166" fg:w="1"/><text x="82.8371%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="82.5871%" y="165" width="0.4975%" height="15" fill="rgb(240,179,47)" fg:x="166" fg:w="1"/><text x="82.8371%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="82.5871%" y="149" width="0.4975%" height="15" fill="rgb(240,163,11)" fg:x="166" fg:w="1"/><text x="82.8371%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="83.0846%" y="117" width="0.4975%" height="15" fill="rgb(236,37,12)" fg:x="167" fg:w="1"/><text x="83.3346%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (2 samples, 1.00%)</title><rect x="83.0846%" y="149" width="0.9950%" height="15" fill="rgb(232,164,16)" fg:x="167" fg:w="2"/><text x="83.3346%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="83.0846%" y="133" width="0.9950%" height="15" fill="rgb(244,205,15)" fg:x="167" fg:w="2"/><text x="83.3346%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="83.5821%" y="117" width="0.4975%" height="15" fill="rgb(223,117,47)" fg:x="168" fg:w="1"/><text x="83.8321%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 1.49%)</title><rect x="83.0846%" y="181" width="1.4925%" height="15" fill="rgb(244,107,35)" fg:x="167" fg:w="3"/><text x="83.3346%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.49%)</title><rect x="83.0846%" y="165" width="1.4925%" height="15" fill="rgb(205,140,8)" fg:x="167" fg:w="3"/><text x="83.3346%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="84.0796%" y="149" width="0.4975%" height="15" fill="rgb(228,84,46)" fg:x="169" fg:w="1"/><text x="84.3296%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="84.0796%" y="133" width="0.4975%" height="15" fill="rgb(254,188,9)" fg:x="169" fg:w="1"/><text x="84.3296%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.50%)</title><rect x="84.0796%" y="117" width="0.4975%" height="15" fill="rgb(206,112,54)" fg:x="169" fg:w="1"/><text x="84.3296%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="84.0796%" y="101" width="0.4975%" height="15" fill="rgb(216,84,49)" fg:x="169" fg:w="1"/><text x="84.3296%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="84.5771%" y="101" width="0.4975%" height="15" fill="rgb(214,194,35)" fg:x="170" fg:w="1"/><text x="84.8271%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="84.5771%" y="85" width="0.4975%" height="15" fill="rgb(249,28,3)" fg:x="170" fg:w="1"/><text x="84.8271%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.50%)</title><rect x="85.0746%" y="69" width="0.4975%" height="15" fill="rgb(222,56,52)" fg:x="171" fg:w="1"/><text x="85.3246%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 1.49%)</title><rect x="84.5771%" y="133" width="1.4925%" height="15" fill="rgb(245,217,50)" fg:x="170" fg:w="3"/><text x="84.8271%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.49%)</title><rect x="84.5771%" y="117" width="1.4925%" height="15" fill="rgb(213,201,24)" fg:x="170" fg:w="3"/><text x="84.8271%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="85.0746%" y="101" width="0.9950%" height="15" fill="rgb(248,116,28)" fg:x="171" fg:w="2"/><text x="85.3246%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 1.00%)</title><rect x="85.0746%" y="85" width="0.9950%" height="15" fill="rgb(219,72,43)" fg:x="171" fg:w="2"/><text x="85.3246%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="85.5721%" y="69" width="0.4975%" height="15" fill="rgb(209,138,14)" fg:x="172" fg:w="1"/><text x="85.8221%" y="79.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[(hashconsing::HConsed&lt;rust_gkat::gkat_ast::bexp::BExp_&gt;,(hashconsing::HConsed&lt;rust_gkat::gkat_ast::exp::Exp_&gt;,rust_gkat::gkat_ast::exp::Action))]&gt; (1 samples, 0.50%)</title><rect x="86.0697%" y="133" width="0.4975%" height="15" fill="rgb(222,18,33)" fg:x="173" fg:w="1"/><text x="86.3197%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (9 samples, 4.48%)</title><rect x="82.5871%" y="213" width="4.4776%" height="15" fill="rgb(213,199,7)" fg:x="166" fg:w="9"/><text x="82.8371%" y="223.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (8 samples, 3.98%)</title><rect x="83.0846%" y="197" width="3.9801%" height="15" fill="rgb(250,110,10)" fg:x="167" fg:w="8"/><text x="83.3346%" y="207.50">rust..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="84.5771%" y="181" width="2.4876%" height="15" fill="rgb(248,123,6)" fg:x="170" fg:w="5"/><text x="84.8271%" y="191.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="84.5771%" y="165" width="2.4876%" height="15" fill="rgb(206,91,31)" fg:x="170" fg:w="5"/><text x="84.8271%" y="175.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="84.5771%" y="149" width="2.4876%" height="15" fill="rgb(211,154,13)" fg:x="170" fg:w="5"/><text x="84.8271%" y="159.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="86.5672%" y="133" width="0.4975%" height="15" fill="rgb(225,148,7)" fg:x="174" fg:w="1"/><text x="86.8172%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="86.5672%" y="117" width="0.4975%" height="15" fill="rgb(220,160,43)" fg:x="174" fg:w="1"/><text x="86.8172%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="86.5672%" y="101" width="0.4975%" height="15" fill="rgb(213,52,39)" fg:x="174" fg:w="1"/><text x="86.8172%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="86.5672%" y="85" width="0.4975%" height="15" fill="rgb(243,137,7)" fg:x="174" fg:w="1"/><text x="86.8172%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="86.5672%" y="69" width="0.4975%" height="15" fill="rgb(230,79,13)" fg:x="174" fg:w="1"/><text x="86.8172%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="86.5672%" y="53" width="0.4975%" height="15" fill="rgb(247,105,23)" fg:x="174" fg:w="1"/><text x="86.8172%" y="63.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (110 samples, 54.73%)</title><rect x="32.8358%" y="245" width="54.7264%" height="15" fill="rgb(223,179,41)" fg:x="66" fg:w="110"/><text x="33.0858%" y="255.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (10 samples, 4.98%)</title><rect x="82.5871%" y="229" width="4.9751%" height="15" fill="rgb(218,9,34)" fg:x="166" fg:w="10"/><text x="82.8371%" y="239.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="213" width="0.4975%" height="15" fill="rgb(222,106,8)" fg:x="175" fg:w="1"/><text x="87.3147%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="197" width="0.4975%" height="15" fill="rgb(211,220,0)" fg:x="175" fg:w="1"/><text x="87.3147%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="181" width="0.4975%" height="15" fill="rgb(229,52,16)" fg:x="175" fg:w="1"/><text x="87.3147%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="165" width="0.4975%" height="15" fill="rgb(212,155,18)" fg:x="175" fg:w="1"/><text x="87.3147%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="149" width="0.4975%" height="15" fill="rgb(242,21,14)" fg:x="175" fg:w="1"/><text x="87.3147%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="87.0647%" y="133" width="0.4975%" height="15" fill="rgb(222,19,48)" fg:x="175" fg:w="1"/><text x="87.3147%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (1 samples, 0.50%)</title><rect x="87.0647%" y="117" width="0.4975%" height="15" fill="rgb(232,45,27)" fg:x="175" fg:w="1"/><text x="87.3147%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="87.0647%" y="101" width="0.4975%" height="15" fill="rgb(249,103,42)" fg:x="175" fg:w="1"/><text x="87.3147%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="87.0647%" y="85" width="0.4975%" height="15" fill="rgb(246,81,33)" fg:x="175" fg:w="1"/><text x="87.3147%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="87.5622%" y="181" width="0.4975%" height="15" fill="rgb(252,33,42)" fg:x="176" fg:w="1"/><text x="87.8122%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="88.0597%" y="165" width="0.4975%" height="15" fill="rgb(209,212,41)" fg:x="177" fg:w="1"/><text x="88.3097%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="88.0597%" y="149" width="0.4975%" height="15" fill="rgb(207,154,6)" fg:x="177" fg:w="1"/><text x="88.3097%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="88.0597%" y="133" width="0.4975%" height="15" fill="rgb(223,64,47)" fg:x="177" fg:w="1"/><text x="88.3097%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="88.0597%" y="117" width="0.4975%" height="15" fill="rgb(211,161,38)" fg:x="177" fg:w="1"/><text x="88.3097%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="88.0597%" y="101" width="0.4975%" height="15" fill="rgb(219,138,40)" fg:x="177" fg:w="1"/><text x="88.3097%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="87.5622%" y="229" width="1.4925%" height="15" fill="rgb(241,228,46)" fg:x="176" fg:w="3"/><text x="87.8122%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="87.5622%" y="213" width="1.4925%" height="15" fill="rgb(223,209,38)" fg:x="176" fg:w="3"/><text x="87.8122%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="87.5622%" y="197" width="1.4925%" height="15" fill="rgb(236,164,45)" fg:x="176" fg:w="3"/><text x="87.8122%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="88.0597%" y="181" width="0.9950%" height="15" fill="rgb(231,15,5)" fg:x="177" fg:w="2"/><text x="88.3097%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="88.5572%" y="165" width="0.4975%" height="15" fill="rgb(252,35,15)" fg:x="178" fg:w="1"/><text x="88.8072%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="88.5572%" y="149" width="0.4975%" height="15" fill="rgb(248,181,18)" fg:x="178" fg:w="1"/><text x="88.8072%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="88.5572%" y="133" width="0.4975%" height="15" fill="rgb(233,39,42)" fg:x="178" fg:w="1"/><text x="88.8072%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="88.5572%" y="117" width="0.4975%" height="15" fill="rgb(238,110,33)" fg:x="178" fg:w="1"/><text x="88.8072%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="88.5572%" y="101" width="0.4975%" height="15" fill="rgb(233,195,10)" fg:x="178" fg:w="1"/><text x="88.8072%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (124 samples, 61.69%)</title><rect x="27.8607%" y="261" width="61.6915%" height="15" fill="rgb(254,105,3)" fg:x="56" fg:w="124"/><text x="28.1107%" y="271.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (4 samples, 1.99%)</title><rect x="87.5622%" y="245" width="1.9900%" height="15" fill="rgb(221,225,9)" fg:x="176" fg:w="4"/><text x="87.8122%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="89.0547%" y="229" width="0.4975%" height="15" fill="rgb(224,227,45)" fg:x="179" fg:w="1"/><text x="89.3047%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="89.0547%" y="213" width="0.4975%" height="15" fill="rgb(229,198,43)" fg:x="179" fg:w="1"/><text x="89.3047%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="89.0547%" y="197" width="0.4975%" height="15" fill="rgb(206,209,35)" fg:x="179" fg:w="1"/><text x="89.3047%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="89.0547%" y="181" width="0.4975%" height="15" fill="rgb(245,195,53)" fg:x="179" fg:w="1"/><text x="89.3047%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (1 samples, 0.50%)</title><rect x="89.5522%" y="245" width="0.4975%" height="15" fill="rgb(240,92,26)" fg:x="180" fg:w="1"/><text x="89.8022%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="89.5522%" y="229" width="0.4975%" height="15" fill="rgb(207,40,23)" fg:x="180" fg:w="1"/><text x="89.8022%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="89.5522%" y="213" width="0.4975%" height="15" fill="rgb(223,111,35)" fg:x="180" fg:w="1"/><text x="89.8022%" y="223.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="90.0498%" y="197" width="0.4975%" height="15" fill="rgb(229,147,28)" fg:x="181" fg:w="1"/><text x="90.2998%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="90.0498%" y="181" width="0.4975%" height="15" fill="rgb(211,29,28)" fg:x="181" fg:w="1"/><text x="90.2998%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="90.0498%" y="165" width="0.4975%" height="15" fill="rgb(228,72,33)" fg:x="181" fg:w="1"/><text x="90.2998%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="90.0498%" y="149" width="0.4975%" height="15" fill="rgb(205,214,31)" fg:x="181" fg:w="1"/><text x="90.2998%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (138 samples, 68.66%)</title><rect x="22.3881%" y="277" width="68.6567%" height="15" fill="rgb(224,111,15)" fg:x="45" fg:w="138"/><text x="22.6381%" y="287.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (3 samples, 1.49%)</title><rect x="89.5522%" y="261" width="1.4925%" height="15" fill="rgb(253,21,26)" fg:x="180" fg:w="3"/><text x="89.8022%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="90.0498%" y="245" width="0.9950%" height="15" fill="rgb(245,139,43)" fg:x="181" fg:w="2"/><text x="90.2998%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="90.0498%" y="229" width="0.9950%" height="15" fill="rgb(252,170,7)" fg:x="181" fg:w="2"/><text x="90.2998%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="90.0498%" y="213" width="0.9950%" height="15" fill="rgb(231,118,14)" fg:x="181" fg:w="2"/><text x="90.2998%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="90.5473%" y="197" width="0.4975%" height="15" fill="rgb(238,83,0)" fg:x="182" fg:w="1"/><text x="90.7973%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="90.5473%" y="181" width="0.4975%" height="15" fill="rgb(221,39,39)" fg:x="182" fg:w="1"/><text x="90.7973%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="90.5473%" y="165" width="0.4975%" height="15" fill="rgb(222,119,46)" fg:x="182" fg:w="1"/><text x="90.7973%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="90.5473%" y="149" width="0.4975%" height="15" fill="rgb(222,165,49)" fg:x="182" fg:w="1"/><text x="90.7973%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="90.5473%" y="133" width="0.4975%" height="15" fill="rgb(219,113,52)" fg:x="182" fg:w="1"/><text x="90.7973%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="91.0448%" y="245" width="0.9950%" height="15" fill="rgb(214,7,15)" fg:x="183" fg:w="2"/><text x="91.2948%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="91.0448%" y="229" width="0.9950%" height="15" fill="rgb(235,32,4)" fg:x="183" fg:w="2"/><text x="91.2948%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="91.5423%" y="213" width="0.4975%" height="15" fill="rgb(238,90,54)" fg:x="184" fg:w="1"/><text x="91.7923%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.50%)</title><rect x="91.5423%" y="197" width="0.4975%" height="15" fill="rgb(213,208,19)" fg:x="184" fg:w="1"/><text x="91.7923%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="92.0398%" y="229" width="0.4975%" height="15" fill="rgb(233,156,4)" fg:x="185" fg:w="1"/><text x="92.2898%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="92.0398%" y="213" width="0.4975%" height="15" fill="rgb(207,194,5)" fg:x="185" fg:w="1"/><text x="92.2898%" y="223.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (1 samples, 0.50%)</title><rect x="92.0398%" y="197" width="0.4975%" height="15" fill="rgb(206,111,30)" fg:x="185" fg:w="1"/><text x="92.2898%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="92.5373%" y="197" width="0.4975%" height="15" fill="rgb(243,70,54)" fg:x="186" fg:w="1"/><text x="92.7873%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="92.5373%" y="181" width="0.4975%" height="15" fill="rgb(242,28,8)" fg:x="186" fg:w="1"/><text x="92.7873%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="92.5373%" y="165" width="0.4975%" height="15" fill="rgb(219,106,18)" fg:x="186" fg:w="1"/><text x="92.7873%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="92.5373%" y="149" width="0.4975%" height="15" fill="rgb(244,222,10)" fg:x="186" fg:w="1"/><text x="92.7873%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="92.5373%" y="133" width="0.4975%" height="15" fill="rgb(236,179,52)" fg:x="186" fg:w="1"/><text x="92.7873%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="93.0348%" y="181" width="0.4975%" height="15" fill="rgb(213,23,39)" fg:x="187" fg:w="1"/><text x="93.2848%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="93.0348%" y="165" width="0.4975%" height="15" fill="rgb(238,48,10)" fg:x="187" fg:w="1"/><text x="93.2848%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="92.5373%" y="213" width="1.4925%" height="15" fill="rgb(251,196,23)" fg:x="186" fg:w="3"/><text x="92.7873%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="93.0348%" y="197" width="0.9950%" height="15" fill="rgb(250,152,24)" fg:x="187" fg:w="2"/><text x="93.2848%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="93.5323%" y="181" width="0.4975%" height="15" fill="rgb(209,150,17)" fg:x="188" fg:w="1"/><text x="93.7823%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="93.5323%" y="165" width="0.4975%" height="15" fill="rgb(234,202,34)" fg:x="188" fg:w="1"/><text x="93.7823%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="93.5323%" y="149" width="0.4975%" height="15" fill="rgb(253,148,53)" fg:x="188" fg:w="1"/><text x="93.7823%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="93.5323%" y="133" width="0.4975%" height="15" fill="rgb(218,129,16)" fg:x="188" fg:w="1"/><text x="93.7823%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="93.5323%" y="117" width="0.4975%" height="15" fill="rgb(216,85,19)" fg:x="188" fg:w="1"/><text x="93.7823%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (4 samples, 1.99%)</title><rect x="92.5373%" y="229" width="1.9900%" height="15" fill="rgb(235,228,7)" fg:x="186" fg:w="4"/><text x="92.7873%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="94.0299%" y="213" width="0.4975%" height="15" fill="rgb(245,175,0)" fg:x="189" fg:w="1"/><text x="94.2799%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="94.0299%" y="197" width="0.4975%" height="15" fill="rgb(208,168,36)" fg:x="189" fg:w="1"/><text x="94.2799%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="94.0299%" y="181" width="0.4975%" height="15" fill="rgb(246,171,24)" fg:x="189" fg:w="1"/><text x="94.2799%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="94.0299%" y="165" width="0.4975%" height="15" fill="rgb(215,142,24)" fg:x="189" fg:w="1"/><text x="94.2799%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (168 samples, 83.58%)</title><rect x="11.4428%" y="293" width="83.5821%" height="15" fill="rgb(250,187,7)" fg:x="23" fg:w="168"/><text x="11.6928%" y="303.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (8 samples, 3.98%)</title><rect x="91.0448%" y="277" width="3.9801%" height="15" fill="rgb(228,66,33)" fg:x="183" fg:w="8"/><text x="91.2948%" y="287.50">rust..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (8 samples, 3.98%)</title><rect x="91.0448%" y="261" width="3.9801%" height="15" fill="rgb(234,215,21)" fg:x="183" fg:w="8"/><text x="91.2948%" y="271.50">rust..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (6 samples, 2.99%)</title><rect x="92.0398%" y="245" width="2.9851%" height="15" fill="rgb(222,191,20)" fg:x="185" fg:w="6"/><text x="92.2898%" y="255.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="94.5274%" y="229" width="0.4975%" height="15" fill="rgb(245,79,54)" fg:x="190" fg:w="1"/><text x="94.7774%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="94.5274%" y="213" width="0.4975%" height="15" fill="rgb(240,10,37)" fg:x="190" fg:w="1"/><text x="94.7774%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (1 samples, 0.50%)</title><rect x="94.5274%" y="197" width="0.4975%" height="15" fill="rgb(214,192,32)" fg:x="190" fg:w="1"/><text x="94.7774%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (1 samples, 0.50%)</title><rect x="94.5274%" y="181" width="0.4975%" height="15" fill="rgb(209,36,54)" fg:x="190" fg:w="1"/><text x="94.7774%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="94.5274%" y="165" width="0.4975%" height="15" fill="rgb(220,10,11)" fg:x="190" fg:w="1"/><text x="94.7774%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="94.5274%" y="149" width="0.4975%" height="15" fill="rgb(221,106,17)" fg:x="190" fg:w="1"/><text x="94.7774%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="95.0249%" y="229" width="0.4975%" height="15" fill="rgb(251,142,44)" fg:x="191" fg:w="1"/><text x="95.2749%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="95.0249%" y="213" width="0.4975%" height="15" fill="rgb(238,13,15)" fg:x="191" fg:w="1"/><text x="95.2749%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="95.0249%" y="197" width="0.4975%" height="15" fill="rgb(208,107,27)" fg:x="191" fg:w="1"/><text x="95.2749%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="95.0249%" y="181" width="0.4975%" height="15" fill="rgb(205,136,37)" fg:x="191" fg:w="1"/><text x="95.2749%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (182 samples, 90.55%)</title><rect x="5.4726%" y="309" width="90.5473%" height="15" fill="rgb(250,205,27)" fg:x="11" fg:w="182"/><text x="5.7226%" y="319.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (2 samples, 1.00%)</title><rect x="95.0249%" y="293" width="0.9950%" height="15" fill="rgb(210,80,43)" fg:x="191" fg:w="2"/><text x="95.2749%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="95.0249%" y="277" width="0.9950%" height="15" fill="rgb(247,160,36)" fg:x="191" fg:w="2"/><text x="95.2749%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="95.0249%" y="261" width="0.9950%" height="15" fill="rgb(234,13,49)" fg:x="191" fg:w="2"/><text x="95.2749%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="95.0249%" y="245" width="0.9950%" height="15" fill="rgb(234,122,0)" fg:x="191" fg:w="2"/><text x="95.2749%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="95.5224%" y="229" width="0.4975%" height="15" fill="rgb(207,146,38)" fg:x="192" fg:w="1"/><text x="95.7724%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="95.5224%" y="213" width="0.4975%" height="15" fill="rgb(207,177,25)" fg:x="192" fg:w="1"/><text x="95.7724%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="95.5224%" y="197" width="0.4975%" height="15" fill="rgb(211,178,42)" fg:x="192" fg:w="1"/><text x="95.7724%" y="207.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.50%)</title><rect x="95.5224%" y="181" width="0.4975%" height="15" fill="rgb(230,69,54)" fg:x="192" fg:w="1"/><text x="95.7724%" y="191.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.50%)</title><rect x="95.5224%" y="165" width="0.4975%" height="15" fill="rgb(214,135,41)" fg:x="192" fg:w="1"/><text x="95.7724%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.50%)</title><rect x="95.5224%" y="149" width="0.4975%" height="15" fill="rgb(237,67,25)" fg:x="192" fg:w="1"/><text x="95.7724%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.50%)</title><rect x="95.5224%" y="133" width="0.4975%" height="15" fill="rgb(222,189,50)" fg:x="192" fg:w="1"/><text x="95.7724%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.50%)</title><rect x="95.5224%" y="117" width="0.4975%" height="15" fill="rgb(245,148,34)" fg:x="192" fg:w="1"/><text x="95.7724%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="96.0199%" y="277" width="0.9950%" height="15" fill="rgb(222,29,6)" fg:x="193" fg:w="2"/><text x="96.2699%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="96.0199%" y="261" width="0.9950%" height="15" fill="rgb(221,189,43)" fg:x="193" fg:w="2"/><text x="96.2699%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="96.0199%" y="245" width="0.9950%" height="15" fill="rgb(207,36,27)" fg:x="193" fg:w="2"/><text x="96.2699%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="96.5174%" y="229" width="0.4975%" height="15" fill="rgb(217,90,24)" fg:x="194" fg:w="1"/><text x="96.7674%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="97.0149%" y="197" width="0.4975%" height="15" fill="rgb(224,66,35)" fg:x="195" fg:w="1"/><text x="97.2649%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="97.0149%" y="181" width="0.4975%" height="15" fill="rgb(221,13,50)" fg:x="195" fg:w="1"/><text x="97.2649%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 1.00%)</title><rect x="97.0149%" y="245" width="0.9950%" height="15" fill="rgb(236,68,49)" fg:x="195" fg:w="2"/><text x="97.2649%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.00%)</title><rect x="97.0149%" y="229" width="0.9950%" height="15" fill="rgb(229,146,28)" fg:x="195" fg:w="2"/><text x="97.2649%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (2 samples, 1.00%)</title><rect x="97.0149%" y="213" width="0.9950%" height="15" fill="rgb(225,31,38)" fg:x="195" fg:w="2"/><text x="97.2649%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="97.5124%" y="197" width="0.4975%" height="15" fill="rgb(250,208,3)" fg:x="196" fg:w="1"/><text x="97.7624%" y="207.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.50%)</title><rect x="98.0100%" y="229" width="0.4975%" height="15" fill="rgb(246,54,23)" fg:x="197" fg:w="1"/><text x="98.2600%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.50%)</title><rect x="98.0100%" y="213" width="0.4975%" height="15" fill="rgb(243,76,11)" fg:x="197" fg:w="1"/><text x="98.2600%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.50%)</title><rect x="98.0100%" y="197" width="0.4975%" height="15" fill="rgb(245,21,50)" fg:x="197" fg:w="1"/><text x="98.2600%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.50%)</title><rect x="98.0100%" y="181" width="0.4975%" height="15" fill="rgb(228,9,43)" fg:x="197" fg:w="1"/><text x="98.2600%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.50%)</title><rect x="98.0100%" y="165" width="0.4975%" height="15" fill="rgb(208,100,47)" fg:x="197" fg:w="1"/><text x="98.2600%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.50%)</title><rect x="98.0100%" y="149" width="0.4975%" height="15" fill="rgb(232,26,8)" fg:x="197" fg:w="1"/><text x="98.2600%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.50%)</title><rect x="98.0100%" y="133" width="0.4975%" height="15" fill="rgb(216,166,38)" fg:x="197" fg:w="1"/><text x="98.2600%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.50%)</title><rect x="98.0100%" y="117" width="0.4975%" height="15" fill="rgb(251,202,51)" fg:x="197" fg:w="1"/><text x="98.2600%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.50%)</title><rect x="98.5075%" y="213" width="0.4975%" height="15" fill="rgb(254,216,34)" fg:x="198" fg:w="1"/><text x="98.7575%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.50%)</title><rect x="98.5075%" y="197" width="0.4975%" height="15" fill="rgb(251,32,27)" fg:x="198" fg:w="1"/><text x="98.7575%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="98.5075%" y="181" width="0.4975%" height="15" fill="rgb(208,127,28)" fg:x="198" fg:w="1"/><text x="98.7575%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv (200 samples, 99.50%)</title><rect x="0.0000%" y="437" width="99.5025%" height="15" fill="rgb(224,137,22)" fg:x="0" fg:w="200"/><text x="0.2500%" y="447.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (200 samples, 99.50%)</title><rect x="0.0000%" y="421" width="99.5025%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="200"/><text x="0.2500%" y="431.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (200 samples, 99.50%)</title><rect x="0.0000%" y="405" width="99.5025%" height="15" fill="rgb(229,75,37)" fg:x="0" fg:w="200"/><text x="0.2500%" y="415.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (198 samples, 98.51%)</title><rect x="0.9950%" y="389" width="98.5075%" height="15" fill="rgb(252,64,23)" fg:x="2" fg:w="198"/><text x="1.2450%" y="399.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (198 samples, 98.51%)</title><rect x="0.9950%" y="373" width="98.5075%" height="15" fill="rgb(232,162,48)" fg:x="2" fg:w="198"/><text x="1.2450%" y="383.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (197 samples, 98.01%)</title><rect x="1.4925%" y="357" width="98.0100%" height="15" fill="rgb(246,160,12)" fg:x="3" fg:w="197"/><text x="1.7425%" y="367.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (196 samples, 97.51%)</title><rect x="1.9900%" y="341" width="97.5124%" height="15" fill="rgb(247,166,0)" fg:x="4" fg:w="196"/><text x="2.2400%" y="351.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper (195 samples, 97.01%)</title><rect x="2.4876%" y="325" width="97.0149%" height="15" fill="rgb(249,219,21)" fg:x="5" fg:w="195"/><text x="2.7376%" y="335.50">rust-gkat`rust_gkat::gkat_symb::equiv::equiv_helper</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv::reject (7 samples, 3.48%)</title><rect x="96.0199%" y="309" width="3.4826%" height="15" fill="rgb(205,209,3)" fg:x="193" fg:w="7"/><text x="96.2699%" y="319.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 3.48%)</title><rect x="96.0199%" y="293" width="3.4826%" height="15" fill="rgb(243,44,1)" fg:x="193" fg:w="7"/><text x="96.2699%" y="303.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="97.0149%" y="277" width="2.4876%" height="15" fill="rgb(206,159,16)" fg:x="195" fg:w="5"/><text x="97.2649%" y="287.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 2.49%)</title><rect x="97.0149%" y="261" width="2.4876%" height="15" fill="rgb(244,77,30)" fg:x="195" fg:w="5"/><text x="97.2649%" y="271.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (3 samples, 1.49%)</title><rect x="98.0100%" y="245" width="1.4925%" height="15" fill="rgb(218,69,12)" fg:x="197" fg:w="3"/><text x="98.2600%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (2 samples, 1.00%)</title><rect x="98.5075%" y="229" width="0.9950%" height="15" fill="rgb(212,87,7)" fg:x="198" fg:w="2"/><text x="98.7575%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="99.0050%" y="213" width="0.4975%" height="15" fill="rgb(245,114,25)" fg:x="199" fg:w="1"/><text x="99.2550%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1 samples, 0.50%)</title><rect x="99.0050%" y="197" width="0.4975%" height="15" fill="rgb(210,61,42)" fg:x="199" fg:w="1"/><text x="99.2550%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.50%)</title><rect x="99.0050%" y="181" width="0.4975%" height="15" fill="rgb(211,52,33)" fg:x="199" fg:w="1"/><text x="99.2550%" y="191.50"></text></g><g><title>all (201 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(234,58,33)" fg:x="0" fg:w="201"/><text x="0.2500%" y="575.50"></text></g><g><title>dyld`start (201 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(220,115,36)" fg:x="0" fg:w="201"/><text x="0.2500%" y="559.50">dyld`start</text></g><g><title>rust-gkat`main (201 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(243,153,54)" fg:x="0" fg:w="201"/><text x="0.2500%" y="543.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start (201 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(251,47,18)" fg:x="0" fg:w="201"/><text x="0.2500%" y="527.50">rust-gkat`std::rt::lang_start</text></g><g><title>rust-gkat`std::rt::lang_start_internal (201 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(242,102,42)" fg:x="0" fg:w="201"/><text x="0.2500%" y="511.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (201 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(234,31,38)" fg:x="0" fg:w="201"/><text x="0.2500%" y="495.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys_common::backtrace::__rust_begin_short_backtrace (201 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(221,117,51)" fg:x="0" fg:w="201"/><text x="0.2500%" y="479.50">rust-gkat`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (201 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(212,20,18)" fg:x="0" fg:w="201"/><text x="0.2500%" y="463.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`rust_gkat::parsing::ast::Exp::to_hashcons (1 samples, 0.50%)</title><rect x="99.5025%" y="437" width="0.4975%" height="15" fill="rgb(245,133,36)" fg:x="200" fg:w="1"/><text x="99.7525%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::ast::Exp::to_hashcons (1 samples, 0.50%)</title><rect x="99.5025%" y="421" width="0.4975%" height="15" fill="rgb(212,6,19)" fg:x="200" fg:w="1"/><text x="99.7525%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::ast::Exp::to_hashcons (1 samples, 0.50%)</title><rect x="99.5025%" y="405" width="0.4975%" height="15" fill="rgb(218,1,36)" fg:x="200" fg:w="1"/><text x="99.7525%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::ast::Exp::to_hashcons (1 samples, 0.50%)</title><rect x="99.5025%" y="389" width="0.4975%" height="15" fill="rgb(246,84,54)" fg:x="200" fg:w="1"/><text x="99.7525%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (1 samples, 0.50%)</title><rect x="99.5025%" y="373" width="0.4975%" height="15" fill="rgb(242,110,6)" fg:x="200" fg:w="1"/><text x="99.7525%" y="383.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.50%)</title><rect x="99.5025%" y="357" width="0.4975%" height="15" fill="rgb(214,47,5)" fg:x="200" fg:w="1"/><text x="99.7525%" y="367.50"></text></g></svg></svg>