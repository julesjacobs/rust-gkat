<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="246"><g><title>rust-gkat`core::ptr::drop_in_place&lt;logicng::formulas::formula_cache::formula_factory_caches::FormulaFactoryCaches&gt; (1 samples, 0.41%)</title><rect x="0.0000%" y="373" width="0.4065%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.41%)</title><rect x="0.0000%" y="357" width="0.4065%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.41%)</title><rect x="0.0000%" y="341" width="0.4065%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="0.4065%" y="341" width="0.4065%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.6565%" y="351.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="0.4065%" y="325" width="0.4065%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.6565%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="0.4065%" y="309" width="0.4065%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.6565%" y="319.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="0.8130%" y="261" width="0.4065%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="1.0630%" y="271.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="0.8130%" y="245" width="0.4065%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="1.0630%" y="255.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (2 samples, 0.81%)</title><rect x="0.8130%" y="309" width="0.8130%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="2"/><text x="1.0630%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (2 samples, 0.81%)</title><rect x="0.8130%" y="293" width="0.8130%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="2"/><text x="1.0630%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (2 samples, 0.81%)</title><rect x="0.8130%" y="277" width="0.8130%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="2"/><text x="1.0630%" y="287.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="1.2195%" y="261" width="0.4065%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="1.4695%" y="271.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="1.2195%" y="245" width="0.4065%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="1.4695%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="1.6260%" y="293" width="0.4065%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="1.8760%" y="303.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="1.6260%" y="277" width="0.4065%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="1.8760%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="2.0325%" y="277" width="0.4065%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="2.2825%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="2.4390%" y="245" width="0.4065%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="2.6890%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (2 samples, 0.81%)</title><rect x="2.4390%" y="277" width="0.8130%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="2.6890%" y="287.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.81%)</title><rect x="2.4390%" y="261" width="0.8130%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="2"/><text x="2.6890%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="2.8455%" y="245" width="0.4065%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="3.0955%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="3.2520%" y="277" width="0.4065%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="3.5020%" y="287.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="3.2520%" y="261" width="0.4065%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="3.5020%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="3.2520%" y="245" width="0.4065%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="3.5020%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="3.6585%" y="245" width="0.4065%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="3.9085%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (7 samples, 2.85%)</title><rect x="1.6260%" y="309" width="2.8455%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="7"/><text x="1.8760%" y="319.50">ru..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (6 samples, 2.44%)</title><rect x="2.0325%" y="293" width="2.4390%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="6"/><text x="2.2825%" y="303.50">ru..</text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (2 samples, 0.81%)</title><rect x="3.6585%" y="277" width="0.8130%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="2"/><text x="3.9085%" y="287.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.81%)</title><rect x="3.6585%" y="261" width="0.8130%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="2"/><text x="3.9085%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="4.0650%" y="245" width="0.4065%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="4.3150%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="4.4715%" y="293" width="0.4065%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="1"/><text x="4.7215%" y="303.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="4.4715%" y="277" width="0.4065%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="4.7215%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 4.47%)</title><rect x="0.8130%" y="325" width="4.4715%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="11"/><text x="1.0630%" y="335.50">rust-..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (2 samples, 0.81%)</title><rect x="4.4715%" y="309" width="0.8130%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="2"/><text x="4.7215%" y="319.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="4.8780%" y="293" width="0.4065%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="1"/><text x="5.1280%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="5.2846%" y="293" width="0.4065%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="1"/><text x="5.5346%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="5.6911%" y="277" width="0.4065%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="5.9411%" y="287.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="5.6911%" y="261" width="0.4065%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="5.9411%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="5.6911%" y="245" width="0.4065%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="1"/><text x="5.9411%" y="255.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="6.5041%" y="245" width="0.4065%" height="15" fill="rgb(238,167,29)" fg:x="16" fg:w="1"/><text x="6.7541%" y="255.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="6.5041%" y="229" width="0.4065%" height="15" fill="rgb(232,182,51)" fg:x="16" fg:w="1"/><text x="6.7541%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="8.1301%" y="181" width="0.4065%" height="15" fill="rgb(231,60,39)" fg:x="20" fg:w="1"/><text x="8.3801%" y="191.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (8 samples, 3.25%)</title><rect x="5.6911%" y="293" width="3.2520%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="8"/><text x="5.9411%" y="303.50">rus..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (7 samples, 2.85%)</title><rect x="6.0976%" y="277" width="2.8455%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="7"/><text x="6.3476%" y="287.50">ru..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (6 samples, 2.44%)</title><rect x="6.5041%" y="261" width="2.4390%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="6"/><text x="6.7541%" y="271.50">ru..</text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (5 samples, 2.03%)</title><rect x="6.9106%" y="245" width="2.0325%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="5"/><text x="7.1606%" y="255.50">r..</text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 2.03%)</title><rect x="6.9106%" y="229" width="2.0325%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="5"/><text x="7.1606%" y="239.50">r..</text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.81%)</title><rect x="8.1301%" y="213" width="0.8130%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="2"/><text x="8.3801%" y="223.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.81%)</title><rect x="8.1301%" y="197" width="0.8130%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="2"/><text x="8.3801%" y="207.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="8.5366%" y="181" width="0.4065%" height="15" fill="rgb(239,60,40)" fg:x="21" fg:w="1"/><text x="8.7866%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="8.9431%" y="213" width="0.4065%" height="15" fill="rgb(206,27,48)" fg:x="22" fg:w="1"/><text x="9.1931%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="9.3496%" y="197" width="0.4065%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="1"/><text x="9.5996%" y="207.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="9.3496%" y="181" width="0.4065%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="1"/><text x="9.5996%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.22%)</title><rect x="8.9431%" y="261" width="1.2195%" height="15" fill="rgb(247,123,22)" fg:x="22" fg:w="3"/><text x="9.1931%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.22%)</title><rect x="8.9431%" y="245" width="1.2195%" height="15" fill="rgb(231,138,38)" fg:x="22" fg:w="3"/><text x="9.1931%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.22%)</title><rect x="8.9431%" y="229" width="1.2195%" height="15" fill="rgb(231,145,46)" fg:x="22" fg:w="3"/><text x="9.1931%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.81%)</title><rect x="9.3496%" y="213" width="0.8130%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="2"/><text x="9.5996%" y="223.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="9.7561%" y="197" width="0.4065%" height="15" fill="rgb(217,147,25)" fg:x="24" fg:w="1"/><text x="10.0061%" y="207.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (4 samples, 1.63%)</title><rect x="8.9431%" y="293" width="1.6260%" height="15" fill="rgb(247,81,37)" fg:x="22" fg:w="4"/><text x="9.1931%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (4 samples, 1.63%)</title><rect x="8.9431%" y="277" width="1.6260%" height="15" fill="rgb(209,12,38)" fg:x="22" fg:w="4"/><text x="9.1931%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="10.1626%" y="261" width="0.4065%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="1"/><text x="10.4126%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="10.1626%" y="245" width="0.4065%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="1"/><text x="10.4126%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="10.5691%" y="261" width="0.4065%" height="15" fill="rgb(221,10,30)" fg:x="26" fg:w="1"/><text x="10.8191%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (2 samples, 0.81%)</title><rect x="10.5691%" y="277" width="0.8130%" height="15" fill="rgb(210,229,1)" fg:x="26" fg:w="2"/><text x="10.8191%" y="287.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="10.9756%" y="261" width="0.4065%" height="15" fill="rgb(222,148,37)" fg:x="27" fg:w="1"/><text x="11.2256%" y="271.50"></text></g><g><title>rust-gkat`mi_free (3 samples, 1.22%)</title><rect x="11.3821%" y="277" width="1.2195%" height="15" fill="rgb(234,67,33)" fg:x="28" fg:w="3"/><text x="11.6321%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 7.72%)</title><rect x="5.2846%" y="309" width="7.7236%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="19"/><text x="5.5346%" y="319.50">rust-gkat`&lt;..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (6 samples, 2.44%)</title><rect x="10.5691%" y="293" width="2.4390%" height="15" fill="rgb(247,138,52)" fg:x="26" fg:w="6"/><text x="10.8191%" y="303.50">ru..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="12.6016%" y="277" width="0.4065%" height="15" fill="rgb(213,79,30)" fg:x="31" fg:w="1"/><text x="12.8516%" y="287.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding as logicng::formulas::formula_cache::formula_encoding::Encoding&gt;::encode (1 samples, 0.41%)</title><rect x="13.0081%" y="309" width="0.4065%" height="15" fill="rgb(246,177,23)" fg:x="32" fg:w="1"/><text x="13.2581%" y="319.50"></text></g><g><title>rust-gkat`dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_insert_with (1 samples, 0.41%)</title><rect x="13.4146%" y="261" width="0.4065%" height="15" fill="rgb(230,62,27)" fg:x="33" fg:w="1"/><text x="13.6646%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (2 samples, 0.81%)</title><rect x="13.4146%" y="277" width="0.8130%" height="15" fill="rgb(216,154,8)" fg:x="33" fg:w="2"/><text x="13.6646%" y="287.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="13.8211%" y="261" width="0.4065%" height="15" fill="rgb(244,35,45)" fg:x="34" fg:w="1"/><text x="14.0711%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="13.8211%" y="245" width="0.4065%" height="15" fill="rgb(251,115,12)" fg:x="34" fg:w="1"/><text x="14.0711%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="13.8211%" y="229" width="0.4065%" height="15" fill="rgb(240,54,50)" fg:x="34" fg:w="1"/><text x="14.0711%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="13.8211%" y="213" width="0.4065%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="1"/><text x="14.0711%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="14.2276%" y="245" width="0.4065%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="1"/><text x="14.4776%" y="255.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="14.2276%" y="229" width="0.4065%" height="15" fill="rgb(249,43,39)" fg:x="35" fg:w="1"/><text x="14.4776%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="14.2276%" y="213" width="0.4065%" height="15" fill="rgb(209,38,44)" fg:x="35" fg:w="1"/><text x="14.4776%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="14.2276%" y="277" width="0.8130%" height="15" fill="rgb(236,212,23)" fg:x="35" fg:w="2"/><text x="14.4776%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="14.2276%" y="261" width="0.8130%" height="15" fill="rgb(242,79,21)" fg:x="35" fg:w="2"/><text x="14.4776%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="14.6341%" y="245" width="0.4065%" height="15" fill="rgb(211,96,35)" fg:x="36" fg:w="1"/><text x="14.8841%" y="255.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="14.6341%" y="229" width="0.4065%" height="15" fill="rgb(253,215,40)" fg:x="36" fg:w="1"/><text x="14.8841%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="14.6341%" y="213" width="0.4065%" height="15" fill="rgb(211,81,21)" fg:x="36" fg:w="1"/><text x="14.8841%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="15.0407%" y="261" width="0.4065%" height="15" fill="rgb(208,190,38)" fg:x="37" fg:w="1"/><text x="15.2907%" y="271.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.41%)</title><rect x="15.0407%" y="245" width="0.4065%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="1"/><text x="15.2907%" y="255.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (1 samples, 0.41%)</title><rect x="15.0407%" y="229" width="0.4065%" height="15" fill="rgb(237,122,38)" fg:x="37" fg:w="1"/><text x="15.2907%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 2.85%)</title><rect x="13.4146%" y="293" width="2.8455%" height="15" fill="rgb(244,218,35)" fg:x="33" fg:w="7"/><text x="13.6646%" y="303.50">ru..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (3 samples, 1.22%)</title><rect x="15.0407%" y="277" width="1.2195%" height="15" fill="rgb(240,68,47)" fg:x="37" fg:w="3"/><text x="15.2907%" y="287.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.81%)</title><rect x="15.4472%" y="261" width="0.8130%" height="15" fill="rgb(210,16,53)" fg:x="38" fg:w="2"/><text x="15.6972%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="16.2602%" y="261" width="0.4065%" height="15" fill="rgb(235,124,12)" fg:x="40" fg:w="1"/><text x="16.5102%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="16.2602%" y="245" width="0.4065%" height="15" fill="rgb(224,169,11)" fg:x="40" fg:w="1"/><text x="16.5102%" y="255.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="16.2602%" y="229" width="0.4065%" height="15" fill="rgb(250,166,2)" fg:x="40" fg:w="1"/><text x="16.5102%" y="239.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="16.2602%" y="213" width="0.4065%" height="15" fill="rgb(242,216,29)" fg:x="40" fg:w="1"/><text x="16.5102%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="16.6667%" y="245" width="0.4065%" height="15" fill="rgb(230,116,27)" fg:x="41" fg:w="1"/><text x="16.9167%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="17.0732%" y="197" width="0.4065%" height="15" fill="rgb(228,99,48)" fg:x="42" fg:w="1"/><text x="17.3232%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="17.0732%" y="181" width="0.4065%" height="15" fill="rgb(253,11,6)" fg:x="42" fg:w="1"/><text x="17.3232%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="17.0732%" y="165" width="0.4065%" height="15" fill="rgb(247,143,39)" fg:x="42" fg:w="1"/><text x="17.3232%" y="175.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="17.0732%" y="149" width="0.4065%" height="15" fill="rgb(236,97,10)" fg:x="42" fg:w="1"/><text x="17.3232%" y="159.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memmove (1 samples, 0.41%)</title><rect x="17.0732%" y="133" width="0.4065%" height="15" fill="rgb(233,208,19)" fg:x="42" fg:w="1"/><text x="17.3232%" y="143.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (3 samples, 1.22%)</title><rect x="16.6667%" y="261" width="1.2195%" height="15" fill="rgb(216,164,2)" fg:x="41" fg:w="3"/><text x="16.9167%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="17.0732%" y="245" width="0.8130%" height="15" fill="rgb(220,129,5)" fg:x="42" fg:w="2"/><text x="17.3232%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.81%)</title><rect x="17.0732%" y="229" width="0.8130%" height="15" fill="rgb(242,17,10)" fg:x="42" fg:w="2"/><text x="17.3232%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.81%)</title><rect x="17.0732%" y="213" width="0.8130%" height="15" fill="rgb(242,107,0)" fg:x="42" fg:w="2"/><text x="17.3232%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="17.4797%" y="197" width="0.4065%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="17.7297%" y="207.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="17.8862%" y="261" width="0.4065%" height="15" fill="rgb(233,223,10)" fg:x="44" fg:w="1"/><text x="18.1362%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="17.8862%" y="245" width="0.4065%" height="15" fill="rgb(215,21,27)" fg:x="44" fg:w="1"/><text x="18.1362%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;logicng::solver::sat::minisat2_datastructures::MsWatcher&gt;]&gt; (1 samples, 0.41%)</title><rect x="17.8862%" y="229" width="0.4065%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="1"/><text x="18.1362%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 2.44%)</title><rect x="16.2602%" y="277" width="2.4390%" height="15" fill="rgb(244,5,23)" fg:x="40" fg:w="6"/><text x="16.5102%" y="287.50">ru..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (1 samples, 0.41%)</title><rect x="18.2927%" y="261" width="0.4065%" height="15" fill="rgb(226,81,46)" fg:x="45" fg:w="1"/><text x="18.5427%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="18.2927%" y="245" width="0.4065%" height="15" fill="rgb(247,70,30)" fg:x="45" fg:w="1"/><text x="18.5427%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::cancel_until (1 samples, 0.41%)</title><rect x="18.2927%" y="229" width="0.4065%" height="15" fill="rgb(212,68,19)" fg:x="45" fg:w="1"/><text x="18.5427%" y="239.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::insert (1 samples, 0.41%)</title><rect x="18.2927%" y="213" width="0.4065%" height="15" fill="rgb(240,187,13)" fg:x="45" fg:w="1"/><text x="18.5427%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="18.6992%" y="213" width="0.4065%" height="15" fill="rgb(223,113,26)" fg:x="46" fg:w="1"/><text x="18.9492%" y="223.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (2 samples, 0.81%)</title><rect x="18.6992%" y="245" width="0.8130%" height="15" fill="rgb(206,192,2)" fg:x="46" fg:w="2"/><text x="18.9492%" y="255.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (2 samples, 0.81%)</title><rect x="18.6992%" y="229" width="0.8130%" height="15" fill="rgb(241,108,4)" fg:x="46" fg:w="2"/><text x="18.9492%" y="239.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="19.1057%" y="213" width="0.4065%" height="15" fill="rgb(247,173,49)" fg:x="47" fg:w="1"/><text x="19.3557%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="19.5122%" y="213" width="0.4065%" height="15" fill="rgb(224,114,35)" fg:x="48" fg:w="1"/><text x="19.7622%" y="223.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="19.5122%" y="197" width="0.4065%" height="15" fill="rgb(245,159,27)" fg:x="48" fg:w="1"/><text x="19.7622%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="19.5122%" y="181" width="0.4065%" height="15" fill="rgb(245,172,44)" fg:x="48" fg:w="1"/><text x="19.7622%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="19.9187%" y="165" width="0.4065%" height="15" fill="rgb(236,23,11)" fg:x="49" fg:w="1"/><text x="20.1687%" y="175.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="19.9187%" y="149" width="0.4065%" height="15" fill="rgb(205,117,38)" fg:x="49" fg:w="1"/><text x="20.1687%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="20.3252%" y="165" width="0.4065%" height="15" fill="rgb(237,72,25)" fg:x="50" fg:w="1"/><text x="20.5752%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="20.3252%" y="149" width="0.4065%" height="15" fill="rgb(244,70,9)" fg:x="50" fg:w="1"/><text x="20.5752%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.22%)</title><rect x="19.9187%" y="197" width="1.2195%" height="15" fill="rgb(217,125,39)" fg:x="49" fg:w="3"/><text x="20.1687%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.22%)</title><rect x="19.9187%" y="181" width="1.2195%" height="15" fill="rgb(235,36,10)" fg:x="49" fg:w="3"/><text x="20.1687%" y="191.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="20.7317%" y="165" width="0.4065%" height="15" fill="rgb(251,123,47)" fg:x="51" fg:w="1"/><text x="20.9817%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 2.85%)</title><rect x="18.6992%" y="261" width="2.8455%" height="15" fill="rgb(221,13,13)" fg:x="46" fg:w="7"/><text x="18.9492%" y="271.50">ru..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (5 samples, 2.03%)</title><rect x="19.5122%" y="245" width="2.0325%" height="15" fill="rgb(238,131,9)" fg:x="48" fg:w="5"/><text x="19.7622%" y="255.50">r..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (5 samples, 2.03%)</title><rect x="19.5122%" y="229" width="2.0325%" height="15" fill="rgb(211,50,8)" fg:x="48" fg:w="5"/><text x="19.7622%" y="239.50">r..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (4 samples, 1.63%)</title><rect x="19.9187%" y="213" width="1.6260%" height="15" fill="rgb(245,182,24)" fg:x="49" fg:w="4"/><text x="20.1687%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="21.1382%" y="197" width="0.4065%" height="15" fill="rgb(242,14,37)" fg:x="52" fg:w="1"/><text x="21.3882%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5447%" y="197" width="0.4065%" height="15" fill="rgb(246,228,12)" fg:x="53" fg:w="1"/><text x="21.7947%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5447%" y="181" width="0.4065%" height="15" fill="rgb(213,55,15)" fg:x="53" fg:w="1"/><text x="21.7947%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5447%" y="165" width="0.4065%" height="15" fill="rgb(209,9,3)" fg:x="53" fg:w="1"/><text x="21.7947%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5447%" y="149" width="0.4065%" height="15" fill="rgb(230,59,30)" fg:x="53" fg:w="1"/><text x="21.7947%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5447%" y="133" width="0.4065%" height="15" fill="rgb(209,121,21)" fg:x="53" fg:w="1"/><text x="21.7947%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="21.5447%" y="117" width="0.4065%" height="15" fill="rgb(220,109,13)" fg:x="53" fg:w="1"/><text x="21.7947%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="21.5447%" y="101" width="0.4065%" height="15" fill="rgb(232,18,1)" fg:x="53" fg:w="1"/><text x="21.7947%" y="111.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="21.5447%" y="85" width="0.4065%" height="15" fill="rgb(215,41,42)" fg:x="53" fg:w="1"/><text x="21.7947%" y="95.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="21.5447%" y="229" width="0.8130%" height="15" fill="rgb(224,123,36)" fg:x="53" fg:w="2"/><text x="21.7947%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="21.5447%" y="213" width="0.8130%" height="15" fill="rgb(240,125,3)" fg:x="53" fg:w="2"/><text x="21.7947%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="21.9512%" y="197" width="0.4065%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="1"/><text x="22.2012%" y="207.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="21.9512%" y="181" width="0.4065%" height="15" fill="rgb(205,185,37)" fg:x="54" fg:w="1"/><text x="22.2012%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="21.9512%" y="165" width="0.4065%" height="15" fill="rgb(238,207,15)" fg:x="54" fg:w="1"/><text x="22.2012%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.22%)</title><rect x="21.5447%" y="245" width="1.2195%" height="15" fill="rgb(213,199,42)" fg:x="53" fg:w="3"/><text x="21.7947%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="22.3577%" y="229" width="0.4065%" height="15" fill="rgb(235,201,11)" fg:x="55" fg:w="1"/><text x="22.6077%" y="239.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="22.3577%" y="213" width="0.4065%" height="15" fill="rgb(207,46,11)" fg:x="55" fg:w="1"/><text x="22.6077%" y="223.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;logicng::solver::sat::minisat2_datastructures::MsWatcher&gt;]&gt; (1 samples, 0.41%)</title><rect x="22.3577%" y="197" width="0.4065%" height="15" fill="rgb(241,35,35)" fg:x="55" fg:w="1"/><text x="22.6077%" y="207.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="22.7642%" y="213" width="0.4065%" height="15" fill="rgb(243,32,47)" fg:x="56" fg:w="1"/><text x="23.0142%" y="223.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="22.7642%" y="197" width="0.4065%" height="15" fill="rgb(247,202,23)" fg:x="56" fg:w="1"/><text x="23.0142%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="23.1707%" y="197" width="0.4065%" height="15" fill="rgb(219,102,11)" fg:x="57" fg:w="1"/><text x="23.4207%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="23.1707%" y="181" width="0.4065%" height="15" fill="rgb(243,110,44)" fg:x="57" fg:w="1"/><text x="23.4207%" y="191.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="23.1707%" y="165" width="0.4065%" height="15" fill="rgb(222,74,54)" fg:x="57" fg:w="1"/><text x="23.4207%" y="175.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="23.1707%" y="213" width="0.8130%" height="15" fill="rgb(216,99,12)" fg:x="57" fg:w="2"/><text x="23.4207%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="23.5772%" y="197" width="0.4065%" height="15" fill="rgb(226,22,26)" fg:x="58" fg:w="1"/><text x="23.8272%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.5772%" y="181" width="0.4065%" height="15" fill="rgb(217,163,10)" fg:x="58" fg:w="1"/><text x="23.8272%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.5772%" y="165" width="0.4065%" height="15" fill="rgb(213,25,53)" fg:x="58" fg:w="1"/><text x="23.8272%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.5772%" y="149" width="0.4065%" height="15" fill="rgb(252,105,26)" fg:x="58" fg:w="1"/><text x="23.8272%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="23.5772%" y="133" width="0.4065%" height="15" fill="rgb(220,39,43)" fg:x="58" fg:w="1"/><text x="23.8272%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="23.5772%" y="117" width="0.4065%" height="15" fill="rgb(229,68,48)" fg:x="58" fg:w="1"/><text x="23.8272%" y="127.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (1 samples, 0.41%)</title><rect x="23.5772%" y="101" width="0.4065%" height="15" fill="rgb(252,8,32)" fg:x="58" fg:w="1"/><text x="23.8272%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="23.5772%" y="85" width="0.4065%" height="15" fill="rgb(223,20,43)" fg:x="58" fg:w="1"/><text x="23.8272%" y="95.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="23.5772%" y="69" width="0.4065%" height="15" fill="rgb(229,81,49)" fg:x="58" fg:w="1"/><text x="23.8272%" y="79.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (2 samples, 0.81%)</title><rect x="23.9837%" y="213" width="0.8130%" height="15" fill="rgb(236,28,36)" fg:x="59" fg:w="2"/><text x="24.2337%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (2 samples, 0.81%)</title><rect x="23.9837%" y="197" width="0.8130%" height="15" fill="rgb(249,185,26)" fg:x="59" fg:w="2"/><text x="24.2337%" y="207.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.81%)</title><rect x="23.9837%" y="181" width="0.8130%" height="15" fill="rgb(249,174,33)" fg:x="59" fg:w="2"/><text x="24.2337%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 2.44%)</title><rect x="22.7642%" y="229" width="2.4390%" height="15" fill="rgb(233,201,37)" fg:x="56" fg:w="6"/><text x="23.0142%" y="239.50">ru..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="24.7967%" y="213" width="0.4065%" height="15" fill="rgb(221,78,26)" fg:x="61" fg:w="1"/><text x="25.0467%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.41%)</title><rect x="25.2033%" y="229" width="0.4065%" height="15" fill="rgb(250,127,30)" fg:x="62" fg:w="1"/><text x="25.4533%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="25.2033%" y="213" width="0.4065%" height="15" fill="rgb(230,49,44)" fg:x="62" fg:w="1"/><text x="25.4533%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="25.2033%" y="197" width="0.4065%" height="15" fill="rgb(229,67,23)" fg:x="62" fg:w="1"/><text x="25.4533%" y="207.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="25.6098%" y="197" width="0.4065%" height="15" fill="rgb(249,83,47)" fg:x="63" fg:w="1"/><text x="25.8598%" y="207.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="25.6098%" y="181" width="0.4065%" height="15" fill="rgb(215,43,3)" fg:x="63" fg:w="1"/><text x="25.8598%" y="191.50"></text></g><g><title>rust-gkat`dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_insert_with (1 samples, 0.41%)</title><rect x="25.6098%" y="165" width="0.4065%" height="15" fill="rgb(238,154,13)" fg:x="63" fg:w="1"/><text x="25.8598%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="25.6098%" y="149" width="0.4065%" height="15" fill="rgb(219,56,2)" fg:x="63" fg:w="1"/><text x="25.8598%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="25.6098%" y="133" width="0.4065%" height="15" fill="rgb(233,0,4)" fg:x="63" fg:w="1"/><text x="25.8598%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.81%)</title><rect x="25.6098%" y="213" width="0.8130%" height="15" fill="rgb(235,30,7)" fg:x="63" fg:w="2"/><text x="25.8598%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="26.0163%" y="197" width="0.4065%" height="15" fill="rgb(250,79,13)" fg:x="64" fg:w="1"/><text x="26.2663%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="26.0163%" y="181" width="0.4065%" height="15" fill="rgb(211,146,34)" fg:x="64" fg:w="1"/><text x="26.2663%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="26.0163%" y="165" width="0.4065%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="1"/><text x="26.2663%" y="175.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="26.0163%" y="149" width="0.4065%" height="15" fill="rgb(235,168,5)" fg:x="64" fg:w="1"/><text x="26.2663%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="26.0163%" y="133" width="0.4065%" height="15" fill="rgb(221,155,16)" fg:x="64" fg:w="1"/><text x="26.2663%" y="143.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="26.4228%" y="165" width="0.4065%" height="15" fill="rgb(215,215,53)" fg:x="65" fg:w="1"/><text x="26.6728%" y="175.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="26.4228%" y="149" width="0.4065%" height="15" fill="rgb(223,4,10)" fg:x="65" fg:w="1"/><text x="26.6728%" y="159.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="26.4228%" y="181" width="0.8130%" height="15" fill="rgb(234,103,6)" fg:x="65" fg:w="2"/><text x="26.6728%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="26.8293%" y="165" width="0.4065%" height="15" fill="rgb(227,97,0)" fg:x="66" fg:w="1"/><text x="27.0793%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="26.8293%" y="149" width="0.4065%" height="15" fill="rgb(234,150,53)" fg:x="66" fg:w="1"/><text x="27.0793%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="26.8293%" y="133" width="0.4065%" height="15" fill="rgb(228,201,54)" fg:x="66" fg:w="1"/><text x="27.0793%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.22%)</title><rect x="26.4228%" y="197" width="1.2195%" height="15" fill="rgb(222,22,37)" fg:x="65" fg:w="3"/><text x="26.6728%" y="207.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="27.2358%" y="181" width="0.4065%" height="15" fill="rgb(237,53,32)" fg:x="67" fg:w="1"/><text x="27.4858%" y="191.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="27.2358%" y="165" width="0.4065%" height="15" fill="rgb(233,25,53)" fg:x="67" fg:w="1"/><text x="27.4858%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.41%)</title><rect x="27.6423%" y="181" width="0.4065%" height="15" fill="rgb(210,40,34)" fg:x="68" fg:w="1"/><text x="27.8923%" y="191.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="27.6423%" y="165" width="0.4065%" height="15" fill="rgb(241,220,44)" fg:x="68" fg:w="1"/><text x="27.8923%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="27.6423%" y="149" width="0.4065%" height="15" fill="rgb(235,28,35)" fg:x="68" fg:w="1"/><text x="27.8923%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="27.6423%" y="133" width="0.4065%" height="15" fill="rgb(210,56,17)" fg:x="68" fg:w="1"/><text x="27.8923%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="27.6423%" y="117" width="0.4065%" height="15" fill="rgb(224,130,29)" fg:x="68" fg:w="1"/><text x="27.8923%" y="127.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="28.0488%" y="149" width="0.4065%" height="15" fill="rgb(235,212,8)" fg:x="69" fg:w="1"/><text x="28.2988%" y="159.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="28.0488%" y="133" width="0.4065%" height="15" fill="rgb(223,33,50)" fg:x="69" fg:w="1"/><text x="28.2988%" y="143.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="28.4553%" y="133" width="0.4065%" height="15" fill="rgb(219,149,13)" fg:x="70" fg:w="1"/><text x="28.7053%" y="143.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (1 samples, 0.41%)</title><rect x="28.4553%" y="117" width="0.4065%" height="15" fill="rgb(250,156,29)" fg:x="70" fg:w="1"/><text x="28.7053%" y="127.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (1 samples, 0.41%)</title><rect x="28.4553%" y="101" width="0.4065%" height="15" fill="rgb(216,193,19)" fg:x="70" fg:w="1"/><text x="28.7053%" y="111.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::unchecked_enqueue (1 samples, 0.41%)</title><rect x="28.4553%" y="85" width="0.4065%" height="15" fill="rgb(216,135,14)" fg:x="70" fg:w="1"/><text x="28.7053%" y="95.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="28.4553%" y="69" width="0.4065%" height="15" fill="rgb(241,47,5)" fg:x="70" fg:w="1"/><text x="28.7053%" y="79.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="28.4553%" y="53" width="0.4065%" height="15" fill="rgb(233,42,35)" fg:x="70" fg:w="1"/><text x="28.7053%" y="63.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="28.4553%" y="37" width="0.4065%" height="15" fill="rgb(231,13,6)" fg:x="70" fg:w="1"/><text x="28.7053%" y="47.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.22%)</title><rect x="28.0488%" y="165" width="1.2195%" height="15" fill="rgb(207,181,40)" fg:x="69" fg:w="3"/><text x="28.2988%" y="175.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (2 samples, 0.81%)</title><rect x="28.4553%" y="149" width="0.8130%" height="15" fill="rgb(254,173,49)" fg:x="70" fg:w="2"/><text x="28.7053%" y="159.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="28.8618%" y="133" width="0.4065%" height="15" fill="rgb(221,1,38)" fg:x="71" fg:w="1"/><text x="29.1118%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="29.2683%" y="69" width="0.4065%" height="15" fill="rgb(206,124,46)" fg:x="72" fg:w="1"/><text x="29.5183%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.81%)</title><rect x="29.2683%" y="165" width="0.8130%" height="15" fill="rgb(249,21,11)" fg:x="72" fg:w="2"/><text x="29.5183%" y="175.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="29.2683%" y="149" width="0.8130%" height="15" fill="rgb(222,201,40)" fg:x="72" fg:w="2"/><text x="29.5183%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="29.2683%" y="133" width="0.8130%" height="15" fill="rgb(235,61,29)" fg:x="72" fg:w="2"/><text x="29.5183%" y="143.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.81%)</title><rect x="29.2683%" y="117" width="0.8130%" height="15" fill="rgb(219,207,3)" fg:x="72" fg:w="2"/><text x="29.5183%" y="127.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.81%)</title><rect x="29.2683%" y="101" width="0.8130%" height="15" fill="rgb(222,56,46)" fg:x="72" fg:w="2"/><text x="29.5183%" y="111.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.81%)</title><rect x="29.2683%" y="85" width="0.8130%" height="15" fill="rgb(239,76,54)" fg:x="72" fg:w="2"/><text x="29.5183%" y="95.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="29.6748%" y="69" width="0.4065%" height="15" fill="rgb(231,124,27)" fg:x="73" fg:w="1"/><text x="29.9248%" y="79.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.41%)</title><rect x="30.0813%" y="165" width="0.4065%" height="15" fill="rgb(249,195,6)" fg:x="74" fg:w="1"/><text x="30.3313%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="30.0813%" y="149" width="0.4065%" height="15" fill="rgb(237,174,47)" fg:x="74" fg:w="1"/><text x="30.3313%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="30.0813%" y="133" width="0.4065%" height="15" fill="rgb(206,201,31)" fg:x="74" fg:w="1"/><text x="30.3313%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.81%)</title><rect x="30.4878%" y="149" width="0.8130%" height="15" fill="rgb(231,57,52)" fg:x="75" fg:w="2"/><text x="30.7378%" y="159.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="30.4878%" y="133" width="0.8130%" height="15" fill="rgb(248,177,22)" fg:x="75" fg:w="2"/><text x="30.7378%" y="143.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="30.4878%" y="117" width="0.8130%" height="15" fill="rgb(215,211,37)" fg:x="75" fg:w="2"/><text x="30.7378%" y="127.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="30.8943%" y="101" width="0.4065%" height="15" fill="rgb(241,128,51)" fg:x="76" fg:w="1"/><text x="31.1443%" y="111.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="30.8943%" y="85" width="0.4065%" height="15" fill="rgb(227,165,31)" fg:x="76" fg:w="1"/><text x="31.1443%" y="95.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="30.8943%" y="69" width="0.4065%" height="15" fill="rgb(228,167,24)" fg:x="76" fg:w="1"/><text x="31.1443%" y="79.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="30.8943%" y="53" width="0.4065%" height="15" fill="rgb(228,143,12)" fg:x="76" fg:w="1"/><text x="31.1443%" y="63.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="31.3008%" y="149" width="0.4065%" height="15" fill="rgb(249,149,8)" fg:x="77" fg:w="1"/><text x="31.5508%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_automaton (78 samples, 31.71%)</title><rect x="0.4065%" y="373" width="31.7073%" height="15" fill="rgb(243,35,44)" fg:x="1" fg:w="78"/><text x="0.6565%" y="383.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (78 samples, 31.71%)</title><rect x="0.4065%" y="357" width="31.7073%" height="15" fill="rgb(246,89,9)" fg:x="1" fg:w="78"/><text x="0.6565%" y="367.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (77 samples, 31.30%)</title><rect x="0.8130%" y="341" width="31.3008%" height="15" fill="rgb(233,213,13)" fg:x="2" fg:w="77"/><text x="1.0630%" y="351.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (66 samples, 26.83%)</title><rect x="5.2846%" y="325" width="26.8293%" height="15" fill="rgb(233,141,41)" fg:x="13" fg:w="66"/><text x="5.5346%" y="335.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (46 samples, 18.70%)</title><rect x="13.4146%" y="309" width="18.6992%" height="15" fill="rgb(239,167,4)" fg:x="33" fg:w="46"/><text x="13.6646%" y="319.50">rust-gkat`rust_gkat::kernel2:..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (39 samples, 15.85%)</title><rect x="16.2602%" y="293" width="15.8537%" height="15" fill="rgb(209,217,16)" fg:x="40" fg:w="39"/><text x="16.5102%" y="303.50">rust-gkat`rust_gkat::ker..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (33 samples, 13.41%)</title><rect x="18.6992%" y="277" width="13.4146%" height="15" fill="rgb(219,88,35)" fg:x="46" fg:w="33"/><text x="18.9492%" y="287.50">rust-gkat`rust_gkat:..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (26 samples, 10.57%)</title><rect x="21.5447%" y="261" width="10.5691%" height="15" fill="rgb(220,193,23)" fg:x="53" fg:w="26"/><text x="21.7947%" y="271.50">rust-gkat`rust_..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (23 samples, 9.35%)</title><rect x="22.7642%" y="245" width="9.3496%" height="15" fill="rgb(230,90,52)" fg:x="56" fg:w="23"/><text x="23.0142%" y="255.50">rust-gkat`rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (16 samples, 6.50%)</title><rect x="25.6098%" y="229" width="6.5041%" height="15" fill="rgb(252,106,19)" fg:x="63" fg:w="16"/><text x="25.8598%" y="239.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (14 samples, 5.69%)</title><rect x="26.4228%" y="213" width="5.6911%" height="15" fill="rgb(206,74,20)" fg:x="65" fg:w="14"/><text x="26.6728%" y="223.50">rust-gk..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (11 samples, 4.47%)</title><rect x="27.6423%" y="197" width="4.4715%" height="15" fill="rgb(230,138,44)" fg:x="68" fg:w="11"/><text x="27.8923%" y="207.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (10 samples, 4.07%)</title><rect x="28.0488%" y="181" width="4.0650%" height="15" fill="rgb(235,182,43)" fg:x="69" fg:w="10"/><text x="28.2988%" y="191.50">rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (4 samples, 1.63%)</title><rect x="30.4878%" y="165" width="1.6260%" height="15" fill="rgb(242,16,51)" fg:x="75" fg:w="4"/><text x="30.7378%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (1 samples, 0.41%)</title><rect x="31.7073%" y="149" width="0.4065%" height="15" fill="rgb(248,9,4)" fg:x="78" fg:w="1"/><text x="31.9573%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.41%)</title><rect x="31.7073%" y="133" width="0.4065%" height="15" fill="rgb(210,31,22)" fg:x="78" fg:w="1"/><text x="31.9573%" y="143.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="31.7073%" y="117" width="0.4065%" height="15" fill="rgb(239,54,39)" fg:x="78" fg:w="1"/><text x="31.9573%" y="127.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="31.7073%" y="101" width="0.4065%" height="15" fill="rgb(230,99,41)" fg:x="78" fg:w="1"/><text x="31.9573%" y="111.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="31.7073%" y="85" width="0.4065%" height="15" fill="rgb(253,106,12)" fg:x="78" fg:w="1"/><text x="31.9573%" y="95.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="31.7073%" y="69" width="0.4065%" height="15" fill="rgb(213,46,41)" fg:x="78" fg:w="1"/><text x="31.9573%" y="79.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="31.7073%" y="53" width="0.4065%" height="15" fill="rgb(215,133,35)" fg:x="78" fg:w="1"/><text x="31.9573%" y="63.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::syntax::gkat_sat::SATGkat as rust_gkat::syntax::gkat::Gkat&lt;logicng::formulas::formula::EncodedFormula&gt;&gt;::is_equiv (1 samples, 0.41%)</title><rect x="32.1138%" y="357" width="0.4065%" height="15" fill="rgb(213,28,5)" fg:x="79" fg:w="1"/><text x="32.3638%" y="367.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="32.1138%" y="341" width="0.4065%" height="15" fill="rgb(215,77,49)" fg:x="79" fg:w="1"/><text x="32.3638%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="32.1138%" y="325" width="0.4065%" height="15" fill="rgb(248,100,22)" fg:x="79" fg:w="1"/><text x="32.3638%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="32.1138%" y="309" width="0.4065%" height="15" fill="rgb(208,67,9)" fg:x="79" fg:w="1"/><text x="32.3638%" y="319.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.81%)</title><rect x="32.5203%" y="357" width="0.8130%" height="15" fill="rgb(219,133,21)" fg:x="80" fg:w="2"/><text x="32.7703%" y="367.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (3 samples, 1.22%)</title><rect x="33.3333%" y="325" width="1.2195%" height="15" fill="rgb(246,46,29)" fg:x="82" fg:w="3"/><text x="33.5833%" y="335.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (2 samples, 0.81%)</title><rect x="33.7398%" y="309" width="0.8130%" height="15" fill="rgb(246,185,52)" fg:x="83" fg:w="2"/><text x="33.9898%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (4 samples, 1.63%)</title><rect x="33.3333%" y="341" width="1.6260%" height="15" fill="rgb(252,136,11)" fg:x="82" fg:w="4"/><text x="33.5833%" y="351.50"></text></g><g><title>rust-gkat`dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_insert_with (1 samples, 0.41%)</title><rect x="34.5528%" y="325" width="0.4065%" height="15" fill="rgb(219,138,53)" fg:x="85" fg:w="1"/><text x="34.8028%" y="335.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (1 samples, 0.41%)</title><rect x="34.5528%" y="309" width="0.4065%" height="15" fill="rgb(211,51,23)" fg:x="85" fg:w="1"/><text x="34.8028%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="35.3659%" y="325" width="0.4065%" height="15" fill="rgb(247,221,28)" fg:x="87" fg:w="1"/><text x="35.6159%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="35.3659%" y="309" width="0.4065%" height="15" fill="rgb(251,222,45)" fg:x="87" fg:w="1"/><text x="35.6159%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="35.7724%" y="309" width="0.4065%" height="15" fill="rgb(217,162,53)" fg:x="88" fg:w="1"/><text x="36.0224%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::not_cache::NotCache::lookup (2 samples, 0.81%)</title><rect x="35.7724%" y="325" width="0.8130%" height="15" fill="rgb(229,93,14)" fg:x="88" fg:w="2"/><text x="36.0224%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="36.1789%" y="309" width="0.4065%" height="15" fill="rgb(209,67,49)" fg:x="89" fg:w="1"/><text x="36.4289%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="36.5854%" y="309" width="0.4065%" height="15" fill="rgb(213,87,29)" fg:x="90" fg:w="1"/><text x="36.8354%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (10 samples, 4.07%)</title><rect x="33.3333%" y="357" width="4.0650%" height="15" fill="rgb(205,151,52)" fg:x="82" fg:w="10"/><text x="33.5833%" y="367.50">rust..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (6 samples, 2.44%)</title><rect x="34.9593%" y="341" width="2.4390%" height="15" fill="rgb(253,215,39)" fg:x="86" fg:w="6"/><text x="35.2093%" y="351.50">ru..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (2 samples, 0.81%)</title><rect x="36.5854%" y="325" width="0.8130%" height="15" fill="rgb(221,220,41)" fg:x="90" fg:w="2"/><text x="36.8354%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="36.9919%" y="309" width="0.4065%" height="15" fill="rgb(218,133,21)" fg:x="91" fg:w="1"/><text x="37.2419%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="36.9919%" y="293" width="0.4065%" height="15" fill="rgb(221,193,43)" fg:x="91" fg:w="1"/><text x="37.2419%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="36.9919%" y="277" width="0.4065%" height="15" fill="rgb(240,128,52)" fg:x="91" fg:w="1"/><text x="37.2419%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="36.9919%" y="261" width="0.4065%" height="15" fill="rgb(253,114,12)" fg:x="91" fg:w="1"/><text x="37.2419%" y="271.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="36.9919%" y="245" width="0.4065%" height="15" fill="rgb(215,223,47)" fg:x="91" fg:w="1"/><text x="37.2419%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="37.3984%" y="341" width="0.4065%" height="15" fill="rgb(248,225,23)" fg:x="92" fg:w="1"/><text x="37.6484%" y="351.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="37.8049%" y="325" width="0.4065%" height="15" fill="rgb(250,108,0)" fg:x="93" fg:w="1"/><text x="38.0549%" y="335.50"></text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="37.8049%" y="309" width="0.4065%" height="15" fill="rgb(228,208,7)" fg:x="93" fg:w="1"/><text x="38.0549%" y="319.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.41%)</title><rect x="37.8049%" y="293" width="0.4065%" height="15" fill="rgb(244,45,10)" fg:x="93" fg:w="1"/><text x="38.0549%" y="303.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (1 samples, 0.41%)</title><rect x="37.8049%" y="277" width="0.4065%" height="15" fill="rgb(207,125,25)" fg:x="93" fg:w="1"/><text x="38.0549%" y="287.50"></text></g><g><title>rust-gkat`mi_page_free_list_extend (1 samples, 0.41%)</title><rect x="37.8049%" y="261" width="0.4065%" height="15" fill="rgb(210,195,18)" fg:x="93" fg:w="1"/><text x="38.0549%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::operation_cache::OperationCache&lt;V&gt;::insert (1 samples, 0.41%)</title><rect x="38.2114%" y="325" width="0.4065%" height="15" fill="rgb(249,80,12)" fg:x="94" fg:w="1"/><text x="38.4614%" y="335.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="38.2114%" y="309" width="0.4065%" height="15" fill="rgb(221,65,9)" fg:x="94" fg:w="1"/><text x="38.4614%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (3 samples, 1.22%)</title><rect x="37.8049%" y="341" width="1.2195%" height="15" fill="rgb(235,49,36)" fg:x="93" fg:w="3"/><text x="38.0549%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="38.6179%" y="325" width="0.4065%" height="15" fill="rgb(225,32,20)" fg:x="95" fg:w="1"/><text x="38.8679%" y="335.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="38.6179%" y="309" width="0.4065%" height="15" fill="rgb(215,141,46)" fg:x="95" fg:w="1"/><text x="38.8679%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="39.0244%" y="309" width="0.4065%" height="15" fill="rgb(250,160,47)" fg:x="96" fg:w="1"/><text x="39.2744%" y="319.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="39.4309%" y="309" width="0.4065%" height="15" fill="rgb(216,222,40)" fg:x="97" fg:w="1"/><text x="39.6809%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (3 samples, 1.22%)</title><rect x="39.0244%" y="325" width="1.2195%" height="15" fill="rgb(234,217,39)" fg:x="96" fg:w="3"/><text x="39.2744%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::operation_cache::OperationCache&lt;V&gt;::insert (1 samples, 0.41%)</title><rect x="39.8374%" y="309" width="0.4065%" height="15" fill="rgb(207,178,40)" fg:x="98" fg:w="1"/><text x="40.0874%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="39.8374%" y="293" width="0.4065%" height="15" fill="rgb(221,136,13)" fg:x="98" fg:w="1"/><text x="40.0874%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="40.2439%" y="309" width="0.4065%" height="15" fill="rgb(249,199,10)" fg:x="99" fg:w="1"/><text x="40.4939%" y="319.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="40.6504%" y="277" width="0.4065%" height="15" fill="rgb(249,222,13)" fg:x="100" fg:w="1"/><text x="40.9004%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="40.6504%" y="261" width="0.4065%" height="15" fill="rgb(244,185,38)" fg:x="100" fg:w="1"/><text x="40.9004%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.81%)</title><rect x="40.6504%" y="293" width="0.8130%" height="15" fill="rgb(236,202,9)" fg:x="100" fg:w="2"/><text x="40.9004%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (1 samples, 0.41%)</title><rect x="41.0569%" y="277" width="0.4065%" height="15" fill="rgb(250,229,37)" fg:x="101" fg:w="1"/><text x="41.3069%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="41.0569%" y="261" width="0.4065%" height="15" fill="rgb(206,174,23)" fg:x="101" fg:w="1"/><text x="41.3069%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="41.0569%" y="245" width="0.4065%" height="15" fill="rgb(211,33,43)" fg:x="101" fg:w="1"/><text x="41.3069%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 3.25%)</title><rect x="40.6504%" y="309" width="3.2520%" height="15" fill="rgb(245,58,50)" fg:x="100" fg:w="8"/><text x="40.9004%" y="319.50">rus..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 2.44%)</title><rect x="41.4634%" y="293" width="2.4390%" height="15" fill="rgb(244,68,36)" fg:x="102" fg:w="6"/><text x="41.7134%" y="303.50">ru..</text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="43.9024%" y="309" width="0.4065%" height="15" fill="rgb(232,229,15)" fg:x="108" fg:w="1"/><text x="44.1524%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="44.3089%" y="309" width="0.4065%" height="15" fill="rgb(254,30,23)" fg:x="109" fg:w="1"/><text x="44.5589%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="44.3089%" y="293" width="0.4065%" height="15" fill="rgb(235,160,14)" fg:x="109" fg:w="1"/><text x="44.5589%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="44.3089%" y="277" width="0.4065%" height="15" fill="rgb(212,155,44)" fg:x="109" fg:w="1"/><text x="44.5589%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="44.3089%" y="261" width="0.4065%" height="15" fill="rgb(226,2,50)" fg:x="109" fg:w="1"/><text x="44.5589%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="45.5285%" y="293" width="0.4065%" height="15" fill="rgb(234,177,6)" fg:x="112" fg:w="1"/><text x="45.7785%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="45.5285%" y="277" width="0.4065%" height="15" fill="rgb(217,24,9)" fg:x="112" fg:w="1"/><text x="45.7785%" y="287.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="45.5285%" y="261" width="0.4065%" height="15" fill="rgb(220,13,46)" fg:x="112" fg:w="1"/><text x="45.7785%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (2 samples, 0.81%)</title><rect x="45.9350%" y="293" width="0.8130%" height="15" fill="rgb(239,221,27)" fg:x="113" fg:w="2"/><text x="46.1850%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="46.7480%" y="293" width="0.4065%" height="15" fill="rgb(222,198,25)" fg:x="115" fg:w="1"/><text x="46.9980%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="46.7480%" y="277" width="0.4065%" height="15" fill="rgb(211,99,13)" fg:x="115" fg:w="1"/><text x="46.9980%" y="287.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memmove (1 samples, 0.41%)</title><rect x="50.4065%" y="229" width="0.4065%" height="15" fill="rgb(232,111,31)" fg:x="124" fg:w="1"/><text x="50.6565%" y="239.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 2.44%)</title><rect x="48.7805%" y="245" width="2.4390%" height="15" fill="rgb(245,82,37)" fg:x="120" fg:w="6"/><text x="49.0305%" y="255.50">ru..</text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="50.8130%" y="229" width="0.4065%" height="15" fill="rgb(227,149,46)" fg:x="125" fg:w="1"/><text x="51.0630%" y="239.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="50.8130%" y="213" width="0.4065%" height="15" fill="rgb(218,36,50)" fg:x="125" fg:w="1"/><text x="51.0630%" y="223.50"></text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="51.2195%" y="245" width="0.4065%" height="15" fill="rgb(226,80,48)" fg:x="126" fg:w="1"/><text x="51.4695%" y="255.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.81%)</title><rect x="51.6260%" y="245" width="0.8130%" height="15" fill="rgb(238,224,15)" fg:x="127" fg:w="2"/><text x="51.8760%" y="255.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.81%)</title><rect x="52.4390%" y="229" width="0.8130%" height="15" fill="rgb(241,136,10)" fg:x="129" fg:w="2"/><text x="52.6890%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.81%)</title><rect x="52.4390%" y="213" width="0.8130%" height="15" fill="rgb(208,32,45)" fg:x="129" fg:w="2"/><text x="52.6890%" y="223.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::insert (1 samples, 0.41%)</title><rect x="53.2520%" y="229" width="0.4065%" height="15" fill="rgb(207,135,9)" fg:x="131" fg:w="1"/><text x="53.5020%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="53.2520%" y="213" width="0.4065%" height="15" fill="rgb(206,86,44)" fg:x="131" fg:w="1"/><text x="53.5020%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 6.10%)</title><rect x="48.7805%" y="261" width="6.0976%" height="15" fill="rgb(245,177,15)" fg:x="120" fg:w="15"/><text x="49.0305%" y="271.50">rust-gka..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (6 samples, 2.44%)</title><rect x="52.4390%" y="245" width="2.4390%" height="15" fill="rgb(206,64,50)" fg:x="129" fg:w="6"/><text x="52.6890%" y="255.50">ru..</text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 1.22%)</title><rect x="53.6585%" y="229" width="1.2195%" height="15" fill="rgb(234,36,40)" fg:x="132" fg:w="3"/><text x="53.9085%" y="239.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (14 samples, 5.69%)</title><rect x="54.8780%" y="261" width="5.6911%" height="15" fill="rgb(213,64,8)" fg:x="135" fg:w="14"/><text x="55.1280%" y="271.50">rust-gk..</text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 12.60%)</title><rect x="48.3740%" y="277" width="12.6016%" height="15" fill="rgb(210,75,36)" fg:x="119" fg:w="31"/><text x="48.6240%" y="287.50">rust-gkat`&lt;alloc::v..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (1 samples, 0.41%)</title><rect x="60.5691%" y="261" width="0.4065%" height="15" fill="rgb(229,88,21)" fg:x="149" fg:w="1"/><text x="60.8191%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (3 samples, 1.22%)</title><rect x="60.9756%" y="277" width="1.2195%" height="15" fill="rgb(252,204,47)" fg:x="150" fg:w="3"/><text x="61.2256%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="62.1951%" y="277" width="0.4065%" height="15" fill="rgb(208,77,27)" fg:x="153" fg:w="1"/><text x="62.4451%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="62.1951%" y="261" width="0.4065%" height="15" fill="rgb(221,76,26)" fg:x="153" fg:w="1"/><text x="62.4451%" y="271.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.41%)</title><rect x="62.1951%" y="245" width="0.4065%" height="15" fill="rgb(225,139,18)" fg:x="153" fg:w="1"/><text x="62.4451%" y="255.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (1 samples, 0.41%)</title><rect x="62.1951%" y="229" width="0.4065%" height="15" fill="rgb(230,137,11)" fg:x="153" fg:w="1"/><text x="62.4451%" y="239.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::variable::Variable as core::convert::TryFrom&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding&gt;&gt;::try_from (2 samples, 0.81%)</title><rect x="63.0081%" y="261" width="0.8130%" height="15" fill="rgb(212,28,1)" fg:x="155" fg:w="2"/><text x="63.2581%" y="271.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (3 samples, 1.22%)</title><rect x="63.8211%" y="261" width="1.2195%" height="15" fill="rgb(248,164,17)" fg:x="157" fg:w="3"/><text x="64.0711%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="65.0407%" y="245" width="0.4065%" height="15" fill="rgb(222,171,42)" fg:x="160" fg:w="1"/><text x="65.2907%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.81%)</title><rect x="65.4472%" y="229" width="0.8130%" height="15" fill="rgb(243,84,45)" fg:x="161" fg:w="2"/><text x="65.6972%" y="239.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.81%)</title><rect x="65.4472%" y="213" width="0.8130%" height="15" fill="rgb(252,49,23)" fg:x="161" fg:w="2"/><text x="65.6972%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 3.25%)</title><rect x="65.4472%" y="245" width="3.2520%" height="15" fill="rgb(215,19,7)" fg:x="161" fg:w="8"/><text x="65.6972%" y="255.50">rus..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 2.44%)</title><rect x="66.2602%" y="229" width="2.4390%" height="15" fill="rgb(238,81,41)" fg:x="163" fg:w="6"/><text x="66.5102%" y="239.50">ru..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="68.6992%" y="245" width="0.4065%" height="15" fill="rgb(210,199,37)" fg:x="169" fg:w="1"/><text x="68.9492%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="69.1057%" y="229" width="0.4065%" height="15" fill="rgb(244,192,49)" fg:x="170" fg:w="1"/><text x="69.3557%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (12 samples, 4.88%)</title><rect x="65.0407%" y="261" width="4.8780%" height="15" fill="rgb(226,211,11)" fg:x="160" fg:w="12"/><text x="65.2907%" y="271.50">rust-g..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::get_pg_var (2 samples, 0.81%)</title><rect x="69.1057%" y="245" width="0.8130%" height="15" fill="rgb(236,162,54)" fg:x="170" fg:w="2"/><text x="69.3557%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="69.5122%" y="229" width="0.4065%" height="15" fill="rgb(220,229,9)" fg:x="171" fg:w="1"/><text x="69.7622%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="69.5122%" y="213" width="0.4065%" height="15" fill="rgb(250,87,22)" fg:x="171" fg:w="1"/><text x="69.7622%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="69.9187%" y="261" width="0.4065%" height="15" fill="rgb(239,43,17)" fg:x="172" fg:w="1"/><text x="70.1687%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (20 samples, 8.13%)</title><rect x="62.6016%" y="277" width="8.1301%" height="15" fill="rgb(231,177,25)" fg:x="154" fg:w="20"/><text x="62.8516%" y="287.50">rust-gkat`l..</text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="70.3252%" y="261" width="0.4065%" height="15" fill="rgb(219,179,1)" fg:x="173" fg:w="1"/><text x="70.5752%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::vector (1 samples, 0.41%)</title><rect x="70.7317%" y="277" width="0.4065%" height="15" fill="rgb(238,219,53)" fg:x="174" fg:w="1"/><text x="70.9817%" y="287.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (6 samples, 2.44%)</title><rect x="71.1382%" y="277" width="2.4390%" height="15" fill="rgb(232,167,36)" fg:x="175" fg:w="6"/><text x="71.3882%" y="287.50">ru..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="73.1707%" y="261" width="0.4065%" height="15" fill="rgb(244,19,51)" fg:x="180" fg:w="1"/><text x="73.4207%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::attach_clause (1 samples, 0.41%)</title><rect x="73.5772%" y="277" width="0.4065%" height="15" fill="rgb(224,6,22)" fg:x="181" fg:w="1"/><text x="73.8272%" y="287.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.81%)</title><rect x="73.9837%" y="277" width="0.8130%" height="15" fill="rgb(224,145,5)" fg:x="182" fg:w="2"/><text x="74.2337%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (69 samples, 28.05%)</title><rect x="47.1545%" y="293" width="28.0488%" height="15" fill="rgb(234,130,49)" fg:x="116" fg:w="69"/><text x="47.4045%" y="303.50">rust-gkat`logicng::operations::transformation..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="74.7967%" y="277" width="0.4065%" height="15" fill="rgb(254,6,2)" fg:x="184" fg:w="1"/><text x="75.0467%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (76 samples, 30.89%)</title><rect x="44.7154%" y="309" width="30.8943%" height="15" fill="rgb(208,96,46)" fg:x="110" fg:w="76"/><text x="44.9654%" y="319.50">rust-gkat`logicng::operations::transformations::cn..</text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="75.2033%" y="293" width="0.4065%" height="15" fill="rgb(239,3,39)" fg:x="185" fg:w="1"/><text x="75.4533%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (3 samples, 1.22%)</title><rect x="75.6098%" y="309" width="1.2195%" height="15" fill="rgb(233,210,1)" fg:x="186" fg:w="3"/><text x="75.8598%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (1 samples, 0.41%)</title><rect x="76.4228%" y="293" width="0.4065%" height="15" fill="rgb(244,137,37)" fg:x="188" fg:w="1"/><text x="76.6728%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (94 samples, 38.21%)</title><rect x="40.2439%" y="325" width="38.2114%" height="15" fill="rgb(240,136,2)" fg:x="99" fg:w="94"/><text x="40.4939%" y="335.50">rust-gkat`logicng::operations::transformations::cnf::plaisted_..</text></g><g><title>rust-gkat`mi_free (4 samples, 1.63%)</title><rect x="76.8293%" y="309" width="1.6260%" height="15" fill="rgb(239,18,37)" fg:x="189" fg:w="4"/><text x="77.0793%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::operation_cache::OperationCache&lt;V&gt;::insert (1 samples, 0.41%)</title><rect x="78.8618%" y="261" width="0.4065%" height="15" fill="rgb(218,185,22)" fg:x="194" fg:w="1"/><text x="79.1118%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="78.8618%" y="245" width="0.4065%" height="15" fill="rgb(225,218,4)" fg:x="194" fg:w="1"/><text x="79.1118%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (2 samples, 0.81%)</title><rect x="78.8618%" y="309" width="0.8130%" height="15" fill="rgb(230,182,32)" fg:x="194" fg:w="2"/><text x="79.1118%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.81%)</title><rect x="78.8618%" y="293" width="0.8130%" height="15" fill="rgb(242,56,43)" fg:x="194" fg:w="2"/><text x="79.1118%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (2 samples, 0.81%)</title><rect x="78.8618%" y="277" width="0.8130%" height="15" fill="rgb(233,99,24)" fg:x="194" fg:w="2"/><text x="79.1118%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="79.2683%" y="261" width="0.4065%" height="15" fill="rgb(234,209,42)" fg:x="195" fg:w="1"/><text x="79.5183%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="79.2683%" y="245" width="0.4065%" height="15" fill="rgb(227,7,12)" fg:x="195" fg:w="1"/><text x="79.5183%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="79.2683%" y="229" width="0.4065%" height="15" fill="rgb(245,203,43)" fg:x="195" fg:w="1"/><text x="79.5183%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="79.2683%" y="213" width="0.4065%" height="15" fill="rgb(238,205,33)" fg:x="195" fg:w="1"/><text x="79.5183%" y="223.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="79.2683%" y="197" width="0.4065%" height="15" fill="rgb(231,56,7)" fg:x="195" fg:w="1"/><text x="79.5183%" y="207.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (105 samples, 42.68%)</title><rect x="37.3984%" y="357" width="42.6829%" height="15" fill="rgb(244,186,29)" fg:x="92" fg:w="105"/><text x="37.6484%" y="367.50">rust-gkat`logicng::solver::minisat_solver::MiniSat::add</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (101 samples, 41.06%)</title><rect x="39.0244%" y="341" width="41.0569%" height="15" fill="rgb(234,111,31)" fg:x="96" fg:w="101"/><text x="39.2744%" y="351.50">rust-gkat`logicng::operations::transformations::cnf::plaisted_green..</text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (4 samples, 1.63%)</title><rect x="78.4553%" y="325" width="1.6260%" height="15" fill="rgb(241,149,10)" fg:x="193" fg:w="4"/><text x="78.7053%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="79.6748%" y="309" width="0.4065%" height="15" fill="rgb(249,206,44)" fg:x="196" fg:w="1"/><text x="79.9248%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="79.6748%" y="293" width="0.4065%" height="15" fill="rgb(251,153,30)" fg:x="196" fg:w="1"/><text x="79.9248%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="79.6748%" y="277" width="0.4065%" height="15" fill="rgb(239,152,38)" fg:x="196" fg:w="1"/><text x="79.9248%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="79.6748%" y="261" width="0.4065%" height="15" fill="rgb(249,139,47)" fg:x="196" fg:w="1"/><text x="79.9248%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.22%)</title><rect x="80.4878%" y="325" width="1.2195%" height="15" fill="rgb(244,64,35)" fg:x="198" fg:w="3"/><text x="80.7378%" y="335.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;logicng::solver::sat::minisat2_datastructures::MsWatcher&gt;]&gt; (1 samples, 0.41%)</title><rect x="81.7073%" y="325" width="0.4065%" height="15" fill="rgb(216,46,15)" fg:x="201" fg:w="1"/><text x="81.9573%" y="335.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.81%)</title><rect x="82.1138%" y="325" width="0.8130%" height="15" fill="rgb(250,74,19)" fg:x="202" fg:w="2"/><text x="82.3638%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (8 samples, 3.25%)</title><rect x="80.0813%" y="341" width="3.2520%" height="15" fill="rgb(249,42,33)" fg:x="197" fg:w="8"/><text x="80.3313%" y="351.50">rus..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="82.9268%" y="325" width="0.4065%" height="15" fill="rgb(242,149,17)" fg:x="204" fg:w="1"/><text x="83.1768%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (9 samples, 3.66%)</title><rect x="80.0813%" y="357" width="3.6585%" height="15" fill="rgb(244,29,21)" fg:x="197" fg:w="9"/><text x="80.3313%" y="367.50">rust..</text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="83.3333%" y="341" width="0.4065%" height="15" fill="rgb(220,130,37)" fg:x="205" fg:w="1"/><text x="83.5833%" y="351.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::percolate_down (6 samples, 2.44%)</title><rect x="84.5528%" y="309" width="2.4390%" height="15" fill="rgb(211,67,2)" fg:x="208" fg:w="6"/><text x="84.8028%" y="319.50">ru..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::analyze (1 samples, 0.41%)</title><rect x="86.9919%" y="309" width="0.4065%" height="15" fill="rgb(235,68,52)" fg:x="214" fg:w="1"/><text x="87.2419%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::cancel_until (2 samples, 0.81%)</title><rect x="87.3984%" y="309" width="0.8130%" height="15" fill="rgb(246,142,3)" fg:x="215" fg:w="2"/><text x="87.6484%" y="319.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::insert (2 samples, 0.81%)</title><rect x="87.3984%" y="293" width="0.8130%" height="15" fill="rgb(241,25,7)" fg:x="215" fg:w="2"/><text x="87.6484%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (16 samples, 6.50%)</title><rect x="88.2114%" y="309" width="6.5041%" height="15" fill="rgb(242,119,39)" fg:x="217" fg:w="16"/><text x="88.4614%" y="319.50">rust-gkat..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::unchecked_enqueue (1 samples, 0.41%)</title><rect x="94.3089%" y="293" width="0.4065%" height="15" fill="rgb(241,98,45)" fg:x="232" fg:w="1"/><text x="94.5589%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (29 samples, 11.79%)</title><rect x="83.7398%" y="357" width="11.7886%" height="15" fill="rgb(254,28,30)" fg:x="206" fg:w="29"/><text x="83.9898%" y="367.50">rust-gkat`logicng..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (29 samples, 11.79%)</title><rect x="83.7398%" y="341" width="11.7886%" height="15" fill="rgb(241,142,54)" fg:x="206" fg:w="29"/><text x="83.9898%" y="351.50">rust-gkat`logicng..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (29 samples, 11.79%)</title><rect x="83.7398%" y="325" width="11.7886%" height="15" fill="rgb(222,85,15)" fg:x="206" fg:w="29"/><text x="83.9898%" y="335.50">rust-gkat`logicng..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::unchecked_enqueue (2 samples, 0.81%)</title><rect x="94.7154%" y="309" width="0.8130%" height="15" fill="rgb(210,85,47)" fg:x="233" fg:w="2"/><text x="94.9654%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::equiv_iter (157 samples, 63.82%)</title><rect x="32.1138%" y="373" width="63.8211%" height="15" fill="rgb(224,206,25)" fg:x="79" fg:w="157"/><text x="32.3638%" y="383.50">rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::equiv_iter</text></g><g><title>rust-gkat`rust_gkat::kernel2::solver::Solver&lt;B&gt;::reject (1 samples, 0.41%)</title><rect x="95.5285%" y="357" width="0.4065%" height="15" fill="rgb(243,201,19)" fg:x="235" fg:w="1"/><text x="95.7785%" y="367.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="95.5285%" y="341" width="0.4065%" height="15" fill="rgb(236,59,4)" fg:x="235" fg:w="1"/><text x="95.7785%" y="351.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="95.5285%" y="325" width="0.4065%" height="15" fill="rgb(254,179,45)" fg:x="235" fg:w="1"/><text x="95.7785%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="95.5285%" y="309" width="0.4065%" height="15" fill="rgb(226,14,10)" fg:x="235" fg:w="1"/><text x="95.7785%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="95.5285%" y="293" width="0.4065%" height="15" fill="rgb(244,27,41)" fg:x="235" fg:w="1"/><text x="95.7785%" y="303.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (2 samples, 0.81%)</title><rect x="95.9350%" y="357" width="0.8130%" height="15" fill="rgb(235,35,32)" fg:x="236" fg:w="2"/><text x="96.1850%" y="367.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.81%)</title><rect x="95.9350%" y="341" width="0.8130%" height="15" fill="rgb(218,68,31)" fg:x="236" fg:w="2"/><text x="96.1850%" y="351.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_pattern (1 samples, 0.41%)</title><rect x="96.3415%" y="325" width="0.4065%" height="15" fill="rgb(207,120,37)" fg:x="237" fg:w="1"/><text x="96.5915%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (3 samples, 1.22%)</title><rect x="95.9350%" y="373" width="1.2195%" height="15" fill="rgb(227,98,0)" fg:x="236" fg:w="3"/><text x="96.1850%" y="383.50"></text></g><g><title>rust-gkat`regex_automata::hybrid::dfa::DFA::builder (1 samples, 0.41%)</title><rect x="96.7480%" y="357" width="0.4065%" height="15" fill="rgb(207,7,3)" fg:x="238" fg:w="1"/><text x="96.9980%" y="367.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="97.1545%" y="229" width="0.4065%" height="15" fill="rgb(206,98,19)" fg:x="239" fg:w="1"/><text x="97.4045%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="97.1545%" y="213" width="0.4065%" height="15" fill="rgb(217,5,26)" fg:x="239" fg:w="1"/><text x="97.4045%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.1545%" y="197" width="0.4065%" height="15" fill="rgb(235,190,38)" fg:x="239" fg:w="1"/><text x="97.4045%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="97.1545%" y="181" width="0.4065%" height="15" fill="rgb(247,86,24)" fg:x="239" fg:w="1"/><text x="97.4045%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="97.1545%" y="165" width="0.4065%" height="15" fill="rgb(205,101,16)" fg:x="239" fg:w="1"/><text x="97.4045%" y="175.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="97.1545%" y="149" width="0.4065%" height="15" fill="rgb(246,168,33)" fg:x="239" fg:w="1"/><text x="97.4045%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="97.5610%" y="149" width="0.4065%" height="15" fill="rgb(231,114,1)" fg:x="240" fg:w="1"/><text x="97.8110%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="97.5610%" y="133" width="0.4065%" height="15" fill="rgb(207,184,53)" fg:x="240" fg:w="1"/><text x="97.8110%" y="143.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="97.5610%" y="117" width="0.4065%" height="15" fill="rgb(224,95,51)" fg:x="240" fg:w="1"/><text x="97.8110%" y="127.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.81%)</title><rect x="97.5610%" y="181" width="0.8130%" height="15" fill="rgb(212,188,45)" fg:x="240" fg:w="2"/><text x="97.8110%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.81%)</title><rect x="97.5610%" y="165" width="0.8130%" height="15" fill="rgb(223,154,38)" fg:x="240" fg:w="2"/><text x="97.8110%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="97.9675%" y="149" width="0.4065%" height="15" fill="rgb(251,22,52)" fg:x="241" fg:w="1"/><text x="98.2175%" y="159.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="97.9675%" y="133" width="0.4065%" height="15" fill="rgb(229,209,22)" fg:x="241" fg:w="1"/><text x="98.2175%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="97.9675%" y="117" width="0.4065%" height="15" fill="rgb(234,138,34)" fg:x="241" fg:w="1"/><text x="98.2175%" y="127.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (1 samples, 0.41%)</title><rect x="98.3740%" y="181" width="0.4065%" height="15" fill="rgb(212,95,11)" fg:x="242" fg:w="1"/><text x="98.6240%" y="191.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="98.3740%" y="165" width="0.4065%" height="15" fill="rgb(240,179,47)" fg:x="242" fg:w="1"/><text x="98.6240%" y="175.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (1 samples, 0.41%)</title><rect x="98.3740%" y="149" width="0.4065%" height="15" fill="rgb(240,163,11)" fg:x="242" fg:w="1"/><text x="98.6240%" y="159.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (1 samples, 0.41%)</title><rect x="98.3740%" y="133" width="0.4065%" height="15" fill="rgb(236,37,12)" fg:x="242" fg:w="1"/><text x="98.6240%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7805%" y="165" width="0.4065%" height="15" fill="rgb(232,164,16)" fg:x="243" fg:w="1"/><text x="99.0305%" y="175.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="98.7805%" y="149" width="0.4065%" height="15" fill="rgb(244,205,15)" fg:x="243" fg:w="1"/><text x="99.0305%" y="159.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="98.7805%" y="133" width="0.4065%" height="15" fill="rgb(223,117,47)" fg:x="243" fg:w="1"/><text x="99.0305%" y="143.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="98.7805%" y="117" width="0.4065%" height="15" fill="rgb(244,107,35)" fg:x="243" fg:w="1"/><text x="99.0305%" y="127.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (1 samples, 0.41%)</title><rect x="98.7805%" y="101" width="0.4065%" height="15" fill="rgb(205,140,8)" fg:x="243" fg:w="1"/><text x="99.0305%" y="111.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="99.1870%" y="149" width="0.4065%" height="15" fill="rgb(228,84,46)" fg:x="244" fg:w="1"/><text x="99.4370%" y="159.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="99.1870%" y="133" width="0.4065%" height="15" fill="rgb(254,188,9)" fg:x="244" fg:w="1"/><text x="99.4370%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="99.1870%" y="117" width="0.4065%" height="15" fill="rgb(206,112,54)" fg:x="244" fg:w="1"/><text x="99.4370%" y="127.50"></text></g><g><title>all (246 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="246"/><text x="0.2500%" y="495.50"></text></g><g><title>dyld`start (246 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="246"/><text x="0.2500%" y="479.50">dyld`start</text></g><g><title>rust-gkat`main (246 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="246"/><text x="0.2500%" y="463.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (246 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="246"/><text x="0.2500%" y="447.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (246 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="246"/><text x="0.2500%" y="431.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (246 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="246"/><text x="0.2500%" y="415.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (246 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="246"/><text x="0.2500%" y="399.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="373" width="2.8455%" height="15" fill="rgb(219,72,43)" fg:x="239" fg:w="7"/><text x="97.4045%" y="383.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="357" width="2.8455%" height="15" fill="rgb(209,138,14)" fg:x="239" fg:w="7"/><text x="97.4045%" y="367.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="341" width="2.8455%" height="15" fill="rgb(222,18,33)" fg:x="239" fg:w="7"/><text x="97.4045%" y="351.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="325" width="2.8455%" height="15" fill="rgb(213,199,7)" fg:x="239" fg:w="7"/><text x="97.4045%" y="335.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="309" width="2.8455%" height="15" fill="rgb(250,110,10)" fg:x="239" fg:w="7"/><text x="97.4045%" y="319.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="293" width="2.8455%" height="15" fill="rgb(248,123,6)" fg:x="239" fg:w="7"/><text x="97.4045%" y="303.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="277" width="2.8455%" height="15" fill="rgb(206,91,31)" fg:x="239" fg:w="7"/><text x="97.4045%" y="287.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="261" width="2.8455%" height="15" fill="rgb(211,154,13)" fg:x="239" fg:w="7"/><text x="97.4045%" y="271.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.85%)</title><rect x="97.1545%" y="245" width="2.8455%" height="15" fill="rgb(225,148,7)" fg:x="239" fg:w="7"/><text x="97.4045%" y="255.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (6 samples, 2.44%)</title><rect x="97.5610%" y="229" width="2.4390%" height="15" fill="rgb(220,160,43)" fg:x="240" fg:w="6"/><text x="97.8110%" y="239.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (6 samples, 2.44%)</title><rect x="97.5610%" y="213" width="2.4390%" height="15" fill="rgb(213,52,39)" fg:x="240" fg:w="6"/><text x="97.8110%" y="223.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (6 samples, 2.44%)</title><rect x="97.5610%" y="197" width="2.4390%" height="15" fill="rgb(243,137,7)" fg:x="240" fg:w="6"/><text x="97.8110%" y="207.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (3 samples, 1.22%)</title><rect x="98.7805%" y="181" width="1.2195%" height="15" fill="rgb(230,79,13)" fg:x="243" fg:w="3"/><text x="99.0305%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (2 samples, 0.81%)</title><rect x="99.1870%" y="165" width="0.8130%" height="15" fill="rgb(247,105,23)" fg:x="244" fg:w="2"/><text x="99.4370%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="149" width="0.4065%" height="15" fill="rgb(223,179,41)" fg:x="245" fg:w="1"/><text x="99.8435%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="133" width="0.4065%" height="15" fill="rgb(218,9,34)" fg:x="245" fg:w="1"/><text x="99.8435%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="117" width="0.4065%" height="15" fill="rgb(222,106,8)" fg:x="245" fg:w="1"/><text x="99.8435%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="101" width="0.4065%" height="15" fill="rgb(211,220,0)" fg:x="245" fg:w="1"/><text x="99.8435%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="85" width="0.4065%" height="15" fill="rgb(229,52,16)" fg:x="245" fg:w="1"/><text x="99.8435%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5935%" y="69" width="0.4065%" height="15" fill="rgb(212,155,18)" fg:x="245" fg:w="1"/><text x="99.8435%" y="79.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="99.5935%" y="53" width="0.4065%" height="15" fill="rgb(242,21,14)" fg:x="245" fg:w="1"/><text x="99.8435%" y="63.50"></text></g></svg></svg>