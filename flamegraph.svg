<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="4104"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (2 samples, 0.05%)</title><rect x="0.0000%" y="677" width="0.0487%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.05%)</title><rect x="0.0000%" y="661" width="0.0487%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="671.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (2 samples, 0.05%)</title><rect x="0.0487%" y="613" width="0.0487%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="2"/><text x="0.2987%" y="623.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;(rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;,hashconsing::WHConsed&lt;rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;&gt;)&gt; (1 samples, 0.02%)</title><rect x="0.0975%" y="613" width="0.0244%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.3475%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="0.2437%" y="597" width="0.0244%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="1"/><text x="0.4937%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="0.2680%" y="597" width="0.0244%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="1"/><text x="0.5180%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.19%)</title><rect x="0.2924%" y="597" width="0.1949%" height="15" fill="rgb(207,160,47)" fg:x="12" fg:w="8"/><text x="0.5424%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="0.4873%" y="581" width="0.0244%" height="15" fill="rgb(228,23,34)" fg:x="20" fg:w="1"/><text x="0.7373%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.05%)</title><rect x="0.4873%" y="597" width="0.0487%" height="15" fill="rgb(218,30,26)" fg:x="20" fg:w="2"/><text x="0.7373%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.02%)</title><rect x="0.5117%" y="581" width="0.0244%" height="15" fill="rgb(220,122,19)" fg:x="21" fg:w="1"/><text x="0.7617%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (1 samples, 0.02%)</title><rect x="0.5117%" y="565" width="0.0244%" height="15" fill="rgb(250,228,42)" fg:x="21" fg:w="1"/><text x="0.7617%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="0.5117%" y="549" width="0.0244%" height="15" fill="rgb(240,193,28)" fg:x="21" fg:w="1"/><text x="0.7617%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="0.5361%" y="597" width="0.0487%" height="15" fill="rgb(216,20,37)" fg:x="22" fg:w="2"/><text x="0.7861%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.05%)</title><rect x="0.5361%" y="581" width="0.0487%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="2"/><text x="0.7861%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.05%)</title><rect x="0.5361%" y="565" width="0.0487%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="2"/><text x="0.7861%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (4 samples, 0.10%)</title><rect x="0.5848%" y="597" width="0.0975%" height="15" fill="rgb(231,73,38)" fg:x="24" fg:w="4"/><text x="0.8348%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (4 samples, 0.10%)</title><rect x="0.5848%" y="581" width="0.0975%" height="15" fill="rgb(225,20,46)" fg:x="24" fg:w="4"/><text x="0.8348%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.10%)</title><rect x="0.5848%" y="565" width="0.0975%" height="15" fill="rgb(210,31,41)" fg:x="24" fg:w="4"/><text x="0.8348%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="0.6823%" y="597" width="0.0244%" height="15" fill="rgb(221,200,47)" fg:x="28" fg:w="1"/><text x="0.9323%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.05%)</title><rect x="1.0478%" y="581" width="0.0487%" height="15" fill="rgb(226,26,5)" fg:x="43" fg:w="2"/><text x="1.2978%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="1.0965%" y="581" width="0.0244%" height="15" fill="rgb(249,33,26)" fg:x="45" fg:w="1"/><text x="1.3465%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="1.0965%" y="565" width="0.0244%" height="15" fill="rgb(235,183,28)" fg:x="45" fg:w="1"/><text x="1.3465%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="1.0965%" y="549" width="0.0244%" height="15" fill="rgb(221,5,38)" fg:x="45" fg:w="1"/><text x="1.3465%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="1.1209%" y="581" width="0.0244%" height="15" fill="rgb(247,18,42)" fg:x="46" fg:w="1"/><text x="1.3709%" y="591.50"></text></g><g><title>rust-gkat`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.46%)</title><rect x="0.7066%" y="597" width="0.4630%" height="15" fill="rgb(241,131,45)" fg:x="29" fg:w="19"/><text x="0.9566%" y="607.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;disjoint_sets::tree::UnionFindNode&gt; (1 samples, 0.02%)</title><rect x="1.1452%" y="581" width="0.0244%" height="15" fill="rgb(249,31,29)" fg:x="47" fg:w="1"/><text x="1.3952%" y="591.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="1.1696%" y="597" width="0.0244%" height="15" fill="rgb(225,111,53)" fg:x="48" fg:w="1"/><text x="1.4196%" y="607.50"></text></g><g><title>rust-gkat`clap_builder::builder::command::Command::_do_parse (1 samples, 0.02%)</title><rect x="1.1940%" y="597" width="0.0244%" height="15" fill="rgb(238,160,17)" fg:x="49" fg:w="1"/><text x="1.4440%" y="607.50"></text></g><g><title>rust-gkat`clap_builder::mkeymap::MKeyMap::_build (1 samples, 0.02%)</title><rect x="1.1940%" y="581" width="0.0244%" height="15" fill="rgb(214,148,48)" fg:x="49" fg:w="1"/><text x="1.4440%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="1.2914%" y="501" width="0.0244%" height="15" fill="rgb(232,36,49)" fg:x="53" fg:w="1"/><text x="1.5414%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="1.2914%" y="485" width="0.0244%" height="15" fill="rgb(209,103,24)" fg:x="53" fg:w="1"/><text x="1.5414%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="1.2914%" y="469" width="0.0244%" height="15" fill="rgb(229,88,8)" fg:x="53" fg:w="1"/><text x="1.5414%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="1.3158%" y="453" width="0.0244%" height="15" fill="rgb(213,181,19)" fg:x="54" fg:w="1"/><text x="1.5658%" y="463.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;(rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;,hashconsing::WHConsed&lt;rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;&gt;)&gt; (6 samples, 0.15%)</title><rect x="1.2183%" y="597" width="0.1462%" height="15" fill="rgb(254,191,54)" fg:x="50" fg:w="6"/><text x="1.4683%" y="607.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.07%)</title><rect x="1.2914%" y="581" width="0.0731%" height="15" fill="rgb(241,83,37)" fg:x="53" fg:w="3"/><text x="1.5414%" y="591.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.07%)</title><rect x="1.2914%" y="565" width="0.0731%" height="15" fill="rgb(233,36,39)" fg:x="53" fg:w="3"/><text x="1.5414%" y="575.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.07%)</title><rect x="1.2914%" y="549" width="0.0731%" height="15" fill="rgb(226,3,54)" fg:x="53" fg:w="3"/><text x="1.5414%" y="559.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.07%)</title><rect x="1.2914%" y="533" width="0.0731%" height="15" fill="rgb(245,192,40)" fg:x="53" fg:w="3"/><text x="1.5414%" y="543.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.07%)</title><rect x="1.2914%" y="517" width="0.0731%" height="15" fill="rgb(238,167,29)" fg:x="53" fg:w="3"/><text x="1.5414%" y="527.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.05%)</title><rect x="1.3158%" y="501" width="0.0487%" height="15" fill="rgb(232,182,51)" fg:x="54" fg:w="2"/><text x="1.5658%" y="511.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.05%)</title><rect x="1.3158%" y="485" width="0.0487%" height="15" fill="rgb(231,60,39)" fg:x="54" fg:w="2"/><text x="1.5658%" y="495.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.05%)</title><rect x="1.3158%" y="469" width="0.0487%" height="15" fill="rgb(208,69,12)" fg:x="54" fg:w="2"/><text x="1.5658%" y="479.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="453" width="0.0244%" height="15" fill="rgb(235,93,37)" fg:x="55" fg:w="1"/><text x="1.5902%" y="463.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="437" width="0.0244%" height="15" fill="rgb(213,116,39)" fg:x="55" fg:w="1"/><text x="1.5902%" y="447.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="421" width="0.0244%" height="15" fill="rgb(222,207,29)" fg:x="55" fg:w="1"/><text x="1.5902%" y="431.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="405" width="0.0244%" height="15" fill="rgb(206,96,30)" fg:x="55" fg:w="1"/><text x="1.5902%" y="415.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="389" width="0.0244%" height="15" fill="rgb(218,138,4)" fg:x="55" fg:w="1"/><text x="1.5902%" y="399.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="373" width="0.0244%" height="15" fill="rgb(250,191,14)" fg:x="55" fg:w="1"/><text x="1.5902%" y="383.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="1.3402%" y="357" width="0.0244%" height="15" fill="rgb(239,60,40)" fg:x="55" fg:w="1"/><text x="1.5902%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="1.3645%" y="565" width="0.0244%" height="15" fill="rgb(206,27,48)" fg:x="56" fg:w="1"/><text x="1.6145%" y="575.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;xdd::BDDFactory&lt;u32,xdd::NoMultiplicity&gt;&gt; (12 samples, 0.29%)</title><rect x="1.3645%" y="597" width="0.2924%" height="15" fill="rgb(225,35,8)" fg:x="56" fg:w="12"/><text x="1.6145%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (12 samples, 0.29%)</title><rect x="1.3645%" y="581" width="0.2924%" height="15" fill="rgb(250,213,24)" fg:x="56" fg:w="12"/><text x="1.6145%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_large (11 samples, 0.27%)</title><rect x="1.3889%" y="565" width="0.2680%" height="15" fill="rgb(247,123,22)" fg:x="57" fg:w="11"/><text x="1.6389%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (11 samples, 0.27%)</title><rect x="1.3889%" y="549" width="0.2680%" height="15" fill="rgb(231,138,38)" fg:x="57" fg:w="11"/><text x="1.6389%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.27%)</title><rect x="1.3889%" y="533" width="0.2680%" height="15" fill="rgb(231,145,46)" fg:x="57" fg:w="11"/><text x="1.6389%" y="543.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find (1 samples, 0.02%)</title><rect x="1.6569%" y="597" width="0.0244%" height="15" fill="rgb(251,118,11)" fg:x="68" fg:w="1"/><text x="1.9069%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="1.6813%" y="581" width="0.0487%" height="15" fill="rgb(217,147,25)" fg:x="69" fg:w="2"/><text x="1.9313%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="1.7544%" y="565" width="0.0244%" height="15" fill="rgb(247,81,37)" fg:x="72" fg:w="1"/><text x="2.0044%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="1.7544%" y="549" width="0.0244%" height="15" fill="rgb(209,12,38)" fg:x="72" fg:w="1"/><text x="2.0044%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="1.7788%" y="565" width="0.0244%" height="15" fill="rgb(227,1,9)" fg:x="73" fg:w="1"/><text x="2.0288%" y="575.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="1.8031%" y="565" width="0.0731%" height="15" fill="rgb(248,47,43)" fg:x="74" fg:w="3"/><text x="2.0531%" y="575.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="549" width="0.0487%" height="15" fill="rgb(221,10,30)" fg:x="75" fg:w="2"/><text x="2.0775%" y="559.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="533" width="0.0487%" height="15" fill="rgb(210,229,1)" fg:x="75" fg:w="2"/><text x="2.0775%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="517" width="0.0487%" height="15" fill="rgb(222,148,37)" fg:x="75" fg:w="2"/><text x="2.0775%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="501" width="0.0487%" height="15" fill="rgb(234,67,33)" fg:x="75" fg:w="2"/><text x="2.0775%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="485" width="0.0487%" height="15" fill="rgb(247,98,35)" fg:x="75" fg:w="2"/><text x="2.0775%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="469" width="0.0487%" height="15" fill="rgb(247,138,52)" fg:x="75" fg:w="2"/><text x="2.0775%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="453" width="0.0487%" height="15" fill="rgb(213,79,30)" fg:x="75" fg:w="2"/><text x="2.0775%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="1.8275%" y="437" width="0.0487%" height="15" fill="rgb(246,177,23)" fg:x="75" fg:w="2"/><text x="2.0775%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="1.8519%" y="421" width="0.0244%" height="15" fill="rgb(230,62,27)" fg:x="76" fg:w="1"/><text x="2.1019%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="1.8519%" y="405" width="0.0244%" height="15" fill="rgb(216,154,8)" fg:x="76" fg:w="1"/><text x="2.1019%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="1.8519%" y="389" width="0.0244%" height="15" fill="rgb(244,35,45)" fg:x="76" fg:w="1"/><text x="2.1019%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="1.8519%" y="373" width="0.0244%" height="15" fill="rgb(251,115,12)" fg:x="76" fg:w="1"/><text x="2.1019%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.8519%" y="357" width="0.0244%" height="15" fill="rgb(240,54,50)" fg:x="76" fg:w="1"/><text x="2.1019%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="1.9006%" y="549" width="0.0244%" height="15" fill="rgb(233,84,52)" fg:x="78" fg:w="1"/><text x="2.1506%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="1.9250%" y="549" width="0.0731%" height="15" fill="rgb(207,117,47)" fg:x="79" fg:w="3"/><text x="2.1750%" y="559.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.22%)</title><rect x="1.8762%" y="565" width="0.2193%" height="15" fill="rgb(249,43,39)" fg:x="77" fg:w="9"/><text x="2.1262%" y="575.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="1.9981%" y="549" width="0.0975%" height="15" fill="rgb(209,38,44)" fg:x="82" fg:w="4"/><text x="2.2481%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="2.0955%" y="565" width="0.0244%" height="15" fill="rgb(236,212,23)" fg:x="86" fg:w="1"/><text x="2.3455%" y="575.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="2.1442%" y="549" width="0.0244%" height="15" fill="rgb(242,79,21)" fg:x="88" fg:w="1"/><text x="2.3942%" y="559.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="533" width="0.0244%" height="15" fill="rgb(211,96,35)" fg:x="88" fg:w="1"/><text x="2.3942%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="517" width="0.0244%" height="15" fill="rgb(253,215,40)" fg:x="88" fg:w="1"/><text x="2.3942%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="501" width="0.0244%" height="15" fill="rgb(211,81,21)" fg:x="88" fg:w="1"/><text x="2.3942%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="485" width="0.0244%" height="15" fill="rgb(208,190,38)" fg:x="88" fg:w="1"/><text x="2.3942%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="469" width="0.0244%" height="15" fill="rgb(235,213,38)" fg:x="88" fg:w="1"/><text x="2.3942%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="453" width="0.0244%" height="15" fill="rgb(237,122,38)" fg:x="88" fg:w="1"/><text x="2.3942%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.1442%" y="437" width="0.0244%" height="15" fill="rgb(244,218,35)" fg:x="88" fg:w="1"/><text x="2.3942%" y="447.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10 samples, 0.24%)</title><rect x="2.1686%" y="549" width="0.2437%" height="15" fill="rgb(240,68,47)" fg:x="89" fg:w="10"/><text x="2.4186%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="2.2417%" y="533" width="0.1706%" height="15" fill="rgb(210,16,53)" fg:x="92" fg:w="7"/><text x="2.4917%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="2.2661%" y="517" width="0.1462%" height="15" fill="rgb(235,124,12)" fg:x="93" fg:w="6"/><text x="2.5161%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="2.4123%" y="549" width="0.0244%" height="15" fill="rgb(224,169,11)" fg:x="99" fg:w="1"/><text x="2.6623%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="2.4610%" y="533" width="0.0244%" height="15" fill="rgb(250,166,2)" fg:x="101" fg:w="1"/><text x="2.7110%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="2.4610%" y="517" width="0.0244%" height="15" fill="rgb(242,216,29)" fg:x="101" fg:w="1"/><text x="2.7110%" y="527.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="2.4854%" y="533" width="0.0487%" height="15" fill="rgb(230,116,27)" fg:x="102" fg:w="2"/><text x="2.7354%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="517" width="0.0244%" height="15" fill="rgb(228,99,48)" fg:x="103" fg:w="1"/><text x="2.7597%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="501" width="0.0244%" height="15" fill="rgb(253,11,6)" fg:x="103" fg:w="1"/><text x="2.7597%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="485" width="0.0244%" height="15" fill="rgb(247,143,39)" fg:x="103" fg:w="1"/><text x="2.7597%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="469" width="0.0244%" height="15" fill="rgb(236,97,10)" fg:x="103" fg:w="1"/><text x="2.7597%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="453" width="0.0244%" height="15" fill="rgb(233,208,19)" fg:x="103" fg:w="1"/><text x="2.7597%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="437" width="0.0244%" height="15" fill="rgb(216,164,2)" fg:x="103" fg:w="1"/><text x="2.7597%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="421" width="0.0244%" height="15" fill="rgb(220,129,5)" fg:x="103" fg:w="1"/><text x="2.7597%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="2.5097%" y="405" width="0.0244%" height="15" fill="rgb(242,17,10)" fg:x="103" fg:w="1"/><text x="2.7597%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="2.5097%" y="389" width="0.0244%" height="15" fill="rgb(242,107,0)" fg:x="103" fg:w="1"/><text x="2.7597%" y="399.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.29%)</title><rect x="2.5341%" y="533" width="0.2924%" height="15" fill="rgb(251,28,31)" fg:x="104" fg:w="12"/><text x="2.7841%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.29%)</title><rect x="2.5341%" y="517" width="0.2924%" height="15" fill="rgb(233,223,10)" fg:x="104" fg:w="12"/><text x="2.7841%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.17%)</title><rect x="2.6559%" y="501" width="0.1706%" height="15" fill="rgb(215,21,27)" fg:x="109" fg:w="7"/><text x="2.9059%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.05%)</title><rect x="2.7778%" y="485" width="0.0487%" height="15" fill="rgb(232,23,21)" fg:x="114" fg:w="2"/><text x="3.0278%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.05%)</title><rect x="2.7778%" y="469" width="0.0487%" height="15" fill="rgb(244,5,23)" fg:x="114" fg:w="2"/><text x="3.0278%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="2.8265%" y="533" width="0.0244%" height="15" fill="rgb(226,81,46)" fg:x="116" fg:w="1"/><text x="3.0765%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="2.9971%" y="469" width="0.0244%" height="15" fill="rgb(247,70,30)" fg:x="123" fg:w="1"/><text x="3.2471%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="3.0458%" y="373" width="0.0244%" height="15" fill="rgb(212,68,19)" fg:x="125" fg:w="1"/><text x="3.2958%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="3.0458%" y="357" width="0.0244%" height="15" fill="rgb(240,187,13)" fg:x="125" fg:w="1"/><text x="3.2958%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="3.0945%" y="277" width="0.0487%" height="15" fill="rgb(223,113,26)" fg:x="127" fg:w="2"/><text x="3.3445%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="3.2164%" y="261" width="0.0731%" height="15" fill="rgb(206,192,2)" fg:x="132" fg:w="3"/><text x="3.4664%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="3.0945%" y="293" width="0.2437%" height="15" fill="rgb(241,108,4)" fg:x="127" fg:w="10"/><text x="3.3445%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.19%)</title><rect x="3.1433%" y="277" width="0.1949%" height="15" fill="rgb(247,173,49)" fg:x="129" fg:w="8"/><text x="3.3933%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="3.2895%" y="261" width="0.0487%" height="15" fill="rgb(224,114,35)" fg:x="135" fg:w="2"/><text x="3.5395%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 0.44%)</title><rect x="2.9240%" y="517" width="0.4386%" height="15" fill="rgb(245,159,27)" fg:x="120" fg:w="18"/><text x="3.1740%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (15 samples, 0.37%)</title><rect x="2.9971%" y="501" width="0.3655%" height="15" fill="rgb(245,172,44)" fg:x="123" fg:w="15"/><text x="3.2471%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (15 samples, 0.37%)</title><rect x="2.9971%" y="485" width="0.3655%" height="15" fill="rgb(236,23,11)" fg:x="123" fg:w="15"/><text x="3.2471%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="469" width="0.3411%" height="15" fill="rgb(205,117,38)" fg:x="124" fg:w="14"/><text x="3.2714%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="453" width="0.3411%" height="15" fill="rgb(237,72,25)" fg:x="124" fg:w="14"/><text x="3.2714%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="437" width="0.3411%" height="15" fill="rgb(244,70,9)" fg:x="124" fg:w="14"/><text x="3.2714%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="421" width="0.3411%" height="15" fill="rgb(217,125,39)" fg:x="124" fg:w="14"/><text x="3.2714%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="405" width="0.3411%" height="15" fill="rgb(235,36,10)" fg:x="124" fg:w="14"/><text x="3.2714%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="3.0214%" y="389" width="0.3411%" height="15" fill="rgb(251,123,47)" fg:x="124" fg:w="14"/><text x="3.2714%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="3.0702%" y="373" width="0.2924%" height="15" fill="rgb(221,13,13)" fg:x="126" fg:w="12"/><text x="3.3202%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (11 samples, 0.27%)</title><rect x="3.0945%" y="357" width="0.2680%" height="15" fill="rgb(238,131,9)" fg:x="127" fg:w="11"/><text x="3.3445%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (11 samples, 0.27%)</title><rect x="3.0945%" y="341" width="0.2680%" height="15" fill="rgb(211,50,8)" fg:x="127" fg:w="11"/><text x="3.3445%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (11 samples, 0.27%)</title><rect x="3.0945%" y="325" width="0.2680%" height="15" fill="rgb(245,182,24)" fg:x="127" fg:w="11"/><text x="3.3445%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (11 samples, 0.27%)</title><rect x="3.0945%" y="309" width="0.2680%" height="15" fill="rgb(242,14,37)" fg:x="127" fg:w="11"/><text x="3.3445%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="3.3382%" y="293" width="0.0244%" height="15" fill="rgb(246,228,12)" fg:x="137" fg:w="1"/><text x="3.5882%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="3.3626%" y="501" width="0.1706%" height="15" fill="rgb(213,55,15)" fg:x="138" fg:w="7"/><text x="3.6126%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="3.4357%" y="485" width="0.0975%" height="15" fill="rgb(209,9,3)" fg:x="141" fg:w="4"/><text x="3.6857%" y="495.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8 samples, 0.19%)</title><rect x="3.3626%" y="517" width="0.1949%" height="15" fill="rgb(230,59,30)" fg:x="138" fg:w="8"/><text x="3.6126%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="3.5331%" y="501" width="0.0244%" height="15" fill="rgb(209,121,21)" fg:x="145" fg:w="1"/><text x="3.7831%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="3.5819%" y="501" width="0.0244%" height="15" fill="rgb(220,109,13)" fg:x="147" fg:w="1"/><text x="3.8319%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="3.6306%" y="357" width="0.0244%" height="15" fill="rgb(232,18,1)" fg:x="149" fg:w="1"/><text x="3.8806%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="3.6306%" y="341" width="0.0244%" height="15" fill="rgb(215,41,42)" fg:x="149" fg:w="1"/><text x="3.8806%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="3.6062%" y="501" width="0.0731%" height="15" fill="rgb(224,123,36)" fg:x="148" fg:w="3"/><text x="3.8562%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="485" width="0.0487%" height="15" fill="rgb(240,125,3)" fg:x="149" fg:w="2"/><text x="3.8806%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="469" width="0.0487%" height="15" fill="rgb(205,98,50)" fg:x="149" fg:w="2"/><text x="3.8806%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="453" width="0.0487%" height="15" fill="rgb(205,185,37)" fg:x="149" fg:w="2"/><text x="3.8806%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="437" width="0.0487%" height="15" fill="rgb(238,207,15)" fg:x="149" fg:w="2"/><text x="3.8806%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="421" width="0.0487%" height="15" fill="rgb(213,199,42)" fg:x="149" fg:w="2"/><text x="3.8806%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="405" width="0.0487%" height="15" fill="rgb(235,201,11)" fg:x="149" fg:w="2"/><text x="3.8806%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="389" width="0.0487%" height="15" fill="rgb(207,46,11)" fg:x="149" fg:w="2"/><text x="3.8806%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="3.6306%" y="373" width="0.0487%" height="15" fill="rgb(241,35,35)" fg:x="149" fg:w="2"/><text x="3.8806%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="3.6550%" y="357" width="0.0244%" height="15" fill="rgb(243,32,47)" fg:x="150" fg:w="1"/><text x="3.9050%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="3.6550%" y="341" width="0.0244%" height="15" fill="rgb(247,202,23)" fg:x="150" fg:w="1"/><text x="3.9050%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="3.6793%" y="501" width="0.0731%" height="15" fill="rgb(219,102,11)" fg:x="151" fg:w="3"/><text x="3.9293%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="485" width="0.0731%" height="15" fill="rgb(243,110,44)" fg:x="151" fg:w="3"/><text x="3.9293%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="469" width="0.0731%" height="15" fill="rgb(222,74,54)" fg:x="151" fg:w="3"/><text x="3.9293%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="453" width="0.0731%" height="15" fill="rgb(216,99,12)" fg:x="151" fg:w="3"/><text x="3.9293%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="437" width="0.0731%" height="15" fill="rgb(226,22,26)" fg:x="151" fg:w="3"/><text x="3.9293%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="421" width="0.0731%" height="15" fill="rgb(217,163,10)" fg:x="151" fg:w="3"/><text x="3.9293%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="405" width="0.0731%" height="15" fill="rgb(213,25,53)" fg:x="151" fg:w="3"/><text x="3.9293%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="389" width="0.0731%" height="15" fill="rgb(252,105,26)" fg:x="151" fg:w="3"/><text x="3.9293%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="373" width="0.0731%" height="15" fill="rgb(220,39,43)" fg:x="151" fg:w="3"/><text x="3.9293%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="3.6793%" y="357" width="0.0731%" height="15" fill="rgb(229,68,48)" fg:x="151" fg:w="3"/><text x="3.9293%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="3.6793%" y="341" width="0.0731%" height="15" fill="rgb(252,8,32)" fg:x="151" fg:w="3"/><text x="3.9293%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="3.6793%" y="325" width="0.0731%" height="15" fill="rgb(223,20,43)" fg:x="151" fg:w="3"/><text x="3.9293%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="3.6793%" y="309" width="0.0731%" height="15" fill="rgb(229,81,49)" fg:x="151" fg:w="3"/><text x="3.9293%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="3.7037%" y="293" width="0.0487%" height="15" fill="rgb(236,28,36)" fg:x="152" fg:w="2"/><text x="3.9537%" y="303.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.41%)</title><rect x="3.7524%" y="501" width="0.4142%" height="15" fill="rgb(249,185,26)" fg:x="154" fg:w="17"/><text x="4.0024%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.39%)</title><rect x="3.7768%" y="485" width="0.3899%" height="15" fill="rgb(249,174,33)" fg:x="155" fg:w="16"/><text x="4.0268%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.19%)</title><rect x="3.9717%" y="469" width="0.1949%" height="15" fill="rgb(233,201,37)" fg:x="163" fg:w="8"/><text x="4.2217%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.1667%" y="501" width="0.0244%" height="15" fill="rgb(221,78,26)" fg:x="171" fg:w="1"/><text x="4.4167%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="4.2398%" y="485" width="0.0244%" height="15" fill="rgb(250,127,30)" fg:x="174" fg:w="1"/><text x="4.4898%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.2641%" y="405" width="0.0244%" height="15" fill="rgb(230,49,44)" fg:x="175" fg:w="1"/><text x="4.5141%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="4.2885%" y="389" width="0.0975%" height="15" fill="rgb(229,67,23)" fg:x="176" fg:w="4"/><text x="4.5385%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (6 samples, 0.15%)</title><rect x="4.2641%" y="437" width="0.1462%" height="15" fill="rgb(249,83,47)" fg:x="175" fg:w="6"/><text x="4.5141%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.15%)</title><rect x="4.2641%" y="421" width="0.1462%" height="15" fill="rgb(215,43,3)" fg:x="175" fg:w="6"/><text x="4.5141%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.12%)</title><rect x="4.2885%" y="405" width="0.1218%" height="15" fill="rgb(238,154,13)" fg:x="176" fg:w="5"/><text x="4.5385%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.3860%" y="389" width="0.0244%" height="15" fill="rgb(219,56,2)" fg:x="180" fg:w="1"/><text x="4.6360%" y="399.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.4103%" y="389" width="0.0244%" height="15" fill="rgb(233,0,4)" fg:x="181" fg:w="1"/><text x="4.6603%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.4591%" y="373" width="0.0244%" height="15" fill="rgb(235,30,7)" fg:x="183" fg:w="1"/><text x="4.7091%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.4591%" y="357" width="0.0244%" height="15" fill="rgb(250,79,13)" fg:x="183" fg:w="1"/><text x="4.7091%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="4.4834%" y="357" width="0.0244%" height="15" fill="rgb(211,146,34)" fg:x="184" fg:w="1"/><text x="4.7334%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.4834%" y="341" width="0.0244%" height="15" fill="rgb(228,22,38)" fg:x="184" fg:w="1"/><text x="4.7334%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="4.5078%" y="341" width="0.0244%" height="15" fill="rgb(235,168,5)" fg:x="185" fg:w="1"/><text x="4.7578%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="4.5565%" y="325" width="0.0244%" height="15" fill="rgb(221,155,16)" fg:x="187" fg:w="1"/><text x="4.8065%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.5809%" y="325" width="0.0244%" height="15" fill="rgb(215,215,53)" fg:x="188" fg:w="1"/><text x="4.8309%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.6053%" y="325" width="0.0244%" height="15" fill="rgb(223,4,10)" fg:x="189" fg:w="1"/><text x="4.8553%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.6053%" y="309" width="0.0244%" height="15" fill="rgb(234,103,6)" fg:x="189" fg:w="1"/><text x="4.8553%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="4.6296%" y="261" width="0.0244%" height="15" fill="rgb(227,97,0)" fg:x="190" fg:w="1"/><text x="4.8796%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="4.6296%" y="245" width="0.0244%" height="15" fill="rgb(234,150,53)" fg:x="190" fg:w="1"/><text x="4.8796%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.6784%" y="229" width="0.0244%" height="15" fill="rgb(228,201,54)" fg:x="192" fg:w="1"/><text x="4.9284%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.7027%" y="229" width="0.0244%" height="15" fill="rgb(222,22,37)" fg:x="193" fg:w="1"/><text x="4.9527%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="4.7027%" y="213" width="0.0244%" height="15" fill="rgb(237,53,32)" fg:x="193" fg:w="1"/><text x="4.9527%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="4.7271%" y="197" width="0.0244%" height="15" fill="rgb(233,25,53)" fg:x="194" fg:w="1"/><text x="4.9771%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="4.7271%" y="181" width="0.0244%" height="15" fill="rgb(210,40,34)" fg:x="194" fg:w="1"/><text x="4.9771%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="4.7515%" y="165" width="0.0244%" height="15" fill="rgb(241,220,44)" fg:x="195" fg:w="1"/><text x="5.0015%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="4.7515%" y="149" width="0.0244%" height="15" fill="rgb(235,28,35)" fg:x="195" fg:w="1"/><text x="5.0015%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.56%)</title><rect x="4.2641%" y="485" width="0.5604%" height="15" fill="rgb(210,56,17)" fg:x="175" fg:w="23"/><text x="4.5141%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (23 samples, 0.56%)</title><rect x="4.2641%" y="469" width="0.5604%" height="15" fill="rgb(224,130,29)" fg:x="175" fg:w="23"/><text x="4.5141%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (23 samples, 0.56%)</title><rect x="4.2641%" y="453" width="0.5604%" height="15" fill="rgb(235,212,8)" fg:x="175" fg:w="23"/><text x="4.5141%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="4.4103%" y="437" width="0.4142%" height="15" fill="rgb(223,33,50)" fg:x="181" fg:w="17"/><text x="4.6603%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="4.4103%" y="421" width="0.4142%" height="15" fill="rgb(219,149,13)" fg:x="181" fg:w="17"/><text x="4.6603%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="4.4103%" y="405" width="0.4142%" height="15" fill="rgb(250,156,29)" fg:x="181" fg:w="17"/><text x="4.6603%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (16 samples, 0.39%)</title><rect x="4.4347%" y="389" width="0.3899%" height="15" fill="rgb(216,193,19)" fg:x="182" fg:w="16"/><text x="4.6847%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="4.4834%" y="373" width="0.3411%" height="15" fill="rgb(216,135,14)" fg:x="184" fg:w="14"/><text x="4.7334%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (13 samples, 0.32%)</title><rect x="4.5078%" y="357" width="0.3168%" height="15" fill="rgb(241,47,5)" fg:x="185" fg:w="13"/><text x="4.7578%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="4.5322%" y="341" width="0.2924%" height="15" fill="rgb(233,42,35)" fg:x="186" fg:w="12"/><text x="4.7822%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (8 samples, 0.19%)</title><rect x="4.6296%" y="325" width="0.1949%" height="15" fill="rgb(231,13,6)" fg:x="190" fg:w="8"/><text x="4.8796%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (8 samples, 0.19%)</title><rect x="4.6296%" y="309" width="0.1949%" height="15" fill="rgb(207,181,40)" fg:x="190" fg:w="8"/><text x="4.8796%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (8 samples, 0.19%)</title><rect x="4.6296%" y="293" width="0.1949%" height="15" fill="rgb(254,173,49)" fg:x="190" fg:w="8"/><text x="4.8796%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (8 samples, 0.19%)</title><rect x="4.6296%" y="277" width="0.1949%" height="15" fill="rgb(221,1,38)" fg:x="190" fg:w="8"/><text x="4.8796%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="4.6540%" y="261" width="0.1706%" height="15" fill="rgb(206,124,46)" fg:x="191" fg:w="7"/><text x="4.9040%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="4.6540%" y="245" width="0.1706%" height="15" fill="rgb(249,21,11)" fg:x="191" fg:w="7"/><text x="4.9040%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="4.7271%" y="229" width="0.0975%" height="15" fill="rgb(222,201,40)" fg:x="194" fg:w="4"/><text x="4.9771%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="4.7271%" y="213" width="0.0975%" height="15" fill="rgb(235,61,29)" fg:x="194" fg:w="4"/><text x="4.9771%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="4.7515%" y="197" width="0.0731%" height="15" fill="rgb(219,207,3)" fg:x="195" fg:w="3"/><text x="5.0015%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="4.7515%" y="181" width="0.0731%" height="15" fill="rgb(222,56,46)" fg:x="195" fg:w="3"/><text x="5.0015%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="4.7758%" y="165" width="0.0487%" height="15" fill="rgb(239,76,54)" fg:x="196" fg:w="2"/><text x="5.0258%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="4.7758%" y="149" width="0.0487%" height="15" fill="rgb(231,124,27)" fg:x="196" fg:w="2"/><text x="5.0258%" y="159.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="4.8002%" y="133" width="0.0244%" height="15" fill="rgb(249,195,6)" fg:x="197" fg:w="1"/><text x="5.0502%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="4.8489%" y="469" width="0.0731%" height="15" fill="rgb(237,174,47)" fg:x="199" fg:w="3"/><text x="5.0989%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="4.8733%" y="453" width="0.0487%" height="15" fill="rgb(206,201,31)" fg:x="200" fg:w="2"/><text x="5.1233%" y="463.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.12%)</title><rect x="4.8246%" y="485" width="0.1218%" height="15" fill="rgb(231,57,52)" fg:x="198" fg:w="5"/><text x="5.0746%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="4.9220%" y="469" width="0.0244%" height="15" fill="rgb(248,177,22)" fg:x="202" fg:w="1"/><text x="5.1720%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="4.9951%" y="421" width="0.0244%" height="15" fill="rgb(215,211,37)" fg:x="205" fg:w="1"/><text x="5.2451%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="4.9951%" y="405" width="0.0244%" height="15" fill="rgb(241,128,51)" fg:x="205" fg:w="1"/><text x="5.2451%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.0195%" y="357" width="0.0244%" height="15" fill="rgb(227,165,31)" fg:x="206" fg:w="1"/><text x="5.2695%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.0195%" y="341" width="0.0244%" height="15" fill="rgb(228,167,24)" fg:x="206" fg:w="1"/><text x="5.2695%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.0439%" y="341" width="0.0244%" height="15" fill="rgb(228,143,12)" fg:x="207" fg:w="1"/><text x="5.2939%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="5.0682%" y="309" width="0.0244%" height="15" fill="rgb(249,149,8)" fg:x="208" fg:w="1"/><text x="5.3182%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.0682%" y="293" width="0.0244%" height="15" fill="rgb(243,35,44)" fg:x="208" fg:w="1"/><text x="5.3182%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.0926%" y="293" width="0.0244%" height="15" fill="rgb(246,89,9)" fg:x="209" fg:w="1"/><text x="5.3426%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.1170%" y="277" width="0.0244%" height="15" fill="rgb(233,213,13)" fg:x="210" fg:w="1"/><text x="5.3670%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.1657%" y="245" width="0.0244%" height="15" fill="rgb(233,141,41)" fg:x="212" fg:w="1"/><text x="5.4157%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.1901%" y="229" width="0.0244%" height="15" fill="rgb(239,167,4)" fg:x="213" fg:w="1"/><text x="5.4401%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.1901%" y="213" width="0.0244%" height="15" fill="rgb(209,217,16)" fg:x="213" fg:w="1"/><text x="5.4401%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.2144%" y="213" width="0.0244%" height="15" fill="rgb(219,88,35)" fg:x="214" fg:w="1"/><text x="5.4644%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="5.2388%" y="181" width="0.0487%" height="15" fill="rgb(220,193,23)" fg:x="215" fg:w="2"/><text x="5.4888%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.32%)</title><rect x="4.9951%" y="469" width="0.3168%" height="15" fill="rgb(230,90,52)" fg:x="205" fg:w="13"/><text x="5.2451%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (13 samples, 0.32%)</title><rect x="4.9951%" y="453" width="0.3168%" height="15" fill="rgb(252,106,19)" fg:x="205" fg:w="13"/><text x="5.2451%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (13 samples, 0.32%)</title><rect x="4.9951%" y="437" width="0.3168%" height="15" fill="rgb(206,74,20)" fg:x="205" fg:w="13"/><text x="5.2451%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="5.0195%" y="421" width="0.2924%" height="15" fill="rgb(230,138,44)" fg:x="206" fg:w="12"/><text x="5.2695%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="5.0195%" y="405" width="0.2924%" height="15" fill="rgb(235,182,43)" fg:x="206" fg:w="12"/><text x="5.2695%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="5.0195%" y="389" width="0.2924%" height="15" fill="rgb(242,16,51)" fg:x="206" fg:w="12"/><text x="5.2695%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (12 samples, 0.29%)</title><rect x="5.0195%" y="373" width="0.2924%" height="15" fill="rgb(248,9,4)" fg:x="206" fg:w="12"/><text x="5.2695%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (11 samples, 0.27%)</title><rect x="5.0439%" y="357" width="0.2680%" height="15" fill="rgb(210,31,22)" fg:x="207" fg:w="11"/><text x="5.2939%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (10 samples, 0.24%)</title><rect x="5.0682%" y="341" width="0.2437%" height="15" fill="rgb(239,54,39)" fg:x="208" fg:w="10"/><text x="5.3182%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (10 samples, 0.24%)</title><rect x="5.0682%" y="325" width="0.2437%" height="15" fill="rgb(230,99,41)" fg:x="208" fg:w="10"/><text x="5.3182%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (9 samples, 0.22%)</title><rect x="5.0926%" y="309" width="0.2193%" height="15" fill="rgb(253,106,12)" fg:x="209" fg:w="9"/><text x="5.3426%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (8 samples, 0.19%)</title><rect x="5.1170%" y="293" width="0.1949%" height="15" fill="rgb(213,46,41)" fg:x="210" fg:w="8"/><text x="5.3670%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="5.1413%" y="277" width="0.1706%" height="15" fill="rgb(215,133,35)" fg:x="211" fg:w="7"/><text x="5.3913%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (6 samples, 0.15%)</title><rect x="5.1657%" y="261" width="0.1462%" height="15" fill="rgb(213,28,5)" fg:x="212" fg:w="6"/><text x="5.4157%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="5.1901%" y="245" width="0.1218%" height="15" fill="rgb(215,77,49)" fg:x="213" fg:w="5"/><text x="5.4401%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="5.2144%" y="229" width="0.0975%" height="15" fill="rgb(248,100,22)" fg:x="214" fg:w="4"/><text x="5.4644%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="5.2388%" y="213" width="0.0731%" height="15" fill="rgb(208,67,9)" fg:x="215" fg:w="3"/><text x="5.4888%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="5.2388%" y="197" width="0.0731%" height="15" fill="rgb(219,133,21)" fg:x="215" fg:w="3"/><text x="5.4888%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.2875%" y="181" width="0.0244%" height="15" fill="rgb(246,46,29)" fg:x="217" fg:w="1"/><text x="5.5375%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.2875%" y="165" width="0.0244%" height="15" fill="rgb(246,185,52)" fg:x="217" fg:w="1"/><text x="5.5375%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="5.5068%" y="437" width="0.0244%" height="15" fill="rgb(252,136,11)" fg:x="226" fg:w="1"/><text x="5.7568%" y="447.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (13 samples, 0.32%)</title><rect x="5.3119%" y="469" width="0.3168%" height="15" fill="rgb(219,138,53)" fg:x="218" fg:w="13"/><text x="5.5619%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.32%)</title><rect x="5.3119%" y="453" width="0.3168%" height="15" fill="rgb(211,51,23)" fg:x="218" fg:w="13"/><text x="5.5619%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="5.5312%" y="437" width="0.0975%" height="15" fill="rgb(247,221,28)" fg:x="227" fg:w="4"/><text x="5.7812%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.6287%" y="469" width="0.0244%" height="15" fill="rgb(251,222,45)" fg:x="231" fg:w="1"/><text x="5.8787%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="5.7749%" y="453" width="0.0244%" height="15" fill="rgb(217,162,53)" fg:x="237" fg:w="1"/><text x="6.0249%" y="463.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="5.7992%" y="453" width="0.0487%" height="15" fill="rgb(229,93,14)" fg:x="238" fg:w="2"/><text x="6.0492%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="5.7992%" y="437" width="0.0487%" height="15" fill="rgb(209,67,49)" fg:x="238" fg:w="2"/><text x="6.0492%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.8236%" y="421" width="0.0244%" height="15" fill="rgb(213,87,29)" fg:x="239" fg:w="1"/><text x="6.0736%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.8236%" y="405" width="0.0244%" height="15" fill="rgb(205,151,52)" fg:x="239" fg:w="1"/><text x="6.0736%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.8236%" y="389" width="0.0244%" height="15" fill="rgb(253,215,39)" fg:x="239" fg:w="1"/><text x="6.0736%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.8236%" y="373" width="0.0244%" height="15" fill="rgb(221,220,41)" fg:x="239" fg:w="1"/><text x="6.0736%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="5.8236%" y="357" width="0.0244%" height="15" fill="rgb(218,133,21)" fg:x="239" fg:w="1"/><text x="6.0736%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="5.8236%" y="341" width="0.0244%" height="15" fill="rgb(221,193,43)" fg:x="239" fg:w="1"/><text x="6.0736%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.8236%" y="325" width="0.0244%" height="15" fill="rgb(240,128,52)" fg:x="239" fg:w="1"/><text x="6.0736%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.8236%" y="309" width="0.0244%" height="15" fill="rgb(253,114,12)" fg:x="239" fg:w="1"/><text x="6.0736%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.19%)</title><rect x="5.8967%" y="437" width="0.1949%" height="15" fill="rgb(215,223,47)" fg:x="242" fg:w="8"/><text x="6.1467%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.12%)</title><rect x="5.9698%" y="421" width="0.1218%" height="15" fill="rgb(248,225,23)" fg:x="245" fg:w="5"/><text x="6.2198%" y="431.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.27%)</title><rect x="5.8480%" y="453" width="0.2680%" height="15" fill="rgb(250,108,0)" fg:x="240" fg:w="11"/><text x="6.0980%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="6.0916%" y="437" width="0.0244%" height="15" fill="rgb(228,208,7)" fg:x="250" fg:w="1"/><text x="6.3416%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="6.2135%" y="293" width="0.0244%" height="15" fill="rgb(244,45,10)" fg:x="255" fg:w="1"/><text x="6.4635%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="6.2135%" y="277" width="0.0244%" height="15" fill="rgb(207,125,25)" fg:x="255" fg:w="1"/><text x="6.4635%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="6.2135%" y="261" width="0.0244%" height="15" fill="rgb(210,195,18)" fg:x="255" fg:w="1"/><text x="6.4635%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="6.2378%" y="197" width="0.0244%" height="15" fill="rgb(249,80,12)" fg:x="256" fg:w="1"/><text x="6.4878%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="6.4084%" y="181" width="0.0731%" height="15" fill="rgb(221,65,9)" fg:x="263" fg:w="3"/><text x="6.6584%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (12 samples, 0.29%)</title><rect x="6.2378%" y="229" width="0.2924%" height="15" fill="rgb(235,49,36)" fg:x="256" fg:w="12"/><text x="6.4878%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.29%)</title><rect x="6.2378%" y="213" width="0.2924%" height="15" fill="rgb(225,32,20)" fg:x="256" fg:w="12"/><text x="6.4878%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.27%)</title><rect x="6.2622%" y="197" width="0.2680%" height="15" fill="rgb(215,141,46)" fg:x="257" fg:w="11"/><text x="6.5122%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="6.4815%" y="181" width="0.0487%" height="15" fill="rgb(250,160,47)" fg:x="266" fg:w="2"/><text x="6.7315%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="6.5302%" y="213" width="0.0244%" height="15" fill="rgb(216,222,40)" fg:x="268" fg:w="1"/><text x="6.7802%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.41%)</title><rect x="6.1647%" y="437" width="0.4142%" height="15" fill="rgb(234,217,39)" fg:x="253" fg:w="17"/><text x="6.4147%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="421" width="0.4142%" height="15" fill="rgb(207,178,40)" fg:x="253" fg:w="17"/><text x="6.4147%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="405" width="0.4142%" height="15" fill="rgb(221,136,13)" fg:x="253" fg:w="17"/><text x="6.4147%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="389" width="0.4142%" height="15" fill="rgb(249,199,10)" fg:x="253" fg:w="17"/><text x="6.4147%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="373" width="0.4142%" height="15" fill="rgb(249,222,13)" fg:x="253" fg:w="17"/><text x="6.4147%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="357" width="0.4142%" height="15" fill="rgb(244,185,38)" fg:x="253" fg:w="17"/><text x="6.4147%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="341" width="0.4142%" height="15" fill="rgb(236,202,9)" fg:x="253" fg:w="17"/><text x="6.4147%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (17 samples, 0.41%)</title><rect x="6.1647%" y="325" width="0.4142%" height="15" fill="rgb(250,229,37)" fg:x="253" fg:w="17"/><text x="6.4147%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (16 samples, 0.39%)</title><rect x="6.1891%" y="309" width="0.3899%" height="15" fill="rgb(206,174,23)" fg:x="254" fg:w="16"/><text x="6.4391%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="6.2378%" y="293" width="0.3411%" height="15" fill="rgb(211,33,43)" fg:x="256" fg:w="14"/><text x="6.4878%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="6.2378%" y="277" width="0.3411%" height="15" fill="rgb(245,58,50)" fg:x="256" fg:w="14"/><text x="6.4878%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="6.2378%" y="261" width="0.3411%" height="15" fill="rgb(244,68,36)" fg:x="256" fg:w="14"/><text x="6.4878%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="6.2378%" y="245" width="0.3411%" height="15" fill="rgb(232,229,15)" fg:x="256" fg:w="14"/><text x="6.4878%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="6.5302%" y="229" width="0.0487%" height="15" fill="rgb(254,30,23)" fg:x="268" fg:w="2"/><text x="6.7802%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="6.5546%" y="213" width="0.0244%" height="15" fill="rgb(235,160,14)" fg:x="269" fg:w="1"/><text x="6.8046%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="6.5546%" y="197" width="0.0244%" height="15" fill="rgb(212,155,44)" fg:x="269" fg:w="1"/><text x="6.8046%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="6.5546%" y="181" width="0.0244%" height="15" fill="rgb(226,2,50)" fg:x="269" fg:w="1"/><text x="6.8046%" y="191.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.34%)</title><rect x="6.5789%" y="437" width="0.3411%" height="15" fill="rgb(234,177,6)" fg:x="270" fg:w="14"/><text x="6.8289%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.34%)</title><rect x="6.5789%" y="421" width="0.3411%" height="15" fill="rgb(217,24,9)" fg:x="270" fg:w="14"/><text x="6.8289%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.24%)</title><rect x="6.6764%" y="405" width="0.2437%" height="15" fill="rgb(220,13,46)" fg:x="274" fg:w="10"/><text x="6.9264%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="6.8957%" y="389" width="0.0244%" height="15" fill="rgb(239,221,27)" fg:x="283" fg:w="1"/><text x="7.1457%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="6.8957%" y="373" width="0.0244%" height="15" fill="rgb(222,198,25)" fg:x="283" fg:w="1"/><text x="7.1457%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="7.0175%" y="421" width="0.0244%" height="15" fill="rgb(211,99,13)" fg:x="288" fg:w="1"/><text x="7.2675%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.0663%" y="309" width="0.0244%" height="15" fill="rgb(232,111,31)" fg:x="290" fg:w="1"/><text x="7.3163%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.0906%" y="293" width="0.0244%" height="15" fill="rgb(245,82,37)" fg:x="291" fg:w="1"/><text x="7.3406%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="7.0906%" y="277" width="0.0244%" height="15" fill="rgb(227,149,46)" fg:x="291" fg:w="1"/><text x="7.3406%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.12%)</title><rect x="7.0419%" y="421" width="0.1218%" height="15" fill="rgb(218,36,50)" fg:x="289" fg:w="5"/><text x="7.2919%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="7.0419%" y="405" width="0.1218%" height="15" fill="rgb(226,80,48)" fg:x="289" fg:w="5"/><text x="7.2919%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="7.0419%" y="389" width="0.1218%" height="15" fill="rgb(238,224,15)" fg:x="289" fg:w="5"/><text x="7.2919%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="7.0419%" y="373" width="0.1218%" height="15" fill="rgb(241,136,10)" fg:x="289" fg:w="5"/><text x="7.2919%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="7.0419%" y="357" width="0.1218%" height="15" fill="rgb(208,32,45)" fg:x="289" fg:w="5"/><text x="7.2919%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.0663%" y="341" width="0.0975%" height="15" fill="rgb(207,135,9)" fg:x="290" fg:w="4"/><text x="7.3163%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.0663%" y="325" width="0.0975%" height="15" fill="rgb(206,86,44)" fg:x="290" fg:w="4"/><text x="7.3163%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.0906%" y="309" width="0.0731%" height="15" fill="rgb(245,177,15)" fg:x="291" fg:w="3"/><text x="7.3406%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.1150%" y="293" width="0.0487%" height="15" fill="rgb(206,64,50)" fg:x="292" fg:w="2"/><text x="7.3650%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.1394%" y="277" width="0.0244%" height="15" fill="rgb(234,36,40)" fg:x="293" fg:w="1"/><text x="7.3894%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.1394%" y="261" width="0.0244%" height="15" fill="rgb(213,64,8)" fg:x="293" fg:w="1"/><text x="7.3894%" y="271.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.22%)</title><rect x="7.1637%" y="421" width="0.2193%" height="15" fill="rgb(210,75,36)" fg:x="294" fg:w="9"/><text x="7.4137%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.19%)</title><rect x="7.1881%" y="405" width="0.1949%" height="15" fill="rgb(229,88,21)" fg:x="295" fg:w="8"/><text x="7.4381%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="7.3343%" y="389" width="0.0487%" height="15" fill="rgb(252,204,47)" fg:x="301" fg:w="2"/><text x="7.5843%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="7.3587%" y="373" width="0.0244%" height="15" fill="rgb(208,77,27)" fg:x="302" fg:w="1"/><text x="7.6087%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.02%)</title><rect x="7.3587%" y="357" width="0.0244%" height="15" fill="rgb(221,76,26)" fg:x="302" fg:w="1"/><text x="7.6087%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.4561%" y="261" width="0.0244%" height="15" fill="rgb(225,139,18)" fg:x="306" fg:w="1"/><text x="7.7061%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.10%)</title><rect x="7.4074%" y="405" width="0.0975%" height="15" fill="rgb(230,137,11)" fg:x="304" fg:w="4"/><text x="7.6574%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.4318%" y="389" width="0.0731%" height="15" fill="rgb(212,28,1)" fg:x="305" fg:w="3"/><text x="7.6818%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.4318%" y="373" width="0.0731%" height="15" fill="rgb(248,164,17)" fg:x="305" fg:w="3"/><text x="7.6818%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.4318%" y="357" width="0.0731%" height="15" fill="rgb(222,171,42)" fg:x="305" fg:w="3"/><text x="7.6818%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.4561%" y="341" width="0.0487%" height="15" fill="rgb(243,84,45)" fg:x="306" fg:w="2"/><text x="7.7061%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.4561%" y="325" width="0.0487%" height="15" fill="rgb(252,49,23)" fg:x="306" fg:w="2"/><text x="7.7061%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.4561%" y="309" width="0.0487%" height="15" fill="rgb(215,19,7)" fg:x="306" fg:w="2"/><text x="7.7061%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.4561%" y="293" width="0.0487%" height="15" fill="rgb(238,81,41)" fg:x="306" fg:w="2"/><text x="7.7061%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.4561%" y="277" width="0.0487%" height="15" fill="rgb(210,199,37)" fg:x="306" fg:w="2"/><text x="7.7061%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="261" width="0.0244%" height="15" fill="rgb(244,192,49)" fg:x="307" fg:w="1"/><text x="7.7305%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="245" width="0.0244%" height="15" fill="rgb(226,211,11)" fg:x="307" fg:w="1"/><text x="7.7305%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="229" width="0.0244%" height="15" fill="rgb(236,162,54)" fg:x="307" fg:w="1"/><text x="7.7305%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="213" width="0.0244%" height="15" fill="rgb(220,229,9)" fg:x="307" fg:w="1"/><text x="7.7305%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="197" width="0.0244%" height="15" fill="rgb(250,87,22)" fg:x="307" fg:w="1"/><text x="7.7305%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.4805%" y="181" width="0.0244%" height="15" fill="rgb(239,43,17)" fg:x="307" fg:w="1"/><text x="7.7305%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.4805%" y="165" width="0.0244%" height="15" fill="rgb(231,177,25)" fg:x="307" fg:w="1"/><text x="7.7305%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="7.5049%" y="405" width="0.0244%" height="15" fill="rgb(219,179,1)" fg:x="308" fg:w="1"/><text x="7.7549%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.5049%" y="389" width="0.0244%" height="15" fill="rgb(238,219,53)" fg:x="308" fg:w="1"/><text x="7.7549%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.5049%" y="373" width="0.0244%" height="15" fill="rgb(232,167,36)" fg:x="308" fg:w="1"/><text x="7.7549%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.5049%" y="357" width="0.0244%" height="15" fill="rgb(244,19,51)" fg:x="308" fg:w="1"/><text x="7.7549%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.5049%" y="341" width="0.0244%" height="15" fill="rgb(224,6,22)" fg:x="308" fg:w="1"/><text x="7.7549%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="7.5536%" y="389" width="0.1706%" height="15" fill="rgb(224,145,5)" fg:x="310" fg:w="7"/><text x="7.8036%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="7.6267%" y="373" width="0.0975%" height="15" fill="rgb(234,130,49)" fg:x="313" fg:w="4"/><text x="7.8767%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="7.6998%" y="357" width="0.0244%" height="15" fill="rgb(254,6,2)" fg:x="316" fg:w="1"/><text x="7.9498%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="7.6998%" y="341" width="0.0244%" height="15" fill="rgb(208,96,46)" fg:x="316" fg:w="1"/><text x="7.9498%" y="351.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.22%)</title><rect x="7.5292%" y="405" width="0.2193%" height="15" fill="rgb(239,3,39)" fg:x="309" fg:w="9"/><text x="7.7792%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="7.7242%" y="389" width="0.0244%" height="15" fill="rgb(233,210,1)" fg:x="317" fg:w="1"/><text x="7.9742%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="7.7242%" y="373" width="0.0244%" height="15" fill="rgb(244,137,37)" fg:x="317" fg:w="1"/><text x="7.9742%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="7.7242%" y="357" width="0.0244%" height="15" fill="rgb(240,136,2)" fg:x="317" fg:w="1"/><text x="7.9742%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="7.7485%" y="373" width="0.0244%" height="15" fill="rgb(239,18,37)" fg:x="318" fg:w="1"/><text x="7.9985%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.7729%" y="357" width="0.0244%" height="15" fill="rgb(218,185,22)" fg:x="319" fg:w="1"/><text x="8.0229%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="7.7973%" y="357" width="0.0487%" height="15" fill="rgb(225,218,4)" fg:x="320" fg:w="2"/><text x="8.0473%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="7.7973%" y="341" width="0.0487%" height="15" fill="rgb(230,182,32)" fg:x="320" fg:w="2"/><text x="8.0473%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.8704%" y="245" width="0.0244%" height="15" fill="rgb(242,56,43)" fg:x="323" fg:w="1"/><text x="8.1204%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.8704%" y="229" width="0.0244%" height="15" fill="rgb(233,99,24)" fg:x="323" fg:w="1"/><text x="8.1204%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.8947%" y="213" width="0.0244%" height="15" fill="rgb(234,209,42)" fg:x="324" fg:w="1"/><text x="8.1447%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.19%)</title><rect x="7.7485%" y="389" width="0.1949%" height="15" fill="rgb(227,7,12)" fg:x="318" fg:w="8"/><text x="7.9985%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="7.7729%" y="373" width="0.1706%" height="15" fill="rgb(245,203,43)" fg:x="319" fg:w="7"/><text x="8.0229%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.8460%" y="357" width="0.0975%" height="15" fill="rgb(238,205,33)" fg:x="322" fg:w="4"/><text x="8.0960%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.8460%" y="341" width="0.0975%" height="15" fill="rgb(231,56,7)" fg:x="322" fg:w="4"/><text x="8.0960%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.8460%" y="325" width="0.0975%" height="15" fill="rgb(244,186,29)" fg:x="322" fg:w="4"/><text x="8.0960%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="7.8460%" y="309" width="0.0975%" height="15" fill="rgb(234,111,31)" fg:x="322" fg:w="4"/><text x="8.0960%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.8704%" y="293" width="0.0731%" height="15" fill="rgb(241,149,10)" fg:x="323" fg:w="3"/><text x="8.1204%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.8704%" y="277" width="0.0731%" height="15" fill="rgb(249,206,44)" fg:x="323" fg:w="3"/><text x="8.1204%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="7.8704%" y="261" width="0.0731%" height="15" fill="rgb(251,153,30)" fg:x="323" fg:w="3"/><text x="8.1204%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.8947%" y="245" width="0.0487%" height="15" fill="rgb(239,152,38)" fg:x="324" fg:w="2"/><text x="8.1447%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="7.8947%" y="229" width="0.0487%" height="15" fill="rgb(249,139,47)" fg:x="324" fg:w="2"/><text x="8.1447%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.9191%" y="213" width="0.0244%" height="15" fill="rgb(244,64,35)" fg:x="325" fg:w="1"/><text x="8.1691%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.9191%" y="197" width="0.0244%" height="15" fill="rgb(216,46,15)" fg:x="325" fg:w="1"/><text x="8.1691%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.9191%" y="181" width="0.0244%" height="15" fill="rgb(250,74,19)" fg:x="325" fg:w="1"/><text x="8.1691%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.9191%" y="165" width="0.0244%" height="15" fill="rgb(249,42,33)" fg:x="325" fg:w="1"/><text x="8.1691%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="7.9191%" y="149" width="0.0244%" height="15" fill="rgb(242,149,17)" fg:x="325" fg:w="1"/><text x="8.1691%" y="159.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="7.9191%" y="133" width="0.0244%" height="15" fill="rgb(244,29,21)" fg:x="325" fg:w="1"/><text x="8.1691%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="7.9191%" y="117" width="0.0244%" height="15" fill="rgb(220,130,37)" fg:x="325" fg:w="1"/><text x="8.1691%" y="127.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.22%)</title><rect x="7.9435%" y="389" width="0.2193%" height="15" fill="rgb(211,67,2)" fg:x="326" fg:w="9"/><text x="8.1935%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="7.9922%" y="373" width="0.1706%" height="15" fill="rgb(235,68,52)" fg:x="328" fg:w="7"/><text x="8.2422%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="8.0166%" y="357" width="0.1462%" height="15" fill="rgb(246,142,3)" fg:x="329" fg:w="6"/><text x="8.2666%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="8.2602%" y="373" width="0.0244%" height="15" fill="rgb(241,25,7)" fg:x="339" fg:w="1"/><text x="8.5102%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="8.2602%" y="357" width="0.0244%" height="15" fill="rgb(242,119,39)" fg:x="339" fg:w="1"/><text x="8.5102%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="8.3090%" y="357" width="0.0244%" height="15" fill="rgb(241,98,45)" fg:x="341" fg:w="1"/><text x="8.5590%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="8.3090%" y="341" width="0.0244%" height="15" fill="rgb(254,28,30)" fg:x="341" fg:w="1"/><text x="8.5590%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="8.3090%" y="325" width="0.0244%" height="15" fill="rgb(241,142,54)" fg:x="341" fg:w="1"/><text x="8.5590%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="8.3333%" y="325" width="0.0244%" height="15" fill="rgb(222,85,15)" fg:x="342" fg:w="1"/><text x="8.5833%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="8.3577%" y="277" width="0.0244%" height="15" fill="rgb(210,85,47)" fg:x="343" fg:w="1"/><text x="8.6077%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="8.3577%" y="261" width="0.0244%" height="15" fill="rgb(224,206,25)" fg:x="343" fg:w="1"/><text x="8.6077%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="8.3577%" y="245" width="0.0244%" height="15" fill="rgb(243,201,19)" fg:x="343" fg:w="1"/><text x="8.6077%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.02%)</title><rect x="8.3577%" y="229" width="0.0244%" height="15" fill="rgb(236,59,4)" fg:x="343" fg:w="1"/><text x="8.6077%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="8.3577%" y="213" width="0.0244%" height="15" fill="rgb(254,179,45)" fg:x="343" fg:w="1"/><text x="8.6077%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="8.3577%" y="197" width="0.0244%" height="15" fill="rgb(226,14,10)" fg:x="343" fg:w="1"/><text x="8.6077%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.02%)</title><rect x="8.3577%" y="181" width="0.0244%" height="15" fill="rgb(244,27,41)" fg:x="343" fg:w="1"/><text x="8.6077%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.02%)</title><rect x="8.3577%" y="165" width="0.0244%" height="15" fill="rgb(235,35,32)" fg:x="343" fg:w="1"/><text x="8.6077%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="8.4064%" y="213" width="0.0244%" height="15" fill="rgb(218,68,31)" fg:x="345" fg:w="1"/><text x="8.6564%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="8.4064%" y="197" width="0.0244%" height="15" fill="rgb(207,120,37)" fg:x="345" fg:w="1"/><text x="8.6564%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.17%)</title><rect x="8.2846%" y="373" width="0.1706%" height="15" fill="rgb(227,98,0)" fg:x="340" fg:w="7"/><text x="8.5346%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.3333%" y="357" width="0.1218%" height="15" fill="rgb(207,7,3)" fg:x="342" fg:w="5"/><text x="8.5833%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.3333%" y="341" width="0.1218%" height="15" fill="rgb(206,98,19)" fg:x="342" fg:w="5"/><text x="8.5833%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="8.3577%" y="325" width="0.0975%" height="15" fill="rgb(217,5,26)" fg:x="343" fg:w="4"/><text x="8.6077%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="8.3577%" y="309" width="0.0975%" height="15" fill="rgb(235,190,38)" fg:x="343" fg:w="4"/><text x="8.6077%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="8.3577%" y="293" width="0.0975%" height="15" fill="rgb(247,86,24)" fg:x="343" fg:w="4"/><text x="8.6077%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.3821%" y="277" width="0.0731%" height="15" fill="rgb(205,101,16)" fg:x="344" fg:w="3"/><text x="8.6321%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="8.4064%" y="261" width="0.0487%" height="15" fill="rgb(246,168,33)" fg:x="345" fg:w="2"/><text x="8.6564%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="8.4064%" y="245" width="0.0487%" height="15" fill="rgb(231,114,1)" fg:x="345" fg:w="2"/><text x="8.6564%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="8.4064%" y="229" width="0.0487%" height="15" fill="rgb(207,184,53)" fg:x="345" fg:w="2"/><text x="8.6564%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.4308%" y="213" width="0.0244%" height="15" fill="rgb(224,95,51)" fg:x="346" fg:w="1"/><text x="8.6808%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.4308%" y="197" width="0.0244%" height="15" fill="rgb(212,188,45)" fg:x="346" fg:w="1"/><text x="8.6808%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.4308%" y="181" width="0.0244%" height="15" fill="rgb(223,154,38)" fg:x="346" fg:w="1"/><text x="8.6808%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="8.4552%" y="309" width="0.0244%" height="15" fill="rgb(251,22,52)" fg:x="347" fg:w="1"/><text x="8.7052%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="8.4795%" y="277" width="0.0244%" height="15" fill="rgb(229,209,22)" fg:x="348" fg:w="1"/><text x="8.7295%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="8.4552%" y="373" width="0.0731%" height="15" fill="rgb(234,138,34)" fg:x="347" fg:w="3"/><text x="8.7052%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.4552%" y="357" width="0.0731%" height="15" fill="rgb(212,95,11)" fg:x="347" fg:w="3"/><text x="8.7052%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.4552%" y="341" width="0.0731%" height="15" fill="rgb(240,179,47)" fg:x="347" fg:w="3"/><text x="8.7052%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="8.4552%" y="325" width="0.0731%" height="15" fill="rgb(240,163,11)" fg:x="347" fg:w="3"/><text x="8.7052%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="8.4795%" y="309" width="0.0487%" height="15" fill="rgb(236,37,12)" fg:x="348" fg:w="2"/><text x="8.7295%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="8.4795%" y="293" width="0.0487%" height="15" fill="rgb(232,164,16)" fg:x="348" fg:w="2"/><text x="8.7295%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="8.5039%" y="277" width="0.0244%" height="15" fill="rgb(244,205,15)" fg:x="349" fg:w="1"/><text x="8.7539%" y="287.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8 samples, 0.19%)</title><rect x="8.5283%" y="373" width="0.1949%" height="15" fill="rgb(223,117,47)" fg:x="350" fg:w="8"/><text x="8.7783%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="8.6014%" y="357" width="0.1218%" height="15" fill="rgb(244,107,35)" fg:x="353" fg:w="5"/><text x="8.8514%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="8.6745%" y="341" width="0.0487%" height="15" fill="rgb(205,140,8)" fg:x="356" fg:w="2"/><text x="8.9245%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="8.7719%" y="357" width="0.0244%" height="15" fill="rgb(228,84,46)" fg:x="360" fg:w="1"/><text x="9.0219%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="8.8207%" y="341" width="0.0487%" height="15" fill="rgb(254,188,9)" fg:x="362" fg:w="2"/><text x="9.0707%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="8.8207%" y="325" width="0.0487%" height="15" fill="rgb(206,112,54)" fg:x="362" fg:w="2"/><text x="9.0707%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.02%)</title><rect x="8.8450%" y="309" width="0.0244%" height="15" fill="rgb(216,84,49)" fg:x="363" fg:w="1"/><text x="9.0950%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="8.8450%" y="293" width="0.0244%" height="15" fill="rgb(214,194,35)" fg:x="363" fg:w="1"/><text x="9.0950%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="8.8450%" y="277" width="0.0244%" height="15" fill="rgb(249,28,3)" fg:x="363" fg:w="1"/><text x="9.0950%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="8.8938%" y="229" width="0.0244%" height="15" fill="rgb(222,56,52)" fg:x="365" fg:w="1"/><text x="9.1438%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="8.8938%" y="213" width="0.0244%" height="15" fill="rgb(245,217,50)" fg:x="365" fg:w="1"/><text x="9.1438%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="8.8938%" y="197" width="0.0244%" height="15" fill="rgb(213,201,24)" fg:x="365" fg:w="1"/><text x="9.1438%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.19%)</title><rect x="8.7963%" y="357" width="0.1949%" height="15" fill="rgb(248,116,28)" fg:x="361" fg:w="8"/><text x="9.0463%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="341" width="0.1218%" height="15" fill="rgb(219,72,43)" fg:x="364" fg:w="5"/><text x="9.1194%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="325" width="0.1218%" height="15" fill="rgb(209,138,14)" fg:x="364" fg:w="5"/><text x="9.1194%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="309" width="0.1218%" height="15" fill="rgb(222,18,33)" fg:x="364" fg:w="5"/><text x="9.1194%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="293" width="0.1218%" height="15" fill="rgb(213,199,7)" fg:x="364" fg:w="5"/><text x="9.1194%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="277" width="0.1218%" height="15" fill="rgb(250,110,10)" fg:x="364" fg:w="5"/><text x="9.1194%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="261" width="0.1218%" height="15" fill="rgb(248,123,6)" fg:x="364" fg:w="5"/><text x="9.1194%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="8.8694%" y="245" width="0.1218%" height="15" fill="rgb(206,91,31)" fg:x="364" fg:w="5"/><text x="9.1194%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9181%" y="229" width="0.0731%" height="15" fill="rgb(211,154,13)" fg:x="366" fg:w="3"/><text x="9.1681%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="213" width="0.0244%" height="15" fill="rgb(225,148,7)" fg:x="368" fg:w="1"/><text x="9.2169%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="197" width="0.0244%" height="15" fill="rgb(220,160,43)" fg:x="368" fg:w="1"/><text x="9.2169%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="181" width="0.0244%" height="15" fill="rgb(213,52,39)" fg:x="368" fg:w="1"/><text x="9.2169%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="165" width="0.0244%" height="15" fill="rgb(243,137,7)" fg:x="368" fg:w="1"/><text x="9.2169%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="149" width="0.0244%" height="15" fill="rgb(230,79,13)" fg:x="368" fg:w="1"/><text x="9.2169%" y="159.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="133" width="0.0244%" height="15" fill="rgb(247,105,23)" fg:x="368" fg:w="1"/><text x="9.2169%" y="143.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="117" width="0.0244%" height="15" fill="rgb(223,179,41)" fg:x="368" fg:w="1"/><text x="9.2169%" y="127.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="8.9669%" y="101" width="0.0244%" height="15" fill="rgb(218,9,34)" fg:x="368" fg:w="1"/><text x="9.2169%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="9.0156%" y="261" width="0.0244%" height="15" fill="rgb(222,106,8)" fg:x="370" fg:w="1"/><text x="9.2656%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.0156%" y="245" width="0.0244%" height="15" fill="rgb(211,220,0)" fg:x="370" fg:w="1"/><text x="9.2656%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="8.9912%" y="357" width="0.0731%" height="15" fill="rgb(229,52,16)" fg:x="369" fg:w="3"/><text x="9.2412%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9912%" y="341" width="0.0731%" height="15" fill="rgb(212,155,18)" fg:x="369" fg:w="3"/><text x="9.2412%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9912%" y="325" width="0.0731%" height="15" fill="rgb(242,21,14)" fg:x="369" fg:w="3"/><text x="9.2412%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9912%" y="309" width="0.0731%" height="15" fill="rgb(222,19,48)" fg:x="369" fg:w="3"/><text x="9.2412%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9912%" y="293" width="0.0731%" height="15" fill="rgb(232,45,27)" fg:x="369" fg:w="3"/><text x="9.2412%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="8.9912%" y="277" width="0.0731%" height="15" fill="rgb(249,103,42)" fg:x="369" fg:w="3"/><text x="9.2412%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="9.0400%" y="261" width="0.0244%" height="15" fill="rgb(246,81,33)" fg:x="371" fg:w="1"/><text x="9.2900%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="9.0400%" y="245" width="0.0244%" height="15" fill="rgb(252,33,42)" fg:x="371" fg:w="1"/><text x="9.2900%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.0400%" y="229" width="0.0244%" height="15" fill="rgb(209,212,41)" fg:x="371" fg:w="1"/><text x="9.2900%" y="239.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.29%)</title><rect x="9.0643%" y="357" width="0.2924%" height="15" fill="rgb(207,154,6)" fg:x="372" fg:w="12"/><text x="9.3143%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.27%)</title><rect x="9.0887%" y="341" width="0.2680%" height="15" fill="rgb(223,64,47)" fg:x="373" fg:w="11"/><text x="9.3387%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.12%)</title><rect x="9.2349%" y="325" width="0.1218%" height="15" fill="rgb(211,161,38)" fg:x="379" fg:w="5"/><text x="9.4849%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="9.4542%" y="341" width="0.0244%" height="15" fill="rgb(219,138,40)" fg:x="388" fg:w="1"/><text x="9.7042%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="9.4786%" y="341" width="0.0244%" height="15" fill="rgb(241,228,46)" fg:x="389" fg:w="1"/><text x="9.7286%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.5273%" y="309" width="0.0244%" height="15" fill="rgb(223,209,38)" fg:x="391" fg:w="1"/><text x="9.7773%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="9.5517%" y="309" width="0.0244%" height="15" fill="rgb(236,164,45)" fg:x="392" fg:w="1"/><text x="9.8017%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="9.5760%" y="293" width="0.0244%" height="15" fill="rgb(231,15,5)" fg:x="393" fg:w="1"/><text x="9.8260%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.5760%" y="277" width="0.0244%" height="15" fill="rgb(252,35,15)" fg:x="393" fg:w="1"/><text x="9.8260%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="9.6004%" y="277" width="0.0244%" height="15" fill="rgb(248,181,18)" fg:x="394" fg:w="1"/><text x="9.8504%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.6248%" y="261" width="0.0244%" height="15" fill="rgb(233,39,42)" fg:x="395" fg:w="1"/><text x="9.8748%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.24%)</title><rect x="9.5029%" y="341" width="0.2437%" height="15" fill="rgb(238,110,33)" fg:x="390" fg:w="10"/><text x="9.7529%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (9 samples, 0.22%)</title><rect x="9.5273%" y="325" width="0.2193%" height="15" fill="rgb(233,195,10)" fg:x="391" fg:w="9"/><text x="9.7773%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="9.5760%" y="309" width="0.1706%" height="15" fill="rgb(254,105,3)" fg:x="393" fg:w="7"/><text x="9.8260%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (6 samples, 0.15%)</title><rect x="9.6004%" y="293" width="0.1462%" height="15" fill="rgb(221,225,9)" fg:x="394" fg:w="6"/><text x="9.8504%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="9.6248%" y="277" width="0.1218%" height="15" fill="rgb(224,227,45)" fg:x="395" fg:w="5"/><text x="9.8748%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="9.6491%" y="261" width="0.0975%" height="15" fill="rgb(229,198,43)" fg:x="396" fg:w="4"/><text x="9.8991%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="9.6491%" y="245" width="0.0975%" height="15" fill="rgb(206,209,35)" fg:x="396" fg:w="4"/><text x="9.8991%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="9.6979%" y="229" width="0.0487%" height="15" fill="rgb(245,195,53)" fg:x="398" fg:w="2"/><text x="9.9479%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="9.7222%" y="213" width="0.0244%" height="15" fill="rgb(240,92,26)" fg:x="399" fg:w="1"/><text x="9.9722%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="9.7222%" y="197" width="0.0244%" height="15" fill="rgb(207,40,23)" fg:x="399" fg:w="1"/><text x="9.9722%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="9.7710%" y="309" width="0.0244%" height="15" fill="rgb(223,111,35)" fg:x="401" fg:w="1"/><text x="10.0210%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.7710%" y="293" width="0.0244%" height="15" fill="rgb(229,147,28)" fg:x="401" fg:w="1"/><text x="10.0210%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="9.7466%" y="341" width="0.0731%" height="15" fill="rgb(211,29,28)" fg:x="400" fg:w="3"/><text x="9.9966%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="9.7710%" y="325" width="0.0487%" height="15" fill="rgb(228,72,33)" fg:x="401" fg:w="2"/><text x="10.0210%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="9.7953%" y="309" width="0.0244%" height="15" fill="rgb(205,214,31)" fg:x="402" fg:w="1"/><text x="10.0453%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="9.7953%" y="293" width="0.0244%" height="15" fill="rgb(224,111,15)" fg:x="402" fg:w="1"/><text x="10.0453%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="9.7953%" y="277" width="0.0244%" height="15" fill="rgb(253,21,26)" fg:x="402" fg:w="1"/><text x="10.0453%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="9.7953%" y="261" width="0.0244%" height="15" fill="rgb(245,139,43)" fg:x="402" fg:w="1"/><text x="10.0453%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="9.7953%" y="245" width="0.0244%" height="15" fill="rgb(252,170,7)" fg:x="402" fg:w="1"/><text x="10.0453%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="9.8441%" y="325" width="0.2437%" height="15" fill="rgb(231,118,14)" fg:x="404" fg:w="10"/><text x="10.0941%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="10.0146%" y="309" width="0.0731%" height="15" fill="rgb(238,83,0)" fg:x="411" fg:w="3"/><text x="10.2646%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="10.0634%" y="293" width="0.0244%" height="15" fill="rgb(221,39,39)" fg:x="413" fg:w="1"/><text x="10.3134%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="10.0634%" y="277" width="0.0244%" height="15" fill="rgb(222,119,46)" fg:x="413" fg:w="1"/><text x="10.3134%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="10.0634%" y="261" width="0.0244%" height="15" fill="rgb(222,165,49)" fg:x="413" fg:w="1"/><text x="10.3134%" y="271.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.29%)</title><rect x="9.8197%" y="341" width="0.2924%" height="15" fill="rgb(219,113,52)" fg:x="403" fg:w="12"/><text x="10.0697%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="10.0877%" y="325" width="0.0244%" height="15" fill="rgb(214,7,15)" fg:x="414" fg:w="1"/><text x="10.3377%" y="335.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="10.1121%" y="341" width="0.0244%" height="15" fill="rgb(235,32,4)" fg:x="415" fg:w="1"/><text x="10.3621%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="10.2096%" y="325" width="0.0244%" height="15" fill="rgb(238,90,54)" fg:x="419" fg:w="1"/><text x="10.4596%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="10.2096%" y="309" width="0.0244%" height="15" fill="rgb(213,208,19)" fg:x="419" fg:w="1"/><text x="10.4596%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="10.2096%" y="293" width="0.0244%" height="15" fill="rgb(233,156,4)" fg:x="419" fg:w="1"/><text x="10.4596%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="10.2339%" y="325" width="0.0244%" height="15" fill="rgb(207,194,5)" fg:x="420" fg:w="1"/><text x="10.4839%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="10.3314%" y="293" width="0.0244%" height="15" fill="rgb(206,111,30)" fg:x="424" fg:w="1"/><text x="10.5814%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="10.3558%" y="293" width="0.0244%" height="15" fill="rgb(243,70,54)" fg:x="425" fg:w="1"/><text x="10.6058%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="10.3558%" y="277" width="0.0244%" height="15" fill="rgb(242,28,8)" fg:x="425" fg:w="1"/><text x="10.6058%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="10.4045%" y="261" width="0.0244%" height="15" fill="rgb(219,106,18)" fg:x="427" fg:w="1"/><text x="10.6545%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="10.4045%" y="245" width="0.0244%" height="15" fill="rgb(244,222,10)" fg:x="427" fg:w="1"/><text x="10.6545%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="10.4045%" y="229" width="0.0244%" height="15" fill="rgb(236,179,52)" fg:x="427" fg:w="1"/><text x="10.6545%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="10.4532%" y="213" width="0.0244%" height="15" fill="rgb(213,23,39)" fg:x="429" fg:w="1"/><text x="10.7032%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="10.4532%" y="197" width="0.0244%" height="15" fill="rgb(238,48,10)" fg:x="429" fg:w="1"/><text x="10.7032%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.24%)</title><rect x="10.2583%" y="325" width="0.2437%" height="15" fill="rgb(251,196,23)" fg:x="421" fg:w="10"/><text x="10.5083%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (7 samples, 0.17%)</title><rect x="10.3314%" y="309" width="0.1706%" height="15" fill="rgb(250,152,24)" fg:x="424" fg:w="7"/><text x="10.5814%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="10.3801%" y="293" width="0.1218%" height="15" fill="rgb(209,150,17)" fg:x="426" fg:w="5"/><text x="10.6301%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="10.4045%" y="277" width="0.0975%" height="15" fill="rgb(234,202,34)" fg:x="427" fg:w="4"/><text x="10.6545%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="10.4288%" y="261" width="0.0731%" height="15" fill="rgb(253,148,53)" fg:x="428" fg:w="3"/><text x="10.6788%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="10.4288%" y="245" width="0.0731%" height="15" fill="rgb(218,129,16)" fg:x="428" fg:w="3"/><text x="10.6788%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="10.4288%" y="229" width="0.0731%" height="15" fill="rgb(216,85,19)" fg:x="428" fg:w="3"/><text x="10.6788%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="10.4776%" y="213" width="0.0244%" height="15" fill="rgb(235,228,7)" fg:x="430" fg:w="1"/><text x="10.7276%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="10.4776%" y="197" width="0.0244%" height="15" fill="rgb(245,175,0)" fg:x="430" fg:w="1"/><text x="10.7276%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="10.4776%" y="181" width="0.0244%" height="15" fill="rgb(208,168,36)" fg:x="430" fg:w="1"/><text x="10.7276%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="10.4776%" y="165" width="0.0244%" height="15" fill="rgb(246,171,24)" fg:x="430" fg:w="1"/><text x="10.7276%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="10.5019%" y="293" width="0.0244%" height="15" fill="rgb(215,142,24)" fg:x="431" fg:w="1"/><text x="10.7519%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="10.5507%" y="261" width="0.0487%" height="15" fill="rgb(250,187,7)" fg:x="433" fg:w="2"/><text x="10.8007%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="10.5507%" y="245" width="0.0487%" height="15" fill="rgb(228,66,33)" fg:x="433" fg:w="2"/><text x="10.8007%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="10.5507%" y="229" width="0.0487%" height="15" fill="rgb(234,215,21)" fg:x="433" fg:w="2"/><text x="10.8007%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="10.5019%" y="325" width="0.1462%" height="15" fill="rgb(222,191,20)" fg:x="431" fg:w="6"/><text x="10.7519%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (6 samples, 0.15%)</title><rect x="10.5019%" y="309" width="0.1462%" height="15" fill="rgb(245,79,54)" fg:x="431" fg:w="6"/><text x="10.7519%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="10.5263%" y="293" width="0.1218%" height="15" fill="rgb(240,10,37)" fg:x="432" fg:w="5"/><text x="10.7763%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="10.5507%" y="277" width="0.0975%" height="15" fill="rgb(214,192,32)" fg:x="433" fg:w="4"/><text x="10.8007%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="10.5994%" y="261" width="0.0487%" height="15" fill="rgb(209,36,54)" fg:x="435" fg:w="2"/><text x="10.8494%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="10.6238%" y="245" width="0.0244%" height="15" fill="rgb(220,10,11)" fg:x="436" fg:w="1"/><text x="10.8738%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="10.6238%" y="229" width="0.0244%" height="15" fill="rgb(221,106,17)" fg:x="436" fg:w="1"/><text x="10.8738%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="10.6238%" y="213" width="0.0244%" height="15" fill="rgb(251,142,44)" fg:x="436" fg:w="1"/><text x="10.8738%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.41%)</title><rect x="10.6481%" y="325" width="0.4142%" height="15" fill="rgb(238,13,15)" fg:x="437" fg:w="17"/><text x="10.8981%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.41%)</title><rect x="10.6481%" y="309" width="0.4142%" height="15" fill="rgb(208,107,27)" fg:x="437" fg:w="17"/><text x="10.8981%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.17%)</title><rect x="10.8918%" y="293" width="0.1706%" height="15" fill="rgb(205,136,37)" fg:x="447" fg:w="7"/><text x="11.1418%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="11.0380%" y="277" width="0.0244%" height="15" fill="rgb(250,205,27)" fg:x="453" fg:w="1"/><text x="11.2880%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="11.1111%" y="293" width="0.0244%" height="15" fill="rgb(210,80,43)" fg:x="456" fg:w="1"/><text x="11.3611%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="11.1111%" y="277" width="0.0244%" height="15" fill="rgb(247,160,36)" fg:x="456" fg:w="1"/><text x="11.3611%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="11.1111%" y="261" width="0.0244%" height="15" fill="rgb(234,13,49)" fg:x="456" fg:w="1"/><text x="11.3611%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="11.1111%" y="245" width="0.0244%" height="15" fill="rgb(234,122,0)" fg:x="456" fg:w="1"/><text x="11.3611%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="11.2086%" y="197" width="0.0244%" height="15" fill="rgb(207,146,38)" fg:x="460" fg:w="1"/><text x="11.4586%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.15%)</title><rect x="11.1111%" y="309" width="0.1462%" height="15" fill="rgb(207,177,25)" fg:x="456" fg:w="6"/><text x="11.3611%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="11.1355%" y="293" width="0.1218%" height="15" fill="rgb(211,178,42)" fg:x="457" fg:w="5"/><text x="11.3855%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="11.1598%" y="277" width="0.0975%" height="15" fill="rgb(230,69,54)" fg:x="458" fg:w="4"/><text x="11.4098%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (4 samples, 0.10%)</title><rect x="11.1598%" y="261" width="0.0975%" height="15" fill="rgb(214,135,41)" fg:x="458" fg:w="4"/><text x="11.4098%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="11.1842%" y="245" width="0.0731%" height="15" fill="rgb(237,67,25)" fg:x="459" fg:w="3"/><text x="11.4342%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="11.1842%" y="229" width="0.0731%" height="15" fill="rgb(222,189,50)" fg:x="459" fg:w="3"/><text x="11.4342%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="11.1842%" y="213" width="0.0731%" height="15" fill="rgb(245,148,34)" fg:x="459" fg:w="3"/><text x="11.4342%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="11.2329%" y="197" width="0.0244%" height="15" fill="rgb(222,29,6)" fg:x="461" fg:w="1"/><text x="11.4829%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="11.2817%" y="229" width="0.0244%" height="15" fill="rgb(221,189,43)" fg:x="463" fg:w="1"/><text x="11.5317%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="11.2573%" y="309" width="0.0731%" height="15" fill="rgb(207,36,27)" fg:x="462" fg:w="3"/><text x="11.5073%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="11.2817%" y="293" width="0.0487%" height="15" fill="rgb(217,90,24)" fg:x="463" fg:w="2"/><text x="11.5317%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="11.2817%" y="277" width="0.0487%" height="15" fill="rgb(224,66,35)" fg:x="463" fg:w="2"/><text x="11.5317%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="11.2817%" y="261" width="0.0487%" height="15" fill="rgb(221,13,50)" fg:x="463" fg:w="2"/><text x="11.5317%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="11.2817%" y="245" width="0.0487%" height="15" fill="rgb(236,68,49)" fg:x="463" fg:w="2"/><text x="11.5317%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="11.3060%" y="229" width="0.0244%" height="15" fill="rgb(229,146,28)" fg:x="464" fg:w="1"/><text x="11.5560%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="11.4035%" y="277" width="0.0244%" height="15" fill="rgb(225,31,38)" fg:x="468" fg:w="1"/><text x="11.6535%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="11.4279%" y="277" width="0.0244%" height="15" fill="rgb(250,208,3)" fg:x="469" fg:w="1"/><text x="11.6779%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="11.4522%" y="277" width="0.0244%" height="15" fill="rgb(246,54,23)" fg:x="470" fg:w="1"/><text x="11.7022%" y="287.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="11.4766%" y="277" width="0.0244%" height="15" fill="rgb(243,76,11)" fg:x="471" fg:w="1"/><text x="11.7266%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="11.6228%" y="261" width="0.0244%" height="15" fill="rgb(245,21,50)" fg:x="477" fg:w="1"/><text x="11.8728%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="11.6228%" y="245" width="0.0244%" height="15" fill="rgb(228,9,43)" fg:x="477" fg:w="1"/><text x="11.8728%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="11.6472%" y="229" width="0.0244%" height="15" fill="rgb(208,100,47)" fg:x="478" fg:w="1"/><text x="11.8972%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="11.6472%" y="261" width="0.0487%" height="15" fill="rgb(232,26,8)" fg:x="478" fg:w="2"/><text x="11.8972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="11.6472%" y="245" width="0.0487%" height="15" fill="rgb(216,166,38)" fg:x="478" fg:w="2"/><text x="11.8972%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="11.6715%" y="229" width="0.0244%" height="15" fill="rgb(251,202,51)" fg:x="479" fg:w="1"/><text x="11.9215%" y="239.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (16 samples, 0.39%)</title><rect x="11.3304%" y="309" width="0.3899%" height="15" fill="rgb(254,216,34)" fg:x="465" fg:w="16"/><text x="11.5804%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.37%)</title><rect x="11.3548%" y="293" width="0.3655%" height="15" fill="rgb(251,32,27)" fg:x="466" fg:w="15"/><text x="11.6048%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.22%)</title><rect x="11.5010%" y="277" width="0.2193%" height="15" fill="rgb(208,127,28)" fg:x="472" fg:w="9"/><text x="11.7510%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="11.6959%" y="261" width="0.0244%" height="15" fill="rgb(224,137,22)" fg:x="480" fg:w="1"/><text x="11.9459%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="11.7690%" y="293" width="0.0244%" height="15" fill="rgb(254,70,32)" fg:x="483" fg:w="1"/><text x="12.0190%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.07%)</title><rect x="11.7934%" y="293" width="0.0731%" height="15" fill="rgb(229,75,37)" fg:x="484" fg:w="3"/><text x="12.0434%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="11.8665%" y="293" width="0.0487%" height="15" fill="rgb(252,64,23)" fg:x="487" fg:w="2"/><text x="12.1165%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="11.9152%" y="293" width="0.0244%" height="15" fill="rgb(232,162,48)" fg:x="489" fg:w="1"/><text x="12.1652%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="11.9152%" y="277" width="0.0244%" height="15" fill="rgb(246,160,12)" fg:x="489" fg:w="1"/><text x="12.1652%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="11.9152%" y="261" width="0.0244%" height="15" fill="rgb(247,166,0)" fg:x="489" fg:w="1"/><text x="12.1652%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="11.9396%" y="293" width="0.0244%" height="15" fill="rgb(249,219,21)" fg:x="490" fg:w="1"/><text x="12.1896%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="11.9639%" y="293" width="0.0244%" height="15" fill="rgb(205,209,3)" fg:x="491" fg:w="1"/><text x="12.2139%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.07%)</title><rect x="12.0614%" y="277" width="0.0731%" height="15" fill="rgb(243,44,1)" fg:x="495" fg:w="3"/><text x="12.3114%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="12.0858%" y="261" width="0.0487%" height="15" fill="rgb(206,159,16)" fg:x="496" fg:w="2"/><text x="12.3358%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.05%)</title><rect x="12.0858%" y="245" width="0.0487%" height="15" fill="rgb(244,77,30)" fg:x="496" fg:w="2"/><text x="12.3358%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="12.1101%" y="229" width="0.0244%" height="15" fill="rgb(218,69,12)" fg:x="497" fg:w="1"/><text x="12.3601%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="12.1101%" y="213" width="0.0244%" height="15" fill="rgb(212,87,7)" fg:x="497" fg:w="1"/><text x="12.3601%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="12.1589%" y="245" width="0.0244%" height="15" fill="rgb(245,114,25)" fg:x="499" fg:w="1"/><text x="12.4089%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.22%)</title><rect x="11.9883%" y="293" width="0.2193%" height="15" fill="rgb(210,61,42)" fg:x="492" fg:w="9"/><text x="12.2383%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="12.1345%" y="277" width="0.0731%" height="15" fill="rgb(211,52,33)" fg:x="498" fg:w="3"/><text x="12.3845%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="12.1589%" y="261" width="0.0487%" height="15" fill="rgb(234,58,33)" fg:x="499" fg:w="2"/><text x="12.4089%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="12.1832%" y="245" width="0.0244%" height="15" fill="rgb(220,115,36)" fg:x="500" fg:w="1"/><text x="12.4332%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="12.2076%" y="277" width="0.0244%" height="15" fill="rgb(243,153,54)" fg:x="501" fg:w="1"/><text x="12.4576%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="12.2076%" y="293" width="0.0487%" height="15" fill="rgb(251,47,18)" fg:x="501" fg:w="2"/><text x="12.4576%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="12.2320%" y="277" width="0.0244%" height="15" fill="rgb(242,102,42)" fg:x="502" fg:w="1"/><text x="12.4820%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="12.2320%" y="261" width="0.0244%" height="15" fill="rgb(234,31,38)" fg:x="502" fg:w="1"/><text x="12.4820%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="12.2320%" y="245" width="0.0244%" height="15" fill="rgb(221,117,51)" fg:x="502" fg:w="1"/><text x="12.4820%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="12.4269%" y="261" width="0.0244%" height="15" fill="rgb(212,20,18)" fg:x="510" fg:w="1"/><text x="12.6769%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="12.4513%" y="261" width="0.0244%" height="15" fill="rgb(245,133,36)" fg:x="511" fg:w="1"/><text x="12.7013%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="12.5731%" y="229" width="0.0244%" height="15" fill="rgb(212,6,19)" fg:x="516" fg:w="1"/><text x="12.8231%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.05%)</title><rect x="12.5731%" y="245" width="0.0487%" height="15" fill="rgb(218,1,36)" fg:x="516" fg:w="2"/><text x="12.8231%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.5975%" y="229" width="0.0244%" height="15" fill="rgb(246,84,54)" fg:x="517" fg:w="1"/><text x="12.8475%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="12.5975%" y="213" width="0.0244%" height="15" fill="rgb(242,110,6)" fg:x="517" fg:w="1"/><text x="12.8475%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.39%)</title><rect x="12.2807%" y="277" width="0.3899%" height="15" fill="rgb(214,47,5)" fg:x="504" fg:w="16"/><text x="12.5307%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.19%)</title><rect x="12.4756%" y="261" width="0.1949%" height="15" fill="rgb(218,159,25)" fg:x="512" fg:w="8"/><text x="12.7256%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="12.6218%" y="245" width="0.0487%" height="15" fill="rgb(215,211,28)" fg:x="518" fg:w="2"/><text x="12.8718%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="12.6218%" y="229" width="0.0487%" height="15" fill="rgb(238,59,32)" fg:x="518" fg:w="2"/><text x="12.8718%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="12.6218%" y="213" width="0.0487%" height="15" fill="rgb(226,82,3)" fg:x="518" fg:w="2"/><text x="12.8718%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.46%)</title><rect x="12.2563%" y="293" width="0.4630%" height="15" fill="rgb(240,164,32)" fg:x="503" fg:w="19"/><text x="12.5063%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="12.6706%" y="277" width="0.0487%" height="15" fill="rgb(232,46,7)" fg:x="520" fg:w="2"/><text x="12.9206%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.6949%" y="261" width="0.0244%" height="15" fill="rgb(229,129,53)" fg:x="521" fg:w="1"/><text x="12.9449%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="12.6949%" y="245" width="0.0244%" height="15" fill="rgb(234,188,29)" fg:x="521" fg:w="1"/><text x="12.9449%" y="255.50"></text></g><g><title>rust-gkat`__rust_dealloc (1 samples, 0.02%)</title><rect x="12.7193%" y="293" width="0.0244%" height="15" fill="rgb(246,141,4)" fg:x="522" fg:w="1"/><text x="12.9693%" y="303.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="12.7437%" y="293" width="0.0244%" height="15" fill="rgb(229,23,39)" fg:x="523" fg:w="1"/><text x="12.9937%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="12.7680%" y="293" width="0.0244%" height="15" fill="rgb(206,12,3)" fg:x="524" fg:w="1"/><text x="13.0180%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="12.9386%" y="277" width="0.0244%" height="15" fill="rgb(252,226,20)" fg:x="531" fg:w="1"/><text x="13.1886%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="12.9630%" y="277" width="0.0244%" height="15" fill="rgb(216,123,35)" fg:x="532" fg:w="1"/><text x="13.2130%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="12.9873%" y="277" width="0.0244%" height="15" fill="rgb(212,68,40)" fg:x="533" fg:w="1"/><text x="13.2373%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.9873%" y="261" width="0.0244%" height="15" fill="rgb(254,125,32)" fg:x="533" fg:w="1"/><text x="13.2373%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="12.9873%" y="245" width="0.0244%" height="15" fill="rgb(253,97,22)" fg:x="533" fg:w="1"/><text x="13.2373%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="13.0117%" y="277" width="0.0244%" height="15" fill="rgb(241,101,14)" fg:x="534" fg:w="1"/><text x="13.2617%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="13.0361%" y="277" width="0.0244%" height="15" fill="rgb(238,103,29)" fg:x="535" fg:w="1"/><text x="13.2861%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="13.0848%" y="261" width="0.0487%" height="15" fill="rgb(233,195,47)" fg:x="537" fg:w="2"/><text x="13.3348%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="13.0848%" y="245" width="0.0487%" height="15" fill="rgb(246,218,30)" fg:x="537" fg:w="2"/><text x="13.3348%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.05%)</title><rect x="13.0848%" y="229" width="0.0487%" height="15" fill="rgb(219,145,47)" fg:x="537" fg:w="2"/><text x="13.3348%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="13.1092%" y="213" width="0.0244%" height="15" fill="rgb(243,12,26)" fg:x="538" fg:w="1"/><text x="13.3592%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="13.1335%" y="213" width="0.0244%" height="15" fill="rgb(214,87,16)" fg:x="539" fg:w="1"/><text x="13.3835%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.12%)</title><rect x="13.0604%" y="277" width="0.1218%" height="15" fill="rgb(208,99,42)" fg:x="536" fg:w="5"/><text x="13.3104%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="13.1335%" y="261" width="0.0487%" height="15" fill="rgb(253,99,2)" fg:x="539" fg:w="2"/><text x="13.3835%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="13.1335%" y="245" width="0.0487%" height="15" fill="rgb(220,168,23)" fg:x="539" fg:w="2"/><text x="13.3835%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="13.1335%" y="229" width="0.0487%" height="15" fill="rgb(242,38,24)" fg:x="539" fg:w="2"/><text x="13.3835%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="13.1579%" y="213" width="0.0244%" height="15" fill="rgb(225,182,9)" fg:x="540" fg:w="1"/><text x="13.4079%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.12%)</title><rect x="13.1823%" y="277" width="0.1218%" height="15" fill="rgb(243,178,37)" fg:x="541" fg:w="5"/><text x="13.4323%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="13.1823%" y="261" width="0.1218%" height="15" fill="rgb(232,139,19)" fg:x="541" fg:w="5"/><text x="13.4323%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="13.1823%" y="245" width="0.1218%" height="15" fill="rgb(225,201,24)" fg:x="541" fg:w="5"/><text x="13.4323%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="13.1823%" y="229" width="0.1218%" height="15" fill="rgb(221,47,46)" fg:x="541" fg:w="5"/><text x="13.4323%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="13.1823%" y="213" width="0.1218%" height="15" fill="rgb(249,23,13)" fg:x="541" fg:w="5"/><text x="13.4323%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.12%)</title><rect x="13.1823%" y="197" width="0.1218%" height="15" fill="rgb(219,9,5)" fg:x="541" fg:w="5"/><text x="13.4323%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="13.2066%" y="181" width="0.0975%" height="15" fill="rgb(254,171,16)" fg:x="542" fg:w="4"/><text x="13.4566%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="13.3528%" y="245" width="0.0244%" height="15" fill="rgb(230,171,20)" fg:x="548" fg:w="1"/><text x="13.6028%" y="255.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.15%)</title><rect x="13.3041%" y="277" width="0.1462%" height="15" fill="rgb(210,71,41)" fg:x="546" fg:w="6"/><text x="13.5541%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="13.3285%" y="261" width="0.1218%" height="15" fill="rgb(206,173,20)" fg:x="547" fg:w="5"/><text x="13.5785%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="13.3772%" y="245" width="0.0731%" height="15" fill="rgb(233,88,34)" fg:x="549" fg:w="3"/><text x="13.6272%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="13.4259%" y="229" width="0.0244%" height="15" fill="rgb(223,209,46)" fg:x="551" fg:w="1"/><text x="13.6759%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.4259%" y="213" width="0.0244%" height="15" fill="rgb(250,43,18)" fg:x="551" fg:w="1"/><text x="13.6759%" y="223.50"></text></g><g><title>rust-gkat`ahash::random_state::RandomState::from_keys (3 samples, 0.07%)</title><rect x="13.4503%" y="277" width="0.0731%" height="15" fill="rgb(208,13,10)" fg:x="552" fg:w="3"/><text x="13.7003%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="13.5234%" y="277" width="0.0244%" height="15" fill="rgb(212,200,36)" fg:x="555" fg:w="1"/><text x="13.7734%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="13.5478%" y="277" width="0.0244%" height="15" fill="rgb(225,90,30)" fg:x="556" fg:w="1"/><text x="13.7978%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="13.5478%" y="261" width="0.0244%" height="15" fill="rgb(236,182,39)" fg:x="556" fg:w="1"/><text x="13.7978%" y="271.50"></text></g><g><title>rust-gkat`psm::stack_pointer (1 samples, 0.02%)</title><rect x="13.5721%" y="277" width="0.0244%" height="15" fill="rgb(212,144,35)" fg:x="557" fg:w="1"/><text x="13.8221%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="13.7183%" y="261" width="0.0244%" height="15" fill="rgb(228,63,44)" fg:x="563" fg:w="1"/><text x="13.9683%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.10%)</title><rect x="13.7427%" y="261" width="0.0975%" height="15" fill="rgb(228,109,6)" fg:x="564" fg:w="4"/><text x="13.9927%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.05%)</title><rect x="13.8402%" y="261" width="0.0487%" height="15" fill="rgb(238,117,24)" fg:x="568" fg:w="2"/><text x="14.0902%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="13.9376%" y="245" width="0.0244%" height="15" fill="rgb(242,26,26)" fg:x="572" fg:w="1"/><text x="14.1876%" y="255.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="13.9376%" y="229" width="0.0244%" height="15" fill="rgb(221,92,48)" fg:x="572" fg:w="1"/><text x="14.1876%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="13.9376%" y="213" width="0.0244%" height="15" fill="rgb(209,209,32)" fg:x="572" fg:w="1"/><text x="14.1876%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="13.9376%" y="197" width="0.0244%" height="15" fill="rgb(221,70,22)" fg:x="572" fg:w="1"/><text x="14.1876%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="13.9376%" y="181" width="0.0244%" height="15" fill="rgb(248,145,5)" fg:x="572" fg:w="1"/><text x="14.1876%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="13.9620%" y="229" width="0.0244%" height="15" fill="rgb(226,116,26)" fg:x="573" fg:w="1"/><text x="14.2120%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.12%)</title><rect x="13.8889%" y="261" width="0.1218%" height="15" fill="rgb(244,5,17)" fg:x="570" fg:w="5"/><text x="14.1389%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="13.9620%" y="245" width="0.0487%" height="15" fill="rgb(252,159,33)" fg:x="573" fg:w="2"/><text x="14.2120%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="13.9864%" y="229" width="0.0244%" height="15" fill="rgb(206,71,0)" fg:x="574" fg:w="1"/><text x="14.2364%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="13.9864%" y="213" width="0.0244%" height="15" fill="rgb(233,118,54)" fg:x="574" fg:w="1"/><text x="14.2364%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="14.0107%" y="229" width="0.0244%" height="15" fill="rgb(234,83,48)" fg:x="575" fg:w="1"/><text x="14.2607%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="14.0107%" y="213" width="0.0244%" height="15" fill="rgb(228,3,54)" fg:x="575" fg:w="1"/><text x="14.2607%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.0107%" y="261" width="0.0487%" height="15" fill="rgb(226,155,13)" fg:x="575" fg:w="2"/><text x="14.2607%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="14.0107%" y="245" width="0.0487%" height="15" fill="rgb(241,28,37)" fg:x="575" fg:w="2"/><text x="14.2607%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.0351%" y="229" width="0.0244%" height="15" fill="rgb(233,93,10)" fg:x="576" fg:w="1"/><text x="14.2851%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.0351%" y="213" width="0.0244%" height="15" fill="rgb(225,113,19)" fg:x="576" fg:w="1"/><text x="14.2851%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.0351%" y="197" width="0.0244%" height="15" fill="rgb(241,2,18)" fg:x="576" fg:w="1"/><text x="14.2851%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.0351%" y="181" width="0.0244%" height="15" fill="rgb(228,207,21)" fg:x="576" fg:w="1"/><text x="14.2851%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="14.1326%" y="229" width="0.0244%" height="15" fill="rgb(213,211,35)" fg:x="580" fg:w="1"/><text x="14.3826%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="14.0595%" y="245" width="0.2437%" height="15" fill="rgb(209,83,10)" fg:x="577" fg:w="10"/><text x="14.3095%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="14.1569%" y="229" width="0.1462%" height="15" fill="rgb(209,164,1)" fg:x="581" fg:w="6"/><text x="14.4069%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="14.2544%" y="213" width="0.0487%" height="15" fill="rgb(213,184,43)" fg:x="585" fg:w="2"/><text x="14.5044%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.05%)</title><rect x="14.2544%" y="197" width="0.0487%" height="15" fill="rgb(231,61,34)" fg:x="585" fg:w="2"/><text x="14.5044%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.05%)</title><rect x="14.2544%" y="181" width="0.0487%" height="15" fill="rgb(235,75,3)" fg:x="585" fg:w="2"/><text x="14.5044%" y="191.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.27%)</title><rect x="14.0595%" y="261" width="0.2680%" height="15" fill="rgb(220,106,47)" fg:x="577" fg:w="11"/><text x="14.3095%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.3031%" y="245" width="0.0244%" height="15" fill="rgb(210,196,33)" fg:x="587" fg:w="1"/><text x="14.5531%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="14.3031%" y="229" width="0.0244%" height="15" fill="rgb(229,154,42)" fg:x="587" fg:w="1"/><text x="14.5531%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="14.3031%" y="213" width="0.0244%" height="15" fill="rgb(228,114,26)" fg:x="587" fg:w="1"/><text x="14.5531%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="14.3031%" y="197" width="0.0244%" height="15" fill="rgb(208,144,1)" fg:x="587" fg:w="1"/><text x="14.5531%" y="207.50"></text></g><g><title>rust-gkat`ahash::random_state::RandomState::from_keys (1 samples, 0.02%)</title><rect x="14.3275%" y="261" width="0.0244%" height="15" fill="rgb(239,112,37)" fg:x="588" fg:w="1"/><text x="14.5775%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="14.3519%" y="261" width="0.0731%" height="15" fill="rgb(210,96,50)" fg:x="589" fg:w="3"/><text x="14.6019%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="14.3762%" y="245" width="0.0487%" height="15" fill="rgb(222,178,2)" fg:x="590" fg:w="2"/><text x="14.6262%" y="255.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="14.4250%" y="261" width="0.0244%" height="15" fill="rgb(226,74,18)" fg:x="592" fg:w="1"/><text x="14.6750%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="14.4981%" y="245" width="0.0244%" height="15" fill="rgb(225,67,54)" fg:x="595" fg:w="1"/><text x="14.7481%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="14.5224%" y="245" width="0.0244%" height="15" fill="rgb(251,92,32)" fg:x="596" fg:w="1"/><text x="14.7724%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="14.5468%" y="245" width="0.0244%" height="15" fill="rgb(228,149,22)" fg:x="597" fg:w="1"/><text x="14.7968%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.07%)</title><rect x="14.5712%" y="245" width="0.0731%" height="15" fill="rgb(243,54,13)" fg:x="598" fg:w="3"/><text x="14.8212%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="14.6442%" y="245" width="0.0244%" height="15" fill="rgb(243,180,28)" fg:x="601" fg:w="1"/><text x="14.8942%" y="255.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="14.6930%" y="213" width="0.0244%" height="15" fill="rgb(208,167,24)" fg:x="603" fg:w="1"/><text x="14.9430%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="14.6686%" y="245" width="0.0731%" height="15" fill="rgb(245,73,45)" fg:x="602" fg:w="3"/><text x="14.9186%" y="255.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="14.6930%" y="229" width="0.0487%" height="15" fill="rgb(237,203,48)" fg:x="603" fg:w="2"/><text x="14.9430%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="14.7173%" y="213" width="0.0244%" height="15" fill="rgb(211,197,16)" fg:x="604" fg:w="1"/><text x="14.9673%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="14.7173%" y="197" width="0.0244%" height="15" fill="rgb(243,99,51)" fg:x="604" fg:w="1"/><text x="14.9673%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="14.7173%" y="181" width="0.0244%" height="15" fill="rgb(215,123,29)" fg:x="604" fg:w="1"/><text x="14.9673%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="14.7173%" y="165" width="0.0244%" height="15" fill="rgb(239,186,37)" fg:x="604" fg:w="1"/><text x="14.9673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="14.7417%" y="229" width="0.0244%" height="15" fill="rgb(252,136,39)" fg:x="605" fg:w="1"/><text x="14.9917%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="14.7417%" y="213" width="0.0244%" height="15" fill="rgb(223,213,32)" fg:x="605" fg:w="1"/><text x="14.9917%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.7417%" y="245" width="0.0487%" height="15" fill="rgb(233,115,5)" fg:x="605" fg:w="2"/><text x="14.9917%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.7661%" y="229" width="0.0244%" height="15" fill="rgb(207,226,44)" fg:x="606" fg:w="1"/><text x="15.0161%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.7661%" y="213" width="0.0244%" height="15" fill="rgb(208,126,0)" fg:x="606" fg:w="1"/><text x="15.0161%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="14.7661%" y="197" width="0.0244%" height="15" fill="rgb(244,66,21)" fg:x="606" fg:w="1"/><text x="15.0161%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="14.7661%" y="181" width="0.0244%" height="15" fill="rgb(222,97,12)" fg:x="606" fg:w="1"/><text x="15.0161%" y="191.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.12%)</title><rect x="14.7904%" y="245" width="0.1218%" height="15" fill="rgb(219,213,19)" fg:x="607" fg:w="5"/><text x="15.0404%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="14.7904%" y="229" width="0.1218%" height="15" fill="rgb(252,169,30)" fg:x="607" fg:w="5"/><text x="15.0404%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="14.8148%" y="213" width="0.0975%" height="15" fill="rgb(206,32,51)" fg:x="608" fg:w="4"/><text x="15.0648%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.05%)</title><rect x="14.8635%" y="197" width="0.0487%" height="15" fill="rgb(250,172,42)" fg:x="610" fg:w="2"/><text x="15.1135%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="14.8879%" y="181" width="0.0244%" height="15" fill="rgb(209,34,43)" fg:x="611" fg:w="1"/><text x="15.1379%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="14.8879%" y="165" width="0.0244%" height="15" fill="rgb(223,11,35)" fg:x="611" fg:w="1"/><text x="15.1379%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="14.9123%" y="229" width="0.0244%" height="15" fill="rgb(251,219,26)" fg:x="612" fg:w="1"/><text x="15.1623%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="14.9123%" y="245" width="0.0975%" height="15" fill="rgb(231,119,3)" fg:x="612" fg:w="4"/><text x="15.1623%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="14.9366%" y="229" width="0.0731%" height="15" fill="rgb(216,97,11)" fg:x="613" fg:w="3"/><text x="15.1866%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="14.9854%" y="213" width="0.0244%" height="15" fill="rgb(223,59,9)" fg:x="615" fg:w="1"/><text x="15.2354%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="15.0341%" y="229" width="0.0244%" height="15" fill="rgb(233,93,31)" fg:x="617" fg:w="1"/><text x="15.2841%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="15.0585%" y="229" width="0.0731%" height="15" fill="rgb(239,81,33)" fg:x="618" fg:w="3"/><text x="15.3085%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="15.0828%" y="213" width="0.0487%" height="15" fill="rgb(213,120,34)" fg:x="619" fg:w="2"/><text x="15.3328%" y="223.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="15.0828%" y="197" width="0.0487%" height="15" fill="rgb(243,49,53)" fg:x="619" fg:w="2"/><text x="15.3328%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.05%)</title><rect x="15.0828%" y="181" width="0.0487%" height="15" fill="rgb(247,216,33)" fg:x="619" fg:w="2"/><text x="15.3328%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="15.1072%" y="165" width="0.0244%" height="15" fill="rgb(226,26,14)" fg:x="620" fg:w="1"/><text x="15.3572%" y="175.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="15.1316%" y="229" width="0.0244%" height="15" fill="rgb(215,49,53)" fg:x="621" fg:w="1"/><text x="15.3816%" y="239.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="15.1559%" y="229" width="0.0244%" height="15" fill="rgb(245,162,40)" fg:x="622" fg:w="1"/><text x="15.4059%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="15.1803%" y="229" width="0.0487%" height="15" fill="rgb(229,68,17)" fg:x="623" fg:w="2"/><text x="15.4303%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="15.1803%" y="213" width="0.0487%" height="15" fill="rgb(213,182,10)" fg:x="623" fg:w="2"/><text x="15.4303%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="15.2047%" y="197" width="0.0244%" height="15" fill="rgb(245,125,30)" fg:x="624" fg:w="1"/><text x="15.4547%" y="207.50"></text></g><g><title>rust-gkat`recursive::get_minimum_stack_size (1 samples, 0.02%)</title><rect x="15.2290%" y="229" width="0.0244%" height="15" fill="rgb(232,202,2)" fg:x="625" fg:w="1"/><text x="15.4790%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="15.2778%" y="213" width="0.0244%" height="15" fill="rgb(237,140,51)" fg:x="627" fg:w="1"/><text x="15.5278%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="15.3021%" y="213" width="0.0244%" height="15" fill="rgb(236,157,25)" fg:x="628" fg:w="1"/><text x="15.5521%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="15.3265%" y="213" width="0.0244%" height="15" fill="rgb(219,209,0)" fg:x="629" fg:w="1"/><text x="15.5765%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.3265%" y="197" width="0.0244%" height="15" fill="rgb(240,116,54)" fg:x="629" fg:w="1"/><text x="15.5765%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="15.3265%" y="181" width="0.0244%" height="15" fill="rgb(216,10,36)" fg:x="629" fg:w="1"/><text x="15.5765%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.3265%" y="165" width="0.0244%" height="15" fill="rgb(222,72,44)" fg:x="629" fg:w="1"/><text x="15.5765%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="15.3265%" y="149" width="0.0244%" height="15" fill="rgb(232,159,9)" fg:x="629" fg:w="1"/><text x="15.5765%" y="159.50"></text></g><g><title>rust-gkat`ahash::random_state::RandomState::from_keys (1 samples, 0.02%)</title><rect x="15.3509%" y="213" width="0.0244%" height="15" fill="rgb(210,39,32)" fg:x="630" fg:w="1"/><text x="15.6009%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="15.3752%" y="197" width="0.0244%" height="15" fill="rgb(216,194,45)" fg:x="631" fg:w="1"/><text x="15.6252%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="15.3996%" y="197" width="0.0244%" height="15" fill="rgb(218,18,35)" fg:x="632" fg:w="1"/><text x="15.6496%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.3996%" y="181" width="0.0244%" height="15" fill="rgb(207,83,51)" fg:x="632" fg:w="1"/><text x="15.6496%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.3996%" y="165" width="0.0244%" height="15" fill="rgb(225,63,43)" fg:x="632" fg:w="1"/><text x="15.6496%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (8 samples, 0.19%)</title><rect x="15.2534%" y="229" width="0.1949%" height="15" fill="rgb(207,57,36)" fg:x="626" fg:w="8"/><text x="15.5034%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (3 samples, 0.07%)</title><rect x="15.3752%" y="213" width="0.0731%" height="15" fill="rgb(216,99,33)" fg:x="631" fg:w="3"/><text x="15.6252%" y="223.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="15.4240%" y="197" width="0.0244%" height="15" fill="rgb(225,42,16)" fg:x="633" fg:w="1"/><text x="15.6740%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.4240%" y="181" width="0.0244%" height="15" fill="rgb(220,201,45)" fg:x="633" fg:w="1"/><text x="15.6740%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="15.4240%" y="165" width="0.0244%" height="15" fill="rgb(225,33,4)" fg:x="633" fg:w="1"/><text x="15.6740%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (19 samples, 0.46%)</title><rect x="15.0097%" y="245" width="0.4630%" height="15" fill="rgb(224,33,50)" fg:x="616" fg:w="19"/><text x="15.2597%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="15.4483%" y="229" width="0.0244%" height="15" fill="rgb(246,198,51)" fg:x="634" fg:w="1"/><text x="15.6983%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="15.4483%" y="213" width="0.0244%" height="15" fill="rgb(205,22,4)" fg:x="634" fg:w="1"/><text x="15.6983%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.4483%" y="197" width="0.0244%" height="15" fill="rgb(206,3,8)" fg:x="634" fg:w="1"/><text x="15.6983%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (43 samples, 1.05%)</title><rect x="14.4493%" y="261" width="1.0478%" height="15" fill="rgb(251,23,15)" fg:x="593" fg:w="43"/><text x="14.6993%" y="271.50"></text></g><g><title>rust-gkat`stacker::remaining_stack (1 samples, 0.02%)</title><rect x="15.4727%" y="245" width="0.0244%" height="15" fill="rgb(252,88,28)" fg:x="635" fg:w="1"/><text x="15.7227%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.4971%" y="245" width="0.0244%" height="15" fill="rgb(212,127,14)" fg:x="636" fg:w="1"/><text x="15.7471%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (80 samples, 1.95%)</title><rect x="13.5965%" y="277" width="1.9493%" height="15" fill="rgb(247,145,37)" fg:x="558" fg:w="80"/><text x="13.8465%" y="287.50">r..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (2 samples, 0.05%)</title><rect x="15.4971%" y="261" width="0.0487%" height="15" fill="rgb(209,117,53)" fg:x="636" fg:w="2"/><text x="15.7471%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.5214%" y="245" width="0.0244%" height="15" fill="rgb(212,90,42)" fg:x="637" fg:w="1"/><text x="15.7714%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="15.5214%" y="229" width="0.0244%" height="15" fill="rgb(218,164,37)" fg:x="637" fg:w="1"/><text x="15.7714%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.5214%" y="213" width="0.0244%" height="15" fill="rgb(246,65,34)" fg:x="637" fg:w="1"/><text x="15.7714%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.5458%" y="261" width="0.0244%" height="15" fill="rgb(231,100,33)" fg:x="638" fg:w="1"/><text x="15.7958%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="15.5458%" y="277" width="0.0487%" height="15" fill="rgb(228,126,14)" fg:x="638" fg:w="2"/><text x="15.7958%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.5702%" y="261" width="0.0244%" height="15" fill="rgb(215,173,21)" fg:x="639" fg:w="1"/><text x="15.8202%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.5702%" y="245" width="0.0244%" height="15" fill="rgb(210,6,40)" fg:x="639" fg:w="1"/><text x="15.8202%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.5945%" y="245" width="0.0244%" height="15" fill="rgb(212,48,18)" fg:x="640" fg:w="1"/><text x="15.8445%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="15.5945%" y="261" width="0.0487%" height="15" fill="rgb(230,214,11)" fg:x="640" fg:w="2"/><text x="15.8445%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="15.6189%" y="245" width="0.0244%" height="15" fill="rgb(254,105,39)" fg:x="641" fg:w="1"/><text x="15.8689%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.6189%" y="229" width="0.0244%" height="15" fill="rgb(245,158,5)" fg:x="641" fg:w="1"/><text x="15.8689%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (118 samples, 2.88%)</title><rect x="12.7924%" y="293" width="2.8752%" height="15" fill="rgb(249,208,11)" fg:x="525" fg:w="118"/><text x="13.0424%" y="303.50">ru..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (3 samples, 0.07%)</title><rect x="15.5945%" y="277" width="0.0731%" height="15" fill="rgb(210,39,28)" fg:x="640" fg:w="3"/><text x="15.8445%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="15.6433%" y="261" width="0.0244%" height="15" fill="rgb(211,56,53)" fg:x="642" fg:w="1"/><text x="15.8933%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.6676%" y="293" width="0.0244%" height="15" fill="rgb(226,201,30)" fg:x="643" fg:w="1"/><text x="15.9176%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.6920%" y="277" width="0.0244%" height="15" fill="rgb(239,101,34)" fg:x="644" fg:w="1"/><text x="15.9420%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.7407%" y="261" width="0.0244%" height="15" fill="rgb(226,209,5)" fg:x="646" fg:w="1"/><text x="15.9907%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.7651%" y="261" width="0.0244%" height="15" fill="rgb(250,105,47)" fg:x="647" fg:w="1"/><text x="16.0151%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (168 samples, 4.09%)</title><rect x="11.7203%" y="309" width="4.0936%" height="15" fill="rgb(230,72,3)" fg:x="481" fg:w="168"/><text x="11.9703%" y="319.50">rust..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (5 samples, 0.12%)</title><rect x="15.6920%" y="293" width="0.1218%" height="15" fill="rgb(232,218,39)" fg:x="644" fg:w="5"/><text x="15.9420%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (4 samples, 0.10%)</title><rect x="15.7164%" y="277" width="0.0975%" height="15" fill="rgb(248,166,6)" fg:x="645" fg:w="4"/><text x="15.9664%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="15.7895%" y="261" width="0.0244%" height="15" fill="rgb(247,89,20)" fg:x="648" fg:w="1"/><text x="16.0395%" y="271.50"></text></g><g><title>rust-gkat`stacker::remaining_stack (1 samples, 0.02%)</title><rect x="15.8138%" y="309" width="0.0244%" height="15" fill="rgb(248,130,54)" fg:x="649" fg:w="1"/><text x="16.0638%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (197 samples, 4.80%)</title><rect x="11.0624%" y="325" width="4.8002%" height="15" fill="rgb(234,196,4)" fg:x="454" fg:w="197"/><text x="11.3124%" y="335.50">rust-g..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.8382%" y="309" width="0.0244%" height="15" fill="rgb(250,143,31)" fg:x="650" fg:w="1"/><text x="16.0882%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.8382%" y="293" width="0.0244%" height="15" fill="rgb(211,110,34)" fg:x="650" fg:w="1"/><text x="16.0882%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.8382%" y="277" width="0.0244%" height="15" fill="rgb(215,124,48)" fg:x="650" fg:w="1"/><text x="16.0882%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.8626%" y="309" width="0.0244%" height="15" fill="rgb(216,46,13)" fg:x="651" fg:w="1"/><text x="16.1126%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.8869%" y="277" width="0.0244%" height="15" fill="rgb(205,184,25)" fg:x="652" fg:w="1"/><text x="16.1369%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.8869%" y="261" width="0.0244%" height="15" fill="rgb(228,1,10)" fg:x="652" fg:w="1"/><text x="16.1369%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (238 samples, 5.80%)</title><rect x="10.1365%" y="341" width="5.7992%" height="15" fill="rgb(213,116,27)" fg:x="416" fg:w="238"/><text x="10.3865%" y="351.50">rust-gk..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="15.8626%" y="325" width="0.0731%" height="15" fill="rgb(241,95,50)" fg:x="651" fg:w="3"/><text x="16.1126%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="15.8869%" y="309" width="0.0487%" height="15" fill="rgb(238,48,32)" fg:x="652" fg:w="2"/><text x="16.1369%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="15.8869%" y="293" width="0.0487%" height="15" fill="rgb(235,113,49)" fg:x="652" fg:w="2"/><text x="16.1369%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9113%" y="277" width="0.0244%" height="15" fill="rgb(205,127,43)" fg:x="653" fg:w="1"/><text x="16.1613%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.9113%" y="261" width="0.0244%" height="15" fill="rgb(250,162,2)" fg:x="653" fg:w="1"/><text x="16.1613%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.9113%" y="245" width="0.0244%" height="15" fill="rgb(220,13,41)" fg:x="653" fg:w="1"/><text x="16.1613%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (271 samples, 6.60%)</title><rect x="9.3567%" y="357" width="6.6033%" height="15" fill="rgb(249,221,25)" fg:x="384" fg:w="271"/><text x="9.6067%" y="367.50">rust-gkat..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9357%" y="341" width="0.0244%" height="15" fill="rgb(215,208,19)" fg:x="654" fg:w="1"/><text x="16.1857%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9357%" y="325" width="0.0244%" height="15" fill="rgb(236,175,2)" fg:x="654" fg:w="1"/><text x="16.1857%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9357%" y="309" width="0.0244%" height="15" fill="rgb(241,52,2)" fg:x="654" fg:w="1"/><text x="16.1857%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9357%" y="293" width="0.0244%" height="15" fill="rgb(248,140,14)" fg:x="654" fg:w="1"/><text x="16.1857%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9357%" y="277" width="0.0244%" height="15" fill="rgb(253,22,42)" fg:x="654" fg:w="1"/><text x="16.1857%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.9357%" y="261" width="0.0244%" height="15" fill="rgb(234,61,47)" fg:x="654" fg:w="1"/><text x="16.1857%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.9357%" y="245" width="0.0244%" height="15" fill="rgb(208,226,15)" fg:x="654" fg:w="1"/><text x="16.1857%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (298 samples, 7.26%)</title><rect x="8.7232%" y="373" width="7.2612%" height="15" fill="rgb(217,221,4)" fg:x="358" fg:w="298"/><text x="8.9732%" y="383.50">rust-gkat`..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="15.9600%" y="357" width="0.0244%" height="15" fill="rgb(212,174,34)" fg:x="655" fg:w="1"/><text x="16.2100%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="15.9600%" y="341" width="0.0244%" height="15" fill="rgb(253,83,4)" fg:x="655" fg:w="1"/><text x="16.2100%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_automaton (588 samples, 14.33%)</title><rect x="1.6813%" y="597" width="14.3275%" height="15" fill="rgb(250,195,49)" fg:x="69" fg:w="588"/><text x="1.9313%" y="607.50">rust-gkat`rust_gkat::k..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (586 samples, 14.28%)</title><rect x="1.7300%" y="581" width="14.2788%" height="15" fill="rgb(241,192,25)" fg:x="71" fg:w="586"/><text x="1.9800%" y="591.50">rust-gkat`rust_gkat::k..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (570 samples, 13.89%)</title><rect x="2.1199%" y="565" width="13.8889%" height="15" fill="rgb(208,124,10)" fg:x="87" fg:w="570"/><text x="2.3699%" y="575.50">rust-gkat`rust_gkat::..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (557 samples, 13.57%)</title><rect x="2.4366%" y="549" width="13.5721%" height="15" fill="rgb(222,33,0)" fg:x="100" fg:w="557"/><text x="2.6866%" y="559.50">rust-gkat`rust_gkat::..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (540 samples, 13.16%)</title><rect x="2.8509%" y="533" width="13.1579%" height="15" fill="rgb(234,209,28)" fg:x="117" fg:w="540"/><text x="3.1009%" y="543.50">rust-gkat`rust_gkat:..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (511 samples, 12.45%)</title><rect x="3.5575%" y="517" width="12.4513%" height="15" fill="rgb(224,11,23)" fg:x="146" fg:w="511"/><text x="3.8075%" y="527.50">rust-gkat`rust_gkat..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (485 samples, 11.82%)</title><rect x="4.1910%" y="501" width="11.8177%" height="15" fill="rgb(232,99,1)" fg:x="172" fg:w="485"/><text x="4.4410%" y="511.50">rust-gkat`rust_gka..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (454 samples, 11.06%)</title><rect x="4.9464%" y="485" width="11.0624%" height="15" fill="rgb(237,95,45)" fg:x="203" fg:w="454"/><text x="5.1964%" y="495.50">rust-gkat`rust_g..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (425 samples, 10.36%)</title><rect x="5.6530%" y="469" width="10.3558%" height="15" fill="rgb(208,109,11)" fg:x="232" fg:w="425"/><text x="5.9030%" y="479.50">rust-gkat`rust_..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (406 samples, 9.89%)</title><rect x="6.1160%" y="453" width="9.8928%" height="15" fill="rgb(216,190,48)" fg:x="251" fg:w="406"/><text x="6.3660%" y="463.50">rust-gkat`rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (373 samples, 9.09%)</title><rect x="6.9201%" y="437" width="9.0887%" height="15" fill="rgb(251,171,36)" fg:x="284" fg:w="373"/><text x="7.1701%" y="447.50">rust-gkat`rus..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (354 samples, 8.63%)</title><rect x="7.3830%" y="421" width="8.6257%" height="15" fill="rgb(230,62,22)" fg:x="303" fg:w="354"/><text x="7.6330%" y="431.50">rust-gkat`ru..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (339 samples, 8.26%)</title><rect x="7.7485%" y="405" width="8.2602%" height="15" fill="rgb(225,114,35)" fg:x="318" fg:w="339"/><text x="7.9985%" y="415.50">rust-gkat`ru..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::mk_raw (322 samples, 7.85%)</title><rect x="8.1628%" y="389" width="7.8460%" height="15" fill="rgb(215,118,42)" fg:x="335" fg:w="322"/><text x="8.4128%" y="399.50">rust-gkat`r..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9844%" y="373" width="0.0244%" height="15" fill="rgb(243,119,21)" fg:x="656" fg:w="1"/><text x="16.2344%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9844%" y="357" width="0.0244%" height="15" fill="rgb(252,177,53)" fg:x="656" fg:w="1"/><text x="16.2344%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="15.9844%" y="341" width="0.0244%" height="15" fill="rgb(237,209,29)" fg:x="656" fg:w="1"/><text x="16.2344%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="15.9844%" y="325" width="0.0244%" height="15" fill="rgb(212,65,23)" fg:x="656" fg:w="1"/><text x="16.2344%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="15.9844%" y="309" width="0.0244%" height="15" fill="rgb(230,222,46)" fg:x="656" fg:w="1"/><text x="16.2344%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="16.3499%" y="581" width="0.0244%" height="15" fill="rgb(215,135,32)" fg:x="671" fg:w="1"/><text x="16.5999%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="16.3743%" y="581" width="0.0244%" height="15" fill="rgb(246,101,22)" fg:x="672" fg:w="1"/><text x="16.6243%" y="591.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="16.3986%" y="581" width="0.0244%" height="15" fill="rgb(206,107,13)" fg:x="673" fg:w="1"/><text x="16.6486%" y="591.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="16.4230%" y="581" width="0.0244%" height="15" fill="rgb(250,100,44)" fg:x="674" fg:w="1"/><text x="16.6730%" y="591.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find (2 samples, 0.05%)</title><rect x="16.4474%" y="581" width="0.0487%" height="15" fill="rgb(231,147,38)" fg:x="675" fg:w="2"/><text x="16.6974%" y="591.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::union (3 samples, 0.07%)</title><rect x="16.4961%" y="581" width="0.0731%" height="15" fill="rgb(229,8,40)" fg:x="677" fg:w="3"/><text x="16.7461%" y="591.50"></text></g><g><title>rust-gkat`disjoint_sets::tree::UnionFindNode&lt;Data&gt;::find_with_rank (2 samples, 0.05%)</title><rect x="16.5205%" y="565" width="0.0487%" height="15" fill="rgb(221,135,30)" fg:x="678" fg:w="2"/><text x="16.7705%" y="575.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.5692%" y="581" width="0.0244%" height="15" fill="rgb(249,193,18)" fg:x="680" fg:w="1"/><text x="16.8192%" y="591.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="17.2515%" y="565" width="0.0244%" height="15" fill="rgb(209,133,39)" fg:x="708" fg:w="1"/><text x="17.5015%" y="575.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="17.6170%" y="549" width="0.0487%" height="15" fill="rgb(232,100,14)" fg:x="723" fg:w="2"/><text x="17.8670%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.17%)</title><rect x="17.6657%" y="549" width="0.1706%" height="15" fill="rgb(224,185,1)" fg:x="725" fg:w="7"/><text x="17.9157%" y="559.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="17.8606%" y="533" width="0.0487%" height="15" fill="rgb(223,139,8)" fg:x="733" fg:w="2"/><text x="18.1106%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="17.8363%" y="549" width="0.0975%" height="15" fill="rgb(232,213,38)" fg:x="732" fg:w="4"/><text x="18.0863%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="17.9094%" y="533" width="0.0244%" height="15" fill="rgb(207,94,22)" fg:x="735" fg:w="1"/><text x="18.1594%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="17.9337%" y="549" width="0.0731%" height="15" fill="rgb(219,183,54)" fg:x="736" fg:w="3"/><text x="18.1837%" y="559.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="17.9581%" y="533" width="0.0487%" height="15" fill="rgb(216,185,54)" fg:x="737" fg:w="2"/><text x="18.2081%" y="543.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.1774%" y="533" width="0.0244%" height="15" fill="rgb(254,217,39)" fg:x="746" fg:w="1"/><text x="18.4274%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="18.2018%" y="533" width="0.0487%" height="15" fill="rgb(240,178,23)" fg:x="747" fg:w="2"/><text x="18.4518%" y="543.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.2261%" y="517" width="0.0244%" height="15" fill="rgb(218,11,47)" fg:x="748" fg:w="1"/><text x="18.4761%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (7 samples, 0.17%)</title><rect x="18.2505%" y="533" width="0.1706%" height="15" fill="rgb(218,51,51)" fg:x="749" fg:w="7"/><text x="18.5005%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="18.3967%" y="517" width="0.0244%" height="15" fill="rgb(238,126,27)" fg:x="755" fg:w="1"/><text x="18.6467%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.3967%" y="501" width="0.0244%" height="15" fill="rgb(249,202,22)" fg:x="755" fg:w="1"/><text x="18.6467%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="18.4942%" y="517" width="0.0487%" height="15" fill="rgb(254,195,49)" fg:x="759" fg:w="2"/><text x="18.7442%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.5429%" y="517" width="0.0244%" height="15" fill="rgb(208,123,14)" fg:x="761" fg:w="1"/><text x="18.7929%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="18.5673%" y="517" width="0.0731%" height="15" fill="rgb(224,200,8)" fg:x="762" fg:w="3"/><text x="18.8173%" y="527.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="18.5673%" y="501" width="0.0731%" height="15" fill="rgb(217,61,36)" fg:x="762" fg:w="3"/><text x="18.8173%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="18.6404%" y="517" width="0.0731%" height="15" fill="rgb(206,35,45)" fg:x="765" fg:w="3"/><text x="18.8904%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="18.6891%" y="501" width="0.0244%" height="15" fill="rgb(217,65,33)" fg:x="767" fg:w="1"/><text x="18.9391%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.6891%" y="485" width="0.0244%" height="15" fill="rgb(222,158,48)" fg:x="767" fg:w="1"/><text x="18.9391%" y="495.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.8109%" y="501" width="0.0244%" height="15" fill="rgb(254,2,54)" fg:x="772" fg:w="1"/><text x="19.0609%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="18.8353%" y="501" width="0.0244%" height="15" fill="rgb(250,143,38)" fg:x="773" fg:w="1"/><text x="19.0853%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="18.9084%" y="485" width="0.0244%" height="15" fill="rgb(248,25,0)" fg:x="776" fg:w="1"/><text x="19.1584%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="18.8596%" y="501" width="0.1218%" height="15" fill="rgb(206,152,27)" fg:x="774" fg:w="5"/><text x="19.1096%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="18.9327%" y="485" width="0.0487%" height="15" fill="rgb(240,77,30)" fg:x="777" fg:w="2"/><text x="19.1827%" y="495.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (5 samples, 0.12%)</title><rect x="18.9815%" y="501" width="0.1218%" height="15" fill="rgb(231,5,3)" fg:x="779" fg:w="5"/><text x="19.2315%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="19.0789%" y="485" width="0.0244%" height="15" fill="rgb(207,226,32)" fg:x="783" fg:w="1"/><text x="19.3289%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="19.2008%" y="485" width="0.0975%" height="15" fill="rgb(222,207,47)" fg:x="788" fg:w="4"/><text x="19.4508%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="19.2495%" y="469" width="0.0487%" height="15" fill="rgb(229,115,45)" fg:x="790" fg:w="2"/><text x="19.4995%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="19.3226%" y="469" width="0.0731%" height="15" fill="rgb(224,191,6)" fg:x="793" fg:w="3"/><text x="19.5726%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (5 samples, 0.12%)</title><rect x="19.2982%" y="485" width="0.1218%" height="15" fill="rgb(230,227,24)" fg:x="792" fg:w="5"/><text x="19.5482%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="19.3957%" y="469" width="0.0244%" height="15" fill="rgb(228,80,19)" fg:x="796" fg:w="1"/><text x="19.6457%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="19.6150%" y="469" width="0.0731%" height="15" fill="rgb(247,229,0)" fg:x="805" fg:w="3"/><text x="19.8650%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="19.6881%" y="469" width="0.0244%" height="15" fill="rgb(237,194,15)" fg:x="808" fg:w="1"/><text x="19.9381%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="19.7856%" y="453" width="0.0487%" height="15" fill="rgb(219,203,20)" fg:x="812" fg:w="2"/><text x="20.0356%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="19.8343%" y="453" width="0.0731%" height="15" fill="rgb(234,128,8)" fg:x="814" fg:w="3"/><text x="20.0843%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (9 samples, 0.22%)</title><rect x="19.7125%" y="469" width="0.2193%" height="15" fill="rgb(248,202,8)" fg:x="809" fg:w="9"/><text x="19.9625%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="19.9074%" y="453" width="0.0244%" height="15" fill="rgb(206,104,37)" fg:x="817" fg:w="1"/><text x="20.1574%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.9074%" y="437" width="0.0244%" height="15" fill="rgb(223,8,27)" fg:x="817" fg:w="1"/><text x="20.1574%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="20.1267%" y="453" width="0.0731%" height="15" fill="rgb(216,217,28)" fg:x="826" fg:w="3"/><text x="20.3767%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="20.1998%" y="453" width="0.0487%" height="15" fill="rgb(249,199,1)" fg:x="829" fg:w="2"/><text x="20.4498%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="20.2242%" y="437" width="0.0244%" height="15" fill="rgb(240,85,17)" fg:x="830" fg:w="1"/><text x="20.4742%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="20.2485%" y="453" width="0.0244%" height="15" fill="rgb(206,108,45)" fg:x="831" fg:w="1"/><text x="20.4985%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.2485%" y="437" width="0.0244%" height="15" fill="rgb(245,210,41)" fg:x="831" fg:w="1"/><text x="20.4985%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="20.4678%" y="437" width="0.0487%" height="15" fill="rgb(206,13,37)" fg:x="840" fg:w="2"/><text x="20.7178%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="20.5166%" y="437" width="0.0244%" height="15" fill="rgb(250,61,18)" fg:x="842" fg:w="1"/><text x="20.7666%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.5653%" y="421" width="0.0244%" height="15" fill="rgb(235,172,48)" fg:x="844" fg:w="1"/><text x="20.8153%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="20.5409%" y="437" width="0.0731%" height="15" fill="rgb(249,201,17)" fg:x="843" fg:w="3"/><text x="20.7909%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="20.5897%" y="421" width="0.0244%" height="15" fill="rgb(219,208,6)" fg:x="845" fg:w="1"/><text x="20.8397%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.5897%" y="405" width="0.0244%" height="15" fill="rgb(248,31,23)" fg:x="845" fg:w="1"/><text x="20.8397%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="20.7115%" y="421" width="0.0244%" height="15" fill="rgb(245,15,42)" fg:x="850" fg:w="1"/><text x="20.9615%" y="431.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="20.7359%" y="421" width="0.0244%" height="15" fill="rgb(222,217,39)" fg:x="851" fg:w="1"/><text x="20.9859%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="20.7602%" y="421" width="0.0487%" height="15" fill="rgb(210,219,27)" fg:x="852" fg:w="2"/><text x="21.0102%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="20.7602%" y="405" width="0.0487%" height="15" fill="rgb(252,166,36)" fg:x="852" fg:w="2"/><text x="21.0102%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="20.9064%" y="405" width="0.0487%" height="15" fill="rgb(245,132,34)" fg:x="858" fg:w="2"/><text x="21.1564%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (7 samples, 0.17%)</title><rect x="20.8090%" y="421" width="0.1706%" height="15" fill="rgb(236,54,3)" fg:x="854" fg:w="7"/><text x="21.0590%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="20.9552%" y="405" width="0.0244%" height="15" fill="rgb(241,173,43)" fg:x="860" fg:w="1"/><text x="21.2052%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="20.9552%" y="389" width="0.0244%" height="15" fill="rgb(215,190,9)" fg:x="860" fg:w="1"/><text x="21.2052%" y="399.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.1745%" y="405" width="0.0244%" height="15" fill="rgb(242,101,16)" fg:x="869" fg:w="1"/><text x="21.4245%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="21.1988%" y="405" width="0.0244%" height="15" fill="rgb(223,190,21)" fg:x="870" fg:w="1"/><text x="21.4488%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.1988%" y="389" width="0.0244%" height="15" fill="rgb(215,228,25)" fg:x="870" fg:w="1"/><text x="21.4488%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (5 samples, 0.12%)</title><rect x="21.2232%" y="405" width="0.1218%" height="15" fill="rgb(225,36,22)" fg:x="871" fg:w="5"/><text x="21.4732%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.2963%" y="389" width="0.0487%" height="15" fill="rgb(251,106,46)" fg:x="874" fg:w="2"/><text x="21.5463%" y="399.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.4425%" y="389" width="0.0244%" height="15" fill="rgb(208,90,1)" fg:x="880" fg:w="1"/><text x="21.6925%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="21.4669%" y="389" width="0.0487%" height="15" fill="rgb(243,10,4)" fg:x="881" fg:w="2"/><text x="21.7169%" y="399.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.4912%" y="373" width="0.0244%" height="15" fill="rgb(212,137,27)" fg:x="882" fg:w="1"/><text x="21.7412%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="21.5156%" y="389" width="0.0487%" height="15" fill="rgb(231,220,49)" fg:x="883" fg:w="2"/><text x="21.7656%" y="399.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="21.7349%" y="373" width="0.0244%" height="15" fill="rgb(237,96,20)" fg:x="892" fg:w="1"/><text x="21.9849%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="21.7593%" y="373" width="0.0244%" height="15" fill="rgb(239,229,30)" fg:x="893" fg:w="1"/><text x="22.0093%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.7593%" y="357" width="0.0244%" height="15" fill="rgb(219,65,33)" fg:x="893" fg:w="1"/><text x="22.0093%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="21.7836%" y="373" width="0.0487%" height="15" fill="rgb(243,134,7)" fg:x="894" fg:w="2"/><text x="22.0336%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.8080%" y="357" width="0.0244%" height="15" fill="rgb(216,177,54)" fg:x="895" fg:w="1"/><text x="22.0580%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.9542%" y="357" width="0.0487%" height="15" fill="rgb(211,160,20)" fg:x="901" fg:w="2"/><text x="22.2042%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="22.0029%" y="357" width="0.0244%" height="15" fill="rgb(239,85,39)" fg:x="903" fg:w="1"/><text x="22.2529%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="22.0273%" y="357" width="0.0244%" height="15" fill="rgb(232,125,22)" fg:x="904" fg:w="1"/><text x="22.2773%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.0273%" y="341" width="0.0244%" height="15" fill="rgb(244,57,34)" fg:x="904" fg:w="1"/><text x="22.2773%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.1004%" y="341" width="0.0244%" height="15" fill="rgb(214,203,32)" fg:x="907" fg:w="1"/><text x="22.3504%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="22.1248%" y="341" width="0.0244%" height="15" fill="rgb(207,58,43)" fg:x="908" fg:w="1"/><text x="22.3748%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.1735%" y="325" width="0.0244%" height="15" fill="rgb(215,193,15)" fg:x="910" fg:w="1"/><text x="22.4235%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (7 samples, 0.17%)</title><rect x="22.0517%" y="357" width="0.1706%" height="15" fill="rgb(232,15,44)" fg:x="905" fg:w="7"/><text x="22.3017%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="22.1491%" y="341" width="0.0731%" height="15" fill="rgb(212,3,48)" fg:x="909" fg:w="3"/><text x="22.3991%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="22.1979%" y="325" width="0.0244%" height="15" fill="rgb(218,128,7)" fg:x="911" fg:w="1"/><text x="22.4479%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.3684%" y="341" width="0.0244%" height="15" fill="rgb(226,216,39)" fg:x="918" fg:w="1"/><text x="22.6184%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="22.3928%" y="341" width="0.0487%" height="15" fill="rgb(243,47,51)" fg:x="919" fg:w="2"/><text x="22.6428%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="22.3928%" y="325" width="0.0487%" height="15" fill="rgb(241,183,40)" fg:x="919" fg:w="2"/><text x="22.6428%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="22.4415%" y="341" width="0.0731%" height="15" fill="rgb(231,217,32)" fg:x="921" fg:w="3"/><text x="22.6915%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="22.4659%" y="325" width="0.0487%" height="15" fill="rgb(229,61,38)" fg:x="922" fg:w="2"/><text x="22.7159%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="22.6852%" y="325" width="0.0487%" height="15" fill="rgb(225,210,5)" fg:x="931" fg:w="2"/><text x="22.9352%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.7339%" y="309" width="0.0244%" height="15" fill="rgb(231,79,45)" fg:x="933" fg:w="1"/><text x="22.9839%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="22.7339%" y="325" width="0.0487%" height="15" fill="rgb(224,100,7)" fg:x="933" fg:w="2"/><text x="22.9839%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="22.7583%" y="309" width="0.0244%" height="15" fill="rgb(241,198,18)" fg:x="934" fg:w="1"/><text x="23.0083%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="22.9045%" y="309" width="0.0731%" height="15" fill="rgb(252,97,53)" fg:x="940" fg:w="3"/><text x="23.1545%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (9 samples, 0.22%)</title><rect x="22.7827%" y="325" width="0.2193%" height="15" fill="rgb(220,88,7)" fg:x="935" fg:w="9"/><text x="23.0327%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="22.9776%" y="309" width="0.0244%" height="15" fill="rgb(213,176,14)" fg:x="943" fg:w="1"/><text x="23.2276%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="22.9776%" y="293" width="0.0244%" height="15" fill="rgb(246,73,7)" fg:x="943" fg:w="1"/><text x="23.2276%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="23.0750%" y="309" width="0.0244%" height="15" fill="rgb(245,64,36)" fg:x="947" fg:w="1"/><text x="23.3250%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="23.0994%" y="309" width="0.0244%" height="15" fill="rgb(245,80,10)" fg:x="948" fg:w="1"/><text x="23.3494%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="23.1238%" y="309" width="0.0244%" height="15" fill="rgb(232,107,50)" fg:x="949" fg:w="1"/><text x="23.3738%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="23.1725%" y="293" width="0.0487%" height="15" fill="rgb(253,3,0)" fg:x="951" fg:w="2"/><text x="23.4225%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (4 samples, 0.10%)</title><rect x="23.1481%" y="309" width="0.0975%" height="15" fill="rgb(212,99,53)" fg:x="950" fg:w="4"/><text x="23.3981%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="23.2212%" y="293" width="0.0244%" height="15" fill="rgb(249,111,54)" fg:x="953" fg:w="1"/><text x="23.4712%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="23.3187%" y="293" width="0.0487%" height="15" fill="rgb(249,55,30)" fg:x="957" fg:w="2"/><text x="23.5687%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="23.3674%" y="293" width="0.0244%" height="15" fill="rgb(237,47,42)" fg:x="959" fg:w="1"/><text x="23.6174%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="23.4162%" y="277" width="0.0487%" height="15" fill="rgb(211,20,18)" fg:x="961" fg:w="2"/><text x="23.6662%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (7 samples, 0.17%)</title><rect x="23.3918%" y="293" width="0.1706%" height="15" fill="rgb(231,203,46)" fg:x="960" fg:w="7"/><text x="23.6418%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="23.4649%" y="277" width="0.0975%" height="15" fill="rgb(237,142,3)" fg:x="963" fg:w="4"/><text x="23.7149%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="23.6111%" y="277" width="0.0244%" height="15" fill="rgb(241,107,1)" fg:x="969" fg:w="1"/><text x="23.8611%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="23.6355%" y="277" width="0.0244%" height="15" fill="rgb(229,83,13)" fg:x="970" fg:w="1"/><text x="23.8855%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="23.7086%" y="261" width="0.0244%" height="15" fill="rgb(241,91,40)" fg:x="973" fg:w="1"/><text x="23.9586%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="23.7329%" y="261" width="0.0244%" height="15" fill="rgb(225,3,45)" fg:x="974" fg:w="1"/><text x="23.9829%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="23.7329%" y="245" width="0.0244%" height="15" fill="rgb(244,223,14)" fg:x="974" fg:w="1"/><text x="23.9829%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="23.8548%" y="245" width="0.0487%" height="15" fill="rgb(224,124,37)" fg:x="979" fg:w="2"/><text x="24.1048%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="23.9035%" y="245" width="0.0244%" height="15" fill="rgb(251,171,30)" fg:x="981" fg:w="1"/><text x="24.1535%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (5 samples, 0.12%)</title><rect x="23.9279%" y="245" width="0.1218%" height="15" fill="rgb(236,46,54)" fg:x="982" fg:w="5"/><text x="24.1779%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="23.9522%" y="229" width="0.0975%" height="15" fill="rgb(245,213,5)" fg:x="983" fg:w="4"/><text x="24.2022%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="24.1228%" y="229" width="0.0244%" height="15" fill="rgb(230,144,27)" fg:x="990" fg:w="1"/><text x="24.3728%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.1228%" y="213" width="0.0244%" height="15" fill="rgb(220,86,6)" fg:x="990" fg:w="1"/><text x="24.3728%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="24.1472%" y="229" width="0.0244%" height="15" fill="rgb(240,20,13)" fg:x="991" fg:w="1"/><text x="24.3972%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="24.1959%" y="213" width="0.0487%" height="15" fill="rgb(217,89,34)" fg:x="993" fg:w="2"/><text x="24.4459%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="24.2446%" y="213" width="0.0487%" height="15" fill="rgb(229,13,5)" fg:x="995" fg:w="2"/><text x="24.4946%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="24.2690%" y="197" width="0.0244%" height="15" fill="rgb(244,67,35)" fg:x="996" fg:w="1"/><text x="24.5190%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="24.2690%" y="181" width="0.0244%" height="15" fill="rgb(221,40,2)" fg:x="996" fg:w="1"/><text x="24.5190%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.3665%" y="197" width="0.0244%" height="15" fill="rgb(237,157,21)" fg:x="1000" fg:w="1"/><text x="24.6165%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="24.3908%" y="197" width="0.0244%" height="15" fill="rgb(222,94,11)" fg:x="1001" fg:w="1"/><text x="24.6408%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.3908%" y="181" width="0.0244%" height="15" fill="rgb(249,113,6)" fg:x="1001" fg:w="1"/><text x="24.6408%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="24.4396%" y="181" width="0.0731%" height="15" fill="rgb(238,137,36)" fg:x="1003" fg:w="3"/><text x="24.6896%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="24.4639%" y="165" width="0.0487%" height="15" fill="rgb(210,102,26)" fg:x="1004" fg:w="2"/><text x="24.7139%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="24.5127%" y="165" width="0.0244%" height="15" fill="rgb(218,30,30)" fg:x="1006" fg:w="1"/><text x="24.7627%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="24.5370%" y="165" width="0.0244%" height="15" fill="rgb(214,67,26)" fg:x="1007" fg:w="1"/><text x="24.7870%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.5370%" y="149" width="0.0244%" height="15" fill="rgb(251,9,53)" fg:x="1007" fg:w="1"/><text x="24.7870%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="24.5614%" y="133" width="0.0244%" height="15" fill="rgb(228,204,25)" fg:x="1008" fg:w="1"/><text x="24.8114%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.5614%" y="117" width="0.0244%" height="15" fill="rgb(207,153,8)" fg:x="1008" fg:w="1"/><text x="24.8114%" y="127.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="24.5858%" y="117" width="0.0244%" height="15" fill="rgb(242,9,16)" fg:x="1009" fg:w="1"/><text x="24.8358%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.5858%" y="101" width="0.0244%" height="15" fill="rgb(217,211,10)" fg:x="1009" fg:w="1"/><text x="24.8358%" y="111.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (302 samples, 7.36%)</title><rect x="17.2758%" y="565" width="7.3587%" height="15" fill="rgb(219,228,52)" fg:x="709" fg:w="302"/><text x="17.5258%" y="575.50">rust-gkat`..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (272 samples, 6.63%)</title><rect x="18.0068%" y="549" width="6.6277%" height="15" fill="rgb(231,92,29)" fg:x="739" fg:w="272"/><text x="18.2568%" y="559.50">rust-gkat..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (255 samples, 6.21%)</title><rect x="18.4211%" y="533" width="6.2135%" height="15" fill="rgb(232,8,23)" fg:x="756" fg:w="255"/><text x="18.6711%" y="543.50">rust-gka..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (243 samples, 5.92%)</title><rect x="18.7135%" y="517" width="5.9211%" height="15" fill="rgb(216,211,34)" fg:x="768" fg:w="243"/><text x="18.9635%" y="527.50">rust-gka..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (227 samples, 5.53%)</title><rect x="19.1033%" y="501" width="5.5312%" height="15" fill="rgb(236,151,0)" fg:x="784" fg:w="227"/><text x="19.3533%" y="511.50">rust-gk..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (214 samples, 5.21%)</title><rect x="19.4201%" y="485" width="5.2144%" height="15" fill="rgb(209,168,3)" fg:x="797" fg:w="214"/><text x="19.6701%" y="495.50">rust-g..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (193 samples, 4.70%)</title><rect x="19.9318%" y="469" width="4.7027%" height="15" fill="rgb(208,129,28)" fg:x="818" fg:w="193"/><text x="20.1818%" y="479.50">rust-..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (179 samples, 4.36%)</title><rect x="20.2729%" y="453" width="4.3616%" height="15" fill="rgb(229,78,22)" fg:x="832" fg:w="179"/><text x="20.5229%" y="463.50">rust-..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (165 samples, 4.02%)</title><rect x="20.6140%" y="437" width="4.0205%" height="15" fill="rgb(228,187,13)" fg:x="846" fg:w="165"/><text x="20.8640%" y="447.50">rust..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (150 samples, 3.65%)</title><rect x="20.9795%" y="421" width="3.6550%" height="15" fill="rgb(240,119,24)" fg:x="861" fg:w="150"/><text x="21.2295%" y="431.50">rust..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (135 samples, 3.29%)</title><rect x="21.3450%" y="405" width="3.2895%" height="15" fill="rgb(209,194,42)" fg:x="876" fg:w="135"/><text x="21.5950%" y="415.50">rus..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (126 samples, 3.07%)</title><rect x="21.5643%" y="389" width="3.0702%" height="15" fill="rgb(247,200,46)" fg:x="885" fg:w="126"/><text x="21.8143%" y="399.50">rus..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (115 samples, 2.80%)</title><rect x="21.8324%" y="373" width="2.8021%" height="15" fill="rgb(218,76,16)" fg:x="896" fg:w="115"/><text x="22.0824%" y="383.50">ru..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (99 samples, 2.41%)</title><rect x="22.2222%" y="357" width="2.4123%" height="15" fill="rgb(225,21,48)" fg:x="912" fg:w="99"/><text x="22.4722%" y="367.50">ru..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (87 samples, 2.12%)</title><rect x="22.5146%" y="341" width="2.1199%" height="15" fill="rgb(239,223,50)" fg:x="924" fg:w="87"/><text x="22.7646%" y="351.50">r..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (67 samples, 1.63%)</title><rect x="23.0019%" y="325" width="1.6326%" height="15" fill="rgb(244,45,21)" fg:x="944" fg:w="67"/><text x="23.2519%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (57 samples, 1.39%)</title><rect x="23.2456%" y="309" width="1.3889%" height="15" fill="rgb(232,33,43)" fg:x="954" fg:w="57"/><text x="23.4956%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (44 samples, 1.07%)</title><rect x="23.5624%" y="293" width="1.0721%" height="15" fill="rgb(209,8,3)" fg:x="967" fg:w="44"/><text x="23.8124%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (40 samples, 0.97%)</title><rect x="23.6598%" y="277" width="0.9747%" height="15" fill="rgb(214,25,53)" fg:x="971" fg:w="40"/><text x="23.9098%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (36 samples, 0.88%)</title><rect x="23.7573%" y="261" width="0.8772%" height="15" fill="rgb(254,186,54)" fg:x="975" fg:w="36"/><text x="24.0073%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (24 samples, 0.58%)</title><rect x="24.0497%" y="245" width="0.5848%" height="15" fill="rgb(208,174,49)" fg:x="987" fg:w="24"/><text x="24.2997%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (19 samples, 0.46%)</title><rect x="24.1715%" y="229" width="0.4630%" height="15" fill="rgb(233,191,51)" fg:x="992" fg:w="19"/><text x="24.4215%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (14 samples, 0.34%)</title><rect x="24.2934%" y="213" width="0.3411%" height="15" fill="rgb(222,134,10)" fg:x="997" fg:w="14"/><text x="24.5434%" y="223.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (9 samples, 0.22%)</title><rect x="24.4152%" y="197" width="0.2193%" height="15" fill="rgb(230,226,20)" fg:x="1002" fg:w="9"/><text x="24.6652%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (5 samples, 0.12%)</title><rect x="24.5127%" y="181" width="0.1218%" height="15" fill="rgb(251,111,25)" fg:x="1006" fg:w="5"/><text x="24.7627%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="24.5614%" y="165" width="0.0731%" height="15" fill="rgb(224,40,46)" fg:x="1008" fg:w="3"/><text x="24.8114%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (3 samples, 0.07%)</title><rect x="24.5614%" y="149" width="0.0731%" height="15" fill="rgb(236,108,47)" fg:x="1008" fg:w="3"/><text x="24.8114%" y="159.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="24.5858%" y="133" width="0.0487%" height="15" fill="rgb(234,93,0)" fg:x="1009" fg:w="2"/><text x="24.8358%" y="143.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="24.6101%" y="117" width="0.0244%" height="15" fill="rgb(224,213,32)" fg:x="1010" fg:w="1"/><text x="24.8601%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.6101%" y="101" width="0.0244%" height="15" fill="rgb(251,11,48)" fg:x="1010" fg:w="1"/><text x="24.8601%" y="111.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.8294%" y="549" width="0.0244%" height="15" fill="rgb(236,173,5)" fg:x="1019" fg:w="1"/><text x="25.0794%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="24.8538%" y="549" width="0.0975%" height="15" fill="rgb(230,95,12)" fg:x="1020" fg:w="4"/><text x="25.1038%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="24.9513%" y="549" width="0.0487%" height="15" fill="rgb(232,209,1)" fg:x="1024" fg:w="2"/><text x="25.2013%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="24.9756%" y="533" width="0.0244%" height="15" fill="rgb(232,6,1)" fg:x="1025" fg:w="1"/><text x="25.2256%" y="543.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (8 samples, 0.19%)</title><rect x="25.0000%" y="549" width="0.1949%" height="15" fill="rgb(210,224,50)" fg:x="1026" fg:w="8"/><text x="25.2500%" y="559.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="25.0731%" y="533" width="0.1218%" height="15" fill="rgb(228,127,35)" fg:x="1029" fg:w="5"/><text x="25.3231%" y="543.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="25.2680%" y="533" width="0.0487%" height="15" fill="rgb(245,102,45)" fg:x="1037" fg:w="2"/><text x="25.5180%" y="543.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="25.3411%" y="517" width="0.0731%" height="15" fill="rgb(214,1,49)" fg:x="1040" fg:w="3"/><text x="25.5911%" y="527.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (5 samples, 0.12%)</title><rect x="25.3168%" y="533" width="0.1218%" height="15" fill="rgb(226,163,40)" fg:x="1039" fg:w="5"/><text x="25.5668%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="25.4142%" y="517" width="0.0244%" height="15" fill="rgb(239,212,28)" fg:x="1043" fg:w="1"/><text x="25.6642%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="25.4142%" y="501" width="0.0244%" height="15" fill="rgb(220,20,13)" fg:x="1043" fg:w="1"/><text x="25.6642%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="25.5848%" y="517" width="0.0244%" height="15" fill="rgb(210,164,35)" fg:x="1050" fg:w="1"/><text x="25.8348%" y="527.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="25.6092%" y="517" width="0.0244%" height="15" fill="rgb(248,109,41)" fg:x="1051" fg:w="1"/><text x="25.8592%" y="527.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="25.6092%" y="501" width="0.0244%" height="15" fill="rgb(238,23,50)" fg:x="1051" fg:w="1"/><text x="25.8592%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="25.6823%" y="501" width="0.1218%" height="15" fill="rgb(211,48,49)" fg:x="1054" fg:w="5"/><text x="25.9323%" y="511.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (10 samples, 0.24%)</title><rect x="25.6335%" y="517" width="0.2437%" height="15" fill="rgb(223,36,21)" fg:x="1052" fg:w="10"/><text x="25.8835%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="25.8041%" y="501" width="0.0731%" height="15" fill="rgb(207,123,46)" fg:x="1059" fg:w="3"/><text x="26.0541%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="25.9990%" y="469" width="0.0731%" height="15" fill="rgb(240,218,32)" fg:x="1067" fg:w="3"/><text x="26.2490%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="25.9990%" y="501" width="0.0975%" height="15" fill="rgb(252,5,43)" fg:x="1067" fg:w="4"/><text x="26.2490%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="25.9990%" y="485" width="0.0975%" height="15" fill="rgb(252,84,19)" fg:x="1067" fg:w="4"/><text x="26.2490%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.0721%" y="469" width="0.0244%" height="15" fill="rgb(243,152,39)" fg:x="1070" fg:w="1"/><text x="26.3221%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="26.1696%" y="485" width="0.0731%" height="15" fill="rgb(234,160,15)" fg:x="1074" fg:w="3"/><text x="26.4196%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.2427%" y="485" width="0.0244%" height="15" fill="rgb(237,34,20)" fg:x="1077" fg:w="1"/><text x="26.4927%" y="495.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="26.2914%" y="469" width="0.0487%" height="15" fill="rgb(229,97,13)" fg:x="1079" fg:w="2"/><text x="26.5414%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (11 samples, 0.27%)</title><rect x="26.0965%" y="501" width="0.2680%" height="15" fill="rgb(234,71,50)" fg:x="1071" fg:w="11"/><text x="26.3465%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="26.2671%" y="485" width="0.0975%" height="15" fill="rgb(253,155,4)" fg:x="1078" fg:w="4"/><text x="26.5171%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.3402%" y="469" width="0.0244%" height="15" fill="rgb(222,185,37)" fg:x="1081" fg:w="1"/><text x="26.5902%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.4620%" y="485" width="0.0244%" height="15" fill="rgb(251,177,13)" fg:x="1086" fg:w="1"/><text x="26.7120%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="26.4864%" y="485" width="0.0975%" height="15" fill="rgb(250,179,40)" fg:x="1087" fg:w="4"/><text x="26.7364%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="26.5595%" y="469" width="0.0244%" height="15" fill="rgb(242,44,2)" fg:x="1090" fg:w="1"/><text x="26.8095%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.5595%" y="453" width="0.0244%" height="15" fill="rgb(216,177,13)" fg:x="1090" fg:w="1"/><text x="26.8095%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="26.6569%" y="469" width="0.0244%" height="15" fill="rgb(216,106,43)" fg:x="1094" fg:w="1"/><text x="26.9069%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="26.6813%" y="469" width="0.0731%" height="15" fill="rgb(216,183,2)" fg:x="1095" fg:w="3"/><text x="26.9313%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="26.7544%" y="453" width="0.0244%" height="15" fill="rgb(249,75,3)" fg:x="1098" fg:w="1"/><text x="27.0044%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.27%)</title><rect x="26.9737%" y="437" width="0.2680%" height="15" fill="rgb(219,67,39)" fg:x="1107" fg:w="11"/><text x="27.2237%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (30 samples, 0.73%)</title><rect x="26.5838%" y="485" width="0.7310%" height="15" fill="rgb(253,228,2)" fg:x="1091" fg:w="30"/><text x="26.8338%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.56%)</title><rect x="26.7544%" y="469" width="0.5604%" height="15" fill="rgb(235,138,27)" fg:x="1098" fg:w="23"/><text x="27.0044%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.54%)</title><rect x="26.7788%" y="453" width="0.5361%" height="15" fill="rgb(236,97,51)" fg:x="1099" fg:w="22"/><text x="27.0288%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="27.2417%" y="437" width="0.0731%" height="15" fill="rgb(240,80,30)" fg:x="1118" fg:w="3"/><text x="27.4917%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="27.4366%" y="469" width="0.0244%" height="15" fill="rgb(230,178,19)" fg:x="1126" fg:w="1"/><text x="27.6866%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="27.4610%" y="469" width="0.0487%" height="15" fill="rgb(210,190,27)" fg:x="1127" fg:w="2"/><text x="27.7110%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="27.4854%" y="453" width="0.0244%" height="15" fill="rgb(222,107,31)" fg:x="1128" fg:w="1"/><text x="27.7354%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="27.5097%" y="469" width="0.0731%" height="15" fill="rgb(216,127,34)" fg:x="1129" fg:w="3"/><text x="27.7597%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="27.5341%" y="453" width="0.0487%" height="15" fill="rgb(234,116,52)" fg:x="1130" fg:w="2"/><text x="27.7841%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="27.6803%" y="453" width="0.1218%" height="15" fill="rgb(222,124,15)" fg:x="1136" fg:w="5"/><text x="27.9303%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="27.7290%" y="437" width="0.0731%" height="15" fill="rgb(231,179,28)" fg:x="1138" fg:w="3"/><text x="27.9790%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="27.8265%" y="437" width="0.0731%" height="15" fill="rgb(226,93,45)" fg:x="1142" fg:w="3"/><text x="28.0765%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="27.8996%" y="437" width="0.0244%" height="15" fill="rgb(215,8,51)" fg:x="1145" fg:w="1"/><text x="28.1496%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (6 samples, 0.15%)</title><rect x="27.8021%" y="453" width="0.1462%" height="15" fill="rgb(223,106,5)" fg:x="1141" fg:w="6"/><text x="28.0521%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="27.9240%" y="437" width="0.0244%" height="15" fill="rgb(250,191,5)" fg:x="1146" fg:w="1"/><text x="28.1740%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="27.9240%" y="421" width="0.0244%" height="15" fill="rgb(242,132,44)" fg:x="1146" fg:w="1"/><text x="28.1740%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="27.9971%" y="437" width="0.0244%" height="15" fill="rgb(251,152,29)" fg:x="1149" fg:w="1"/><text x="28.2471%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="28.0214%" y="421" width="0.0487%" height="15" fill="rgb(218,179,5)" fg:x="1150" fg:w="2"/><text x="28.2714%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="28.0214%" y="437" width="0.0731%" height="15" fill="rgb(227,67,19)" fg:x="1150" fg:w="3"/><text x="28.2714%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="28.0702%" y="421" width="0.0244%" height="15" fill="rgb(233,119,31)" fg:x="1152" fg:w="1"/><text x="28.3202%" y="431.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.0702%" y="405" width="0.0244%" height="15" fill="rgb(241,120,22)" fg:x="1152" fg:w="1"/><text x="28.3202%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="28.0945%" y="405" width="0.0244%" height="15" fill="rgb(224,102,30)" fg:x="1153" fg:w="1"/><text x="28.3445%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="28.0945%" y="421" width="0.0731%" height="15" fill="rgb(210,164,37)" fg:x="1153" fg:w="3"/><text x="28.3445%" y="431.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="28.1189%" y="405" width="0.0487%" height="15" fill="rgb(226,191,16)" fg:x="1154" fg:w="2"/><text x="28.3689%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="28.1676%" y="405" width="0.0244%" height="15" fill="rgb(214,40,45)" fg:x="1156" fg:w="1"/><text x="28.4176%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.1676%" y="389" width="0.0244%" height="15" fill="rgb(244,29,26)" fg:x="1156" fg:w="1"/><text x="28.4176%" y="399.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="28.1920%" y="389" width="0.0244%" height="15" fill="rgb(216,16,5)" fg:x="1157" fg:w="1"/><text x="28.4420%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="28.1920%" y="405" width="0.0487%" height="15" fill="rgb(249,76,35)" fg:x="1157" fg:w="2"/><text x="28.4420%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="28.2164%" y="389" width="0.0244%" height="15" fill="rgb(207,11,44)" fg:x="1158" fg:w="1"/><text x="28.4664%" y="399.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.2164%" y="373" width="0.0244%" height="15" fill="rgb(228,190,49)" fg:x="1158" fg:w="1"/><text x="28.4664%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.2651%" y="373" width="0.0244%" height="15" fill="rgb(214,173,12)" fg:x="1160" fg:w="1"/><text x="28.5151%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="28.3382%" y="357" width="0.0487%" height="15" fill="rgb(218,26,35)" fg:x="1163" fg:w="2"/><text x="28.5882%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="28.2651%" y="389" width="0.1706%" height="15" fill="rgb(220,200,19)" fg:x="1160" fg:w="7"/><text x="28.5151%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="28.2895%" y="373" width="0.1462%" height="15" fill="rgb(239,95,49)" fg:x="1161" fg:w="6"/><text x="28.5395%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="28.3869%" y="357" width="0.0487%" height="15" fill="rgb(235,85,53)" fg:x="1165" fg:w="2"/><text x="28.6369%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (4 samples, 0.10%)</title><rect x="28.5088%" y="373" width="0.0975%" height="15" fill="rgb(233,133,31)" fg:x="1170" fg:w="4"/><text x="28.7588%" y="383.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="28.5819%" y="357" width="0.0244%" height="15" fill="rgb(218,25,20)" fg:x="1173" fg:w="1"/><text x="28.8319%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="28.5819%" y="341" width="0.0244%" height="15" fill="rgb(252,210,38)" fg:x="1173" fg:w="1"/><text x="28.8319%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.7281%" y="341" width="0.0244%" height="15" fill="rgb(242,134,21)" fg:x="1179" fg:w="1"/><text x="28.9781%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="28.7037%" y="357" width="0.0731%" height="15" fill="rgb(213,28,48)" fg:x="1178" fg:w="3"/><text x="28.9537%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="28.7524%" y="341" width="0.0244%" height="15" fill="rgb(250,196,2)" fg:x="1180" fg:w="1"/><text x="29.0024%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="28.7524%" y="325" width="0.0244%" height="15" fill="rgb(227,5,17)" fg:x="1180" fg:w="1"/><text x="29.0024%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="28.8012%" y="341" width="0.0244%" height="15" fill="rgb(221,226,24)" fg:x="1182" fg:w="1"/><text x="29.0512%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="28.8012%" y="325" width="0.0244%" height="15" fill="rgb(211,5,48)" fg:x="1182" fg:w="1"/><text x="29.0512%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="28.8499%" y="325" width="0.0487%" height="15" fill="rgb(219,150,6)" fg:x="1184" fg:w="2"/><text x="29.0999%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="28.8499%" y="309" width="0.0487%" height="15" fill="rgb(251,46,16)" fg:x="1184" fg:w="2"/><text x="29.0999%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="28.8743%" y="293" width="0.0244%" height="15" fill="rgb(220,204,40)" fg:x="1185" fg:w="1"/><text x="29.1243%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (3 samples, 0.07%)</title><rect x="28.8986%" y="325" width="0.0731%" height="15" fill="rgb(211,85,2)" fg:x="1186" fg:w="3"/><text x="29.1486%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="28.8986%" y="309" width="0.0731%" height="15" fill="rgb(229,17,7)" fg:x="1186" fg:w="3"/><text x="29.1486%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="29.0205%" y="309" width="0.0244%" height="15" fill="rgb(239,72,28)" fg:x="1191" fg:w="1"/><text x="29.2705%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="29.0448%" y="293" width="0.0244%" height="15" fill="rgb(230,47,54)" fg:x="1192" fg:w="1"/><text x="29.2948%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (2 samples, 0.05%)</title><rect x="29.0448%" y="309" width="0.0487%" height="15" fill="rgb(214,50,8)" fg:x="1192" fg:w="2"/><text x="29.2948%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="29.0692%" y="293" width="0.0244%" height="15" fill="rgb(216,198,43)" fg:x="1193" fg:w="1"/><text x="29.3192%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::search::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::reject (514 samples, 12.52%)</title><rect x="16.5936%" y="581" width="12.5244%" height="15" fill="rgb(234,20,35)" fg:x="681" fg:w="514"/><text x="16.8436%" y="591.50">rust-gkat`rust_gkat..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (184 samples, 4.48%)</title><rect x="24.6345%" y="565" width="4.4834%" height="15" fill="rgb(254,45,19)" fg:x="1011" fg:w="184"/><text x="24.8845%" y="575.50">rust-..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (161 samples, 3.92%)</title><rect x="25.1949%" y="549" width="3.9230%" height="15" fill="rgb(219,14,44)" fg:x="1034" fg:w="161"/><text x="25.4449%" y="559.50">rust..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (151 samples, 3.68%)</title><rect x="25.4386%" y="533" width="3.6793%" height="15" fill="rgb(217,220,26)" fg:x="1044" fg:w="151"/><text x="25.6886%" y="543.50">rust..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (133 samples, 3.24%)</title><rect x="25.8772%" y="517" width="3.2407%" height="15" fill="rgb(213,158,28)" fg:x="1062" fg:w="133"/><text x="26.1272%" y="527.50">rus..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (113 samples, 2.75%)</title><rect x="26.3645%" y="501" width="2.7534%" height="15" fill="rgb(252,51,52)" fg:x="1082" fg:w="113"/><text x="26.6145%" y="511.50">ru..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (74 samples, 1.80%)</title><rect x="27.3148%" y="485" width="1.8031%" height="15" fill="rgb(246,89,16)" fg:x="1121" fg:w="74"/><text x="27.5648%" y="495.50">r..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (63 samples, 1.54%)</title><rect x="27.5828%" y="469" width="1.5351%" height="15" fill="rgb(216,158,49)" fg:x="1132" fg:w="63"/><text x="27.8328%" y="479.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (48 samples, 1.17%)</title><rect x="27.9483%" y="453" width="1.1696%" height="15" fill="rgb(236,107,19)" fg:x="1147" fg:w="48"/><text x="28.1983%" y="463.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (42 samples, 1.02%)</title><rect x="28.0945%" y="437" width="1.0234%" height="15" fill="rgb(228,185,30)" fg:x="1153" fg:w="42"/><text x="28.3445%" y="447.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (39 samples, 0.95%)</title><rect x="28.1676%" y="421" width="0.9503%" height="15" fill="rgb(246,134,8)" fg:x="1156" fg:w="39"/><text x="28.4176%" y="431.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (36 samples, 0.88%)</title><rect x="28.2407%" y="405" width="0.8772%" height="15" fill="rgb(214,143,50)" fg:x="1159" fg:w="36"/><text x="28.4907%" y="415.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (28 samples, 0.68%)</title><rect x="28.4357%" y="389" width="0.6823%" height="15" fill="rgb(228,75,8)" fg:x="1167" fg:w="28"/><text x="28.6857%" y="399.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (21 samples, 0.51%)</title><rect x="28.6062%" y="373" width="0.5117%" height="15" fill="rgb(207,175,4)" fg:x="1174" fg:w="21"/><text x="28.8562%" y="383.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (14 samples, 0.34%)</title><rect x="28.7768%" y="357" width="0.3411%" height="15" fill="rgb(205,108,24)" fg:x="1181" fg:w="14"/><text x="29.0268%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (12 samples, 0.29%)</title><rect x="28.8255%" y="341" width="0.2924%" height="15" fill="rgb(244,120,49)" fg:x="1183" fg:w="12"/><text x="29.0755%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (6 samples, 0.15%)</title><rect x="28.9717%" y="325" width="0.1462%" height="15" fill="rgb(223,47,38)" fg:x="1189" fg:w="6"/><text x="29.2217%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="29.0936%" y="309" width="0.0244%" height="15" fill="rgb(229,179,11)" fg:x="1194" fg:w="1"/><text x="29.3436%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="29.0936%" y="293" width="0.0244%" height="15" fill="rgb(231,122,1)" fg:x="1194" fg:w="1"/><text x="29.3436%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="29.0936%" y="277" width="0.0244%" height="15" fill="rgb(245,119,9)" fg:x="1194" fg:w="1"/><text x="29.3436%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="29.0936%" y="261" width="0.0244%" height="15" fill="rgb(241,163,25)" fg:x="1194" fg:w="1"/><text x="29.3436%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="29.0936%" y="245" width="0.0244%" height="15" fill="rgb(217,214,3)" fg:x="1194" fg:w="1"/><text x="29.3436%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.17%)</title><rect x="29.9951%" y="565" width="0.1706%" height="15" fill="rgb(240,86,28)" fg:x="1231" fg:w="7"/><text x="30.2451%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.10%)</title><rect x="30.0682%" y="549" width="0.0975%" height="15" fill="rgb(215,47,9)" fg:x="1234" fg:w="4"/><text x="30.3182%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.10%)</title><rect x="30.0682%" y="533" width="0.0975%" height="15" fill="rgb(252,25,45)" fg:x="1234" fg:w="4"/><text x="30.3182%" y="543.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;::get_uf (59 samples, 1.44%)</title><rect x="29.1179%" y="581" width="1.4376%" height="15" fill="rgb(251,164,9)" fg:x="1195" fg:w="59"/><text x="29.3679%" y="591.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.39%)</title><rect x="30.1657%" y="565" width="0.3899%" height="15" fill="rgb(233,194,0)" fg:x="1238" fg:w="16"/><text x="30.4157%" y="575.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.15%)</title><rect x="30.4094%" y="549" width="0.1462%" height="15" fill="rgb(249,111,24)" fg:x="1248" fg:w="6"/><text x="30.6594%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="30.5312%" y="533" width="0.0244%" height="15" fill="rgb(250,223,3)" fg:x="1253" fg:w="1"/><text x="30.7812%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="30.5312%" y="517" width="0.0244%" height="15" fill="rgb(236,178,37)" fg:x="1253" fg:w="1"/><text x="30.7812%" y="527.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.32%)</title><rect x="31.2865%" y="565" width="0.3168%" height="15" fill="rgb(241,158,50)" fg:x="1284" fg:w="13"/><text x="31.5365%" y="575.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (24 samples, 0.58%)</title><rect x="31.6033%" y="565" width="0.5848%" height="15" fill="rgb(213,121,41)" fg:x="1297" fg:w="24"/><text x="31.8533%" y="575.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="32.2125%" y="549" width="0.0975%" height="15" fill="rgb(240,92,3)" fg:x="1322" fg:w="4"/><text x="32.4625%" y="559.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="32.1881%" y="565" width="0.1706%" height="15" fill="rgb(205,123,3)" fg:x="1321" fg:w="7"/><text x="32.4381%" y="575.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="32.3099%" y="549" width="0.0487%" height="15" fill="rgb(205,97,47)" fg:x="1326" fg:w="2"/><text x="32.5599%" y="559.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="32.7973%" y="549" width="0.0487%" height="15" fill="rgb(247,152,14)" fg:x="1346" fg:w="2"/><text x="33.0473%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="32.8460%" y="549" width="0.0487%" height="15" fill="rgb(248,195,53)" fg:x="1348" fg:w="2"/><text x="33.0960%" y="559.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.9922%" y="533" width="0.0244%" height="15" fill="rgb(226,201,16)" fg:x="1354" fg:w="1"/><text x="33.2422%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="32.8947%" y="549" width="0.2437%" height="15" fill="rgb(205,98,0)" fg:x="1350" fg:w="10"/><text x="33.1447%" y="559.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.12%)</title><rect x="33.0166%" y="533" width="0.1218%" height="15" fill="rgb(214,191,48)" fg:x="1355" fg:w="5"/><text x="33.2666%" y="543.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="33.6501%" y="533" width="0.0975%" height="15" fill="rgb(237,112,39)" fg:x="1381" fg:w="4"/><text x="33.9001%" y="543.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="33.7476%" y="533" width="0.0975%" height="15" fill="rgb(247,203,27)" fg:x="1385" fg:w="4"/><text x="33.9976%" y="543.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="34.0156%" y="517" width="0.0731%" height="15" fill="rgb(235,124,28)" fg:x="1396" fg:w="3"/><text x="34.2656%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.17%)</title><rect x="34.0887%" y="517" width="0.1706%" height="15" fill="rgb(208,207,46)" fg:x="1399" fg:w="7"/><text x="34.3387%" y="527.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="34.5029%" y="501" width="0.2437%" height="15" fill="rgb(234,176,4)" fg:x="1416" fg:w="10"/><text x="34.7529%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51 samples, 1.24%)</title><rect x="33.8450%" y="533" width="1.2427%" height="15" fill="rgb(230,133,28)" fg:x="1389" fg:w="51"/><text x="34.0950%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.83%)</title><rect x="34.2593%" y="517" width="0.8285%" height="15" fill="rgb(211,137,40)" fg:x="1406" fg:w="34"/><text x="34.5093%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.34%)</title><rect x="34.7466%" y="501" width="0.3411%" height="15" fill="rgb(254,35,13)" fg:x="1426" fg:w="14"/><text x="34.9966%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="35.9405%" y="517" width="0.0731%" height="15" fill="rgb(225,49,51)" fg:x="1475" fg:w="3"/><text x="36.1905%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (13 samples, 0.32%)</title><rect x="36.0136%" y="517" width="0.3168%" height="15" fill="rgb(251,10,15)" fg:x="1478" fg:w="13"/><text x="36.2636%" y="527.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="36.4766%" y="501" width="0.0487%" height="15" fill="rgb(228,207,15)" fg:x="1497" fg:w="2"/><text x="36.7266%" y="511.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.32%)</title><rect x="36.3304%" y="517" width="0.3168%" height="15" fill="rgb(241,99,19)" fg:x="1491" fg:w="13"/><text x="36.5804%" y="527.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.12%)</title><rect x="36.5253%" y="501" width="0.1218%" height="15" fill="rgb(207,104,49)" fg:x="1499" fg:w="5"/><text x="36.7753%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="37.7437%" y="501" width="0.1218%" height="15" fill="rgb(234,99,18)" fg:x="1549" fg:w="5"/><text x="37.9937%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.15%)</title><rect x="37.8655%" y="501" width="0.1462%" height="15" fill="rgb(213,191,49)" fg:x="1554" fg:w="6"/><text x="38.1155%" y="511.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="38.2066%" y="485" width="0.0975%" height="15" fill="rgb(210,226,19)" fg:x="1568" fg:w="4"/><text x="38.4566%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.44%)</title><rect x="38.0117%" y="501" width="0.4386%" height="15" fill="rgb(229,97,18)" fg:x="1560" fg:w="18"/><text x="38.2617%" y="511.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.15%)</title><rect x="38.3041%" y="485" width="0.1462%" height="15" fill="rgb(211,167,15)" fg:x="1572" fg:w="6"/><text x="38.5541%" y="495.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="39.4250%" y="485" width="0.0731%" height="15" fill="rgb(210,169,34)" fg:x="1618" fg:w="3"/><text x="39.6750%" y="495.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (10 samples, 0.24%)</title><rect x="39.4981%" y="485" width="0.2437%" height="15" fill="rgb(241,121,31)" fg:x="1621" fg:w="10"/><text x="39.7481%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="40.0341%" y="469" width="0.0244%" height="15" fill="rgb(232,40,11)" fg:x="1643" fg:w="1"/><text x="40.2841%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="40.0585%" y="469" width="0.1218%" height="15" fill="rgb(205,86,26)" fg:x="1644" fg:w="5"/><text x="40.3085%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.22%)</title><rect x="40.1803%" y="469" width="0.2193%" height="15" fill="rgb(231,126,28)" fg:x="1649" fg:w="9"/><text x="40.4303%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="40.5458%" y="453" width="0.0244%" height="15" fill="rgb(219,221,18)" fg:x="1664" fg:w="1"/><text x="40.7958%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="40.5458%" y="437" width="0.0244%" height="15" fill="rgb(211,40,0)" fg:x="1664" fg:w="1"/><text x="40.7958%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="40.5702%" y="453" width="0.2193%" height="15" fill="rgb(239,85,43)" fg:x="1665" fg:w="9"/><text x="40.8202%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 1.07%)</title><rect x="39.7417%" y="485" width="1.0721%" height="15" fill="rgb(231,55,21)" fg:x="1631" fg:w="44"/><text x="39.9917%" y="495.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.41%)</title><rect x="40.3996%" y="469" width="0.4142%" height="15" fill="rgb(225,184,43)" fg:x="1658" fg:w="17"/><text x="40.6496%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="40.7895%" y="453" width="0.0244%" height="15" fill="rgb(251,158,41)" fg:x="1674" fg:w="1"/><text x="41.0395%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="41.8372%" y="469" width="0.1949%" height="15" fill="rgb(234,159,37)" fg:x="1717" fg:w="8"/><text x="42.0872%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (15 samples, 0.37%)</title><rect x="42.0322%" y="469" width="0.3655%" height="15" fill="rgb(216,204,22)" fg:x="1725" fg:w="15"/><text x="42.2822%" y="479.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="42.5439%" y="453" width="0.0975%" height="15" fill="rgb(214,17,3)" fg:x="1746" fg:w="4"/><text x="42.7939%" y="463.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.44%)</title><rect x="42.3977%" y="469" width="0.4386%" height="15" fill="rgb(212,111,17)" fg:x="1740" fg:w="18"/><text x="42.6477%" y="479.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.19%)</title><rect x="42.6413%" y="453" width="0.1949%" height="15" fill="rgb(221,157,24)" fg:x="1750" fg:w="8"/><text x="42.8913%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="44.1520%" y="453" width="0.2193%" height="15" fill="rgb(252,16,13)" fg:x="1812" fg:w="9"/><text x="44.4020%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.17%)</title><rect x="44.3713%" y="453" width="0.1706%" height="15" fill="rgb(221,62,2)" fg:x="1821" fg:w="7"/><text x="44.6213%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="44.6637%" y="437" width="0.0731%" height="15" fill="rgb(247,87,22)" fg:x="1833" fg:w="3"/><text x="44.9137%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.34%)</title><rect x="44.5419%" y="453" width="0.3411%" height="15" fill="rgb(215,73,9)" fg:x="1828" fg:w="14"/><text x="44.7919%" y="463.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.15%)</title><rect x="44.7368%" y="437" width="0.1462%" height="15" fill="rgb(207,175,33)" fg:x="1836" fg:w="6"/><text x="44.9868%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.15%)</title><rect x="46.3450%" y="437" width="0.1462%" height="15" fill="rgb(243,129,54)" fg:x="1902" fg:w="6"/><text x="46.5950%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.22%)</title><rect x="46.4912%" y="437" width="0.2193%" height="15" fill="rgb(227,119,45)" fg:x="1908" fg:w="9"/><text x="46.7412%" y="447.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="47.1491%" y="421" width="0.0731%" height="15" fill="rgb(205,109,36)" fg:x="1935" fg:w="3"/><text x="47.3991%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.63%)</title><rect x="46.7105%" y="437" width="0.6335%" height="15" fill="rgb(205,6,39)" fg:x="1917" fg:w="26"/><text x="46.9605%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.12%)</title><rect x="47.2222%" y="421" width="0.1218%" height="15" fill="rgb(221,32,16)" fg:x="1938" fg:w="5"/><text x="47.4722%" y="431.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="48.5136%" y="421" width="0.1218%" height="15" fill="rgb(228,144,50)" fg:x="1991" fg:w="5"/><text x="48.7636%" y="431.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.17%)</title><rect x="48.6355%" y="421" width="0.1706%" height="15" fill="rgb(229,201,53)" fg:x="1996" fg:w="7"/><text x="48.8855%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.12%)</title><rect x="49.1715%" y="405" width="0.1218%" height="15" fill="rgb(249,153,27)" fg:x="2018" fg:w="5"/><text x="49.4215%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.15%)</title><rect x="49.2934%" y="405" width="0.1462%" height="15" fill="rgb(227,106,25)" fg:x="2023" fg:w="6"/><text x="49.5434%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (45 samples, 1.10%)</title><rect x="49.4396%" y="405" width="1.0965%" height="15" fill="rgb(230,65,29)" fg:x="2029" fg:w="45"/><text x="49.6896%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="52.8996%" y="373" width="0.0244%" height="15" fill="rgb(221,57,46)" fg:x="2171" fg:w="1"/><text x="53.1496%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (8 samples, 0.19%)</title><rect x="52.8996%" y="389" width="0.1949%" height="15" fill="rgb(229,161,17)" fg:x="2171" fg:w="8"/><text x="53.1496%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_large (7 samples, 0.17%)</title><rect x="52.9240%" y="373" width="0.1706%" height="15" fill="rgb(222,213,11)" fg:x="2172" fg:w="7"/><text x="53.1740%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (7 samples, 0.17%)</title><rect x="52.9240%" y="357" width="0.1706%" height="15" fill="rgb(235,35,13)" fg:x="2172" fg:w="7"/><text x="53.1740%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (7 samples, 0.17%)</title><rect x="52.9240%" y="341" width="0.1706%" height="15" fill="rgb(233,158,34)" fg:x="2172" fg:w="7"/><text x="53.1740%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (134 samples, 3.27%)</title><rect x="53.0945%" y="389" width="3.2651%" height="15" fill="rgb(215,151,48)" fg:x="2179" fg:w="134"/><text x="53.3445%" y="399.50">rus..</text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (391 samples, 9.53%)</title><rect x="48.8060%" y="421" width="9.5273%" height="15" fill="rgb(229,84,14)" fg:x="2003" fg:w="391"/><text x="49.0560%" y="431.50">rust-gkat`hash..</text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (320 samples, 7.80%)</title><rect x="50.5361%" y="405" width="7.7973%" height="15" fill="rgb(229,68,14)" fg:x="2074" fg:w="320"/><text x="50.7861%" y="415.50">rust-gkat`h..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (81 samples, 1.97%)</title><rect x="56.3596%" y="389" width="1.9737%" height="15" fill="rgb(243,106,26)" fg:x="2313" fg:w="81"/><text x="56.6096%" y="399.50">r..</text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="59.8197%" y="405" width="0.1706%" height="15" fill="rgb(206,45,38)" fg:x="2455" fg:w="7"/><text x="60.0697%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.34%)</title><rect x="59.9903%" y="405" width="0.3411%" height="15" fill="rgb(226,6,15)" fg:x="2462" fg:w="14"/><text x="60.2403%" y="415.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="60.6969%" y="389" width="0.0731%" height="15" fill="rgb(232,22,54)" fg:x="2491" fg:w="3"/><text x="60.9469%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.78%)</title><rect x="60.3314%" y="405" width="0.7797%" height="15" fill="rgb(229,222,32)" fg:x="2476" fg:w="32"/><text x="60.5814%" y="415.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.34%)</title><rect x="60.7700%" y="389" width="0.3411%" height="15" fill="rgb(228,62,29)" fg:x="2494" fg:w="14"/><text x="61.0200%" y="399.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="62.8899%" y="389" width="0.1706%" height="15" fill="rgb(251,103,34)" fg:x="2581" fg:w="7"/><text x="63.1399%" y="399.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (15 samples, 0.37%)</title><rect x="63.0604%" y="389" width="0.3655%" height="15" fill="rgb(233,12,30)" fg:x="2588" fg:w="15"/><text x="63.3104%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.05%)</title><rect x="63.8889%" y="373" width="0.0487%" height="15" fill="rgb(238,52,0)" fg:x="2622" fg:w="2"/><text x="64.1389%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.15%)</title><rect x="63.9376%" y="373" width="0.1462%" height="15" fill="rgb(223,98,5)" fg:x="2624" fg:w="6"/><text x="64.1876%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (25 samples, 0.61%)</title><rect x="64.0838%" y="373" width="0.6092%" height="15" fill="rgb(228,75,37)" fg:x="2630" fg:w="25"/><text x="64.3338%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.10%)</title><rect x="65.8869%" y="357" width="0.0975%" height="15" fill="rgb(205,115,49)" fg:x="2704" fg:w="4"/><text x="66.1369%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_large (4 samples, 0.10%)</title><rect x="65.8869%" y="341" width="0.0975%" height="15" fill="rgb(250,154,43)" fg:x="2704" fg:w="4"/><text x="66.1369%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (4 samples, 0.10%)</title><rect x="65.8869%" y="325" width="0.0975%" height="15" fill="rgb(226,43,29)" fg:x="2704" fg:w="4"/><text x="66.1369%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.10%)</title><rect x="65.8869%" y="309" width="0.0975%" height="15" fill="rgb(249,228,39)" fg:x="2704" fg:w="4"/><text x="66.1369%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 1.10%)</title><rect x="65.9844%" y="357" width="1.0965%" height="15" fill="rgb(216,79,43)" fg:x="2708" fg:w="45"/><text x="66.2344%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (189 samples, 4.61%)</title><rect x="63.4259%" y="389" width="4.6053%" height="15" fill="rgb(228,95,12)" fg:x="2603" fg:w="189"/><text x="63.6759%" y="399.50">rust-..</text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (137 samples, 3.34%)</title><rect x="64.6930%" y="373" width="3.3382%" height="15" fill="rgb(249,221,15)" fg:x="2655" fg:w="137"/><text x="64.9430%" y="383.50">rus..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (39 samples, 0.95%)</title><rect x="67.0809%" y="357" width="0.9503%" height="15" fill="rgb(233,34,13)" fg:x="2753" fg:w="39"/><text x="67.3309%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="70.1023%" y="373" width="0.2193%" height="15" fill="rgb(214,103,39)" fg:x="2877" fg:w="9"/><text x="70.3523%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.29%)</title><rect x="70.3216%" y="373" width="0.2924%" height="15" fill="rgb(251,126,39)" fg:x="2886" fg:w="12"/><text x="70.5716%" y="383.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="71.0770%" y="357" width="0.1218%" height="15" fill="rgb(214,216,36)" fg:x="2917" fg:w="5"/><text x="71.3270%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.83%)</title><rect x="70.6140%" y="373" width="0.8285%" height="15" fill="rgb(220,221,8)" fg:x="2898" fg:w="34"/><text x="70.8640%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (10 samples, 0.24%)</title><rect x="71.1988%" y="357" width="0.2437%" height="15" fill="rgb(240,216,3)" fg:x="2922" fg:w="10"/><text x="71.4488%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.29%)</title><rect x="73.0263%" y="357" width="0.2924%" height="15" fill="rgb(232,218,17)" fg:x="2997" fg:w="12"/><text x="73.2763%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (18 samples, 0.44%)</title><rect x="73.3187%" y="357" width="0.4386%" height="15" fill="rgb(229,163,45)" fg:x="3009" fg:w="18"/><text x="73.5687%" y="367.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="74.2690%" y="341" width="0.0244%" height="15" fill="rgb(231,110,42)" fg:x="3048" fg:w="1"/><text x="74.5190%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 1.07%)</title><rect x="73.7573%" y="357" width="1.0721%" height="15" fill="rgb(208,170,48)" fg:x="3027" fg:w="44"/><text x="74.0073%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (22 samples, 0.54%)</title><rect x="74.2934%" y="341" width="0.5361%" height="15" fill="rgb(239,116,25)" fg:x="3049" fg:w="22"/><text x="74.5434%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="76.7788%" y="341" width="0.0731%" height="15" fill="rgb(219,200,50)" fg:x="3151" fg:w="3"/><text x="77.0288%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (17 samples, 0.41%)</title><rect x="76.8519%" y="341" width="0.4142%" height="15" fill="rgb(245,200,0)" fg:x="3154" fg:w="17"/><text x="77.1019%" y="351.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="77.6559%" y="325" width="0.0975%" height="15" fill="rgb(245,119,33)" fg:x="3187" fg:w="4"/><text x="77.9059%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.68%)</title><rect x="77.2661%" y="341" width="0.6823%" height="15" fill="rgb(231,125,12)" fg:x="3171" fg:w="28"/><text x="77.5161%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.19%)</title><rect x="77.7534%" y="325" width="0.1949%" height="15" fill="rgb(216,96,41)" fg:x="3191" fg:w="8"/><text x="78.0034%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.22%)</title><rect x="79.4834%" y="325" width="0.2193%" height="15" fill="rgb(248,43,45)" fg:x="3262" fg:w="9"/><text x="79.7334%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.29%)</title><rect x="79.7027%" y="325" width="0.2924%" height="15" fill="rgb(217,222,7)" fg:x="3271" fg:w="12"/><text x="79.9527%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="80.3363%" y="309" width="0.0731%" height="15" fill="rgb(233,28,6)" fg:x="3297" fg:w="3"/><text x="80.5863%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.58%)</title><rect x="79.9951%" y="325" width="0.5848%" height="15" fill="rgb(231,218,15)" fg:x="3283" fg:w="24"/><text x="80.2451%" y="335.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.17%)</title><rect x="80.4094%" y="309" width="0.1706%" height="15" fill="rgb(226,171,48)" fg:x="3300" fg:w="7"/><text x="80.6594%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="81.7495%" y="309" width="0.2437%" height="15" fill="rgb(235,201,9)" fg:x="3355" fg:w="10"/><text x="81.9995%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.15%)</title><rect x="81.9932%" y="309" width="0.1462%" height="15" fill="rgb(217,80,15)" fg:x="3365" fg:w="6"/><text x="82.2432%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="82.3830%" y="293" width="0.1949%" height="15" fill="rgb(219,152,8)" fg:x="3381" fg:w="8"/><text x="82.6330%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.78%)</title><rect x="82.1394%" y="309" width="0.7797%" height="15" fill="rgb(243,107,38)" fg:x="3371" fg:w="32"/><text x="82.3894%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.34%)</title><rect x="82.5780%" y="293" width="0.3411%" height="15" fill="rgb(231,17,5)" fg:x="3389" fg:w="14"/><text x="82.8280%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="83.8694%" y="293" width="0.1218%" height="15" fill="rgb(209,25,54)" fg:x="3442" fg:w="5"/><text x="84.1194%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.29%)</title><rect x="83.9912%" y="293" width="0.2924%" height="15" fill="rgb(219,0,2)" fg:x="3447" fg:w="12"/><text x="84.2412%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="84.5517%" y="277" width="0.1218%" height="15" fill="rgb(246,9,5)" fg:x="3470" fg:w="5"/><text x="84.8017%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.61%)</title><rect x="84.2836%" y="293" width="0.6092%" height="15" fill="rgb(226,159,4)" fg:x="3459" fg:w="25"/><text x="84.5336%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.22%)</title><rect x="84.6735%" y="277" width="0.2193%" height="15" fill="rgb(219,175,34)" fg:x="3475" fg:w="9"/><text x="84.9235%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="85.7456%" y="277" width="0.1949%" height="15" fill="rgb(236,10,46)" fg:x="3519" fg:w="8"/><text x="85.9956%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.27%)</title><rect x="85.9405%" y="277" width="0.2680%" height="15" fill="rgb(240,211,16)" fg:x="3527" fg:w="11"/><text x="86.1905%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="86.4279%" y="261" width="0.0731%" height="15" fill="rgb(205,3,43)" fg:x="3547" fg:w="3"/><text x="86.6779%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.44%)</title><rect x="86.2086%" y="277" width="0.4386%" height="15" fill="rgb(245,7,22)" fg:x="3538" fg:w="18"/><text x="86.4586%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.15%)</title><rect x="86.5010%" y="261" width="0.1462%" height="15" fill="rgb(239,132,32)" fg:x="3550" fg:w="6"/><text x="86.7510%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="87.6218%" y="261" width="0.0731%" height="15" fill="rgb(228,202,34)" fg:x="3596" fg:w="3"/><text x="87.8718%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.19%)</title><rect x="87.6949%" y="261" width="0.1949%" height="15" fill="rgb(254,200,22)" fg:x="3599" fg:w="8"/><text x="87.9449%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="88.0604%" y="245" width="0.0487%" height="15" fill="rgb(219,10,39)" fg:x="3614" fg:w="2"/><text x="88.3104%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.32%)</title><rect x="87.8899%" y="261" width="0.3168%" height="15" fill="rgb(226,210,39)" fg:x="3607" fg:w="13"/><text x="88.1399%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="88.1092%" y="245" width="0.0975%" height="15" fill="rgb(208,219,16)" fg:x="3616" fg:w="4"/><text x="88.3592%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="88.6940%" y="245" width="0.0731%" height="15" fill="rgb(216,158,51)" fg:x="3640" fg:w="3"/><text x="88.9440%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.22%)</title><rect x="88.7671%" y="245" width="0.2193%" height="15" fill="rgb(233,14,44)" fg:x="3643" fg:w="9"/><text x="89.0171%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="89.2544%" y="229" width="0.0731%" height="15" fill="rgb(237,97,39)" fg:x="3663" fg:w="3"/><text x="89.5044%" y="239.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.46%)</title><rect x="88.9864%" y="245" width="0.4630%" height="15" fill="rgb(218,198,43)" fg:x="3652" fg:w="19"/><text x="89.2364%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.12%)</title><rect x="89.3275%" y="229" width="0.1218%" height="15" fill="rgb(231,104,20)" fg:x="3666" fg:w="5"/><text x="89.5775%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="90.0097%" y="229" width="0.0487%" height="15" fill="rgb(254,36,13)" fg:x="3694" fg:w="2"/><text x="90.2597%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="90.0585%" y="229" width="0.0244%" height="15" fill="rgb(248,14,50)" fg:x="3696" fg:w="1"/><text x="90.3085%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="90.1803%" y="213" width="0.0975%" height="15" fill="rgb(217,107,29)" fg:x="3701" fg:w="4"/><text x="90.4303%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.29%)</title><rect x="90.0828%" y="229" width="0.2924%" height="15" fill="rgb(251,169,33)" fg:x="3697" fg:w="12"/><text x="90.3328%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="90.2778%" y="213" width="0.0975%" height="15" fill="rgb(217,108,32)" fg:x="3705" fg:w="4"/><text x="90.5278%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="90.8138%" y="213" width="0.0487%" height="15" fill="rgb(219,66,42)" fg:x="3727" fg:w="2"/><text x="91.0638%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.10%)</title><rect x="90.8626%" y="213" width="0.0975%" height="15" fill="rgb(206,180,7)" fg:x="3729" fg:w="4"/><text x="91.1126%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="91.0331%" y="197" width="0.0487%" height="15" fill="rgb(208,226,31)" fg:x="3736" fg:w="2"/><text x="91.2831%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.15%)</title><rect x="90.9600%" y="213" width="0.1462%" height="15" fill="rgb(218,26,49)" fg:x="3733" fg:w="6"/><text x="91.2100%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="91.0819%" y="197" width="0.0244%" height="15" fill="rgb(233,197,48)" fg:x="3738" fg:w="1"/><text x="91.3319%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="91.3743%" y="197" width="0.0731%" height="15" fill="rgb(252,181,51)" fg:x="3750" fg:w="3"/><text x="91.6243%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="91.4474%" y="197" width="0.1706%" height="15" fill="rgb(253,90,19)" fg:x="3753" fg:w="7"/><text x="91.6974%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="91.5448%" y="181" width="0.0731%" height="15" fill="rgb(215,171,30)" fg:x="3757" fg:w="3"/><text x="91.7948%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="91.8372%" y="181" width="0.0731%" height="15" fill="rgb(214,222,9)" fg:x="3769" fg:w="3"/><text x="92.0872%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="91.9103%" y="181" width="0.0487%" height="15" fill="rgb(223,3,22)" fg:x="3772" fg:w="2"/><text x="92.1603%" y="191.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="91.9591%" y="181" width="0.0244%" height="15" fill="rgb(225,196,46)" fg:x="3774" fg:w="1"/><text x="92.2091%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="91.9591%" y="165" width="0.0244%" height="15" fill="rgb(209,110,37)" fg:x="3774" fg:w="1"/><text x="92.2091%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.1053%" y="165" width="0.0244%" height="15" fill="rgb(249,89,12)" fg:x="3780" fg:w="1"/><text x="92.3553%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="92.1296%" y="165" width="0.0487%" height="15" fill="rgb(226,27,33)" fg:x="3781" fg:w="2"/><text x="92.3796%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.1540%" y="149" width="0.0244%" height="15" fill="rgb(213,82,22)" fg:x="3782" fg:w="1"/><text x="92.4040%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.2515%" y="149" width="0.0244%" height="15" fill="rgb(248,140,0)" fg:x="3786" fg:w="1"/><text x="92.5015%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="92.2758%" y="149" width="0.0487%" height="15" fill="rgb(228,106,3)" fg:x="3787" fg:w="2"/><text x="92.5258%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.5682%" y="133" width="0.0244%" height="15" fill="rgb(209,23,37)" fg:x="3799" fg:w="1"/><text x="92.8182%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.5926%" y="117" width="0.0244%" height="15" fill="rgb(241,93,50)" fg:x="3800" fg:w="1"/><text x="92.8426%" y="127.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="92.5926%" y="133" width="0.0731%" height="15" fill="rgb(253,46,43)" fg:x="3800" fg:w="3"/><text x="92.8426%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="92.6170%" y="117" width="0.0487%" height="15" fill="rgb(226,206,43)" fg:x="3801" fg:w="2"/><text x="92.8670%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.6901%" y="117" width="0.0244%" height="15" fill="rgb(217,54,7)" fg:x="3804" fg:w="1"/><text x="92.9401%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="92.7144%" y="117" width="0.0244%" height="15" fill="rgb(223,5,52)" fg:x="3805" fg:w="1"/><text x="92.9644%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="92.8119%" y="101" width="0.0244%" height="15" fill="rgb(206,52,46)" fg:x="3809" fg:w="1"/><text x="93.0619%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::equiv_iter (3,155 samples, 76.88%)</title><rect x="16.0088%" y="597" width="76.8762%" height="15" fill="rgb(253,136,11)" fg:x="657" fg:w="3155"/><text x="16.2588%" y="607.50">rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;&gt;::equiv_iter</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,558 samples, 62.33%)</title><rect x="30.5556%" y="581" width="62.3294%" height="15" fill="rgb(208,106,33)" fg:x="1254" fg:w="2558"/><text x="30.8056%" y="591.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,484 samples, 60.53%)</title><rect x="32.3587%" y="565" width="60.5263%" height="15" fill="rgb(206,54,4)" fg:x="1328" fg:w="2484"/><text x="32.6087%" y="575.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,452 samples, 59.75%)</title><rect x="33.1384%" y="549" width="59.7466%" height="15" fill="rgb(213,3,15)" fg:x="1360" fg:w="2452"/><text x="33.3884%" y="559.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,372 samples, 57.80%)</title><rect x="35.0877%" y="533" width="57.7973%" height="15" fill="rgb(252,211,39)" fg:x="1440" fg:w="2372"/><text x="35.3377%" y="543.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,308 samples, 56.24%)</title><rect x="36.6472%" y="517" width="56.2378%" height="15" fill="rgb(223,6,36)" fg:x="1504" fg:w="2308"/><text x="36.8972%" y="527.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,234 samples, 54.43%)</title><rect x="38.4503%" y="501" width="54.4347%" height="15" fill="rgb(252,169,45)" fg:x="1578" fg:w="2234"/><text x="38.7003%" y="511.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,137 samples, 52.07%)</title><rect x="40.8138%" y="485" width="52.0712%" height="15" fill="rgb(212,48,26)" fg:x="1675" fg:w="2137"/><text x="41.0638%" y="495.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2,054 samples, 50.05%)</title><rect x="42.8363%" y="469" width="50.0487%" height="15" fill="rgb(251,102,48)" fg:x="1758" fg:w="2054"/><text x="43.0863%" y="479.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1,970 samples, 48.00%)</title><rect x="44.8830%" y="453" width="48.0019%" height="15" fill="rgb(243,208,16)" fg:x="1842" fg:w="1970"/><text x="45.1330%" y="463.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1,869 samples, 45.54%)</title><rect x="47.3441%" y="437" width="45.5409%" height="15" fill="rgb(219,96,24)" fg:x="1943" fg:w="1869"/><text x="47.5941%" y="447.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1,418 samples, 34.55%)</title><rect x="58.3333%" y="421" width="34.5517%" height="15" fill="rgb(219,33,29)" fg:x="2394" fg:w="1418"/><text x="58.5833%" y="431.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1,304 samples, 31.77%)</title><rect x="61.1111%" y="405" width="31.7739%" height="15" fill="rgb(223,176,5)" fg:x="2508" fg:w="1304"/><text x="61.3611%" y="415.50">rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1,020 samples, 24.85%)</title><rect x="68.0312%" y="389" width="24.8538%" height="15" fill="rgb(228,140,14)" fg:x="2792" fg:w="1020"/><text x="68.2812%" y="399.50">rust-gkat`xdd::xdd_with_multiplicity::XD..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (880 samples, 21.44%)</title><rect x="71.4425%" y="373" width="21.4425%" height="15" fill="rgb(217,179,31)" fg:x="2932" fg:w="880"/><text x="71.6925%" y="383.50">rust-gkat`xdd::xdd_with_multiplici..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (741 samples, 18.06%)</title><rect x="74.8294%" y="357" width="18.0556%" height="15" fill="rgb(230,9,30)" fg:x="3071" fg:w="741"/><text x="75.0794%" y="367.50">rust-gkat`xdd::xdd_with_mult..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (613 samples, 14.94%)</title><rect x="77.9483%" y="341" width="14.9366%" height="15" fill="rgb(230,136,20)" fg:x="3199" fg:w="613"/><text x="78.1983%" y="351.50">rust-gkat`xdd::xdd_with..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (505 samples, 12.31%)</title><rect x="80.5799%" y="325" width="12.3051%" height="15" fill="rgb(215,210,22)" fg:x="3307" fg:w="505"/><text x="80.8299%" y="335.50">rust-gkat`xdd::xdd..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (409 samples, 9.97%)</title><rect x="82.9191%" y="309" width="9.9659%" height="15" fill="rgb(218,43,5)" fg:x="3403" fg:w="409"/><text x="83.1691%" y="319.50">rust-gkat`xdd:..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (328 samples, 7.99%)</title><rect x="84.8928%" y="293" width="7.9922%" height="15" fill="rgb(216,11,5)" fg:x="3484" fg:w="328"/><text x="85.1428%" y="303.50">rust-gkat`x..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (256 samples, 6.24%)</title><rect x="86.6472%" y="277" width="6.2378%" height="15" fill="rgb(209,82,29)" fg:x="3556" fg:w="256"/><text x="86.8972%" y="287.50">rust-gka..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (192 samples, 4.68%)</title><rect x="88.2066%" y="261" width="4.6784%" height="15" fill="rgb(244,115,12)" fg:x="3620" fg:w="192"/><text x="88.4566%" y="271.50">rust-..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (141 samples, 3.44%)</title><rect x="89.4493%" y="245" width="3.4357%" height="15" fill="rgb(222,82,18)" fg:x="3671" fg:w="141"/><text x="89.6993%" y="255.50">rus..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (103 samples, 2.51%)</title><rect x="90.3752%" y="229" width="2.5097%" height="15" fill="rgb(249,227,8)" fg:x="3709" fg:w="103"/><text x="90.6252%" y="239.50">ru..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (73 samples, 1.78%)</title><rect x="91.1062%" y="213" width="1.7788%" height="15" fill="rgb(253,141,45)" fg:x="3739" fg:w="73"/><text x="91.3562%" y="223.50">r..</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (52 samples, 1.27%)</title><rect x="91.6179%" y="197" width="1.2671%" height="15" fill="rgb(234,184,4)" fg:x="3760" fg:w="52"/><text x="91.8679%" y="207.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (37 samples, 0.90%)</title><rect x="91.9834%" y="181" width="0.9016%" height="15" fill="rgb(218,194,23)" fg:x="3775" fg:w="37"/><text x="92.2334%" y="191.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (29 samples, 0.71%)</title><rect x="92.1784%" y="165" width="0.7066%" height="15" fill="rgb(235,66,41)" fg:x="3783" fg:w="29"/><text x="92.4284%" y="175.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (23 samples, 0.56%)</title><rect x="92.3246%" y="149" width="0.5604%" height="15" fill="rgb(245,217,1)" fg:x="3789" fg:w="23"/><text x="92.5746%" y="159.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (9 samples, 0.22%)</title><rect x="92.6657%" y="133" width="0.2193%" height="15" fill="rgb(229,91,1)" fg:x="3803" fg:w="9"/><text x="92.9157%" y="143.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (6 samples, 0.15%)</title><rect x="92.7388%" y="117" width="0.1462%" height="15" fill="rgb(207,101,30)" fg:x="3806" fg:w="6"/><text x="92.9888%" y="127.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="92.8363%" y="101" width="0.0487%" height="15" fill="rgb(223,82,49)" fg:x="3810" fg:w="2"/><text x="93.0863%" y="111.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="92.8363%" y="85" width="0.0487%" height="15" fill="rgb(218,167,17)" fg:x="3810" fg:w="2"/><text x="93.0863%" y="95.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (2 samples, 0.05%)</title><rect x="92.8363%" y="69" width="0.0487%" height="15" fill="rgb(208,103,14)" fg:x="3810" fg:w="2"/><text x="93.0863%" y="79.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="92.8606%" y="53" width="0.0244%" height="15" fill="rgb(238,20,8)" fg:x="3811" fg:w="1"/><text x="93.1106%" y="63.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="92.8606%" y="37" width="0.0244%" height="15" fill="rgb(218,80,54)" fg:x="3811" fg:w="1"/><text x="93.1106%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::solver::Solver&lt;A,M,Builder&gt;::get_uf (1 samples, 0.02%)</title><rect x="92.8850%" y="597" width="0.0244%" height="15" fill="rgb(240,144,17)" fg:x="3812" fg:w="1"/><text x="93.1350%" y="607.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="92.9094%" y="581" width="0.0244%" height="15" fill="rgb(245,27,50)" fg:x="3813" fg:w="1"/><text x="93.1594%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.05%)</title><rect x="93.2505%" y="565" width="0.0487%" height="15" fill="rgb(251,51,7)" fg:x="3827" fg:w="2"/><text x="93.5005%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="93.2992%" y="565" width="0.0244%" height="15" fill="rgb(245,217,29)" fg:x="3829" fg:w="1"/><text x="93.5492%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="93.3236%" y="565" width="0.0731%" height="15" fill="rgb(221,176,29)" fg:x="3830" fg:w="3"/><text x="93.5736%" y="575.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_len (5 samples, 0.12%)</title><rect x="94.2008%" y="549" width="0.1218%" height="15" fill="rgb(212,180,24)" fg:x="3866" fg:w="5"/><text x="94.4508%" y="559.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 1.00%)</title><rect x="93.3967%" y="565" width="0.9990%" height="15" fill="rgb(254,24,2)" fg:x="3833" fg:w="41"/><text x="93.6467%" y="575.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_pattern (3 samples, 0.07%)</title><rect x="94.3226%" y="549" width="0.0731%" height="15" fill="rgb(230,100,2)" fg:x="3871" fg:w="3"/><text x="94.5726%" y="559.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="94.3957%" y="565" width="0.0244%" height="15" fill="rgb(219,142,25)" fg:x="3874" fg:w="1"/><text x="94.6457%" y="575.50"></text></g><g><title>rust-gkat`regex_automata::hybrid::dfa::LazyRef::get_cached_state (7 samples, 0.17%)</title><rect x="94.4201%" y="565" width="0.1706%" height="15" fill="rgb(240,73,43)" fg:x="3875" fg:w="7"/><text x="94.6701%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__goto (2 samples, 0.05%)</title><rect x="94.5906%" y="565" width="0.0487%" height="15" fill="rgb(214,114,15)" fg:x="3882" fg:w="2"/><text x="94.8406%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="95.3704%" y="549" width="0.0244%" height="15" fill="rgb(207,130,4)" fg:x="3914" fg:w="1"/><text x="95.6204%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.12%)</title><rect x="95.3947%" y="549" width="0.1218%" height="15" fill="rgb(221,25,40)" fg:x="3915" fg:w="5"/><text x="95.6447%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="95.4922%" y="533" width="0.0244%" height="15" fill="rgb(241,184,7)" fg:x="3919" fg:w="1"/><text x="95.7422%" y="543.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.5166%" y="549" width="0.0244%" height="15" fill="rgb(235,159,4)" fg:x="3920" fg:w="1"/><text x="95.7666%" y="559.50"></text></g><g><title>rust-gkat`__rdl_alloc (1 samples, 0.02%)</title><rect x="95.5409%" y="549" width="0.0244%" height="15" fill="rgb(214,87,48)" fg:x="3921" fg:w="1"/><text x="95.7909%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="95.6384%" y="485" width="0.0244%" height="15" fill="rgb(246,198,24)" fg:x="3925" fg:w="1"/><text x="95.8884%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="95.6628%" y="485" width="0.0244%" height="15" fill="rgb(209,66,40)" fg:x="3926" fg:w="1"/><text x="95.9128%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="95.6871%" y="469" width="0.0244%" height="15" fill="rgb(233,147,39)" fg:x="3927" fg:w="1"/><text x="95.9371%" y="479.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.17%)</title><rect x="95.5653%" y="549" width="0.1706%" height="15" fill="rgb(231,145,52)" fg:x="3922" fg:w="7"/><text x="95.8153%" y="559.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (7 samples, 0.17%)</title><rect x="95.5653%" y="533" width="0.1706%" height="15" fill="rgb(206,20,26)" fg:x="3922" fg:w="7"/><text x="95.8153%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.17%)</title><rect x="95.5653%" y="517" width="0.1706%" height="15" fill="rgb(238,220,4)" fg:x="3922" fg:w="7"/><text x="95.8153%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.17%)</title><rect x="95.5653%" y="501" width="0.1706%" height="15" fill="rgb(252,195,42)" fg:x="3922" fg:w="7"/><text x="95.8153%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.05%)</title><rect x="95.6871%" y="485" width="0.0487%" height="15" fill="rgb(209,10,6)" fg:x="3927" fg:w="2"/><text x="95.9371%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="95.7115%" y="469" width="0.0244%" height="15" fill="rgb(229,3,52)" fg:x="3928" fg:w="1"/><text x="95.9615%" y="479.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::parsing::parser::spec::__parse__Input::__Symbol&gt; (4 samples, 0.10%)</title><rect x="95.7359%" y="549" width="0.0975%" height="15" fill="rgb(253,49,37)" fg:x="3929" fg:w="4"/><text x="95.9859%" y="559.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action10 (1 samples, 0.02%)</title><rect x="95.8333%" y="549" width="0.0244%" height="15" fill="rgb(240,103,49)" fg:x="3933" fg:w="1"/><text x="96.0833%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="95.8333%" y="533" width="0.0244%" height="15" fill="rgb(250,182,30)" fg:x="3933" fg:w="1"/><text x="96.0833%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.05%)</title><rect x="95.9308%" y="533" width="0.0487%" height="15" fill="rgb(248,8,30)" fg:x="3937" fg:w="2"/><text x="96.1808%" y="543.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action12 (13 samples, 0.32%)</title><rect x="95.8577%" y="549" width="0.3168%" height="15" fill="rgb(237,120,30)" fg:x="3934" fg:w="13"/><text x="96.1077%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (8 samples, 0.19%)</title><rect x="95.9795%" y="533" width="0.1949%" height="15" fill="rgb(221,146,34)" fg:x="3939" fg:w="8"/><text x="96.2295%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.12%)</title><rect x="96.0526%" y="517" width="0.1218%" height="15" fill="rgb(242,55,13)" fg:x="3942" fg:w="5"/><text x="96.3026%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="96.1501%" y="501" width="0.0244%" height="15" fill="rgb(242,112,31)" fg:x="3946" fg:w="1"/><text x="96.4001%" y="511.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (135 samples, 3.29%)</title><rect x="92.9337%" y="581" width="3.2895%" height="15" fill="rgb(249,192,27)" fg:x="3814" fg:w="135"/><text x="93.1837%" y="591.50">rus..</text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (65 samples, 1.58%)</title><rect x="94.6394%" y="565" width="1.5838%" height="15" fill="rgb(208,204,44)" fg:x="3884" fg:w="65"/><text x="94.8894%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action9 (2 samples, 0.05%)</title><rect x="96.1745%" y="549" width="0.0487%" height="15" fill="rgb(208,93,54)" fg:x="3947" fg:w="2"/><text x="96.4245%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.05%)</title><rect x="96.1745%" y="533" width="0.0487%" height="15" fill="rgb(242,1,31)" fg:x="3947" fg:w="2"/><text x="96.4245%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.05%)</title><rect x="96.1745%" y="517" width="0.0487%" height="15" fill="rgb(241,83,25)" fg:x="3947" fg:w="2"/><text x="96.4245%" y="527.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (137 samples, 3.34%)</title><rect x="92.9094%" y="597" width="3.3382%" height="15" fill="rgb(205,169,50)" fg:x="3813" fg:w="137"/><text x="93.1594%" y="607.50">rus..</text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (1 samples, 0.02%)</title><rect x="96.2232%" y="581" width="0.0244%" height="15" fill="rgb(239,186,37)" fg:x="3949" fg:w="1"/><text x="96.4732%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="96.2476%" y="373" width="0.0244%" height="15" fill="rgb(205,221,10)" fg:x="3950" fg:w="1"/><text x="96.4976%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.2963%" y="341" width="0.0244%" height="15" fill="rgb(218,196,15)" fg:x="3952" fg:w="1"/><text x="96.5463%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.2963%" y="325" width="0.0244%" height="15" fill="rgb(218,196,35)" fg:x="3952" fg:w="1"/><text x="96.5463%" y="335.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="96.2963%" y="309" width="0.0244%" height="15" fill="rgb(233,63,24)" fg:x="3952" fg:w="1"/><text x="96.5463%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="96.2963%" y="293" width="0.0244%" height="15" fill="rgb(225,8,4)" fg:x="3952" fg:w="1"/><text x="96.5463%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (2 samples, 0.05%)</title><rect x="96.2963%" y="357" width="0.0487%" height="15" fill="rgb(234,105,35)" fg:x="3952" fg:w="2"/><text x="96.5463%" y="367.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="96.3207%" y="341" width="0.0244%" height="15" fill="rgb(236,21,32)" fg:x="3953" fg:w="1"/><text x="96.5707%" y="351.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="96.3207%" y="325" width="0.0244%" height="15" fill="rgb(228,109,6)" fg:x="3953" fg:w="1"/><text x="96.5707%" y="335.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="96.3207%" y="309" width="0.0244%" height="15" fill="rgb(229,215,31)" fg:x="3953" fg:w="1"/><text x="96.5707%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="96.3207%" y="293" width="0.0244%" height="15" fill="rgb(221,52,54)" fg:x="3953" fg:w="1"/><text x="96.5707%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="96.3207%" y="277" width="0.0244%" height="15" fill="rgb(252,129,43)" fg:x="3953" fg:w="1"/><text x="96.5707%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.05%)</title><rect x="96.3694%" y="341" width="0.0487%" height="15" fill="rgb(248,183,27)" fg:x="3955" fg:w="2"/><text x="96.6194%" y="351.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="96.4181%" y="341" width="0.0244%" height="15" fill="rgb(250,0,22)" fg:x="3957" fg:w="1"/><text x="96.6681%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.4425%" y="341" width="0.0244%" height="15" fill="rgb(213,166,10)" fg:x="3958" fg:w="1"/><text x="96.6925%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.4425%" y="325" width="0.0244%" height="15" fill="rgb(207,163,36)" fg:x="3958" fg:w="1"/><text x="96.6925%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.4425%" y="309" width="0.0244%" height="15" fill="rgb(208,122,22)" fg:x="3958" fg:w="1"/><text x="96.6925%" y="319.50"></text></g><g><title>rust-gkat`__rdl_dealloc (1 samples, 0.02%)</title><rect x="96.4425%" y="293" width="0.0244%" height="15" fill="rgb(207,104,49)" fg:x="3958" fg:w="1"/><text x="96.6925%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="96.4669%" y="325" width="0.0244%" height="15" fill="rgb(248,211,50)" fg:x="3959" fg:w="1"/><text x="96.7169%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="96.4669%" y="309" width="0.0244%" height="15" fill="rgb(217,13,45)" fg:x="3959" fg:w="1"/><text x="96.7169%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="96.4669%" y="293" width="0.0244%" height="15" fill="rgb(211,216,49)" fg:x="3959" fg:w="1"/><text x="96.7169%" y="303.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="96.4912%" y="325" width="0.0244%" height="15" fill="rgb(221,58,53)" fg:x="3960" fg:w="1"/><text x="96.7412%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.5156%" y="325" width="0.0244%" height="15" fill="rgb(220,112,41)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.5156%" y="309" width="0.0244%" height="15" fill="rgb(236,38,28)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.5156%" y="293" width="0.0244%" height="15" fill="rgb(227,195,22)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.5156%" y="277" width="0.0244%" height="15" fill="rgb(214,55,33)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="96.5156%" y="261" width="0.0244%" height="15" fill="rgb(248,80,13)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="96.5156%" y="245" width="0.0244%" height="15" fill="rgb(238,52,6)" fg:x="3961" fg:w="1"/><text x="96.7656%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.05%)</title><rect x="96.5887%" y="309" width="0.0487%" height="15" fill="rgb(224,198,47)" fg:x="3964" fg:w="2"/><text x="96.8387%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="96.6374%" y="309" width="0.0244%" height="15" fill="rgb(233,171,20)" fg:x="3966" fg:w="1"/><text x="96.8874%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="96.6618%" y="309" width="0.0244%" height="15" fill="rgb(241,30,25)" fg:x="3967" fg:w="1"/><text x="96.9118%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="96.6618%" y="293" width="0.0244%" height="15" fill="rgb(207,171,38)" fg:x="3967" fg:w="1"/><text x="96.9118%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="96.6618%" y="277" width="0.0244%" height="15" fill="rgb(234,70,1)" fg:x="3967" fg:w="1"/><text x="96.9118%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.05%)</title><rect x="96.6862%" y="309" width="0.0487%" height="15" fill="rgb(232,178,18)" fg:x="3968" fg:w="2"/><text x="96.9362%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="96.6862%" y="293" width="0.0487%" height="15" fill="rgb(241,78,40)" fg:x="3968" fg:w="2"/><text x="96.9362%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="96.7349%" y="293" width="0.0244%" height="15" fill="rgb(222,35,25)" fg:x="3970" fg:w="1"/><text x="96.9849%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="96.7593%" y="293" width="0.0244%" height="15" fill="rgb(207,92,16)" fg:x="3971" fg:w="1"/><text x="97.0093%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="96.7593%" y="277" width="0.0244%" height="15" fill="rgb(216,59,51)" fg:x="3971" fg:w="1"/><text x="97.0093%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="96.7593%" y="261" width="0.0244%" height="15" fill="rgb(213,80,28)" fg:x="3971" fg:w="1"/><text x="97.0093%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="96.7593%" y="245" width="0.0244%" height="15" fill="rgb(220,93,7)" fg:x="3971" fg:w="1"/><text x="97.0093%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="96.7593%" y="229" width="0.0244%" height="15" fill="rgb(225,24,44)" fg:x="3971" fg:w="1"/><text x="97.0093%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (3 samples, 0.07%)</title><rect x="96.7349%" y="309" width="0.0731%" height="15" fill="rgb(243,74,40)" fg:x="3970" fg:w="3"/><text x="96.9849%" y="319.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="96.7836%" y="293" width="0.0244%" height="15" fill="rgb(228,39,7)" fg:x="3972" fg:w="1"/><text x="97.0336%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="96.7836%" y="277" width="0.0244%" height="15" fill="rgb(227,79,8)" fg:x="3972" fg:w="1"/><text x="97.0336%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="96.7836%" y="261" width="0.0244%" height="15" fill="rgb(236,58,11)" fg:x="3972" fg:w="1"/><text x="97.0336%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="96.8567%" y="293" width="0.0244%" height="15" fill="rgb(249,63,35)" fg:x="3975" fg:w="1"/><text x="97.1067%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.05%)</title><rect x="96.8811%" y="293" width="0.0487%" height="15" fill="rgb(252,114,16)" fg:x="3976" fg:w="2"/><text x="97.1311%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.05%)</title><rect x="96.8811%" y="277" width="0.0487%" height="15" fill="rgb(254,151,24)" fg:x="3976" fg:w="2"/><text x="97.1311%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.05%)</title><rect x="96.8811%" y="261" width="0.0487%" height="15" fill="rgb(253,54,39)" fg:x="3976" fg:w="2"/><text x="97.1311%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="96.9298%" y="293" width="0.0244%" height="15" fill="rgb(243,25,45)" fg:x="3978" fg:w="1"/><text x="97.1798%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.05%)</title><rect x="96.9542%" y="293" width="0.0487%" height="15" fill="rgb(234,134,9)" fg:x="3979" fg:w="2"/><text x="97.2042%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="97.0029%" y="293" width="0.0487%" height="15" fill="rgb(227,166,31)" fg:x="3981" fg:w="2"/><text x="97.2529%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="97.0517%" y="261" width="0.0244%" height="15" fill="rgb(245,143,41)" fg:x="3983" fg:w="1"/><text x="97.3017%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.05%)</title><rect x="97.1004%" y="245" width="0.0487%" height="15" fill="rgb(238,181,32)" fg:x="3985" fg:w="2"/><text x="97.3504%" y="255.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="97.1491%" y="245" width="0.0244%" height="15" fill="rgb(224,113,18)" fg:x="3987" fg:w="1"/><text x="97.3991%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="97.1491%" y="229" width="0.0244%" height="15" fill="rgb(240,229,28)" fg:x="3987" fg:w="1"/><text x="97.3991%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (5 samples, 0.12%)</title><rect x="97.0760%" y="261" width="0.1218%" height="15" fill="rgb(250,185,3)" fg:x="3984" fg:w="5"/><text x="97.3260%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::sum_bdd (1 samples, 0.02%)</title><rect x="97.1735%" y="245" width="0.0244%" height="15" fill="rgb(212,59,25)" fg:x="3988" fg:w="1"/><text x="97.4235%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="97.1735%" y="229" width="0.0244%" height="15" fill="rgb(221,87,20)" fg:x="3988" fg:w="1"/><text x="97.4235%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (7 samples, 0.17%)</title><rect x="97.0517%" y="277" width="0.1706%" height="15" fill="rgb(213,74,28)" fg:x="3983" fg:w="7"/><text x="97.3017%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="97.1979%" y="261" width="0.0244%" height="15" fill="rgb(224,132,34)" fg:x="3989" fg:w="1"/><text x="97.4479%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.1979%" y="245" width="0.0244%" height="15" fill="rgb(222,101,24)" fg:x="3989" fg:w="1"/><text x="97.4479%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="97.1979%" y="229" width="0.0244%" height="15" fill="rgb(254,142,4)" fg:x="3989" fg:w="1"/><text x="97.4479%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="97.2222%" y="277" width="0.0244%" height="15" fill="rgb(230,229,49)" fg:x="3990" fg:w="1"/><text x="97.4722%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.2222%" y="261" width="0.0244%" height="15" fill="rgb(238,70,47)" fg:x="3990" fg:w="1"/><text x="97.4722%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="97.2222%" y="245" width="0.0244%" height="15" fill="rgb(231,160,17)" fg:x="3990" fg:w="1"/><text x="97.4722%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="97.2222%" y="229" width="0.0244%" height="15" fill="rgb(218,68,53)" fg:x="3990" fg:w="1"/><text x="97.4722%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (9 samples, 0.22%)</title><rect x="97.0517%" y="293" width="0.2193%" height="15" fill="rgb(236,111,10)" fg:x="3983" fg:w="9"/><text x="97.3017%" y="303.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="97.2466%" y="277" width="0.0244%" height="15" fill="rgb(224,34,41)" fg:x="3991" fg:w="1"/><text x="97.4966%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::not_bdd (1 samples, 0.02%)</title><rect x="97.2466%" y="261" width="0.0244%" height="15" fill="rgb(241,118,19)" fg:x="3991" fg:w="1"/><text x="97.4966%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="97.2466%" y="245" width="0.0244%" height="15" fill="rgb(238,129,25)" fg:x="3991" fg:w="1"/><text x="97.4966%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="97.2953%" y="277" width="0.0244%" height="15" fill="rgb(238,22,31)" fg:x="3993" fg:w="1"/><text x="97.5453%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="97.3197%" y="277" width="0.0244%" height="15" fill="rgb(222,174,48)" fg:x="3994" fg:w="1"/><text x="97.5697%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.05%)</title><rect x="97.3441%" y="277" width="0.0487%" height="15" fill="rgb(206,152,40)" fg:x="3995" fg:w="2"/><text x="97.5941%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="97.4659%" y="261" width="0.0244%" height="15" fill="rgb(218,99,54)" fg:x="4000" fg:w="1"/><text x="97.7159%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="97.4903%" y="261" width="0.0244%" height="15" fill="rgb(220,174,26)" fg:x="4001" fg:w="1"/><text x="97.7403%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.15%)</title><rect x="97.3928%" y="277" width="0.1462%" height="15" fill="rgb(245,116,9)" fg:x="3997" fg:w="6"/><text x="97.6428%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="97.5146%" y="261" width="0.0244%" height="15" fill="rgb(209,72,35)" fg:x="4002" fg:w="1"/><text x="97.7646%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="97.5146%" y="245" width="0.0244%" height="15" fill="rgb(226,126,21)" fg:x="4002" fg:w="1"/><text x="97.7646%" y="255.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="97.5390%" y="277" width="0.0244%" height="15" fill="rgb(227,192,1)" fg:x="4003" fg:w="1"/><text x="97.7890%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="97.5634%" y="261" width="0.0244%" height="15" fill="rgb(237,180,29)" fg:x="4004" fg:w="1"/><text x="97.8134%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="97.5877%" y="245" width="0.0244%" height="15" fill="rgb(230,197,35)" fg:x="4005" fg:w="1"/><text x="97.8377%" y="255.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="97.6121%" y="245" width="0.0244%" height="15" fill="rgb(246,193,31)" fg:x="4006" fg:w="1"/><text x="97.8621%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="97.6365%" y="245" width="0.0244%" height="15" fill="rgb(241,36,4)" fg:x="4007" fg:w="1"/><text x="97.8865%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="97.6608%" y="229" width="0.0244%" height="15" fill="rgb(241,130,17)" fg:x="4008" fg:w="1"/><text x="97.9108%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (5 samples, 0.12%)</title><rect x="97.5877%" y="261" width="0.1218%" height="15" fill="rgb(206,137,32)" fg:x="4005" fg:w="5"/><text x="97.8377%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (2 samples, 0.05%)</title><rect x="97.6608%" y="245" width="0.0487%" height="15" fill="rgb(237,228,51)" fg:x="4008" fg:w="2"/><text x="97.9108%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="97.6852%" y="229" width="0.0244%" height="15" fill="rgb(243,6,42)" fg:x="4009" fg:w="1"/><text x="97.9352%" y="239.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::add_node_if_not_present (1 samples, 0.02%)</title><rect x="97.6852%" y="213" width="0.0244%" height="15" fill="rgb(251,74,28)" fg:x="4009" fg:w="1"/><text x="97.9352%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="97.6852%" y="197" width="0.0244%" height="15" fill="rgb(218,20,49)" fg:x="4009" fg:w="1"/><text x="97.9352%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (7 samples, 0.17%)</title><rect x="97.5634%" y="277" width="0.1706%" height="15" fill="rgb(238,28,14)" fg:x="4004" fg:w="7"/><text x="97.8134%" y="287.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="97.7096%" y="261" width="0.0244%" height="15" fill="rgb(229,40,46)" fg:x="4010" fg:w="1"/><text x="97.9596%" y="271.50"></text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="97.7096%" y="245" width="0.0244%" height="15" fill="rgb(244,195,20)" fg:x="4010" fg:w="1"/><text x="97.9596%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="97.7339%" y="261" width="0.0244%" height="15" fill="rgb(253,56,35)" fg:x="4011" fg:w="1"/><text x="97.9839%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.05%)</title><rect x="97.7583%" y="261" width="0.0487%" height="15" fill="rgb(210,149,44)" fg:x="4012" fg:w="2"/><text x="98.0083%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="97.8070%" y="261" width="0.0244%" height="15" fill="rgb(240,135,12)" fg:x="4014" fg:w="1"/><text x="98.0570%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.02%)</title><rect x="97.8070%" y="245" width="0.0244%" height="15" fill="rgb(251,24,50)" fg:x="4014" fg:w="1"/><text x="98.0570%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="97.8070%" y="229" width="0.0244%" height="15" fill="rgb(243,200,47)" fg:x="4014" fg:w="1"/><text x="98.0570%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="97.8314%" y="261" width="0.0244%" height="15" fill="rgb(224,166,26)" fg:x="4015" fg:w="1"/><text x="98.0814%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="97.9045%" y="245" width="0.0244%" height="15" fill="rgb(233,0,47)" fg:x="4018" fg:w="1"/><text x="98.1545%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.12%)</title><rect x="97.8558%" y="261" width="0.1218%" height="15" fill="rgb(253,80,5)" fg:x="4016" fg:w="5"/><text x="98.1058%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="97.9288%" y="245" width="0.0487%" height="15" fill="rgb(214,133,25)" fg:x="4019" fg:w="2"/><text x="98.1788%" y="255.50"></text></g><g><title>rust-gkat`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="97.9776%" y="261" width="0.0244%" height="15" fill="rgb(209,27,14)" fg:x="4021" fg:w="1"/><text x="98.2276%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.0019%" y="245" width="0.0244%" height="15" fill="rgb(219,102,51)" fg:x="4022" fg:w="1"/><text x="98.2519%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (2 samples, 0.05%)</title><rect x="98.0019%" y="261" width="0.0487%" height="15" fill="rgb(237,18,16)" fg:x="4022" fg:w="2"/><text x="98.2519%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="98.0263%" y="245" width="0.0244%" height="15" fill="rgb(241,85,17)" fg:x="4023" fg:w="1"/><text x="98.2763%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="98.0263%" y="229" width="0.0244%" height="15" fill="rgb(236,90,42)" fg:x="4023" fg:w="1"/><text x="98.2763%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="98.0263%" y="213" width="0.0244%" height="15" fill="rgb(249,57,21)" fg:x="4023" fg:w="1"/><text x="98.2763%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.0263%" y="197" width="0.0244%" height="15" fill="rgb(243,12,36)" fg:x="4023" fg:w="1"/><text x="98.2763%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.07%)</title><rect x="98.1481%" y="245" width="0.0731%" height="15" fill="rgb(253,128,47)" fg:x="4028" fg:w="3"/><text x="98.3981%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="98.2212%" y="245" width="0.0244%" height="15" fill="rgb(207,33,20)" fg:x="4031" fg:w="1"/><text x="98.4712%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.07%)</title><rect x="98.2456%" y="245" width="0.0731%" height="15" fill="rgb(233,215,35)" fg:x="4032" fg:w="3"/><text x="98.4956%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="98.2700%" y="229" width="0.0487%" height="15" fill="rgb(249,188,52)" fg:x="4033" fg:w="2"/><text x="98.5200%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.3187%" y="213" width="0.0244%" height="15" fill="rgb(225,12,32)" fg:x="4035" fg:w="1"/><text x="98.5687%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (2 samples, 0.05%)</title><rect x="98.3187%" y="245" width="0.0487%" height="15" fill="rgb(247,98,14)" fg:x="4035" fg:w="2"/><text x="98.5687%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (2 samples, 0.05%)</title><rect x="98.3187%" y="229" width="0.0487%" height="15" fill="rgb(247,219,48)" fg:x="4035" fg:w="2"/><text x="98.5687%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="98.3431%" y="213" width="0.0244%" height="15" fill="rgb(253,60,48)" fg:x="4036" fg:w="1"/><text x="98.5931%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.3431%" y="197" width="0.0244%" height="15" fill="rgb(245,15,52)" fg:x="4036" fg:w="1"/><text x="98.5931%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="98.3674%" y="229" width="0.0244%" height="15" fill="rgb(220,133,28)" fg:x="4037" fg:w="1"/><text x="98.6174%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="98.3918%" y="229" width="0.0244%" height="15" fill="rgb(217,180,4)" fg:x="4038" fg:w="1"/><text x="98.6418%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="98.3918%" y="213" width="0.0244%" height="15" fill="rgb(251,24,1)" fg:x="4038" fg:w="1"/><text x="98.6418%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::bexp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_bexp (1 samples, 0.02%)</title><rect x="98.4162%" y="229" width="0.0244%" height="15" fill="rgb(212,185,49)" fg:x="4039" fg:w="1"/><text x="98.6662%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="98.4162%" y="213" width="0.0244%" height="15" fill="rgb(215,175,22)" fg:x="4039" fg:w="1"/><text x="98.6662%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.02%)</title><rect x="98.4405%" y="213" width="0.0244%" height="15" fill="rgb(250,205,14)" fg:x="4040" fg:w="1"/><text x="98.6905%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (2 samples, 0.05%)</title><rect x="98.4405%" y="229" width="0.0487%" height="15" fill="rgb(225,211,22)" fg:x="4040" fg:w="2"/><text x="98.6905%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (1 samples, 0.02%)</title><rect x="98.4649%" y="213" width="0.0244%" height="15" fill="rgb(251,179,42)" fg:x="4041" fg:w="1"/><text x="98.7149%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="98.4649%" y="197" width="0.0244%" height="15" fill="rgb(208,216,51)" fg:x="4041" fg:w="1"/><text x="98.7149%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="98.4649%" y="181" width="0.0244%" height="15" fill="rgb(235,36,11)" fg:x="4041" fg:w="1"/><text x="98.7149%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (7 samples, 0.17%)</title><rect x="98.3674%" y="245" width="0.1706%" height="15" fill="rgb(213,189,28)" fg:x="4037" fg:w="7"/><text x="98.6174%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (2 samples, 0.05%)</title><rect x="98.4893%" y="229" width="0.0487%" height="15" fill="rgb(227,203,42)" fg:x="4042" fg:w="2"/><text x="98.7393%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.05%)</title><rect x="98.4893%" y="213" width="0.0487%" height="15" fill="rgb(244,72,36)" fg:x="4042" fg:w="2"/><text x="98.7393%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="98.5136%" y="197" width="0.0244%" height="15" fill="rgb(213,53,17)" fg:x="4043" fg:w="1"/><text x="98.7636%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="98.5624%" y="213" width="0.0244%" height="15" fill="rgb(207,167,3)" fg:x="4045" fg:w="1"/><text x="98.8124%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.10%)</title><rect x="98.5380%" y="229" width="0.0975%" height="15" fill="rgb(216,98,30)" fg:x="4044" fg:w="4"/><text x="98.7880%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.05%)</title><rect x="98.5867%" y="213" width="0.0487%" height="15" fill="rgb(236,123,15)" fg:x="4046" fg:w="2"/><text x="98.8367%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (25 samples, 0.61%)</title><rect x="98.0507%" y="261" width="0.6092%" height="15" fill="rgb(248,81,50)" fg:x="4024" fg:w="25"/><text x="98.3007%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (5 samples, 0.12%)</title><rect x="98.5380%" y="245" width="0.1218%" height="15" fill="rgb(214,120,4)" fg:x="4044" fg:w="5"/><text x="98.7880%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&lt;xdd::NodeIndex&lt;u32,xdd::NoMultiplicity&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="98.6355%" y="229" width="0.0244%" height="15" fill="rgb(208,179,34)" fg:x="4048" fg:w="1"/><text x="98.8855%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="98.6842%" y="229" width="0.0731%" height="15" fill="rgb(227,140,7)" fg:x="4050" fg:w="3"/><text x="98.9342%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (43 samples, 1.05%)</title><rect x="97.7339%" y="277" width="1.0478%" height="15" fill="rgb(214,22,6)" fg:x="4011" fg:w="43"/><text x="97.9839%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (5 samples, 0.12%)</title><rect x="98.6598%" y="261" width="0.1218%" height="15" fill="rgb(207,137,27)" fg:x="4049" fg:w="5"/><text x="98.9098%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.12%)</title><rect x="98.6598%" y="245" width="0.1218%" height="15" fill="rgb(210,8,46)" fg:x="4049" fg:w="5"/><text x="98.9098%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="98.7573%" y="229" width="0.0244%" height="15" fill="rgb(240,16,54)" fg:x="4053" fg:w="1"/><text x="99.0073%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="98.8060%" y="245" width="0.0244%" height="15" fill="rgb(211,209,29)" fg:x="4055" fg:w="1"/><text x="99.0560%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="98.8060%" y="229" width="0.0244%" height="15" fill="rgb(226,228,24)" fg:x="4055" fg:w="1"/><text x="99.0560%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="98.8060%" y="213" width="0.0244%" height="15" fill="rgb(222,84,9)" fg:x="4055" fg:w="1"/><text x="99.0560%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="98.8304%" y="245" width="0.0244%" height="15" fill="rgb(234,203,30)" fg:x="4056" fg:w="1"/><text x="99.0804%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="98.8548%" y="245" width="0.0244%" height="15" fill="rgb(238,109,14)" fg:x="4057" fg:w="1"/><text x="99.1048%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="98.8791%" y="245" width="0.0731%" height="15" fill="rgb(233,206,34)" fg:x="4058" fg:w="3"/><text x="99.1291%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (70 samples, 1.71%)</title><rect x="97.2710%" y="293" width="1.7057%" height="15" fill="rgb(220,167,47)" fg:x="3992" fg:w="70"/><text x="97.5210%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (8 samples, 0.19%)</title><rect x="98.7817%" y="277" width="0.1949%" height="15" fill="rgb(238,105,10)" fg:x="4054" fg:w="8"/><text x="99.0317%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.19%)</title><rect x="98.7817%" y="261" width="0.1949%" height="15" fill="rgb(213,227,17)" fg:x="4054" fg:w="8"/><text x="99.0317%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="98.9522%" y="245" width="0.0244%" height="15" fill="rgb(217,132,38)" fg:x="4061" fg:w="1"/><text x="99.2022%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.02%)</title><rect x="99.0984%" y="261" width="0.0244%" height="15" fill="rgb(242,146,4)" fg:x="4067" fg:w="1"/><text x="99.3484%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="99.0984%" y="245" width="0.0244%" height="15" fill="rgb(212,61,9)" fg:x="4067" fg:w="1"/><text x="99.3484%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="99.1228%" y="261" width="0.1218%" height="15" fill="rgb(247,126,22)" fg:x="4068" fg:w="5"/><text x="99.3728%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.2690%" y="245" width="0.0244%" height="15" fill="rgb(220,196,2)" fg:x="4074" fg:w="1"/><text x="99.5190%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (104 samples, 2.53%)</title><rect x="96.8080%" y="309" width="2.5341%" height="15" fill="rgb(208,46,4)" fg:x="3973" fg:w="104"/><text x="97.0580%" y="319.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (15 samples, 0.37%)</title><rect x="98.9766%" y="293" width="0.3655%" height="15" fill="rgb(252,104,46)" fg:x="4062" fg:w="15"/><text x="99.2266%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (15 samples, 0.37%)</title><rect x="98.9766%" y="277" width="0.3655%" height="15" fill="rgb(237,152,48)" fg:x="4062" fg:w="15"/><text x="99.2266%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="99.2446%" y="261" width="0.0975%" height="15" fill="rgb(221,59,37)" fg:x="4073" fg:w="4"/><text x="99.4946%" y="271.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="99.2934%" y="245" width="0.0487%" height="15" fill="rgb(209,202,51)" fg:x="4075" fg:w="2"/><text x="99.5434%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.3177%" y="229" width="0.0244%" height="15" fill="rgb(228,81,30)" fg:x="4076" fg:w="1"/><text x="99.5677%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="99.3665%" y="277" width="0.0244%" height="15" fill="rgb(227,42,39)" fg:x="4078" fg:w="1"/><text x="99.6165%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.3908%" y="277" width="0.0244%" height="15" fill="rgb(221,26,2)" fg:x="4079" fg:w="1"/><text x="99.6408%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="99.4152%" y="277" width="0.0731%" height="15" fill="rgb(254,61,31)" fg:x="4080" fg:w="3"/><text x="99.6652%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.19%)</title><rect x="99.3421%" y="293" width="0.1949%" height="15" fill="rgb(222,173,38)" fg:x="4077" fg:w="8"/><text x="99.5921%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="99.4883%" y="277" width="0.0487%" height="15" fill="rgb(218,50,12)" fg:x="4083" fg:w="2"/><text x="99.7383%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.5127%" y="261" width="0.0244%" height="15" fill="rgb(223,88,40)" fg:x="4084" fg:w="1"/><text x="99.7627%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (124 samples, 3.02%)</title><rect x="96.5400%" y="325" width="3.0214%" height="15" fill="rgb(237,54,19)" fg:x="3962" fg:w="124"/><text x="96.7900%" y="335.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (9 samples, 0.22%)</title><rect x="99.3421%" y="309" width="0.2193%" height="15" fill="rgb(251,129,25)" fg:x="4077" fg:w="9"/><text x="99.5921%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.5370%" y="293" width="0.0244%" height="15" fill="rgb(238,97,19)" fg:x="4085" fg:w="1"/><text x="99.7870%" y="303.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.6101%" y="293" width="0.0244%" height="15" fill="rgb(240,169,18)" fg:x="4088" fg:w="1"/><text x="99.8601%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.6345%" y="293" width="0.0244%" height="15" fill="rgb(230,187,49)" fg:x="4089" fg:w="1"/><text x="99.8845%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (132 samples, 3.22%)</title><rect x="96.4669%" y="341" width="3.2164%" height="15" fill="rgb(209,44,26)" fg:x="3959" fg:w="132"/><text x="96.7169%" y="351.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (5 samples, 0.12%)</title><rect x="99.5614%" y="325" width="0.1218%" height="15" fill="rgb(244,0,6)" fg:x="4086" fg:w="5"/><text x="99.8114%" y="335.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.10%)</title><rect x="99.5858%" y="309" width="0.0975%" height="15" fill="rgb(248,18,21)" fg:x="4087" fg:w="4"/><text x="99.8358%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="99.6589%" y="293" width="0.0244%" height="15" fill="rgb(245,180,19)" fg:x="4090" fg:w="1"/><text x="99.9089%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="99.6589%" y="277" width="0.0244%" height="15" fill="rgb(252,118,36)" fg:x="4090" fg:w="1"/><text x="99.9089%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.6589%" y="261" width="0.0244%" height="15" fill="rgb(210,224,19)" fg:x="4090" fg:w="1"/><text x="99.9089%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (138 samples, 3.36%)</title><rect x="96.3450%" y="357" width="3.3626%" height="15" fill="rgb(218,30,24)" fg:x="3954" fg:w="138"/><text x="96.5950%" y="367.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (1 samples, 0.02%)</title><rect x="99.6832%" y="341" width="0.0244%" height="15" fill="rgb(219,75,50)" fg:x="4091" fg:w="1"/><text x="99.9332%" y="351.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.02%)</title><rect x="99.6832%" y="325" width="0.0244%" height="15" fill="rgb(234,72,50)" fg:x="4091" fg:w="1"/><text x="99.9332%" y="335.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.6832%" y="309" width="0.0244%" height="15" fill="rgb(219,100,48)" fg:x="4091" fg:w="1"/><text x="99.9332%" y="319.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.7320%" y="325" width="0.0244%" height="15" fill="rgb(253,5,41)" fg:x="4093" fg:w="1"/><text x="99.9820%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="597" width="3.5331%" height="15" fill="rgb(247,181,11)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="607.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="581" width="3.5331%" height="15" fill="rgb(222,223,25)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="591.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="565" width="3.5331%" height="15" fill="rgb(214,198,28)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="575.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="549" width="3.5331%" height="15" fill="rgb(230,46,43)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="559.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="533" width="3.5331%" height="15" fill="rgb(233,65,53)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="543.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="517" width="3.5331%" height="15" fill="rgb(221,121,27)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="527.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="501" width="3.5331%" height="15" fill="rgb(247,70,47)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="511.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="485" width="3.5331%" height="15" fill="rgb(228,85,35)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="495.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="469" width="3.5331%" height="15" fill="rgb(209,50,18)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="479.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="453" width="3.5331%" height="15" fill="rgb(250,19,35)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="463.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="437" width="3.5331%" height="15" fill="rgb(253,107,29)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="447.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="421" width="3.5331%" height="15" fill="rgb(252,179,29)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="431.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="405" width="3.5331%" height="15" fill="rgb(238,194,6)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="415.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (145 samples, 3.53%)</title><rect x="96.2476%" y="389" width="3.5331%" height="15" fill="rgb(238,164,29)" fg:x="3950" fg:w="145"/><text x="96.4976%" y="399.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::from_exp (144 samples, 3.51%)</title><rect x="96.2719%" y="373" width="3.5088%" height="15" fill="rgb(224,25,9)" fg:x="3951" fg:w="144"/><text x="96.5219%" y="383.50">rus..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&lt;A,M,Builder&gt;&gt;::mk_seq (3 samples, 0.07%)</title><rect x="99.7076%" y="357" width="0.0731%" height="15" fill="rgb(244,153,23)" fg:x="4092" fg:w="3"/><text x="99.9576%" y="367.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.07%)</title><rect x="99.7076%" y="341" width="0.0731%" height="15" fill="rgb(212,203,14)" fg:x="4092" fg:w="3"/><text x="99.9576%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="99.7563%" y="325" width="0.0244%" height="15" fill="rgb(220,164,20)" fg:x="4094" fg:w="1"/><text x="100.0063%" y="335.50"></text></g><g><title>rust-gkat`std::fs::read_to_string::inner (1 samples, 0.02%)</title><rect x="99.7807%" y="597" width="0.0244%" height="15" fill="rgb(222,203,48)" fg:x="4095" fg:w="1"/><text x="100.0307%" y="607.50"></text></g><g><title>rust-gkat`core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="99.7807%" y="581" width="0.0244%" height="15" fill="rgb(215,159,22)" fg:x="4095" fg:w="1"/><text x="100.0307%" y="591.50"></text></g><g><title>dyld`start (4,097 samples, 99.83%)</title><rect x="0.0000%" y="693" width="99.8294%" height="15" fill="rgb(216,183,47)" fg:x="0" fg:w="4097"/><text x="0.2500%" y="703.50">dyld`start</text></g><g><title>rust-gkat`main (4,095 samples, 99.78%)</title><rect x="0.0487%" y="677" width="99.7807%" height="15" fill="rgb(229,195,25)" fg:x="2" fg:w="4095"/><text x="0.2987%" y="687.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (4,095 samples, 99.78%)</title><rect x="0.0487%" y="661" width="99.7807%" height="15" fill="rgb(224,132,51)" fg:x="2" fg:w="4095"/><text x="0.2987%" y="671.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (4,095 samples, 99.78%)</title><rect x="0.0487%" y="645" width="99.7807%" height="15" fill="rgb(240,63,7)" fg:x="2" fg:w="4095"/><text x="0.2987%" y="655.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (4,095 samples, 99.78%)</title><rect x="0.0487%" y="629" width="99.7807%" height="15" fill="rgb(249,182,41)" fg:x="2" fg:w="4095"/><text x="0.2987%" y="639.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (4,092 samples, 99.71%)</title><rect x="0.1218%" y="613" width="99.7076%" height="15" fill="rgb(243,47,26)" fg:x="5" fg:w="4092"/><text x="0.3718%" y="623.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`xdd::xdd_with_multiplicity::XDDBase::mul_bdd (1 samples, 0.02%)</title><rect x="99.8051%" y="597" width="0.0244%" height="15" fill="rgb(233,48,2)" fg:x="4096" fg:w="1"/><text x="100.0551%" y="607.50"></text></g><g><title>all (4,104 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(244,165,34)" fg:x="0" fg:w="4104"/><text x="0.2500%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__exit (7 samples, 0.17%)</title><rect x="99.8294%" y="693" width="0.1706%" height="15" fill="rgb(207,89,7)" fg:x="4097" fg:w="7"/><text x="100.0794%" y="703.50"></text></g></svg></svg>