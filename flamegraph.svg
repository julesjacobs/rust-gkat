<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="469.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="29141"><g><title>libsystem_malloc.dylib`_free (3 samples, 0.01%)</title><rect x="0.0034%" y="309" width="0.0103%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="3"/><text x="0.2534%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (374 samples, 1.28%)</title><rect x="0.0240%" y="309" width="1.2834%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="374"/><text x="0.2740%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (100 samples, 0.34%)</title><rect x="1.3074%" y="309" width="0.3432%" height="15" fill="rgb(221,193,54)" fg:x="381" fg:w="100"/><text x="1.5574%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (404 samples, 1.39%)</title><rect x="1.6506%" y="309" width="1.3864%" height="15" fill="rgb(248,212,6)" fg:x="481" fg:w="404"/><text x="1.9006%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.02%)</title><rect x="6.1837%" y="293" width="0.0240%" height="15" fill="rgb(208,68,35)" fg:x="1802" fg:w="7"/><text x="6.4337%" y="303.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.02%)</title><rect x="6.2112%" y="293" width="0.0206%" height="15" fill="rgb(232,128,0)" fg:x="1810" fg:w="6"/><text x="6.4612%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="6.2318%" y="293" width="0.0206%" height="15" fill="rgb(207,160,47)" fg:x="1816" fg:w="6"/><text x="6.4818%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (23 samples, 0.08%)</title><rect x="6.2524%" y="293" width="0.0789%" height="15" fill="rgb(228,23,34)" fg:x="1822" fg:w="23"/><text x="6.5024%" y="303.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (711 samples, 2.44%)</title><rect x="6.3347%" y="293" width="2.4399%" height="15" fill="rgb(218,30,26)" fg:x="1846" fg:w="711"/><text x="6.5847%" y="303.50">ru..</text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (994 samples, 3.41%)</title><rect x="11.7463%" y="277" width="3.4110%" height="15" fill="rgb(220,122,19)" fg:x="3423" fg:w="994"/><text x="11.9963%" y="287.50">rus..</text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,893 samples, 13.36%)</title><rect x="8.7746%" y="293" width="13.3592%" height="15" fill="rgb(250,228,42)" fg:x="2557" fg:w="3893"/><text x="9.0246%" y="303.50">rust-gkat`hashbrown:..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2,033 samples, 6.98%)</title><rect x="15.1573%" y="277" width="6.9764%" height="15" fill="rgb(240,193,28)" fg:x="4417" fg:w="2033"/><text x="15.4073%" y="287.50">rust-gkat..</text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,774 samples, 6.09%)</title><rect x="45.1838%" y="261" width="6.0876%" height="15" fill="rgb(216,20,37)" fg:x="13167" fg:w="1774"/><text x="45.4338%" y="271.50">rust-gka..</text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12,123 samples, 41.60%)</title><rect x="24.9511%" y="277" width="41.6012%" height="15" fill="rgb(206,188,39)" fg:x="7271" fg:w="12123"/><text x="25.2011%" y="287.50">rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsi..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4,453 samples, 15.28%)</title><rect x="51.2714%" y="261" width="15.2809%" height="15" fill="rgb(217,207,13)" fg:x="14941" fg:w="4453"/><text x="51.5214%" y="271.50">rust-gkat`core::hash::B..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2,342 samples, 8.04%)</title><rect x="66.5523%" y="277" width="8.0368%" height="15" fill="rgb(231,73,38)" fg:x="19394" fg:w="2342"/><text x="66.8023%" y="287.50">rust-gkat`c..</text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (17,379 samples, 59.64%)</title><rect x="22.1338%" y="293" width="59.6376%" height="15" fill="rgb(225,20,46)" fg:x="6450" fg:w="17379"/><text x="22.3838%" y="303.50">rust-gkat`rust_gkat::gkat_ast::bexp::mk_and</text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (2,093 samples, 7.18%)</title><rect x="74.5891%" y="277" width="7.1823%" height="15" fill="rgb(210,31,41)" fg:x="21736" fg:w="2093"/><text x="74.8391%" y="287.50">rust-gkat`..</text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (692 samples, 2.37%)</title><rect x="84.9456%" y="277" width="2.3747%" height="15" fill="rgb(221,200,47)" fg:x="24754" fg:w="692"/><text x="85.1956%" y="287.50">ru..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1,286 samples, 4.41%)</title><rect x="87.3271%" y="277" width="4.4130%" height="15" fill="rgb(226,26,5)" fg:x="25448" fg:w="1286"/><text x="87.5771%" y="287.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::to_bdd (2,906 samples, 9.97%)</title><rect x="81.7714%" y="293" width="9.9722%" height="15" fill="rgb(249,33,26)" fg:x="23829" fg:w="2906"/><text x="82.0214%" y="303.50">rust-gkat`rust..</text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="91.7642%" y="229" width="0.0275%" height="15" fill="rgb(235,183,28)" fg:x="26741" fg:w="8"/><text x="92.0142%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="91.7813%" y="213" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="26746" fg:w="3"/><text x="92.0313%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="91.7916%" y="229" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="26749" fg:w="4"/><text x="92.0416%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (15 samples, 0.05%)</title><rect x="91.7573%" y="245" width="0.0515%" height="15" fill="rgb(241,131,45)" fg:x="26739" fg:w="15"/><text x="92.0073%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.02%)</title><rect x="91.8397%" y="213" width="0.0240%" height="15" fill="rgb(249,31,29)" fg:x="26763" fg:w="7"/><text x="92.0897%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="91.8637%" y="213" width="0.0240%" height="15" fill="rgb(225,111,53)" fg:x="26770" fg:w="7"/><text x="92.1137%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="91.8877%" y="213" width="0.0240%" height="15" fill="rgb(238,160,17)" fg:x="26777" fg:w="7"/><text x="92.1377%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (31 samples, 0.11%)</title><rect x="91.8122%" y="229" width="0.1064%" height="15" fill="rgb(214,148,48)" fg:x="26755" fg:w="31"/><text x="92.0622%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="91.9186%" y="229" width="0.0240%" height="15" fill="rgb(232,36,49)" fg:x="26786" fg:w="7"/><text x="92.1686%" y="239.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 0.22%)</title><rect x="91.7436%" y="277" width="0.2162%" height="15" fill="rgb(209,103,24)" fg:x="26735" fg:w="63"/><text x="91.9936%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 0.22%)</title><rect x="91.7436%" y="261" width="0.2162%" height="15" fill="rgb(229,88,8)" fg:x="26735" fg:w="63"/><text x="91.9936%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (44 samples, 0.15%)</title><rect x="91.8088%" y="245" width="0.1510%" height="15" fill="rgb(213,181,19)" fg:x="26754" fg:w="44"/><text x="92.0588%" y="255.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (4 samples, 0.01%)</title><rect x="91.9461%" y="229" width="0.0137%" height="15" fill="rgb(254,191,54)" fg:x="26794" fg:w="4"/><text x="92.1961%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="91.9769%" y="197" width="0.0103%" height="15" fill="rgb(241,83,37)" fg:x="26803" fg:w="3"/><text x="92.2269%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="91.9666%" y="213" width="0.0275%" height="15" fill="rgb(233,36,39)" fg:x="26800" fg:w="8"/><text x="92.2166%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="91.9941%" y="213" width="0.0172%" height="15" fill="rgb(226,3,54)" fg:x="26808" fg:w="5"/><text x="92.2441%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (15 samples, 0.05%)</title><rect x="91.9666%" y="229" width="0.0515%" height="15" fill="rgb(245,192,40)" fg:x="26800" fg:w="15"/><text x="92.2166%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.02%)</title><rect x="92.0559%" y="197" width="0.0172%" height="15" fill="rgb(238,167,29)" fg:x="26826" fg:w="5"/><text x="92.3059%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="92.0730%" y="197" width="0.0206%" height="15" fill="rgb(232,182,51)" fg:x="26831" fg:w="6"/><text x="92.3230%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.03%)</title><rect x="92.0936%" y="197" width="0.0309%" height="15" fill="rgb(231,60,39)" fg:x="26837" fg:w="9"/><text x="92.3436%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (30 samples, 0.10%)</title><rect x="92.0250%" y="213" width="0.1029%" height="15" fill="rgb(208,69,12)" fg:x="26817" fg:w="30"/><text x="92.2750%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="92.1279%" y="213" width="0.0206%" height="15" fill="rgb(235,93,37)" fg:x="26847" fg:w="6"/><text x="92.3779%" y="223.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (57 samples, 0.20%)</title><rect x="91.9632%" y="261" width="0.1956%" height="15" fill="rgb(213,116,39)" fg:x="26799" fg:w="57"/><text x="92.2132%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.20%)</title><rect x="91.9632%" y="245" width="0.1956%" height="15" fill="rgb(222,207,29)" fg:x="26799" fg:w="57"/><text x="92.2132%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (41 samples, 0.14%)</title><rect x="92.0181%" y="229" width="0.1407%" height="15" fill="rgb(206,96,30)" fg:x="26815" fg:w="41"/><text x="92.2681%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.02%)</title><rect x="92.1760%" y="197" width="0.0206%" height="15" fill="rgb(218,138,4)" fg:x="26861" fg:w="6"/><text x="92.4260%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="92.1966%" y="197" width="0.0206%" height="15" fill="rgb(250,191,14)" fg:x="26867" fg:w="6"/><text x="92.4466%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (14 samples, 0.05%)</title><rect x="92.1725%" y="213" width="0.0480%" height="15" fill="rgb(239,60,40)" fg:x="26860" fg:w="14"/><text x="92.4225%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="92.2824%" y="181" width="0.0309%" height="15" fill="rgb(206,27,48)" fg:x="26892" fg:w="9"/><text x="92.5324%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (32 samples, 0.11%)</title><rect x="92.2240%" y="197" width="0.1098%" height="15" fill="rgb(225,35,8)" fg:x="26875" fg:w="32"/><text x="92.4740%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="92.3132%" y="181" width="0.0206%" height="15" fill="rgb(250,213,24)" fg:x="26901" fg:w="6"/><text x="92.5632%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (16 samples, 0.05%)</title><rect x="92.3338%" y="197" width="0.0549%" height="15" fill="rgb(247,123,22)" fg:x="26907" fg:w="16"/><text x="92.5838%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (68 samples, 0.23%)</title><rect x="92.1588%" y="245" width="0.2333%" height="15" fill="rgb(231,138,38)" fg:x="26856" fg:w="68"/><text x="92.4088%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.23%)</title><rect x="92.1588%" y="229" width="0.2333%" height="15" fill="rgb(231,145,46)" fg:x="26856" fg:w="68"/><text x="92.4088%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (50 samples, 0.17%)</title><rect x="92.2206%" y="213" width="0.1716%" height="15" fill="rgb(251,118,11)" fg:x="26874" fg:w="50"/><text x="92.4706%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="92.3990%" y="181" width="0.0137%" height="15" fill="rgb(217,147,25)" fg:x="26926" fg:w="4"/><text x="92.6490%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="92.4025%" y="165" width="0.0103%" height="15" fill="rgb(247,81,37)" fg:x="26927" fg:w="3"/><text x="92.6525%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="92.3990%" y="197" width="0.0206%" height="15" fill="rgb(209,12,38)" fg:x="26926" fg:w="6"/><text x="92.6490%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.03%)</title><rect x="92.4711%" y="165" width="0.0275%" height="15" fill="rgb(227,1,9)" fg:x="26947" fg:w="8"/><text x="92.7211%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (29 samples, 0.10%)</title><rect x="92.4230%" y="181" width="0.0995%" height="15" fill="rgb(248,47,43)" fg:x="26933" fg:w="29"/><text x="92.6730%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="92.4985%" y="165" width="0.0240%" height="15" fill="rgb(221,10,30)" fg:x="26955" fg:w="7"/><text x="92.7485%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="92.5226%" y="181" width="0.0275%" height="15" fill="rgb(210,229,1)" fg:x="26962" fg:w="8"/><text x="92.7726%" y="191.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 0.01%)</title><rect x="92.5500%" y="181" width="0.0103%" height="15" fill="rgb(222,148,37)" fg:x="26970" fg:w="3"/><text x="92.8000%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.18%)</title><rect x="92.3956%" y="213" width="0.1750%" height="15" fill="rgb(234,67,33)" fg:x="26925" fg:w="51"/><text x="92.6456%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (44 samples, 0.15%)</title><rect x="92.4196%" y="197" width="0.1510%" height="15" fill="rgb(247,98,35)" fg:x="26932" fg:w="44"/><text x="92.6696%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (3 samples, 0.01%)</title><rect x="92.5603%" y="181" width="0.0103%" height="15" fill="rgb(247,138,52)" fg:x="26973" fg:w="3"/><text x="92.8103%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (56 samples, 0.19%)</title><rect x="92.3956%" y="229" width="0.1922%" height="15" fill="rgb(213,79,30)" fg:x="26925" fg:w="56"/><text x="92.6456%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (5 samples, 0.02%)</title><rect x="92.5706%" y="213" width="0.0172%" height="15" fill="rgb(246,177,23)" fg:x="26976" fg:w="5"/><text x="92.8206%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (4 samples, 0.01%)</title><rect x="92.5740%" y="197" width="0.0137%" height="15" fill="rgb(230,62,27)" fg:x="26977" fg:w="4"/><text x="92.8240%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (14 samples, 0.05%)</title><rect x="92.6049%" y="165" width="0.0480%" height="15" fill="rgb(216,154,8)" fg:x="26986" fg:w="14"/><text x="92.8549%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="92.6358%" y="149" width="0.0172%" height="15" fill="rgb(244,35,45)" fg:x="26995" fg:w="5"/><text x="92.8858%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="92.6530%" y="165" width="0.0103%" height="15" fill="rgb(251,115,12)" fg:x="27000" fg:w="3"/><text x="92.9030%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (22 samples, 0.08%)</title><rect x="92.5912%" y="181" width="0.0755%" height="15" fill="rgb(240,54,50)" fg:x="26982" fg:w="22"/><text x="92.8412%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="92.6941%" y="149" width="0.0240%" height="15" fill="rgb(233,84,52)" fg:x="27012" fg:w="7"/><text x="92.9441%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (16 samples, 0.05%)</title><rect x="92.6770%" y="165" width="0.0549%" height="15" fill="rgb(207,117,47)" fg:x="27007" fg:w="16"/><text x="92.9270%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="92.7182%" y="149" width="0.0137%" height="15" fill="rgb(249,43,39)" fg:x="27019" fg:w="4"/><text x="92.9682%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="92.7319%" y="165" width="0.0275%" height="15" fill="rgb(209,38,44)" fg:x="27023" fg:w="8"/><text x="92.9819%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (54 samples, 0.19%)</title><rect x="92.5878%" y="197" width="0.1853%" height="15" fill="rgb(236,212,23)" fg:x="26981" fg:w="54"/><text x="92.8378%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (31 samples, 0.11%)</title><rect x="92.6667%" y="181" width="0.1064%" height="15" fill="rgb(242,79,21)" fg:x="27004" fg:w="31"/><text x="92.9167%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="92.7731%" y="165" width="0.0103%" height="15" fill="rgb(211,96,35)" fg:x="27035" fg:w="3"/><text x="93.0231%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (58 samples, 0.20%)</title><rect x="92.5878%" y="213" width="0.1990%" height="15" fill="rgb(253,215,40)" fg:x="26981" fg:w="58"/><text x="92.8378%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (4 samples, 0.01%)</title><rect x="92.7731%" y="197" width="0.0137%" height="15" fill="rgb(211,81,21)" fg:x="27035" fg:w="4"/><text x="93.0231%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (4 samples, 0.01%)</title><rect x="92.7731%" y="181" width="0.0137%" height="15" fill="rgb(208,190,38)" fg:x="27035" fg:w="4"/><text x="93.0231%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (10 samples, 0.03%)</title><rect x="92.8040%" y="149" width="0.0343%" height="15" fill="rgb(235,213,38)" fg:x="27044" fg:w="10"/><text x="93.0540%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="92.8211%" y="133" width="0.0172%" height="15" fill="rgb(237,122,38)" fg:x="27049" fg:w="5"/><text x="93.0711%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="92.8383%" y="149" width="0.0137%" height="15" fill="rgb(244,218,35)" fg:x="27054" fg:w="4"/><text x="93.0883%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (17 samples, 0.06%)</title><rect x="92.7971%" y="165" width="0.0583%" height="15" fill="rgb(240,68,47)" fg:x="27042" fg:w="17"/><text x="93.0471%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="92.9035%" y="133" width="0.0206%" height="15" fill="rgb(210,16,53)" fg:x="27073" fg:w="6"/><text x="93.1535%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (21 samples, 0.07%)</title><rect x="92.8692%" y="149" width="0.0721%" height="15" fill="rgb(235,124,12)" fg:x="27063" fg:w="21"/><text x="93.1192%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="92.9241%" y="133" width="0.0172%" height="15" fill="rgb(224,169,11)" fg:x="27079" fg:w="5"/><text x="93.1741%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="92.9412%" y="149" width="0.0172%" height="15" fill="rgb(250,166,2)" fg:x="27084" fg:w="5"/><text x="93.1912%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.18%)</title><rect x="92.7937%" y="181" width="0.1750%" height="15" fill="rgb(242,216,29)" fg:x="27041" fg:w="51"/><text x="93.0437%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (33 samples, 0.11%)</title><rect x="92.8554%" y="165" width="0.1132%" height="15" fill="rgb(230,116,27)" fg:x="27059" fg:w="33"/><text x="93.1054%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (53 samples, 0.18%)</title><rect x="92.7937%" y="197" width="0.1819%" height="15" fill="rgb(228,99,48)" fg:x="27041" fg:w="53"/><text x="93.0437%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 0.02%)</title><rect x="92.9927%" y="133" width="0.0240%" height="15" fill="rgb(253,11,6)" fg:x="27099" fg:w="7"/><text x="93.2427%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.0064%" y="117" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="27103" fg:w="3"/><text x="93.2564%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (14 samples, 0.05%)</title><rect x="92.9858%" y="149" width="0.0480%" height="15" fill="rgb(236,97,10)" fg:x="27097" fg:w="14"/><text x="93.2358%" y="159.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="93.0201%" y="133" width="0.0137%" height="15" fill="rgb(233,208,19)" fg:x="27107" fg:w="4"/><text x="93.2701%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="93.0613%" y="117" width="0.0446%" height="15" fill="rgb(216,164,2)" fg:x="27119" fg:w="13"/><text x="93.3113%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (24 samples, 0.08%)</title><rect x="93.0373%" y="133" width="0.0824%" height="15" fill="rgb(220,129,5)" fg:x="27112" fg:w="24"/><text x="93.2873%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="93.1059%" y="117" width="0.0137%" height="15" fill="rgb(242,17,10)" fg:x="27132" fg:w="4"/><text x="93.3559%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="93.1197%" y="133" width="0.0377%" height="15" fill="rgb(242,107,0)" fg:x="27136" fg:w="11"/><text x="93.3697%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (55 samples, 0.19%)</title><rect x="92.9755%" y="165" width="0.1887%" height="15" fill="rgb(251,28,31)" fg:x="27094" fg:w="55"/><text x="93.2255%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (38 samples, 0.13%)</title><rect x="93.0339%" y="149" width="0.1304%" height="15" fill="rgb(233,223,10)" fg:x="27111" fg:w="38"/><text x="93.2839%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="93.1711%" y="149" width="0.0137%" height="15" fill="rgb(215,21,27)" fg:x="27151" fg:w="4"/><text x="93.4211%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="93.2020%" y="117" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="27160" fg:w="3"/><text x="93.4520%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (10 samples, 0.03%)</title><rect x="93.1883%" y="133" width="0.0343%" height="15" fill="rgb(244,5,23)" fg:x="27156" fg:w="10"/><text x="93.4383%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.2123%" y="117" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="27163" fg:w="3"/><text x="93.4623%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (75 samples, 0.26%)</title><rect x="92.9755%" y="181" width="0.2574%" height="15" fill="rgb(247,70,30)" fg:x="27094" fg:w="75"/><text x="93.2255%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (20 samples, 0.07%)</title><rect x="93.1643%" y="165" width="0.0686%" height="15" fill="rgb(212,68,19)" fg:x="27149" fg:w="20"/><text x="93.4143%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (14 samples, 0.05%)</title><rect x="93.1849%" y="149" width="0.0480%" height="15" fill="rgb(240,187,13)" fg:x="27155" fg:w="14"/><text x="93.4349%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="93.2604%" y="101" width="0.0137%" height="15" fill="rgb(223,113,26)" fg:x="27177" fg:w="4"/><text x="93.5104%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="93.2501%" y="117" width="0.0275%" height="15" fill="rgb(206,192,2)" fg:x="27174" fg:w="8"/><text x="93.5001%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (12 samples, 0.04%)</title><rect x="93.2466%" y="133" width="0.0412%" height="15" fill="rgb(241,108,4)" fg:x="27173" fg:w="12"/><text x="93.4966%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="93.3221%" y="101" width="0.0137%" height="15" fill="rgb(247,173,49)" fg:x="27195" fg:w="4"/><text x="93.5721%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (18 samples, 0.06%)</title><rect x="93.2981%" y="117" width="0.0618%" height="15" fill="rgb(224,114,35)" fg:x="27188" fg:w="18"/><text x="93.5481%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="93.3358%" y="101" width="0.0240%" height="15" fill="rgb(245,159,27)" fg:x="27199" fg:w="7"/><text x="93.5858%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="93.3599%" y="117" width="0.0172%" height="15" fill="rgb(245,172,44)" fg:x="27206" fg:w="5"/><text x="93.6099%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.14%)</title><rect x="93.2432%" y="149" width="0.1373%" height="15" fill="rgb(236,23,11)" fg:x="27172" fg:w="40"/><text x="93.4932%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (27 samples, 0.09%)</title><rect x="93.2878%" y="133" width="0.0927%" height="15" fill="rgb(205,117,38)" fg:x="27185" fg:w="27"/><text x="93.5378%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 0.02%)</title><rect x="93.3976%" y="117" width="0.0240%" height="15" fill="rgb(237,72,25)" fg:x="27217" fg:w="7"/><text x="93.6476%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.4113%" y="101" width="0.0103%" height="15" fill="rgb(244,70,9)" fg:x="27221" fg:w="3"/><text x="93.6613%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (54 samples, 0.19%)</title><rect x="93.2432%" y="165" width="0.1853%" height="15" fill="rgb(217,125,39)" fg:x="27172" fg:w="54"/><text x="93.4932%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (14 samples, 0.05%)</title><rect x="93.3805%" y="149" width="0.0480%" height="15" fill="rgb(235,36,10)" fg:x="27212" fg:w="14"/><text x="93.6305%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (10 samples, 0.03%)</title><rect x="93.3942%" y="133" width="0.0343%" height="15" fill="rgb(251,123,47)" fg:x="27216" fg:w="10"/><text x="93.6442%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="93.4663%" y="101" width="0.0275%" height="15" fill="rgb(221,13,13)" fg:x="27237" fg:w="8"/><text x="93.7163%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (14 samples, 0.05%)</title><rect x="93.4491%" y="117" width="0.0480%" height="15" fill="rgb(238,131,9)" fg:x="27232" fg:w="14"/><text x="93.6991%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (10 samples, 0.03%)</title><rect x="93.5006%" y="101" width="0.0343%" height="15" fill="rgb(211,50,8)" fg:x="27247" fg:w="10"/><text x="93.7506%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="93.5109%" y="85" width="0.0240%" height="15" fill="rgb(245,182,24)" fg:x="27250" fg:w="7"/><text x="93.7609%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="93.5349%" y="101" width="0.0137%" height="15" fill="rgb(242,14,37)" fg:x="27257" fg:w="4"/><text x="93.7849%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.11%)</title><rect x="93.4422%" y="133" width="0.1098%" height="15" fill="rgb(246,228,12)" fg:x="27230" fg:w="32"/><text x="93.6922%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (16 samples, 0.05%)</title><rect x="93.4971%" y="117" width="0.0549%" height="15" fill="rgb(213,55,15)" fg:x="27246" fg:w="16"/><text x="93.7471%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (40 samples, 0.14%)</title><rect x="93.4422%" y="149" width="0.1373%" height="15" fill="rgb(209,9,3)" fg:x="27230" fg:w="40"/><text x="93.6922%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (7 samples, 0.02%)</title><rect x="93.5555%" y="133" width="0.0240%" height="15" fill="rgb(230,59,30)" fg:x="27263" fg:w="7"/><text x="93.8055%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (4 samples, 0.01%)</title><rect x="93.5658%" y="117" width="0.0137%" height="15" fill="rgb(209,121,21)" fg:x="27266" fg:w="4"/><text x="93.8158%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="93.5692%" y="101" width="0.0103%" height="15" fill="rgb(220,109,13)" fg:x="27267" fg:w="3"/><text x="93.8192%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="93.5967%" y="85" width="0.0275%" height="15" fill="rgb(232,18,1)" fg:x="27275" fg:w="8"/><text x="93.8467%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.6138%" y="69" width="0.0103%" height="15" fill="rgb(215,41,42)" fg:x="27280" fg:w="3"/><text x="93.8638%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (13 samples, 0.04%)</title><rect x="93.5898%" y="101" width="0.0446%" height="15" fill="rgb(224,123,36)" fg:x="27273" fg:w="13"/><text x="93.8398%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.6241%" y="85" width="0.0103%" height="15" fill="rgb(240,125,3)" fg:x="27283" fg:w="3"/><text x="93.8741%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="93.6550%" y="69" width="0.0103%" height="15" fill="rgb(205,98,50)" fg:x="27292" fg:w="3"/><text x="93.9050%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (10 samples, 0.03%)</title><rect x="93.6378%" y="85" width="0.0343%" height="15" fill="rgb(205,185,37)" fg:x="27287" fg:w="10"/><text x="93.8878%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="93.6721%" y="85" width="0.0103%" height="15" fill="rgb(238,207,15)" fg:x="27297" fg:w="3"/><text x="93.9221%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.10%)</title><rect x="93.5898%" y="117" width="0.1029%" height="15" fill="rgb(213,199,42)" fg:x="27273" fg:w="30"/><text x="93.8398%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (17 samples, 0.06%)</title><rect x="93.6344%" y="101" width="0.0583%" height="15" fill="rgb(235,201,11)" fg:x="27286" fg:w="17"/><text x="93.8844%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="93.6996%" y="101" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="27305" fg:w="6"/><text x="93.9496%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (42 samples, 0.14%)</title><rect x="93.5864%" y="133" width="0.1441%" height="15" fill="rgb(241,35,35)" fg:x="27272" fg:w="42"/><text x="93.8364%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (11 samples, 0.04%)</title><rect x="93.6927%" y="117" width="0.0377%" height="15" fill="rgb(243,32,47)" fg:x="27303" fg:w="11"/><text x="93.9427%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (3 samples, 0.01%)</title><rect x="93.7202%" y="101" width="0.0103%" height="15" fill="rgb(247,202,23)" fg:x="27311" fg:w="3"/><text x="93.9702%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="93.7682%" y="69" width="0.0103%" height="15" fill="rgb(219,102,11)" fg:x="27325" fg:w="3"/><text x="94.0182%" y="79.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="93.7682%" y="53" width="0.0103%" height="15" fill="rgb(243,110,44)" fg:x="27325" fg:w="3"/><text x="94.0182%" y="63.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (9 samples, 0.03%)</title><rect x="93.7579%" y="85" width="0.0309%" height="15" fill="rgb(222,74,54)" fg:x="27322" fg:w="9"/><text x="94.0079%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="93.7923%" y="69" width="0.0172%" height="15" fill="rgb(216,99,12)" fg:x="27332" fg:w="5"/><text x="94.0423%" y="79.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.07%)</title><rect x="93.7545%" y="101" width="0.0652%" height="15" fill="rgb(226,22,26)" fg:x="27321" fg:w="19"/><text x="94.0045%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (9 samples, 0.03%)</title><rect x="93.7888%" y="85" width="0.0309%" height="15" fill="rgb(217,163,10)" fg:x="27331" fg:w="9"/><text x="94.0388%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (23 samples, 0.08%)</title><rect x="93.7545%" y="117" width="0.0789%" height="15" fill="rgb(213,25,53)" fg:x="27321" fg:w="23"/><text x="94.0045%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (4 samples, 0.01%)</title><rect x="93.8197%" y="101" width="0.0137%" height="15" fill="rgb(252,105,26)" fg:x="27340" fg:w="4"/><text x="94.0697%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="93.8540%" y="101" width="0.0275%" height="15" fill="rgb(220,39,43)" fg:x="27350" fg:w="8"/><text x="94.1040%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="93.8849%" y="101" width="0.0103%" height="15" fill="rgb(229,68,48)" fg:x="27359" fg:w="3"/><text x="94.1349%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="93.8849%" y="85" width="0.0103%" height="15" fill="rgb(252,8,32)" fg:x="27359" fg:w="3"/><text x="94.1349%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="93.8849%" y="69" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="27359" fg:w="3"/><text x="94.1349%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="93.8952%" y="101" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="27362" fg:w="3"/><text x="94.1452%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="93.8952%" y="85" width="0.0103%" height="15" fill="rgb(236,28,36)" fg:x="27362" fg:w="3"/><text x="94.1452%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="93.9158%" y="85" width="0.0137%" height="15" fill="rgb(249,185,26)" fg:x="27368" fg:w="4"/><text x="94.1658%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="93.9295%" y="85" width="0.0103%" height="15" fill="rgb(249,174,33)" fg:x="27372" fg:w="3"/><text x="94.1795%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="93.9295%" y="69" width="0.0103%" height="15" fill="rgb(233,201,37)" fg:x="27372" fg:w="3"/><text x="94.1795%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (10 samples, 0.03%)</title><rect x="93.9158%" y="101" width="0.0343%" height="15" fill="rgb(221,78,26)" fg:x="27368" fg:w="10"/><text x="94.1658%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (32 samples, 0.11%)</title><rect x="93.8437%" y="117" width="0.1098%" height="15" fill="rgb(250,127,30)" fg:x="27347" fg:w="32"/><text x="94.0937%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (70 samples, 0.24%)</title><rect x="93.7305%" y="133" width="0.2402%" height="15" fill="rgb(230,49,44)" fg:x="27314" fg:w="70"/><text x="93.9805%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (5 samples, 0.02%)</title><rect x="93.9535%" y="117" width="0.0172%" height="15" fill="rgb(229,67,23)" fg:x="27379" fg:w="5"/><text x="94.2035%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="93.9741%" y="101" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="27385" fg:w="3"/><text x="94.2241%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="93.9741%" y="117" width="0.0137%" height="15" fill="rgb(215,43,3)" fg:x="27385" fg:w="4"/><text x="94.2241%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (125 samples, 0.43%)</title><rect x="93.5795%" y="149" width="0.4289%" height="15" fill="rgb(238,154,13)" fg:x="27270" fg:w="125"/><text x="93.8295%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="93.9707%" y="133" width="0.0377%" height="15" fill="rgb(219,56,2)" fg:x="27384" fg:w="11"/><text x="94.2207%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="93.9947%" y="117" width="0.0137%" height="15" fill="rgb(233,0,4)" fg:x="27391" fg:w="4"/><text x="94.2447%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.0084%" y="133" width="0.0103%" height="15" fill="rgb(235,30,7)" fg:x="27395" fg:w="3"/><text x="94.2584%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.0222%" y="101" width="0.0103%" height="15" fill="rgb(250,79,13)" fg:x="27399" fg:w="3"/><text x="94.2722%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (5 samples, 0.02%)</title><rect x="94.0187%" y="117" width="0.0172%" height="15" fill="rgb(211,146,34)" fg:x="27398" fg:w="5"/><text x="94.2687%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (180 samples, 0.62%)</title><rect x="93.4285%" y="165" width="0.6177%" height="15" fill="rgb(228,22,38)" fg:x="27226" fg:w="180"/><text x="93.6785%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.0084%" y="149" width="0.0377%" height="15" fill="rgb(235,168,5)" fg:x="27395" fg:w="11"/><text x="94.2584%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.0187%" y="133" width="0.0275%" height="15" fill="rgb(221,155,16)" fg:x="27398" fg:w="8"/><text x="94.2687%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (3 samples, 0.01%)</title><rect x="94.0599%" y="133" width="0.0103%" height="15" fill="rgb(215,215,53)" fg:x="27410" fg:w="3"/><text x="94.3099%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.0599%" y="117" width="0.0103%" height="15" fill="rgb(223,4,10)" fg:x="27410" fg:w="3"/><text x="94.3099%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (250 samples, 0.86%)</title><rect x="93.2329%" y="181" width="0.8579%" height="15" fill="rgb(234,103,6)" fg:x="27169" fg:w="250"/><text x="93.4829%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (13 samples, 0.04%)</title><rect x="94.0462%" y="165" width="0.0446%" height="15" fill="rgb(227,97,0)" fg:x="27406" fg:w="13"/><text x="94.2962%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.0531%" y="149" width="0.0377%" height="15" fill="rgb(234,150,53)" fg:x="27408" fg:w="11"/><text x="94.3031%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (6 samples, 0.02%)</title><rect x="94.0702%" y="133" width="0.0206%" height="15" fill="rgb(228,201,54)" fg:x="27413" fg:w="6"/><text x="94.3202%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="94.0771%" y="117" width="0.0137%" height="15" fill="rgb(222,22,37)" fg:x="27415" fg:w="4"/><text x="94.3271%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="94.0977%" y="133" width="0.0137%" height="15" fill="rgb(237,53,32)" fg:x="27421" fg:w="4"/><text x="94.3477%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (3 samples, 0.01%)</title><rect x="94.1251%" y="117" width="0.0103%" height="15" fill="rgb(233,25,53)" fg:x="27429" fg:w="3"/><text x="94.3751%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (340 samples, 1.17%)</title><rect x="92.9755%" y="197" width="1.1667%" height="15" fill="rgb(210,40,34)" fg:x="27094" fg:w="340"/><text x="93.2255%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.0908%" y="181" width="0.0515%" height="15" fill="rgb(241,220,44)" fg:x="27419" fg:w="15"/><text x="94.3408%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.0908%" y="165" width="0.0515%" height="15" fill="rgb(235,28,35)" fg:x="27419" fg:w="15"/><text x="94.3408%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (13 samples, 0.04%)</title><rect x="94.0977%" y="149" width="0.0446%" height="15" fill="rgb(210,56,17)" fg:x="27421" fg:w="13"/><text x="94.3477%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.1148%" y="133" width="0.0275%" height="15" fill="rgb(224,130,29)" fg:x="27426" fg:w="8"/><text x="94.3648%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (402 samples, 1.38%)</title><rect x="92.7868%" y="213" width="1.3795%" height="15" fill="rgb(235,212,8)" fg:x="27039" fg:w="402"/><text x="93.0368%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (7 samples, 0.02%)</title><rect x="94.1423%" y="197" width="0.0240%" height="15" fill="rgb(223,33,50)" fg:x="27434" fg:w="7"/><text x="94.3923%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (7 samples, 0.02%)</title><rect x="94.1423%" y="181" width="0.0240%" height="15" fill="rgb(219,149,13)" fg:x="27434" fg:w="7"/><text x="94.3923%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (5 samples, 0.02%)</title><rect x="94.1491%" y="165" width="0.0172%" height="15" fill="rgb(250,156,29)" fg:x="27436" fg:w="5"/><text x="94.3991%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (5 samples, 0.02%)</title><rect x="94.1491%" y="149" width="0.0172%" height="15" fill="rgb(216,193,19)" fg:x="27436" fg:w="5"/><text x="94.3991%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="94.1526%" y="133" width="0.0137%" height="15" fill="rgb(216,135,14)" fg:x="27437" fg:w="4"/><text x="94.4026%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.1869%" y="117" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="27447" fg:w="3"/><text x="94.4369%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (471 samples, 1.62%)</title><rect x="92.5878%" y="229" width="1.6163%" height="15" fill="rgb(233,42,35)" fg:x="26981" fg:w="471"/><text x="92.8378%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.1663%" y="213" width="0.0377%" height="15" fill="rgb(231,13,6)" fg:x="27441" fg:w="11"/><text x="94.4163%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.1663%" y="197" width="0.0377%" height="15" fill="rgb(207,181,40)" fg:x="27441" fg:w="11"/><text x="94.4163%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.1663%" y="181" width="0.0377%" height="15" fill="rgb(254,173,49)" fg:x="27441" fg:w="11"/><text x="94.4163%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="94.1663%" y="165" width="0.0377%" height="15" fill="rgb(221,1,38)" fg:x="27441" fg:w="11"/><text x="94.4163%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (10 samples, 0.03%)</title><rect x="94.1697%" y="149" width="0.0343%" height="15" fill="rgb(206,124,46)" fg:x="27442" fg:w="10"/><text x="94.4197%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (6 samples, 0.02%)</title><rect x="94.1835%" y="133" width="0.0206%" height="15" fill="rgb(249,21,11)" fg:x="27446" fg:w="6"/><text x="94.4335%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.2109%" y="133" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="27454" fg:w="3"/><text x="94.4609%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (537 samples, 1.84%)</title><rect x="92.3922%" y="245" width="1.8428%" height="15" fill="rgb(235,61,29)" fg:x="26924" fg:w="537"/><text x="92.6422%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (9 samples, 0.03%)</title><rect x="94.2040%" y="229" width="0.0309%" height="15" fill="rgb(219,207,3)" fg:x="27452" fg:w="9"/><text x="94.4540%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (9 samples, 0.03%)</title><rect x="94.2040%" y="213" width="0.0309%" height="15" fill="rgb(222,56,46)" fg:x="27452" fg:w="9"/><text x="94.4540%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.2075%" y="197" width="0.0275%" height="15" fill="rgb(239,76,54)" fg:x="27453" fg:w="8"/><text x="94.4575%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.2075%" y="181" width="0.0275%" height="15" fill="rgb(231,124,27)" fg:x="27453" fg:w="8"/><text x="94.4575%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.2075%" y="165" width="0.0275%" height="15" fill="rgb(249,195,6)" fg:x="27453" fg:w="8"/><text x="94.4575%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (7 samples, 0.02%)</title><rect x="94.2109%" y="149" width="0.0240%" height="15" fill="rgb(237,174,47)" fg:x="27454" fg:w="7"/><text x="94.4609%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="94.2212%" y="133" width="0.0137%" height="15" fill="rgb(206,201,31)" fg:x="27457" fg:w="4"/><text x="94.4712%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (621 samples, 2.13%)</title><rect x="92.1588%" y="261" width="2.1310%" height="15" fill="rgb(231,57,52)" fg:x="26856" fg:w="621"/><text x="92.4088%" y="271.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.2349%" y="245" width="0.0549%" height="15" fill="rgb(248,177,22)" fg:x="27461" fg:w="16"/><text x="94.4849%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.2349%" y="229" width="0.0549%" height="15" fill="rgb(215,211,37)" fg:x="27461" fg:w="16"/><text x="94.4849%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.2349%" y="213" width="0.0549%" height="15" fill="rgb(241,128,51)" fg:x="27461" fg:w="16"/><text x="94.4849%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.2349%" y="197" width="0.0549%" height="15" fill="rgb(227,165,31)" fg:x="27461" fg:w="16"/><text x="94.4849%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.2349%" y="181" width="0.0549%" height="15" fill="rgb(228,167,24)" fg:x="27461" fg:w="16"/><text x="94.4849%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2384%" y="165" width="0.0515%" height="15" fill="rgb(228,143,12)" fg:x="27462" fg:w="15"/><text x="94.4884%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (12 samples, 0.04%)</title><rect x="94.2487%" y="149" width="0.0412%" height="15" fill="rgb(249,149,8)" fg:x="27465" fg:w="12"/><text x="94.4987%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.2624%" y="133" width="0.0275%" height="15" fill="rgb(243,35,44)" fg:x="27469" fg:w="8"/><text x="94.5124%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="94.2761%" y="117" width="0.0137%" height="15" fill="rgb(246,89,9)" fg:x="27473" fg:w="4"/><text x="94.5261%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.2967%" y="149" width="0.0103%" height="15" fill="rgb(233,213,13)" fg:x="27479" fg:w="3"/><text x="94.5467%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.2967%" y="133" width="0.0103%" height="15" fill="rgb(233,141,41)" fg:x="27479" fg:w="3"/><text x="94.5467%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.3104%" y="117" width="0.0103%" height="15" fill="rgb(239,167,4)" fg:x="27483" fg:w="3"/><text x="94.5604%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (694 samples, 2.38%)</title><rect x="91.9598%" y="277" width="2.3815%" height="15" fill="rgb(209,217,16)" fg:x="26798" fg:w="694"/><text x="92.2098%" y="287.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2898%" y="261" width="0.0515%" height="15" fill="rgb(219,88,35)" fg:x="27477" fg:w="15"/><text x="94.5398%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2898%" y="245" width="0.0515%" height="15" fill="rgb(220,193,23)" fg:x="27477" fg:w="15"/><text x="94.5398%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2898%" y="229" width="0.0515%" height="15" fill="rgb(230,90,52)" fg:x="27477" fg:w="15"/><text x="94.5398%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2898%" y="213" width="0.0515%" height="15" fill="rgb(252,106,19)" fg:x="27477" fg:w="15"/><text x="94.5398%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="94.2898%" y="197" width="0.0515%" height="15" fill="rgb(206,74,20)" fg:x="27477" fg:w="15"/><text x="94.5398%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (14 samples, 0.05%)</title><rect x="94.2933%" y="181" width="0.0480%" height="15" fill="rgb(230,138,44)" fg:x="27478" fg:w="14"/><text x="94.5433%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (13 samples, 0.04%)</title><rect x="94.2967%" y="165" width="0.0446%" height="15" fill="rgb(235,182,43)" fg:x="27479" fg:w="13"/><text x="94.5467%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (10 samples, 0.03%)</title><rect x="94.3070%" y="149" width="0.0343%" height="15" fill="rgb(242,16,51)" fg:x="27482" fg:w="10"/><text x="94.5570%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (9 samples, 0.03%)</title><rect x="94.3104%" y="133" width="0.0309%" height="15" fill="rgb(248,9,4)" fg:x="27483" fg:w="9"/><text x="94.5604%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="94.3276%" y="117" width="0.0137%" height="15" fill="rgb(210,31,22)" fg:x="27488" fg:w="4"/><text x="94.5776%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.3585%" y="117" width="0.0103%" height="15" fill="rgb(239,54,39)" fg:x="27497" fg:w="3"/><text x="94.6085%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="94.3585%" y="133" width="0.0137%" height="15" fill="rgb(230,99,41)" fg:x="27497" fg:w="4"/><text x="94.6085%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.3756%" y="101" width="0.0103%" height="15" fill="rgb(253,106,12)" fg:x="27502" fg:w="3"/><text x="94.6256%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (7 samples, 0.02%)</title><rect x="94.3722%" y="117" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="27501" fg:w="7"/><text x="94.6222%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (775 samples, 2.66%)</title><rect x="91.7436%" y="293" width="2.6595%" height="15" fill="rgb(215,133,35)" fg:x="26735" fg:w="775"/><text x="91.9936%" y="303.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (18 samples, 0.06%)</title><rect x="94.3413%" y="277" width="0.0618%" height="15" fill="rgb(213,28,5)" fg:x="27492" fg:w="18"/><text x="94.5913%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (18 samples, 0.06%)</title><rect x="94.3413%" y="261" width="0.0618%" height="15" fill="rgb(215,77,49)" fg:x="27492" fg:w="18"/><text x="94.5913%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (18 samples, 0.06%)</title><rect x="94.3413%" y="245" width="0.0618%" height="15" fill="rgb(248,100,22)" fg:x="27492" fg:w="18"/><text x="94.5913%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (18 samples, 0.06%)</title><rect x="94.3413%" y="229" width="0.0618%" height="15" fill="rgb(208,67,9)" fg:x="27492" fg:w="18"/><text x="94.5913%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (17 samples, 0.06%)</title><rect x="94.3447%" y="213" width="0.0583%" height="15" fill="rgb(219,133,21)" fg:x="27493" fg:w="17"/><text x="94.5947%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (17 samples, 0.06%)</title><rect x="94.3447%" y="197" width="0.0583%" height="15" fill="rgb(246,46,29)" fg:x="27493" fg:w="17"/><text x="94.5947%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.3482%" y="181" width="0.0549%" height="15" fill="rgb(246,185,52)" fg:x="27494" fg:w="16"/><text x="94.5982%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="94.3482%" y="165" width="0.0549%" height="15" fill="rgb(252,136,11)" fg:x="27494" fg:w="16"/><text x="94.5982%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (13 samples, 0.04%)</title><rect x="94.3585%" y="149" width="0.0446%" height="15" fill="rgb(219,138,53)" fg:x="27497" fg:w="13"/><text x="94.6085%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (9 samples, 0.03%)</title><rect x="94.3722%" y="133" width="0.0309%" height="15" fill="rgb(211,51,23)" fg:x="27501" fg:w="9"/><text x="94.6222%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.4168%" y="165" width="0.0103%" height="15" fill="rgb(247,221,28)" fg:x="27514" fg:w="3"/><text x="94.6668%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (5 samples, 0.02%)</title><rect x="94.4134%" y="181" width="0.0172%" height="15" fill="rgb(251,222,45)" fg:x="27513" fg:w="5"/><text x="94.6634%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.4374%" y="165" width="0.0103%" height="15" fill="rgb(217,162,53)" fg:x="27520" fg:w="3"/><text x="94.6874%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.4374%" y="149" width="0.0103%" height="15" fill="rgb(229,93,14)" fg:x="27520" fg:w="3"/><text x="94.6874%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="94.4477%" y="149" width="0.0103%" height="15" fill="rgb(209,67,49)" fg:x="27523" fg:w="3"/><text x="94.6977%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="94.4648%" y="101" width="0.0137%" height="15" fill="rgb(213,87,29)" fg:x="27528" fg:w="4"/><text x="94.7148%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="94.4648%" y="117" width="0.0172%" height="15" fill="rgb(205,151,52)" fg:x="27528" fg:w="5"/><text x="94.7148%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (8 samples, 0.03%)</title><rect x="94.4648%" y="133" width="0.0275%" height="15" fill="rgb(253,215,39)" fg:x="27528" fg:w="8"/><text x="94.7148%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="94.4820%" y="117" width="0.0103%" height="15" fill="rgb(221,220,41)" fg:x="27533" fg:w="3"/><text x="94.7320%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="94.4923%" y="101" width="0.0103%" height="15" fill="rgb(218,133,21)" fg:x="27536" fg:w="3"/><text x="94.7423%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="94.4923%" y="117" width="0.0206%" height="15" fill="rgb(221,193,43)" fg:x="27536" fg:w="6"/><text x="94.7423%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="94.4031%" y="293" width="0.1167%" height="15" fill="rgb(240,128,52)" fg:x="27510" fg:w="34"/><text x="94.6531%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="94.4031%" y="277" width="0.1167%" height="15" fill="rgb(253,114,12)" fg:x="27510" fg:w="34"/><text x="94.6531%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="94.4031%" y="261" width="0.1167%" height="15" fill="rgb(215,223,47)" fg:x="27510" fg:w="34"/><text x="94.6531%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="94.4031%" y="245" width="0.1167%" height="15" fill="rgb(248,225,23)" fg:x="27510" fg:w="34"/><text x="94.6531%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="94.4031%" y="229" width="0.1167%" height="15" fill="rgb(250,108,0)" fg:x="27510" fg:w="34"/><text x="94.6531%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (33 samples, 0.11%)</title><rect x="94.4065%" y="213" width="0.1132%" height="15" fill="rgb(228,208,7)" fg:x="27511" fg:w="33"/><text x="94.6565%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="94.4099%" y="197" width="0.1098%" height="15" fill="rgb(244,45,10)" fg:x="27512" fg:w="32"/><text x="94.6599%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (24 samples, 0.08%)</title><rect x="94.4374%" y="181" width="0.0824%" height="15" fill="rgb(207,125,25)" fg:x="27520" fg:w="24"/><text x="94.6874%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="94.4477%" y="165" width="0.0721%" height="15" fill="rgb(210,195,18)" fg:x="27523" fg:w="21"/><text x="94.6977%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (17 samples, 0.06%)</title><rect x="94.4614%" y="149" width="0.0583%" height="15" fill="rgb(249,80,12)" fg:x="27527" fg:w="17"/><text x="94.7114%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="94.4923%" y="133" width="0.0275%" height="15" fill="rgb(221,65,9)" fg:x="27536" fg:w="8"/><text x="94.7423%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.03%)</title><rect x="94.5815%" y="245" width="0.0275%" height="15" fill="rgb(235,49,36)" fg:x="27562" fg:w="8"/><text x="94.8315%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (23 samples, 0.08%)</title><rect x="94.5575%" y="261" width="0.0789%" height="15" fill="rgb(225,32,20)" fg:x="27555" fg:w="23"/><text x="94.8075%" y="271.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="94.6090%" y="245" width="0.0275%" height="15" fill="rgb(215,141,46)" fg:x="27570" fg:w="8"/><text x="94.8590%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (30 samples, 0.10%)</title><rect x="94.5506%" y="277" width="0.1029%" height="15" fill="rgb(250,160,47)" fg:x="27553" fg:w="30"/><text x="94.8006%" y="287.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="94.6399%" y="261" width="0.0137%" height="15" fill="rgb(216,222,40)" fg:x="27579" fg:w="4"/><text x="94.8899%" y="271.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 0.01%)</title><rect x="94.6604%" y="229" width="0.0103%" height="15" fill="rgb(234,217,39)" fg:x="27585" fg:w="3"/><text x="94.9104%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="94.6845%" y="197" width="0.0103%" height="15" fill="rgb(207,178,40)" fg:x="27592" fg:w="3"/><text x="94.9345%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (9 samples, 0.03%)</title><rect x="94.6742%" y="213" width="0.0309%" height="15" fill="rgb(221,136,13)" fg:x="27589" fg:w="9"/><text x="94.9242%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="94.6948%" y="197" width="0.0103%" height="15" fill="rgb(249,199,10)" fg:x="27595" fg:w="3"/><text x="94.9448%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="94.7051%" y="213" width="0.0240%" height="15" fill="rgb(249,222,13)" fg:x="27598" fg:w="7"/><text x="94.9551%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (19 samples, 0.07%)</title><rect x="94.6707%" y="229" width="0.0652%" height="15" fill="rgb(244,185,38)" fg:x="27588" fg:w="19"/><text x="94.9207%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.03%)</title><rect x="94.8149%" y="197" width="0.0343%" height="15" fill="rgb(236,202,9)" fg:x="27630" fg:w="10"/><text x="95.0649%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="94.8526%" y="197" width="0.0309%" height="15" fill="rgb(250,229,37)" fg:x="27641" fg:w="9"/><text x="95.1026%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (15 samples, 0.05%)</title><rect x="94.8835%" y="197" width="0.0515%" height="15" fill="rgb(206,174,23)" fg:x="27650" fg:w="15"/><text x="95.1335%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (58 samples, 0.20%)</title><rect x="94.7497%" y="213" width="0.1990%" height="15" fill="rgb(211,33,43)" fg:x="27611" fg:w="58"/><text x="94.9997%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="94.9350%" y="197" width="0.0137%" height="15" fill="rgb(245,58,50)" fg:x="27665" fg:w="4"/><text x="95.1850%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="94.9521%" y="213" width="0.0377%" height="15" fill="rgb(244,68,36)" fg:x="27670" fg:w="11"/><text x="95.2021%" y="223.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (5 samples, 0.02%)</title><rect x="94.9899%" y="213" width="0.0172%" height="15" fill="rgb(232,229,15)" fg:x="27681" fg:w="5"/><text x="95.2399%" y="223.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (6 samples, 0.02%)</title><rect x="95.0070%" y="213" width="0.0206%" height="15" fill="rgb(254,30,23)" fg:x="27686" fg:w="6"/><text x="95.2570%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 0.38%)</title><rect x="94.6536%" y="245" width="0.3775%" height="15" fill="rgb(235,160,14)" fg:x="27583" fg:w="110"/><text x="94.9036%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (86 samples, 0.30%)</title><rect x="94.7359%" y="229" width="0.2951%" height="15" fill="rgb(212,155,44)" fg:x="27607" fg:w="86"/><text x="94.9859%" y="239.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (112 samples, 0.38%)</title><rect x="94.6536%" y="261" width="0.3843%" height="15" fill="rgb(226,2,50)" fg:x="27583" fg:w="112"/><text x="94.9036%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="95.0825%" y="181" width="0.0103%" height="15" fill="rgb(234,177,6)" fg:x="27708" fg:w="3"/><text x="95.3325%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (15 samples, 0.05%)</title><rect x="95.0619%" y="197" width="0.0515%" height="15" fill="rgb(217,24,9)" fg:x="27702" fg:w="15"/><text x="95.3119%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="95.0928%" y="181" width="0.0206%" height="15" fill="rgb(220,13,46)" fg:x="27711" fg:w="6"/><text x="95.3428%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (18 samples, 0.06%)</title><rect x="95.0585%" y="213" width="0.0618%" height="15" fill="rgb(239,221,27)" fg:x="27701" fg:w="18"/><text x="95.3085%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.02%)</title><rect x="95.1580%" y="181" width="0.0206%" height="15" fill="rgb(222,198,25)" fg:x="27730" fg:w="6"/><text x="95.4080%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.05%)</title><rect x="95.1786%" y="181" width="0.0549%" height="15" fill="rgb(211,99,13)" fg:x="27736" fg:w="16"/><text x="95.4286%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (24 samples, 0.08%)</title><rect x="95.2335%" y="181" width="0.0824%" height="15" fill="rgb(232,111,31)" fg:x="27752" fg:w="24"/><text x="95.4835%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (55 samples, 0.19%)</title><rect x="95.1306%" y="197" width="0.1887%" height="15" fill="rgb(245,82,37)" fg:x="27722" fg:w="55"/><text x="95.3806%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="95.3227%" y="197" width="0.0377%" height="15" fill="rgb(227,149,46)" fg:x="27778" fg:w="11"/><text x="95.5727%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (3 samples, 0.01%)</title><rect x="95.3674%" y="197" width="0.0103%" height="15" fill="rgb(218,36,50)" fg:x="27791" fg:w="3"/><text x="95.6174%" y="207.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 0.34%)</title><rect x="95.0414%" y="229" width="0.3397%" height="15" fill="rgb(226,80,48)" fg:x="27696" fg:w="99"/><text x="95.2914%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (76 samples, 0.26%)</title><rect x="95.1203%" y="213" width="0.2608%" height="15" fill="rgb(238,224,15)" fg:x="27719" fg:w="76"/><text x="95.3703%" y="223.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (100 samples, 0.34%)</title><rect x="95.0414%" y="245" width="0.3432%" height="15" fill="rgb(241,136,10)" fg:x="27696" fg:w="100"/><text x="95.2914%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (19 samples, 0.07%)</title><rect x="95.4120%" y="181" width="0.0652%" height="15" fill="rgb(208,32,45)" fg:x="27804" fg:w="19"/><text x="95.6620%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="95.4634%" y="165" width="0.0137%" height="15" fill="rgb(207,135,9)" fg:x="27819" fg:w="4"/><text x="95.7134%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="95.4772%" y="181" width="0.0206%" height="15" fill="rgb(206,86,44)" fg:x="27823" fg:w="6"/><text x="95.7272%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (30 samples, 0.10%)</title><rect x="95.4017%" y="197" width="0.1029%" height="15" fill="rgb(245,177,15)" fg:x="27801" fg:w="30"/><text x="95.6517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="95.5492%" y="165" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="27844" fg:w="3"/><text x="95.7992%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="95.5595%" y="165" width="0.0412%" height="15" fill="rgb(234,36,40)" fg:x="27847" fg:w="12"/><text x="95.8095%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (16 samples, 0.05%)</title><rect x="95.6007%" y="165" width="0.0549%" height="15" fill="rgb(213,64,8)" fg:x="27859" fg:w="16"/><text x="95.8507%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (44 samples, 0.15%)</title><rect x="95.5080%" y="181" width="0.1510%" height="15" fill="rgb(210,75,36)" fg:x="27832" fg:w="44"/><text x="95.7580%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="95.6590%" y="181" width="0.0412%" height="15" fill="rgb(229,88,21)" fg:x="27876" fg:w="12"/><text x="95.9090%" y="191.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="95.7002%" y="181" width="0.0137%" height="15" fill="rgb(252,204,47)" fg:x="27888" fg:w="4"/><text x="95.9502%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (98 samples, 0.34%)</title><rect x="95.3879%" y="229" width="0.3363%" height="15" fill="rgb(208,77,27)" fg:x="27797" fg:w="98"/><text x="95.6379%" y="239.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 0.34%)</title><rect x="95.3879%" y="213" width="0.3363%" height="15" fill="rgb(221,76,26)" fg:x="27797" fg:w="98"/><text x="95.6379%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (64 samples, 0.22%)</title><rect x="95.5046%" y="197" width="0.2196%" height="15" fill="rgb(225,139,18)" fg:x="27831" fg:w="64"/><text x="95.7546%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (3 samples, 0.01%)</title><rect x="95.7139%" y="181" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="27892" fg:w="3"/><text x="95.9639%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="95.7723%" y="149" width="0.0206%" height="15" fill="rgb(212,28,1)" fg:x="27909" fg:w="6"/><text x="96.0223%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (19 samples, 0.07%)</title><rect x="95.7414%" y="165" width="0.0652%" height="15" fill="rgb(248,164,17)" fg:x="27900" fg:w="19"/><text x="95.9914%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="95.7929%" y="149" width="0.0137%" height="15" fill="rgb(222,171,42)" fg:x="27915" fg:w="4"/><text x="96.0429%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (25 samples, 0.09%)</title><rect x="95.7345%" y="181" width="0.0858%" height="15" fill="rgb(243,84,45)" fg:x="27898" fg:w="25"/><text x="95.9845%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.03%)</title><rect x="95.8855%" y="149" width="0.0275%" height="15" fill="rgb(252,49,23)" fg:x="27942" fg:w="8"/><text x="96.1355%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="95.9130%" y="149" width="0.0377%" height="15" fill="rgb(215,19,7)" fg:x="27950" fg:w="11"/><text x="96.1630%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (37 samples, 0.13%)</title><rect x="95.8306%" y="165" width="0.1270%" height="15" fill="rgb(238,81,41)" fg:x="27926" fg:w="37"/><text x="96.0806%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (19 samples, 0.07%)</title><rect x="95.9576%" y="165" width="0.0652%" height="15" fill="rgb(210,199,37)" fg:x="27963" fg:w="19"/><text x="96.2076%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 0.32%)</title><rect x="95.7277%" y="197" width="0.3191%" height="15" fill="rgb(244,192,49)" fg:x="27896" fg:w="93"/><text x="95.9777%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (66 samples, 0.23%)</title><rect x="95.8203%" y="181" width="0.2265%" height="15" fill="rgb(226,211,11)" fg:x="27923" fg:w="66"/><text x="96.0703%" y="191.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (5 samples, 0.02%)</title><rect x="96.0296%" y="165" width="0.0172%" height="15" fill="rgb(236,162,54)" fg:x="27984" fg:w="5"/><text x="96.2796%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="96.0502%" y="181" width="0.0103%" height="15" fill="rgb(220,229,9)" fg:x="27990" fg:w="3"/><text x="96.3002%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="96.0502%" y="165" width="0.0103%" height="15" fill="rgb(250,87,22)" fg:x="27990" fg:w="3"/><text x="96.3002%" y="175.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="96.0605%" y="165" width="0.0103%" height="15" fill="rgb(239,43,17)" fg:x="27993" fg:w="3"/><text x="96.3105%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (102 samples, 0.35%)</title><rect x="95.7277%" y="213" width="0.3500%" height="15" fill="rgb(231,177,25)" fg:x="27896" fg:w="102"/><text x="95.9777%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (8 samples, 0.03%)</title><rect x="96.0502%" y="197" width="0.0275%" height="15" fill="rgb(219,179,1)" fg:x="27990" fg:w="8"/><text x="96.3002%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (5 samples, 0.02%)</title><rect x="96.0605%" y="181" width="0.0172%" height="15" fill="rgb(238,219,53)" fg:x="27993" fg:w="5"/><text x="96.3105%" y="191.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="96.1669%" y="133" width="0.0103%" height="15" fill="rgb(232,167,36)" fg:x="28024" fg:w="3"/><text x="96.4169%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (25 samples, 0.09%)</title><rect x="96.1189%" y="149" width="0.0858%" height="15" fill="rgb(244,19,51)" fg:x="28010" fg:w="25"/><text x="96.3689%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="96.1772%" y="133" width="0.0275%" height="15" fill="rgb(224,6,22)" fg:x="28027" fg:w="8"/><text x="96.4272%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="96.2081%" y="149" width="0.0137%" height="15" fill="rgb(224,145,5)" fg:x="28036" fg:w="4"/><text x="96.4581%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (37 samples, 0.13%)</title><rect x="96.1017%" y="165" width="0.1270%" height="15" fill="rgb(234,130,49)" fg:x="28005" fg:w="37"/><text x="96.3517%" y="175.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.05%)</title><rect x="96.2973%" y="133" width="0.0515%" height="15" fill="rgb(254,6,2)" fg:x="28062" fg:w="15"/><text x="96.5473%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (51 samples, 0.18%)</title><rect x="96.2287%" y="149" width="0.1750%" height="15" fill="rgb(208,96,46)" fg:x="28042" fg:w="51"/><text x="96.4787%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (16 samples, 0.05%)</title><rect x="96.3488%" y="133" width="0.0549%" height="15" fill="rgb(239,3,39)" fg:x="28077" fg:w="16"/><text x="96.5988%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="96.4037%" y="149" width="0.0377%" height="15" fill="rgb(233,210,1)" fg:x="28093" fg:w="11"/><text x="96.6537%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (108 samples, 0.37%)</title><rect x="96.0846%" y="181" width="0.3706%" height="15" fill="rgb(244,137,37)" fg:x="28000" fg:w="108"/><text x="96.3346%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (66 samples, 0.23%)</title><rect x="96.2287%" y="165" width="0.2265%" height="15" fill="rgb(240,136,2)" fg:x="28042" fg:w="66"/><text x="96.4787%" y="175.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::exp::Exp_&gt; (4 samples, 0.01%)</title><rect x="96.4414%" y="149" width="0.0137%" height="15" fill="rgb(239,18,37)" fg:x="28104" fg:w="4"/><text x="96.6914%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="96.4655%" y="149" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="28111" fg:w="3"/><text x="96.7155%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (117 samples, 0.40%)</title><rect x="96.0846%" y="197" width="0.4015%" height="15" fill="rgb(225,218,4)" fg:x="28000" fg:w="117"/><text x="96.3346%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (9 samples, 0.03%)</title><rect x="96.4552%" y="181" width="0.0309%" height="15" fill="rgb(230,182,32)" fg:x="28108" fg:w="9"/><text x="96.7052%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (7 samples, 0.02%)</title><rect x="96.4620%" y="165" width="0.0240%" height="15" fill="rgb(242,56,43)" fg:x="28110" fg:w="7"/><text x="96.7120%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="96.4758%" y="149" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="28114" fg:w="3"/><text x="96.7258%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (17 samples, 0.06%)</title><rect x="96.5238%" y="133" width="0.0583%" height="15" fill="rgb(234,209,42)" fg:x="28128" fg:w="17"/><text x="96.7738%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="96.5684%" y="117" width="0.0137%" height="15" fill="rgb(227,7,12)" fg:x="28141" fg:w="4"/><text x="96.8184%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="96.5821%" y="133" width="0.0275%" height="15" fill="rgb(245,203,43)" fg:x="28145" fg:w="8"/><text x="96.8321%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (31 samples, 0.11%)</title><rect x="96.5066%" y="149" width="0.1064%" height="15" fill="rgb(238,205,33)" fg:x="28123" fg:w="31"/><text x="96.7566%" y="159.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="96.6576%" y="117" width="0.0240%" height="15" fill="rgb(231,56,7)" fg:x="28167" fg:w="7"/><text x="96.9076%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (26 samples, 0.09%)</title><rect x="96.6165%" y="133" width="0.0892%" height="15" fill="rgb(244,186,29)" fg:x="28155" fg:w="26"/><text x="96.8665%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="96.6817%" y="117" width="0.0240%" height="15" fill="rgb(234,111,31)" fg:x="28174" fg:w="7"/><text x="96.9317%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="96.7057%" y="133" width="0.0240%" height="15" fill="rgb(241,149,10)" fg:x="28181" fg:w="7"/><text x="96.9557%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71 samples, 0.24%)</title><rect x="96.4929%" y="165" width="0.2436%" height="15" fill="rgb(249,206,44)" fg:x="28119" fg:w="71"/><text x="96.7429%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (36 samples, 0.12%)</title><rect x="96.6130%" y="149" width="0.1235%" height="15" fill="rgb(251,153,30)" fg:x="28154" fg:w="36"/><text x="96.8630%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="96.7640%" y="133" width="0.0137%" height="15" fill="rgb(239,152,38)" fg:x="28198" fg:w="4"/><text x="97.0140%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (84 samples, 0.29%)</title><rect x="96.4929%" y="181" width="0.2883%" height="15" fill="rgb(249,139,47)" fg:x="28119" fg:w="84"/><text x="96.7429%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (13 samples, 0.04%)</title><rect x="96.7366%" y="165" width="0.0446%" height="15" fill="rgb(244,64,35)" fg:x="28190" fg:w="13"/><text x="96.9866%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (8 samples, 0.03%)</title><rect x="96.7537%" y="149" width="0.0275%" height="15" fill="rgb(216,46,15)" fg:x="28195" fg:w="8"/><text x="97.0037%" y="159.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="96.8018%" y="133" width="0.0137%" height="15" fill="rgb(250,74,19)" fg:x="28209" fg:w="4"/><text x="97.0518%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="96.8601%" y="101" width="0.0206%" height="15" fill="rgb(249,42,33)" fg:x="28226" fg:w="6"/><text x="97.1101%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (15 samples, 0.05%)</title><rect x="96.8361%" y="117" width="0.0515%" height="15" fill="rgb(242,149,17)" fg:x="28219" fg:w="15"/><text x="97.0861%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="96.8875%" y="117" width="0.0240%" height="15" fill="rgb(244,29,21)" fg:x="28234" fg:w="7"/><text x="97.1375%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (31 samples, 0.11%)</title><rect x="96.8155%" y="133" width="0.1064%" height="15" fill="rgb(220,130,37)" fg:x="28213" fg:w="31"/><text x="97.0655%" y="143.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 0.01%)</title><rect x="96.9116%" y="117" width="0.0103%" height="15" fill="rgb(211,67,2)" fg:x="28241" fg:w="3"/><text x="97.1616%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="96.9768%" y="101" width="0.0446%" height="15" fill="rgb(235,68,52)" fg:x="28260" fg:w="13"/><text x="97.2268%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (40 samples, 0.14%)</title><rect x="96.9253%" y="117" width="0.1373%" height="15" fill="rgb(246,142,3)" fg:x="28245" fg:w="40"/><text x="97.1753%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="97.0214%" y="101" width="0.0412%" height="15" fill="rgb(241,25,7)" fg:x="28273" fg:w="12"/><text x="97.2714%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (15 samples, 0.05%)</title><rect x="97.0626%" y="117" width="0.0515%" height="15" fill="rgb(242,119,39)" fg:x="28285" fg:w="15"/><text x="97.3126%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 0.33%)</title><rect x="96.7949%" y="149" width="0.3260%" height="15" fill="rgb(241,98,45)" fg:x="28207" fg:w="95"/><text x="97.0449%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (58 samples, 0.20%)</title><rect x="96.9219%" y="133" width="0.1990%" height="15" fill="rgb(254,28,30)" fg:x="28244" fg:w="58"/><text x="97.1719%" y="143.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="97.1209%" y="117" width="0.0103%" height="15" fill="rgb(241,142,54)" fg:x="28302" fg:w="3"/><text x="97.3709%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="97.1209%" y="133" width="0.0172%" height="15" fill="rgb(222,85,15)" fg:x="28302" fg:w="5"/><text x="97.3709%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="97.1381%" y="133" width="0.0103%" height="15" fill="rgb(210,85,47)" fg:x="28307" fg:w="3"/><text x="97.3881%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="97.1381%" y="117" width="0.0103%" height="15" fill="rgb(224,206,25)" fg:x="28307" fg:w="3"/><text x="97.3881%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="97.1758%" y="101" width="0.0172%" height="15" fill="rgb(243,201,19)" fg:x="28318" fg:w="5"/><text x="97.4258%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (17 samples, 0.06%)</title><rect x="97.1483%" y="117" width="0.0583%" height="15" fill="rgb(236,59,4)" fg:x="28310" fg:w="17"/><text x="97.3983%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="97.1930%" y="101" width="0.0137%" height="15" fill="rgb(254,179,45)" fg:x="28323" fg:w="4"/><text x="97.4430%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="97.2067%" y="117" width="0.0206%" height="15" fill="rgb(226,14,10)" fg:x="28327" fg:w="6"/><text x="97.4567%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (128 samples, 0.44%)</title><rect x="96.7915%" y="165" width="0.4392%" height="15" fill="rgb(244,27,41)" fg:x="28206" fg:w="128"/><text x="97.0415%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (32 samples, 0.11%)</title><rect x="97.1209%" y="149" width="0.1098%" height="15" fill="rgb(235,35,32)" fg:x="28302" fg:w="32"/><text x="97.3709%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (24 samples, 0.08%)</title><rect x="97.1483%" y="133" width="0.0824%" height="15" fill="rgb(218,68,31)" fg:x="28310" fg:w="24"/><text x="97.3983%" y="143.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 0.01%)</title><rect x="97.2582%" y="117" width="0.0103%" height="15" fill="rgb(207,120,37)" fg:x="28342" fg:w="3"/><text x="97.5082%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (18 samples, 0.06%)</title><rect x="97.2925%" y="101" width="0.0618%" height="15" fill="rgb(227,98,0)" fg:x="28352" fg:w="18"/><text x="97.5425%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="97.3371%" y="85" width="0.0172%" height="15" fill="rgb(207,7,3)" fg:x="28365" fg:w="5"/><text x="97.5871%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (26 samples, 0.09%)</title><rect x="97.2753%" y="117" width="0.0892%" height="15" fill="rgb(206,98,19)" fg:x="28347" fg:w="26"/><text x="97.5253%" y="127.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.04%)</title><rect x="97.4126%" y="85" width="0.0377%" height="15" fill="rgb(217,5,26)" fg:x="28387" fg:w="11"/><text x="97.6626%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (35 samples, 0.12%)</title><rect x="97.3783%" y="101" width="0.1201%" height="15" fill="rgb(235,190,38)" fg:x="28377" fg:w="35"/><text x="97.6283%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.05%)</title><rect x="97.4503%" y="85" width="0.0480%" height="15" fill="rgb(247,86,24)" fg:x="28398" fg:w="14"/><text x="97.7003%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (15 samples, 0.05%)</title><rect x="97.4984%" y="101" width="0.0515%" height="15" fill="rgb(205,101,16)" fg:x="28412" fg:w="15"/><text x="97.7484%" y="111.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="97.5498%" y="101" width="0.0137%" height="15" fill="rgb(246,168,33)" fg:x="28427" fg:w="4"/><text x="97.7998%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (92 samples, 0.32%)</title><rect x="97.2513%" y="133" width="0.3157%" height="15" fill="rgb(231,114,1)" fg:x="28340" fg:w="92"/><text x="97.5013%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (59 samples, 0.20%)</title><rect x="97.3645%" y="117" width="0.2025%" height="15" fill="rgb(207,184,53)" fg:x="28373" fg:w="59"/><text x="97.6145%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="97.5773%" y="117" width="0.0137%" height="15" fill="rgb(224,95,51)" fg:x="28435" fg:w="4"/><text x="97.8273%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="97.5945%" y="117" width="0.0137%" height="15" fill="rgb(212,188,45)" fg:x="28440" fg:w="4"/><text x="97.8445%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="97.5979%" y="101" width="0.0103%" height="15" fill="rgb(223,154,38)" fg:x="28441" fg:w="3"/><text x="97.8479%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="97.6219%" y="85" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="28448" fg:w="3"/><text x="97.8719%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 0.02%)</title><rect x="97.6150%" y="101" width="0.0240%" height="15" fill="rgb(229,209,22)" fg:x="28446" fg:w="7"/><text x="97.8650%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (122 samples, 0.42%)</title><rect x="97.2479%" y="149" width="0.4187%" height="15" fill="rgb(234,138,34)" fg:x="28339" fg:w="122"/><text x="97.4979%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (28 samples, 0.10%)</title><rect x="97.5704%" y="133" width="0.0961%" height="15" fill="rgb(212,95,11)" fg:x="28433" fg:w="28"/><text x="97.8204%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (17 samples, 0.06%)</title><rect x="97.6082%" y="117" width="0.0583%" height="15" fill="rgb(240,179,47)" fg:x="28444" fg:w="17"/><text x="97.8582%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.03%)</title><rect x="97.6391%" y="101" width="0.0275%" height="15" fill="rgb(240,163,11)" fg:x="28453" fg:w="8"/><text x="97.8891%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="97.6768%" y="133" width="0.0137%" height="15" fill="rgb(236,37,12)" fg:x="28464" fg:w="4"/><text x="97.9268%" y="143.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="97.6802%" y="117" width="0.0103%" height="15" fill="rgb(232,164,16)" fg:x="28465" fg:w="3"/><text x="97.9302%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="97.6802%" y="101" width="0.0103%" height="15" fill="rgb(244,205,15)" fg:x="28465" fg:w="3"/><text x="97.9302%" y="111.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (3 samples, 0.01%)</title><rect x="97.7043%" y="101" width="0.0103%" height="15" fill="rgb(223,117,47)" fg:x="28472" fg:w="3"/><text x="97.9543%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="97.7592%" y="69" width="0.0137%" height="15" fill="rgb(244,107,35)" fg:x="28488" fg:w="4"/><text x="98.0092%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (16 samples, 0.05%)</title><rect x="97.7317%" y="85" width="0.0549%" height="15" fill="rgb(205,140,8)" fg:x="28480" fg:w="16"/><text x="97.9817%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="97.7729%" y="69" width="0.0137%" height="15" fill="rgb(228,84,46)" fg:x="28492" fg:w="4"/><text x="98.0229%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="97.7866%" y="85" width="0.0206%" height="15" fill="rgb(254,188,9)" fg:x="28496" fg:w="6"/><text x="98.0366%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (27 samples, 0.09%)</title><rect x="97.7180%" y="101" width="0.0927%" height="15" fill="rgb(206,112,54)" fg:x="28476" fg:w="27"/><text x="97.9680%" y="111.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="97.8656%" y="69" width="0.0309%" height="15" fill="rgb(216,84,49)" fg:x="28519" fg:w="9"/><text x="98.1156%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (35 samples, 0.12%)</title><rect x="97.8175%" y="85" width="0.1201%" height="15" fill="rgb(214,194,35)" fg:x="28505" fg:w="35"/><text x="98.0675%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="97.8964%" y="69" width="0.0412%" height="15" fill="rgb(249,28,3)" fg:x="28528" fg:w="12"/><text x="98.1464%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="97.9376%" y="85" width="0.0412%" height="15" fill="rgb(222,56,52)" fg:x="28540" fg:w="12"/><text x="98.1876%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 0.29%)</title><rect x="97.7008%" y="117" width="0.2917%" height="15" fill="rgb(245,217,50)" fg:x="28471" fg:w="85"/><text x="97.9508%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (53 samples, 0.18%)</title><rect x="97.8106%" y="101" width="0.1819%" height="15" fill="rgb(213,201,24)" fg:x="28503" fg:w="53"/><text x="98.0606%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.0028%" y="85" width="0.0103%" height="15" fill="rgb(248,116,28)" fg:x="28559" fg:w="3"/><text x="98.2528%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="98.0028%" y="69" width="0.0103%" height="15" fill="rgb(219,72,43)" fg:x="28559" fg:w="3"/><text x="98.2528%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="97.9960%" y="101" width="0.0206%" height="15" fill="rgb(209,138,14)" fg:x="28557" fg:w="6"/><text x="98.2460%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="98.0200%" y="85" width="0.0172%" height="15" fill="rgb(222,18,33)" fg:x="28564" fg:w="5"/><text x="98.2700%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (103 samples, 0.35%)</title><rect x="97.6905%" y="133" width="0.3535%" height="15" fill="rgb(213,199,7)" fg:x="28468" fg:w="103"/><text x="97.9405%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (15 samples, 0.05%)</title><rect x="97.9925%" y="117" width="0.0515%" height="15" fill="rgb(250,110,10)" fg:x="28556" fg:w="15"/><text x="98.2425%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (8 samples, 0.03%)</title><rect x="98.0165%" y="101" width="0.0275%" height="15" fill="rgb(248,123,6)" fg:x="28563" fg:w="8"/><text x="98.2665%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.04%)</title><rect x="98.1195%" y="69" width="0.0412%" height="15" fill="rgb(206,91,31)" fg:x="28593" fg:w="12"/><text x="98.3695%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="98.1504%" y="53" width="0.0103%" height="15" fill="rgb(211,154,13)" fg:x="28602" fg:w="3"/><text x="98.4004%" y="63.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="98.1607%" y="69" width="0.0137%" height="15" fill="rgb(225,148,7)" fg:x="28605" fg:w="4"/><text x="98.4107%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (23 samples, 0.08%)</title><rect x="98.0989%" y="85" width="0.0789%" height="15" fill="rgb(220,160,43)" fg:x="28587" fg:w="23"/><text x="98.3489%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="98.2121%" y="53" width="0.0137%" height="15" fill="rgb(213,52,39)" fg:x="28620" fg:w="4"/><text x="98.4621%" y="63.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (14 samples, 0.05%)</title><rect x="98.1881%" y="69" width="0.0480%" height="15" fill="rgb(243,137,7)" fg:x="28613" fg:w="14"/><text x="98.4381%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="98.2259%" y="53" width="0.0103%" height="15" fill="rgb(230,79,13)" fg:x="28624" fg:w="3"/><text x="98.4759%" y="63.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="98.2362%" y="69" width="0.0377%" height="15" fill="rgb(247,105,23)" fg:x="28627" fg:w="11"/><text x="98.4862%" y="79.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 0.21%)</title><rect x="98.0714%" y="101" width="0.2093%" height="15" fill="rgb(223,179,41)" fg:x="28579" fg:w="61"/><text x="98.3214%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (30 samples, 0.10%)</title><rect x="98.1778%" y="85" width="0.1029%" height="15" fill="rgb(218,9,34)" fg:x="28610" fg:w="30"/><text x="98.4278%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.2911%" y="69" width="0.0103%" height="15" fill="rgb(222,106,8)" fg:x="28643" fg:w="3"/><text x="98.5411%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="98.2911%" y="85" width="0.0137%" height="15" fill="rgb(211,220,0)" fg:x="28643" fg:w="4"/><text x="98.5411%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="98.3048%" y="69" width="0.0137%" height="15" fill="rgb(229,52,16)" fg:x="28647" fg:w="4"/><text x="98.5548%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (76 samples, 0.26%)</title><rect x="98.0714%" y="117" width="0.2608%" height="15" fill="rgb(212,155,18)" fg:x="28579" fg:w="76"/><text x="98.3214%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (14 samples, 0.05%)</title><rect x="98.2842%" y="101" width="0.0480%" height="15" fill="rgb(242,21,14)" fg:x="28641" fg:w="14"/><text x="98.5342%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (8 samples, 0.03%)</title><rect x="98.3048%" y="85" width="0.0275%" height="15" fill="rgb(222,19,48)" fg:x="28647" fg:w="8"/><text x="98.5548%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="98.3185%" y="69" width="0.0137%" height="15" fill="rgb(232,45,27)" fg:x="28651" fg:w="4"/><text x="98.5685%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.3357%" y="101" width="0.0103%" height="15" fill="rgb(249,103,42)" fg:x="28656" fg:w="3"/><text x="98.5857%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="98.3357%" y="85" width="0.0103%" height="15" fill="rgb(246,81,33)" fg:x="28656" fg:w="3"/><text x="98.5857%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (4 samples, 0.01%)</title><rect x="98.3357%" y="117" width="0.0137%" height="15" fill="rgb(252,33,42)" fg:x="28656" fg:w="4"/><text x="98.5857%" y="127.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="98.3906%" y="101" width="0.0103%" height="15" fill="rgb(209,212,41)" fg:x="28672" fg:w="3"/><text x="98.6406%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="98.3906%" y="85" width="0.0103%" height="15" fill="rgb(207,154,6)" fg:x="28672" fg:w="3"/><text x="98.6406%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="98.4215%" y="53" width="0.0137%" height="15" fill="rgb(223,64,47)" fg:x="28681" fg:w="4"/><text x="98.6715%" y="63.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="98.4249%" y="37" width="0.0103%" height="15" fill="rgb(211,161,38)" fg:x="28682" fg:w="3"/><text x="98.6749%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (10 samples, 0.03%)</title><rect x="98.4077%" y="69" width="0.0343%" height="15" fill="rgb(219,138,40)" fg:x="28677" fg:w="10"/><text x="98.6577%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (11 samples, 0.04%)</title><rect x="98.4626%" y="53" width="0.0377%" height="15" fill="rgb(241,228,46)" fg:x="28693" fg:w="11"/><text x="98.7126%" y="63.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="98.4867%" y="37" width="0.0137%" height="15" fill="rgb(223,209,38)" fg:x="28700" fg:w="4"/><text x="98.7367%" y="47.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.11%)</title><rect x="98.4009%" y="85" width="0.1132%" height="15" fill="rgb(236,164,45)" fg:x="28675" fg:w="33"/><text x="98.6509%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (21 samples, 0.07%)</title><rect x="98.4421%" y="69" width="0.0721%" height="15" fill="rgb(231,15,5)" fg:x="28687" fg:w="21"/><text x="98.6921%" y="79.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (36 samples, 0.12%)</title><rect x="98.4009%" y="101" width="0.1235%" height="15" fill="rgb(252,35,15)" fg:x="28675" fg:w="36"/><text x="98.6509%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (3 samples, 0.01%)</title><rect x="98.5347%" y="101" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="28714" fg:w="3"/><text x="98.7847%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="98.5622%" y="85" width="0.0137%" height="15" fill="rgb(233,39,42)" fg:x="28722" fg:w="4"/><text x="98.8122%" y="95.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="98.5793%" y="85" width="0.0137%" height="15" fill="rgb(238,110,33)" fg:x="28727" fg:w="4"/><text x="98.8293%" y="95.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="98.5828%" y="69" width="0.0103%" height="15" fill="rgb(233,195,10)" fg:x="28728" fg:w="3"/><text x="98.8328%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="98.5930%" y="53" width="0.0206%" height="15" fill="rgb(254,105,3)" fg:x="28731" fg:w="6"/><text x="98.8430%" y="63.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="98.5965%" y="37" width="0.0172%" height="15" fill="rgb(221,225,9)" fg:x="28732" fg:w="5"/><text x="98.8465%" y="47.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="98.5930%" y="69" width="0.0343%" height="15" fill="rgb(224,227,45)" fg:x="28731" fg:w="10"/><text x="98.8430%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (4 samples, 0.01%)</title><rect x="98.6136%" y="53" width="0.0137%" height="15" fill="rgb(229,198,43)" fg:x="28737" fg:w="4"/><text x="98.8636%" y="63.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.05%)</title><rect x="98.5930%" y="85" width="0.0480%" height="15" fill="rgb(206,209,35)" fg:x="28731" fg:w="14"/><text x="98.8430%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::while_helper::_{{closure}} (4 samples, 0.01%)</title><rect x="98.6274%" y="69" width="0.0137%" height="15" fill="rgb(245,195,53)" fg:x="28741" fg:w="4"/><text x="98.8774%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::exp::mk_seq (3 samples, 0.01%)</title><rect x="98.6308%" y="53" width="0.0103%" height="15" fill="rgb(240,92,26)" fg:x="28742" fg:w="3"/><text x="98.8808%" y="63.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.6308%" y="37" width="0.0103%" height="15" fill="rgb(207,40,23)" fg:x="28742" fg:w="3"/><text x="98.8808%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (4 samples, 0.01%)</title><rect x="98.6480%" y="85" width="0.0137%" height="15" fill="rgb(223,111,35)" fg:x="28747" fg:w="4"/><text x="98.8980%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="98.6720%" y="69" width="0.0103%" height="15" fill="rgb(229,147,28)" fg:x="28754" fg:w="3"/><text x="98.9220%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.02%)</title><rect x="98.6891%" y="69" width="0.0206%" height="15" fill="rgb(211,29,28)" fg:x="28759" fg:w="6"/><text x="98.9391%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (7 samples, 0.02%)</title><rect x="98.7372%" y="69" width="0.0240%" height="15" fill="rgb(228,72,33)" fg:x="28773" fg:w="7"/><text x="98.9872%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (5 samples, 0.02%)</title><rect x="98.7440%" y="53" width="0.0172%" height="15" fill="rgb(205,214,31)" fg:x="28775" fg:w="5"/><text x="98.9940%" y="63.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="98.7509%" y="37" width="0.0103%" height="15" fill="rgb(224,111,15)" fg:x="28777" fg:w="3"/><text x="99.0009%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (31 samples, 0.11%)</title><rect x="98.6617%" y="85" width="0.1064%" height="15" fill="rgb(253,21,26)" fg:x="28751" fg:w="31"/><text x="98.9117%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (68 samples, 0.23%)</title><rect x="98.5450%" y="101" width="0.2333%" height="15" fill="rgb(245,139,43)" fg:x="28717" fg:w="68"/><text x="98.7950%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (3 samples, 0.01%)</title><rect x="98.7681%" y="85" width="0.0103%" height="15" fill="rgb(252,170,7)" fg:x="28782" fg:w="3"/><text x="99.0181%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="98.7886%" y="69" width="0.0172%" height="15" fill="rgb(231,118,14)" fg:x="28788" fg:w="5"/><text x="99.0386%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (7 samples, 0.02%)</title><rect x="98.7886%" y="85" width="0.0240%" height="15" fill="rgb(238,83,0)" fg:x="28788" fg:w="7"/><text x="99.0386%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (138 samples, 0.47%)</title><rect x="98.3494%" y="117" width="0.4736%" height="15" fill="rgb(221,39,39)" fg:x="28660" fg:w="138"/><text x="98.5994%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (13 samples, 0.04%)</title><rect x="98.7784%" y="101" width="0.0446%" height="15" fill="rgb(222,119,46)" fg:x="28785" fg:w="13"/><text x="99.0284%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="98.8264%" y="85" width="0.0137%" height="15" fill="rgb(222,165,49)" fg:x="28799" fg:w="4"/><text x="99.0764%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="98.8264%" y="101" width="0.0206%" height="15" fill="rgb(219,113,52)" fg:x="28799" fg:w="6"/><text x="99.0764%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.8538%" y="85" width="0.0103%" height="15" fill="rgb(214,7,15)" fg:x="28807" fg:w="3"/><text x="99.1038%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (239 samples, 0.82%)</title><rect x="98.0543%" y="133" width="0.8202%" height="15" fill="rgb(235,32,4)" fg:x="28574" fg:w="239"/><text x="98.3043%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="98.8230%" y="117" width="0.0515%" height="15" fill="rgb(238,90,54)" fg:x="28798" fg:w="15"/><text x="99.0730%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (6 samples, 0.02%)</title><rect x="98.8538%" y="101" width="0.0206%" height="15" fill="rgb(213,208,19)" fg:x="28807" fg:w="6"/><text x="99.1038%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (7 samples, 0.02%)</title><rect x="98.8744%" y="117" width="0.0240%" height="15" fill="rgb(233,156,4)" fg:x="28813" fg:w="7"/><text x="99.1244%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.02%)</title><rect x="98.8779%" y="101" width="0.0206%" height="15" fill="rgb(207,194,5)" fg:x="28814" fg:w="6"/><text x="99.1279%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.02%)</title><rect x="98.9019%" y="85" width="0.0206%" height="15" fill="rgb(206,111,30)" fg:x="28821" fg:w="6"/><text x="99.1519%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (8 samples, 0.03%)</title><rect x="98.9019%" y="101" width="0.0275%" height="15" fill="rgb(243,70,54)" fg:x="28821" fg:w="8"/><text x="99.1519%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (374 samples, 1.28%)</title><rect x="97.6699%" y="149" width="1.2834%" height="15" fill="rgb(242,28,8)" fg:x="28462" fg:w="374"/><text x="97.9199%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (23 samples, 0.08%)</title><rect x="98.8744%" y="133" width="0.0789%" height="15" fill="rgb(219,106,18)" fg:x="28813" fg:w="23"/><text x="99.1244%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="98.9019%" y="117" width="0.0515%" height="15" fill="rgb(244,222,10)" fg:x="28821" fg:w="15"/><text x="99.1519%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (6 samples, 0.02%)</title><rect x="98.9328%" y="101" width="0.0206%" height="15" fill="rgb(236,179,52)" fg:x="28830" fg:w="6"/><text x="99.1828%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (3 samples, 0.01%)</title><rect x="98.9431%" y="85" width="0.0103%" height="15" fill="rgb(213,23,39)" fg:x="28833" fg:w="3"/><text x="99.1931%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="98.9534%" y="133" width="0.0103%" height="15" fill="rgb(238,48,10)" fg:x="28836" fg:w="3"/><text x="99.2034%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="98.9671%" y="101" width="0.0103%" height="15" fill="rgb(251,196,23)" fg:x="28840" fg:w="3"/><text x="99.2171%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="98.9671%" y="117" width="0.0137%" height="15" fill="rgb(250,152,24)" fg:x="28840" fg:w="4"/><text x="99.2171%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="98.9945%" y="85" width="0.0137%" height="15" fill="rgb(209,150,17)" fg:x="28848" fg:w="4"/><text x="99.2445%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (7 samples, 0.02%)</title><rect x="98.9945%" y="101" width="0.0240%" height="15" fill="rgb(234,202,34)" fg:x="28848" fg:w="7"/><text x="99.2445%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.0186%" y="85" width="0.0103%" height="15" fill="rgb(253,148,53)" fg:x="28855" fg:w="3"/><text x="99.2686%" y="95.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="99.0186%" y="69" width="0.0103%" height="15" fill="rgb(218,129,16)" fg:x="28855" fg:w="3"/><text x="99.2686%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_not (4 samples, 0.01%)</title><rect x="99.0186%" y="101" width="0.0137%" height="15" fill="rgb(216,85,19)" fg:x="28855" fg:w="4"/><text x="99.2686%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (533 samples, 1.83%)</title><rect x="97.2307%" y="165" width="1.8290%" height="15" fill="rgb(235,228,7)" fg:x="28334" fg:w="533"/><text x="97.4807%" y="175.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (31 samples, 0.11%)</title><rect x="98.9534%" y="149" width="0.1064%" height="15" fill="rgb(245,175,0)" fg:x="28836" fg:w="31"/><text x="99.2034%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (27 samples, 0.09%)</title><rect x="98.9671%" y="133" width="0.0927%" height="15" fill="rgb(208,168,36)" fg:x="28840" fg:w="27"/><text x="99.2171%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="98.9877%" y="117" width="0.0721%" height="15" fill="rgb(246,171,24)" fg:x="28846" fg:w="21"/><text x="99.2377%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (7 samples, 0.02%)</title><rect x="99.0357%" y="101" width="0.0240%" height="15" fill="rgb(215,142,24)" fg:x="28860" fg:w="7"/><text x="99.2857%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="99.0460%" y="85" width="0.0137%" height="15" fill="rgb(250,187,7)" fg:x="28863" fg:w="4"/><text x="99.2960%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (5 samples, 0.02%)</title><rect x="99.0632%" y="133" width="0.0172%" height="15" fill="rgb(228,66,33)" fg:x="28868" fg:w="5"/><text x="99.3132%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.0700%" y="117" width="0.0103%" height="15" fill="rgb(234,215,21)" fg:x="28870" fg:w="3"/><text x="99.3200%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="99.0838%" y="117" width="0.0137%" height="15" fill="rgb(222,191,20)" fg:x="28874" fg:w="4"/><text x="99.3338%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.0838%" y="101" width="0.0137%" height="15" fill="rgb(245,79,54)" fg:x="28874" fg:w="4"/><text x="99.3338%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="99.1078%" y="101" width="0.0137%" height="15" fill="rgb(240,10,37)" fg:x="28881" fg:w="4"/><text x="99.3578%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (686 samples, 2.35%)</title><rect x="96.7812%" y="181" width="2.3541%" height="15" fill="rgb(214,192,32)" fg:x="28203" fg:w="686"/><text x="97.0312%" y="191.50">r..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (22 samples, 0.08%)</title><rect x="99.0597%" y="165" width="0.0755%" height="15" fill="rgb(209,36,54)" fg:x="28867" fg:w="22"/><text x="99.3097%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="99.0632%" y="149" width="0.0721%" height="15" fill="rgb(220,10,11)" fg:x="28868" fg:w="21"/><text x="99.3132%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="99.0838%" y="133" width="0.0515%" height="15" fill="rgb(221,106,17)" fg:x="28874" fg:w="15"/><text x="99.3338%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (11 samples, 0.04%)</title><rect x="99.0975%" y="117" width="0.0377%" height="15" fill="rgb(251,142,44)" fg:x="28878" fg:w="11"/><text x="99.3475%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (3 samples, 0.01%)</title><rect x="99.1249%" y="101" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="28886" fg:w="3"/><text x="99.3749%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="99.1421%" y="133" width="0.0103%" height="15" fill="rgb(208,107,27)" fg:x="28891" fg:w="3"/><text x="99.3921%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.1593%" y="101" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="28896" fg:w="3"/><text x="99.4093%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.1558%" y="117" width="0.0206%" height="15" fill="rgb(250,205,27)" fg:x="28895" fg:w="6"/><text x="99.4058%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (5 samples, 0.02%)</title><rect x="99.1867%" y="101" width="0.0172%" height="15" fill="rgb(210,80,43)" fg:x="28904" fg:w="5"/><text x="99.4367%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.1901%" y="85" width="0.0137%" height="15" fill="rgb(247,160,36)" fg:x="28905" fg:w="4"/><text x="99.4401%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (794 samples, 2.72%)</title><rect x="96.4895%" y="197" width="2.7247%" height="15" fill="rgb(234,13,49)" fg:x="28118" fg:w="794"/><text x="96.7395%" y="207.50">ru..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (23 samples, 0.08%)</title><rect x="99.1352%" y="181" width="0.0789%" height="15" fill="rgb(234,122,0)" fg:x="28889" fg:w="23"/><text x="99.3852%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (22 samples, 0.08%)</title><rect x="99.1387%" y="165" width="0.0755%" height="15" fill="rgb(207,146,38)" fg:x="28890" fg:w="22"/><text x="99.3887%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="99.1421%" y="149" width="0.0721%" height="15" fill="rgb(207,177,25)" fg:x="28891" fg:w="21"/><text x="99.3921%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (17 samples, 0.06%)</title><rect x="99.1558%" y="133" width="0.0583%" height="15" fill="rgb(211,178,42)" fg:x="28895" fg:w="17"/><text x="99.4058%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (9 samples, 0.03%)</title><rect x="99.1833%" y="117" width="0.0309%" height="15" fill="rgb(230,69,54)" fg:x="28903" fg:w="9"/><text x="99.4333%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.2279%" y="133" width="0.0103%" height="15" fill="rgb(214,135,41)" fg:x="28916" fg:w="3"/><text x="99.4779%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="99.2279%" y="149" width="0.0137%" height="15" fill="rgb(237,67,25)" fg:x="28916" fg:w="4"/><text x="99.4779%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (5 samples, 0.02%)</title><rect x="99.2450%" y="133" width="0.0172%" height="15" fill="rgb(222,189,50)" fg:x="28921" fg:w="5"/><text x="99.4950%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.2931%" y="85" width="0.0103%" height="15" fill="rgb(245,148,34)" fg:x="28935" fg:w="3"/><text x="99.5431%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.3034%" y="85" width="0.0103%" height="15" fill="rgb(222,29,6)" fg:x="28938" fg:w="3"/><text x="99.5534%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (8 samples, 0.03%)</title><rect x="99.2931%" y="101" width="0.0275%" height="15" fill="rgb(221,189,43)" fg:x="28935" fg:w="8"/><text x="99.5431%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (949 samples, 3.26%)</title><rect x="96.0777%" y="213" width="3.2566%" height="15" fill="rgb(207,36,27)" fg:x="27998" fg:w="949"/><text x="96.3277%" y="223.50">rus..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (35 samples, 0.12%)</title><rect x="99.2142%" y="197" width="0.1201%" height="15" fill="rgb(217,90,24)" fg:x="28912" fg:w="35"/><text x="99.4642%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (34 samples, 0.12%)</title><rect x="99.2176%" y="181" width="0.1167%" height="15" fill="rgb(224,66,35)" fg:x="28913" fg:w="34"/><text x="99.4676%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="99.2245%" y="165" width="0.1098%" height="15" fill="rgb(221,13,50)" fg:x="28915" fg:w="32"/><text x="99.4745%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (26 samples, 0.09%)</title><rect x="99.2450%" y="149" width="0.0892%" height="15" fill="rgb(236,68,49)" fg:x="28921" fg:w="26"/><text x="99.4950%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (20 samples, 0.07%)</title><rect x="99.2656%" y="133" width="0.0686%" height="15" fill="rgb(229,146,28)" fg:x="28927" fg:w="20"/><text x="99.5156%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="99.2828%" y="117" width="0.0515%" height="15" fill="rgb(225,31,38)" fg:x="28932" fg:w="15"/><text x="99.5328%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (3 samples, 0.01%)</title><rect x="99.3240%" y="101" width="0.0103%" height="15" fill="rgb(250,208,3)" fg:x="28944" fg:w="3"/><text x="99.5740%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="99.3446%" y="133" width="0.0103%" height="15" fill="rgb(246,54,23)" fg:x="28950" fg:w="3"/><text x="99.5946%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="99.3549%" y="101" width="0.0172%" height="15" fill="rgb(243,76,11)" fg:x="28953" fg:w="5"/><text x="99.6049%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.3549%" y="117" width="0.0206%" height="15" fill="rgb(245,21,50)" fg:x="28953" fg:w="6"/><text x="99.6049%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="99.3857%" y="85" width="0.0172%" height="15" fill="rgb(228,9,43)" fg:x="28962" fg:w="5"/><text x="99.6357%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.3857%" y="101" width="0.0206%" height="15" fill="rgb(208,100,47)" fg:x="28962" fg:w="6"/><text x="99.6357%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1,074 samples, 3.69%)</title><rect x="95.7242%" y="229" width="3.6855%" height="15" fill="rgb(232,26,8)" fg:x="27895" fg:w="1074"/><text x="95.9742%" y="239.50">rust..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (22 samples, 0.08%)</title><rect x="99.3343%" y="213" width="0.0755%" height="15" fill="rgb(216,166,38)" fg:x="28947" fg:w="22"/><text x="99.5843%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (22 samples, 0.08%)</title><rect x="99.3343%" y="197" width="0.0755%" height="15" fill="rgb(251,202,51)" fg:x="28947" fg:w="22"/><text x="99.5843%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="99.3377%" y="181" width="0.0721%" height="15" fill="rgb(254,216,34)" fg:x="28948" fg:w="21"/><text x="99.5877%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="99.3377%" y="165" width="0.0721%" height="15" fill="rgb(251,32,27)" fg:x="28948" fg:w="21"/><text x="99.5877%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (19 samples, 0.07%)</title><rect x="99.3446%" y="149" width="0.0652%" height="15" fill="rgb(208,127,28)" fg:x="28950" fg:w="19"/><text x="99.5946%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (16 samples, 0.05%)</title><rect x="99.3549%" y="133" width="0.0549%" height="15" fill="rgb(224,137,22)" fg:x="28953" fg:w="16"/><text x="99.6049%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (8 samples, 0.03%)</title><rect x="99.3823%" y="117" width="0.0275%" height="15" fill="rgb(254,70,32)" fg:x="28961" fg:w="8"/><text x="99.6323%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="99.4235%" y="149" width="0.0103%" height="15" fill="rgb(229,75,37)" fg:x="28973" fg:w="3"/><text x="99.6735%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.4338%" y="117" width="0.0137%" height="15" fill="rgb(252,64,23)" fg:x="28976" fg:w="4"/><text x="99.6838%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.4338%" y="133" width="0.0206%" height="15" fill="rgb(232,162,48)" fg:x="28976" fg:w="6"/><text x="99.6838%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.4750%" y="101" width="0.0137%" height="15" fill="rgb(246,160,12)" fg:x="28988" fg:w="4"/><text x="99.7250%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.4887%" y="101" width="0.0103%" height="15" fill="rgb(247,166,0)" fg:x="28992" fg:w="3"/><text x="99.7387%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (10 samples, 0.03%)</title><rect x="99.4681%" y="117" width="0.0343%" height="15" fill="rgb(249,219,21)" fg:x="28986" fg:w="10"/><text x="99.7181%" y="127.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::gkat_ast::bexp::BExp_&gt; (4 samples, 0.01%)</title><rect x="99.5127%" y="101" width="0.0137%" height="15" fill="rgb(205,209,3)" fg:x="28999" fg:w="4"/><text x="99.7627%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.5299%" y="85" width="0.0137%" height="15" fill="rgb(243,44,1)" fg:x="29004" fg:w="4"/><text x="99.7799%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.5264%" y="101" width="0.0206%" height="15" fill="rgb(206,159,16)" fg:x="29003" fg:w="6"/><text x="99.7764%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (3 samples, 0.01%)</title><rect x="99.5539%" y="101" width="0.0103%" height="15" fill="rgb(244,77,30)" fg:x="29011" fg:w="3"/><text x="99.8039%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1,224 samples, 4.20%)</title><rect x="95.3845%" y="245" width="4.2003%" height="15" fill="rgb(218,69,12)" fg:x="27796" fg:w="1224"/><text x="95.6345%" y="255.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (51 samples, 0.18%)</title><rect x="99.4098%" y="229" width="0.1750%" height="15" fill="rgb(212,87,7)" fg:x="28969" fg:w="51"/><text x="99.6598%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (51 samples, 0.18%)</title><rect x="99.4098%" y="213" width="0.1750%" height="15" fill="rgb(245,114,25)" fg:x="28969" fg:w="51"/><text x="99.6598%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (51 samples, 0.18%)</title><rect x="99.4098%" y="197" width="0.1750%" height="15" fill="rgb(210,61,42)" fg:x="28969" fg:w="51"/><text x="99.6598%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (50 samples, 0.17%)</title><rect x="99.4132%" y="181" width="0.1716%" height="15" fill="rgb(211,52,33)" fg:x="28970" fg:w="50"/><text x="99.6632%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (47 samples, 0.16%)</title><rect x="99.4235%" y="165" width="0.1613%" height="15" fill="rgb(234,58,33)" fg:x="28973" fg:w="47"/><text x="99.6735%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (44 samples, 0.15%)</title><rect x="99.4338%" y="149" width="0.1510%" height="15" fill="rgb(220,115,36)" fg:x="28976" fg:w="44"/><text x="99.6838%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (35 samples, 0.12%)</title><rect x="99.4647%" y="133" width="0.1201%" height="15" fill="rgb(243,153,54)" fg:x="28985" fg:w="35"/><text x="99.7147%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (21 samples, 0.07%)</title><rect x="99.5127%" y="117" width="0.0721%" height="15" fill="rgb(251,47,18)" fg:x="28999" fg:w="21"/><text x="99.7627%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (6 samples, 0.02%)</title><rect x="99.5642%" y="101" width="0.0206%" height="15" fill="rgb(242,102,42)" fg:x="29014" fg:w="6"/><text x="99.8142%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.5711%" y="85" width="0.0137%" height="15" fill="rgb(234,31,38)" fg:x="29016" fg:w="4"/><text x="99.8211%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.6088%" y="133" width="0.0206%" height="15" fill="rgb(221,117,51)" fg:x="29027" fg:w="6"/><text x="99.8588%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.6397%" y="101" width="0.0103%" height="15" fill="rgb(212,20,18)" fg:x="29036" fg:w="3"/><text x="99.8897%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.6500%" y="101" width="0.0103%" height="15" fill="rgb(245,133,36)" fg:x="29039" fg:w="3"/><text x="99.9000%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (9 samples, 0.03%)</title><rect x="99.6363%" y="117" width="0.0309%" height="15" fill="rgb(212,6,19)" fg:x="29035" fg:w="9"/><text x="99.8863%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1,355 samples, 4.65%)</title><rect x="95.0379%" y="261" width="4.6498%" height="15" fill="rgb(218,1,36)" fg:x="27695" fg:w="1355"/><text x="95.2879%" y="271.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (30 samples, 0.10%)</title><rect x="99.5848%" y="245" width="0.1029%" height="15" fill="rgb(246,84,54)" fg:x="29020" fg:w="30"/><text x="99.8348%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (30 samples, 0.10%)</title><rect x="99.5848%" y="229" width="0.1029%" height="15" fill="rgb(242,110,6)" fg:x="29020" fg:w="30"/><text x="99.8348%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (30 samples, 0.10%)</title><rect x="99.5848%" y="213" width="0.1029%" height="15" fill="rgb(214,47,5)" fg:x="29020" fg:w="30"/><text x="99.8348%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (30 samples, 0.10%)</title><rect x="99.5848%" y="197" width="0.1029%" height="15" fill="rgb(218,159,25)" fg:x="29020" fg:w="30"/><text x="99.8348%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (29 samples, 0.10%)</title><rect x="99.5882%" y="181" width="0.0995%" height="15" fill="rgb(215,211,28)" fg:x="29021" fg:w="29"/><text x="99.8382%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (27 samples, 0.09%)</title><rect x="99.5951%" y="165" width="0.0927%" height="15" fill="rgb(238,59,32)" fg:x="29023" fg:w="27"/><text x="99.8451%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (24 samples, 0.08%)</title><rect x="99.6054%" y="149" width="0.0824%" height="15" fill="rgb(226,82,3)" fg:x="29026" fg:w="24"/><text x="99.8554%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (15 samples, 0.05%)</title><rect x="99.6363%" y="133" width="0.0515%" height="15" fill="rgb(240,164,32)" fg:x="29035" fg:w="15"/><text x="99.8863%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (5 samples, 0.02%)</title><rect x="99.6706%" y="117" width="0.0172%" height="15" fill="rgb(232,46,7)" fg:x="29045" fg:w="5"/><text x="99.9206%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (3 samples, 0.01%)</title><rect x="99.6774%" y="101" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="29047" fg:w="3"/><text x="99.9274%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.6774%" y="85" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="29047" fg:w="3"/><text x="99.9274%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (4 samples, 0.01%)</title><rect x="99.7117%" y="117" width="0.0137%" height="15" fill="rgb(246,141,4)" fg:x="29057" fg:w="4"/><text x="99.9617%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (5 samples, 0.02%)</title><rect x="99.7426%" y="85" width="0.0172%" height="15" fill="rgb(229,23,39)" fg:x="29066" fg:w="5"/><text x="99.9926%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.7495%" y="69" width="0.0103%" height="15" fill="rgb(206,12,3)" fg:x="29068" fg:w="3"/><text x="99.9995%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.7426%" y="101" width="0.0206%" height="15" fill="rgb(252,226,20)" fg:x="29066" fg:w="6"/><text x="99.9926%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.7701%" y="85" width="0.0103%" height="15" fill="rgb(216,123,35)" fg:x="29074" fg:w="3"/><text x="100.0201%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_or (4 samples, 0.01%)</title><rect x="99.7701%" y="101" width="0.0137%" height="15" fill="rgb(212,68,40)" fg:x="29074" fg:w="4"/><text x="100.0201%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::derivative::derivative (1,499 samples, 5.14%)</title><rect x="94.6536%" y="277" width="5.1440%" height="15" fill="rgb(254,125,32)" fg:x="27583" fg:w="1499"/><text x="94.9036%" y="287.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="99.6877%" y="261" width="0.1098%" height="15" fill="rgb(253,97,22)" fg:x="29050" fg:w="32"/><text x="99.9377%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="99.6877%" y="245" width="0.1098%" height="15" fill="rgb(241,101,14)" fg:x="29050" fg:w="32"/><text x="99.9377%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="99.6877%" y="229" width="0.1098%" height="15" fill="rgb(238,103,29)" fg:x="29050" fg:w="32"/><text x="99.9377%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (32 samples, 0.11%)</title><rect x="99.6877%" y="213" width="0.1098%" height="15" fill="rgb(233,195,47)" fg:x="29050" fg:w="32"/><text x="99.9377%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (31 samples, 0.11%)</title><rect x="99.6912%" y="197" width="0.1064%" height="15" fill="rgb(246,218,30)" fg:x="29051" fg:w="31"/><text x="99.9412%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (29 samples, 0.10%)</title><rect x="99.6980%" y="181" width="0.0995%" height="15" fill="rgb(219,145,47)" fg:x="29053" fg:w="29"/><text x="99.9480%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (28 samples, 0.10%)</title><rect x="99.7015%" y="165" width="0.0961%" height="15" fill="rgb(243,12,26)" fg:x="29054" fg:w="28"/><text x="99.9515%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (27 samples, 0.09%)</title><rect x="99.7049%" y="149" width="0.0927%" height="15" fill="rgb(214,87,16)" fg:x="29055" fg:w="27"/><text x="99.9549%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (25 samples, 0.09%)</title><rect x="99.7117%" y="133" width="0.0858%" height="15" fill="rgb(208,99,42)" fg:x="29057" fg:w="25"/><text x="99.9617%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (18 samples, 0.06%)</title><rect x="99.7358%" y="117" width="0.0618%" height="15" fill="rgb(253,99,2)" fg:x="29064" fg:w="18"/><text x="99.9858%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (4 samples, 0.01%)</title><rect x="99.7838%" y="101" width="0.0137%" height="15" fill="rgb(220,168,23)" fg:x="29078" fg:w="4"/><text x="100.0338%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.7838%" y="85" width="0.0137%" height="15" fill="rgb(242,38,24)" fg:x="29078" fg:w="4"/><text x="100.0338%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.01%)</title><rect x="99.8559%" y="117" width="0.0137%" height="15" fill="rgb(225,182,9)" fg:x="29099" fg:w="4"/><text x="100.1059%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (8 samples, 0.03%)</title><rect x="99.8490%" y="133" width="0.0275%" height="15" fill="rgb(243,178,37)" fg:x="29097" fg:w="8"/><text x="100.0990%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.01%)</title><rect x="99.9005%" y="101" width="0.0103%" height="15" fill="rgb(232,139,19)" fg:x="29112" fg:w="3"/><text x="100.1505%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (6 samples, 0.02%)</title><rect x="99.8936%" y="117" width="0.0206%" height="15" fill="rgb(225,201,24)" fg:x="29110" fg:w="6"/><text x="100.1436%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.03%)</title><rect x="99.9279%" y="85" width="0.0275%" height="15" fill="rgb(221,47,46)" fg:x="29120" fg:w="8"/><text x="100.1779%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="99.9417%" y="69" width="0.0137%" height="15" fill="rgb(249,23,13)" fg:x="29124" fg:w="4"/><text x="100.1917%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="99.9554%" y="85" width="0.0137%" height="15" fill="rgb(219,9,5)" fg:x="29128" fg:w="4"/><text x="100.2054%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_ast::bexp::mk_and (14 samples, 0.05%)</title><rect x="99.9245%" y="101" width="0.0480%" height="15" fill="rgb(254,171,16)" fg:x="29119" fg:w="14"/><text x="100.1745%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv_iter::equiv (28,252 samples, 96.95%)</title><rect x="3.0370%" y="309" width="96.9493%" height="15" fill="rgb(230,171,20)" fg:x="885" fg:w="28252"/><text x="3.2870%" y="319.50">rust-gkat`rust_gkat::gkat_symb::equiv_iter::equiv</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::equiv_iter::reject (1,592 samples, 5.46%)</title><rect x="94.5232%" y="293" width="5.4631%" height="15" fill="rgb(210,71,41)" fg:x="27545" fg:w="1592"/><text x="94.7732%" y="303.50">rust-gk..</text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (55 samples, 0.19%)</title><rect x="99.7975%" y="277" width="0.1887%" height="15" fill="rgb(206,173,20)" fg:x="29082" fg:w="55"/><text x="100.0475%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (55 samples, 0.19%)</title><rect x="99.7975%" y="261" width="0.1887%" height="15" fill="rgb(233,88,34)" fg:x="29082" fg:w="55"/><text x="100.0475%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (54 samples, 0.19%)</title><rect x="99.8010%" y="245" width="0.1853%" height="15" fill="rgb(223,209,46)" fg:x="29083" fg:w="54"/><text x="100.0510%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (54 samples, 0.19%)</title><rect x="99.8010%" y="229" width="0.1853%" height="15" fill="rgb(250,43,18)" fg:x="29083" fg:w="54"/><text x="100.0510%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (53 samples, 0.18%)</title><rect x="99.8044%" y="213" width="0.1819%" height="15" fill="rgb(208,13,10)" fg:x="29084" fg:w="53"/><text x="100.0544%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (52 samples, 0.18%)</title><rect x="99.8078%" y="197" width="0.1784%" height="15" fill="rgb(212,200,36)" fg:x="29085" fg:w="52"/><text x="100.0578%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (48 samples, 0.16%)</title><rect x="99.8216%" y="181" width="0.1647%" height="15" fill="rgb(225,90,30)" fg:x="29089" fg:w="48"/><text x="100.0716%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (45 samples, 0.15%)</title><rect x="99.8319%" y="165" width="0.1544%" height="15" fill="rgb(236,182,39)" fg:x="29092" fg:w="45"/><text x="100.0819%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (41 samples, 0.14%)</title><rect x="99.8456%" y="149" width="0.1407%" height="15" fill="rgb(212,144,35)" fg:x="29096" fg:w="41"/><text x="100.0956%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (29 samples, 0.10%)</title><rect x="99.8868%" y="133" width="0.0995%" height="15" fill="rgb(228,63,44)" fg:x="29108" fg:w="29"/><text x="100.1368%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (20 samples, 0.07%)</title><rect x="99.9176%" y="117" width="0.0686%" height="15" fill="rgb(228,109,6)" fg:x="29117" fg:w="20"/><text x="100.1676%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::gkat_symb::epsilon::epsilon (3 samples, 0.01%)</title><rect x="99.9760%" y="101" width="0.0103%" height="15" fill="rgb(238,117,24)" fg:x="29134" fg:w="3"/><text x="100.2260%" y="111.50"></text></g><g><title>dyld`start (29,140 samples, 100.00%)</title><rect x="0.0000%" y="421" width="99.9966%" height="15" fill="rgb(242,26,26)" fg:x="0" fg:w="29140"/><text x="0.2500%" y="431.50">dyld`start</text></g><g><title>rust-gkat`main (29,139 samples, 99.99%)</title><rect x="0.0034%" y="405" width="99.9931%" height="15" fill="rgb(221,92,48)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="415.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start (29,139 samples, 99.99%)</title><rect x="0.0034%" y="389" width="99.9931%" height="15" fill="rgb(209,209,32)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="399.50">rust-gkat`std::rt::lang_start</text></g><g><title>rust-gkat`std::rt::lang_start_internal (29,139 samples, 99.99%)</title><rect x="0.0034%" y="373" width="99.9931%" height="15" fill="rgb(221,70,22)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="383.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (29,139 samples, 99.99%)</title><rect x="0.0034%" y="357" width="99.9931%" height="15" fill="rgb(248,145,5)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="367.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys_common::backtrace::__rust_begin_short_backtrace (29,139 samples, 99.99%)</title><rect x="0.0034%" y="341" width="99.9931%" height="15" fill="rgb(226,116,26)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="351.50">rust-gkat`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (29,139 samples, 99.99%)</title><rect x="0.0034%" y="325" width="99.9931%" height="15" fill="rgb(244,5,17)" fg:x="1" fg:w="29139"/><text x="0.2534%" y="335.50">rust-gkat`rust_gkat::main</text></g><g><title>all (29,141 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(252,159,33)" fg:x="0" fg:w="29141"/><text x="0.2500%" y="447.50"></text></g></svg></svg>