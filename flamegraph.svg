<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="241"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.41%)</title><rect x="0.0000%" y="565" width="0.4149%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>libsystem_c.dylib`exit (1 samples, 0.41%)</title><rect x="0.0000%" y="549" width="0.4149%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>libsystem_c.dylib`__cxa_finalize_ranges (1 samples, 0.41%)</title><rect x="0.0000%" y="533" width="0.4149%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>rust-gkat`mi_process_done (1 samples, 0.41%)</title><rect x="0.0000%" y="517" width="0.4149%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>rust-gkat`mi_heap_collect_ex (1 samples, 0.41%)</title><rect x="0.0000%" y="501" width="0.4149%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>rust-gkat`mi_segment_try_purge (1 samples, 0.41%)</title><rect x="0.0000%" y="485" width="0.4149%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>rust-gkat`mi_segment_purge (1 samples, 0.41%)</title><rect x="0.0000%" y="469" width="0.4149%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.41%)</title><rect x="0.0000%" y="453" width="0.4149%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="0.8299%" y="373" width="0.4149%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="1.0799%" y="383.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (4 samples, 1.66%)</title><rect x="0.4149%" y="421" width="1.6598%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="4"/><text x="0.6649%" y="431.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (4 samples, 1.66%)</title><rect x="0.4149%" y="405" width="1.6598%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="4"/><text x="0.6649%" y="415.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (4 samples, 1.66%)</title><rect x="0.4149%" y="389" width="1.6598%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="4"/><text x="0.6649%" y="399.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (2 samples, 0.83%)</title><rect x="1.2448%" y="373" width="0.8299%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="2"/><text x="1.4948%" y="383.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.83%)</title><rect x="1.2448%" y="357" width="0.8299%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="2"/><text x="1.4948%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.83%)</title><rect x="1.2448%" y="341" width="0.8299%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="2"/><text x="1.4948%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="1.6598%" y="325" width="0.4149%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="1.9098%" y="335.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="1.6598%" y="309" width="0.4149%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="1.9098%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (1 samples, 0.41%)</title><rect x="2.0747%" y="405" width="0.4149%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="2.3247%" y="415.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="2.0747%" y="389" width="0.4149%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="2.3247%" y="399.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (3 samples, 1.24%)</title><rect x="2.0747%" y="421" width="1.2448%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="3"/><text x="2.3247%" y="431.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.83%)</title><rect x="2.4896%" y="405" width="0.8299%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="2"/><text x="2.7396%" y="415.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (2 samples, 0.83%)</title><rect x="2.4896%" y="389" width="0.8299%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="2"/><text x="2.7396%" y="399.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.83%)</title><rect x="2.4896%" y="373" width="0.8299%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="2"/><text x="2.7396%" y="383.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.83%)</title><rect x="2.4896%" y="357" width="0.8299%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="2"/><text x="2.7396%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="3.3195%" y="389" width="0.4149%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="3.5695%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 4.56%)</title><rect x="0.4149%" y="437" width="4.5643%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="11"/><text x="0.6649%" y="447.50">rust-..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (4 samples, 1.66%)</title><rect x="3.3195%" y="421" width="1.6598%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="4"/><text x="3.5695%" y="431.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (4 samples, 1.66%)</title><rect x="3.3195%" y="405" width="1.6598%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="4"/><text x="3.5695%" y="415.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 1.24%)</title><rect x="3.7344%" y="389" width="1.2448%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="3"/><text x="3.9844%" y="399.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="4.9793%" y="405" width="0.4149%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="1"/><text x="5.2293%" y="415.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.83%)</title><rect x="5.3942%" y="357" width="0.8299%" height="15" fill="rgb(209,103,24)" fg:x="13" fg:w="2"/><text x="5.6442%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.83%)</title><rect x="5.3942%" y="341" width="0.8299%" height="15" fill="rgb(229,88,8)" fg:x="13" fg:w="2"/><text x="5.6442%" y="351.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="5.8091%" y="325" width="0.4149%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="6.0591%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="6.2241%" y="357" width="0.4149%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="1"/><text x="6.4741%" y="367.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (5 samples, 2.07%)</title><rect x="5.3942%" y="405" width="2.0747%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="5"/><text x="5.6442%" y="415.50">r..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (5 samples, 2.07%)</title><rect x="5.3942%" y="389" width="2.0747%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="5"/><text x="5.6442%" y="399.50">r..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (5 samples, 2.07%)</title><rect x="5.3942%" y="373" width="2.0747%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="5"/><text x="5.6442%" y="383.50">r..</text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (2 samples, 0.83%)</title><rect x="6.6390%" y="357" width="0.8299%" height="15" fill="rgb(245,192,40)" fg:x="16" fg:w="2"/><text x="6.8890%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.83%)</title><rect x="6.6390%" y="341" width="0.8299%" height="15" fill="rgb(238,167,29)" fg:x="16" fg:w="2"/><text x="6.8890%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (2 samples, 0.83%)</title><rect x="7.4689%" y="389" width="0.8299%" height="15" fill="rgb(232,182,51)" fg:x="18" fg:w="2"/><text x="7.7189%" y="399.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (2 samples, 0.83%)</title><rect x="7.4689%" y="373" width="0.8299%" height="15" fill="rgb(231,60,39)" fg:x="18" fg:w="2"/><text x="7.7189%" y="383.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="8.2988%" y="373" width="0.4149%" height="15" fill="rgb(208,69,12)" fg:x="20" fg:w="1"/><text x="8.5488%" y="383.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="8.2988%" y="357" width="0.4149%" height="15" fill="rgb(235,93,37)" fg:x="20" fg:w="1"/><text x="8.5488%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="8.2988%" y="341" width="0.4149%" height="15" fill="rgb(213,116,39)" fg:x="20" fg:w="1"/><text x="8.5488%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="8.7137%" y="357" width="0.4149%" height="15" fill="rgb(222,207,29)" fg:x="21" fg:w="1"/><text x="8.9637%" y="367.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="8.7137%" y="341" width="0.4149%" height="15" fill="rgb(206,96,30)" fg:x="21" fg:w="1"/><text x="8.9637%" y="351.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="8.7137%" y="325" width="0.4149%" height="15" fill="rgb(218,138,4)" fg:x="21" fg:w="1"/><text x="8.9637%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="8.7137%" y="309" width="0.4149%" height="15" fill="rgb(250,191,14)" fg:x="21" fg:w="1"/><text x="8.9637%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="9.1286%" y="309" width="0.4149%" height="15" fill="rgb(239,60,40)" fg:x="22" fg:w="1"/><text x="9.3786%" y="319.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="9.1286%" y="293" width="0.4149%" height="15" fill="rgb(206,27,48)" fg:x="22" fg:w="1"/><text x="9.3786%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.83%)</title><rect x="9.1286%" y="325" width="0.8299%" height="15" fill="rgb(225,35,8)" fg:x="22" fg:w="2"/><text x="9.3786%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (1 samples, 0.41%)</title><rect x="9.5436%" y="309" width="0.4149%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="1"/><text x="9.7936%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="9.9585%" y="325" width="0.4149%" height="15" fill="rgb(247,123,22)" fg:x="24" fg:w="1"/><text x="10.2085%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="9.9585%" y="309" width="0.4149%" height="15" fill="rgb(231,138,38)" fg:x="24" fg:w="1"/><text x="10.2085%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="9.9585%" y="293" width="0.4149%" height="15" fill="rgb(231,145,46)" fg:x="24" fg:w="1"/><text x="10.2085%" y="303.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="9.9585%" y="277" width="0.4149%" height="15" fill="rgb(251,118,11)" fg:x="24" fg:w="1"/><text x="10.2085%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (6 samples, 2.49%)</title><rect x="8.2988%" y="389" width="2.4896%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="6"/><text x="8.5488%" y="399.50">ru..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (5 samples, 2.07%)</title><rect x="8.7137%" y="373" width="2.0747%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="5"/><text x="8.9637%" y="383.50">r..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (4 samples, 1.66%)</title><rect x="9.1286%" y="357" width="1.6598%" height="15" fill="rgb(209,12,38)" fg:x="22" fg:w="4"/><text x="9.3786%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (4 samples, 1.66%)</title><rect x="9.1286%" y="341" width="1.6598%" height="15" fill="rgb(227,1,9)" fg:x="22" fg:w="4"/><text x="9.3786%" y="351.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="10.3734%" y="325" width="0.4149%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="1"/><text x="10.6234%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (9 samples, 3.73%)</title><rect x="7.4689%" y="405" width="3.7344%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="9"/><text x="7.7189%" y="415.50">rust..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="10.7884%" y="389" width="0.4149%" height="15" fill="rgb(210,229,1)" fg:x="26" fg:w="1"/><text x="11.0384%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.83%)</title><rect x="11.2033%" y="373" width="0.8299%" height="15" fill="rgb(222,148,37)" fg:x="27" fg:w="2"/><text x="11.4533%" y="383.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (5 samples, 2.07%)</title><rect x="11.2033%" y="389" width="2.0747%" height="15" fill="rgb(234,67,33)" fg:x="27" fg:w="5"/><text x="11.4533%" y="399.50">r..</text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 1.24%)</title><rect x="12.0332%" y="373" width="1.2448%" height="15" fill="rgb(247,98,35)" fg:x="29" fg:w="3"/><text x="12.2832%" y="383.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 8.71%)</title><rect x="4.9793%" y="421" width="8.7137%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="21"/><text x="5.2293%" y="431.50">rust-gkat`&lt;a..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (6 samples, 2.49%)</title><rect x="11.2033%" y="405" width="2.4896%" height="15" fill="rgb(213,79,30)" fg:x="27" fg:w="6"/><text x="11.4533%" y="415.50">ru..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="13.2780%" y="389" width="0.4149%" height="15" fill="rgb(246,177,23)" fg:x="32" fg:w="1"/><text x="13.5280%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="13.6929%" y="325" width="0.4149%" height="15" fill="rgb(230,62,27)" fg:x="33" fg:w="1"/><text x="13.9429%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (2 samples, 0.83%)</title><rect x="13.6929%" y="389" width="0.8299%" height="15" fill="rgb(216,154,8)" fg:x="33" fg:w="2"/><text x="13.9429%" y="399.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (2 samples, 0.83%)</title><rect x="13.6929%" y="373" width="0.8299%" height="15" fill="rgb(244,35,45)" fg:x="33" fg:w="2"/><text x="13.9429%" y="383.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (2 samples, 0.83%)</title><rect x="13.6929%" y="357" width="0.8299%" height="15" fill="rgb(251,115,12)" fg:x="33" fg:w="2"/><text x="13.9429%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (2 samples, 0.83%)</title><rect x="13.6929%" y="341" width="0.8299%" height="15" fill="rgb(240,54,50)" fg:x="33" fg:w="2"/><text x="13.9429%" y="351.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="14.1079%" y="325" width="0.4149%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="1"/><text x="14.3579%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="14.5228%" y="373" width="0.4149%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="1"/><text x="14.7728%" y="383.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="14.9378%" y="357" width="0.4149%" height="15" fill="rgb(249,43,39)" fg:x="36" fg:w="1"/><text x="15.1878%" y="367.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="14.9378%" y="341" width="0.4149%" height="15" fill="rgb(209,38,44)" fg:x="36" fg:w="1"/><text x="15.1878%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="15.3527%" y="357" width="0.4149%" height="15" fill="rgb(236,212,23)" fg:x="37" fg:w="1"/><text x="15.6027%" y="367.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="15.3527%" y="341" width="0.4149%" height="15" fill="rgb(242,79,21)" fg:x="37" fg:w="1"/><text x="15.6027%" y="351.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="15.3527%" y="325" width="0.4149%" height="15" fill="rgb(211,96,35)" fg:x="37" fg:w="1"/><text x="15.6027%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="15.7676%" y="357" width="0.4149%" height="15" fill="rgb(253,215,40)" fg:x="38" fg:w="1"/><text x="16.0176%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="15.7676%" y="341" width="0.4149%" height="15" fill="rgb(211,81,21)" fg:x="38" fg:w="1"/><text x="16.0176%" y="351.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="15.7676%" y="325" width="0.4149%" height="15" fill="rgb(208,190,38)" fg:x="38" fg:w="1"/><text x="16.0176%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 2.90%)</title><rect x="13.6929%" y="405" width="2.9046%" height="15" fill="rgb(235,213,38)" fg:x="33" fg:w="7"/><text x="13.9429%" y="415.50">ru..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (5 samples, 2.07%)</title><rect x="14.5228%" y="389" width="2.0747%" height="15" fill="rgb(237,122,38)" fg:x="35" fg:w="5"/><text x="14.7728%" y="399.50">r..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (4 samples, 1.66%)</title><rect x="14.9378%" y="373" width="1.6598%" height="15" fill="rgb(244,218,35)" fg:x="36" fg:w="4"/><text x="15.1878%" y="383.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="16.1826%" y="357" width="0.4149%" height="15" fill="rgb(240,68,47)" fg:x="39" fg:w="1"/><text x="16.4326%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="16.1826%" y="341" width="0.4149%" height="15" fill="rgb(210,16,53)" fg:x="39" fg:w="1"/><text x="16.4326%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="16.1826%" y="325" width="0.4149%" height="15" fill="rgb(235,124,12)" fg:x="39" fg:w="1"/><text x="16.4326%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="16.1826%" y="309" width="0.4149%" height="15" fill="rgb(224,169,11)" fg:x="39" fg:w="1"/><text x="16.4326%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="16.5975%" y="357" width="0.4149%" height="15" fill="rgb(250,166,2)" fg:x="40" fg:w="1"/><text x="16.8475%" y="367.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="16.5975%" y="341" width="0.4149%" height="15" fill="rgb(242,216,29)" fg:x="40" fg:w="1"/><text x="16.8475%" y="351.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (1 samples, 0.41%)</title><rect x="16.5975%" y="325" width="0.4149%" height="15" fill="rgb(230,116,27)" fg:x="40" fg:w="1"/><text x="16.8475%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (2 samples, 0.83%)</title><rect x="16.5975%" y="373" width="0.8299%" height="15" fill="rgb(228,99,48)" fg:x="40" fg:w="2"/><text x="16.8475%" y="383.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="17.0124%" y="357" width="0.4149%" height="15" fill="rgb(253,11,6)" fg:x="41" fg:w="1"/><text x="17.2624%" y="367.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="17.0124%" y="341" width="0.4149%" height="15" fill="rgb(247,143,39)" fg:x="41" fg:w="1"/><text x="17.2624%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="17.0124%" y="325" width="0.4149%" height="15" fill="rgb(236,97,10)" fg:x="41" fg:w="1"/><text x="17.2624%" y="335.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="17.0124%" y="309" width="0.4149%" height="15" fill="rgb(233,208,19)" fg:x="41" fg:w="1"/><text x="17.2624%" y="319.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="17.0124%" y="293" width="0.4149%" height="15" fill="rgb(216,164,2)" fg:x="41" fg:w="1"/><text x="17.2624%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="17.4274%" y="341" width="0.4149%" height="15" fill="rgb(220,129,5)" fg:x="42" fg:w="1"/><text x="17.6774%" y="351.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="17.4274%" y="325" width="0.4149%" height="15" fill="rgb(242,17,10)" fg:x="42" fg:w="1"/><text x="17.6774%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="17.8423%" y="325" width="0.4149%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="1"/><text x="18.0923%" y="335.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="17.8423%" y="309" width="0.4149%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="18.0923%" y="319.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="17.8423%" y="293" width="0.4149%" height="15" fill="rgb(233,223,10)" fg:x="43" fg:w="1"/><text x="18.0923%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="18.2573%" y="293" width="0.4149%" height="15" fill="rgb(215,21,27)" fg:x="44" fg:w="1"/><text x="18.5073%" y="303.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="18.2573%" y="277" width="0.4149%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="1"/><text x="18.5073%" y="287.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="18.2573%" y="261" width="0.4149%" height="15" fill="rgb(244,5,23)" fg:x="44" fg:w="1"/><text x="18.5073%" y="271.50"></text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="18.2573%" y="245" width="0.4149%" height="15" fill="rgb(226,81,46)" fg:x="44" fg:w="1"/><text x="18.5073%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.24%)</title><rect x="17.8423%" y="341" width="1.2448%" height="15" fill="rgb(247,70,30)" fg:x="43" fg:w="3"/><text x="18.0923%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.83%)</title><rect x="18.2573%" y="325" width="0.8299%" height="15" fill="rgb(212,68,19)" fg:x="44" fg:w="2"/><text x="18.5073%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (2 samples, 0.83%)</title><rect x="18.2573%" y="309" width="0.8299%" height="15" fill="rgb(240,187,13)" fg:x="44" fg:w="2"/><text x="18.5073%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="18.6722%" y="293" width="0.4149%" height="15" fill="rgb(223,113,26)" fg:x="45" fg:w="1"/><text x="18.9222%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="18.6722%" y="277" width="0.4149%" height="15" fill="rgb(206,192,2)" fg:x="45" fg:w="1"/><text x="18.9222%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="18.6722%" y="261" width="0.4149%" height="15" fill="rgb(241,108,4)" fg:x="45" fg:w="1"/><text x="18.9222%" y="271.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="18.6722%" y="245" width="0.4149%" height="15" fill="rgb(247,173,49)" fg:x="45" fg:w="1"/><text x="18.9222%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 2.90%)</title><rect x="16.5975%" y="389" width="2.9046%" height="15" fill="rgb(224,114,35)" fg:x="40" fg:w="7"/><text x="16.8475%" y="399.50">ru..</text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (5 samples, 2.07%)</title><rect x="17.4274%" y="373" width="2.0747%" height="15" fill="rgb(245,159,27)" fg:x="42" fg:w="5"/><text x="17.6774%" y="383.50">r..</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (5 samples, 2.07%)</title><rect x="17.4274%" y="357" width="2.0747%" height="15" fill="rgb(245,172,44)" fg:x="42" fg:w="5"/><text x="17.6774%" y="367.50">r..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="19.0871%" y="341" width="0.4149%" height="15" fill="rgb(236,23,11)" fg:x="46" fg:w="1"/><text x="19.3371%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="19.5021%" y="341" width="0.4149%" height="15" fill="rgb(205,117,38)" fg:x="47" fg:w="1"/><text x="19.7521%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="19.9170%" y="325" width="0.4149%" height="15" fill="rgb(237,72,25)" fg:x="48" fg:w="1"/><text x="20.1670%" y="335.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="19.9170%" y="309" width="0.4149%" height="15" fill="rgb(244,70,9)" fg:x="48" fg:w="1"/><text x="20.1670%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (3 samples, 1.24%)</title><rect x="19.5021%" y="357" width="1.2448%" height="15" fill="rgb(217,125,39)" fg:x="47" fg:w="3"/><text x="19.7521%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.83%)</title><rect x="19.9170%" y="341" width="0.8299%" height="15" fill="rgb(235,36,10)" fg:x="48" fg:w="2"/><text x="20.1670%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="20.3320%" y="325" width="0.4149%" height="15" fill="rgb(251,123,47)" fg:x="49" fg:w="1"/><text x="20.5820%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="20.3320%" y="309" width="0.4149%" height="15" fill="rgb(221,13,13)" fg:x="49" fg:w="1"/><text x="20.5820%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="20.3320%" y="293" width="0.4149%" height="15" fill="rgb(238,131,9)" fg:x="49" fg:w="1"/><text x="20.5820%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (1 samples, 0.41%)</title><rect x="20.3320%" y="277" width="0.4149%" height="15" fill="rgb(211,50,8)" fg:x="49" fg:w="1"/><text x="20.5820%" y="287.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="20.3320%" y="261" width="0.4149%" height="15" fill="rgb(245,182,24)" fg:x="49" fg:w="1"/><text x="20.5820%" y="271.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="20.3320%" y="245" width="0.4149%" height="15" fill="rgb(242,14,37)" fg:x="49" fg:w="1"/><text x="20.5820%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="20.3320%" y="229" width="0.4149%" height="15" fill="rgb(246,228,12)" fg:x="49" fg:w="1"/><text x="20.5820%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.66%)</title><rect x="19.5021%" y="373" width="1.6598%" height="15" fill="rgb(213,55,15)" fg:x="47" fg:w="4"/><text x="19.7521%" y="383.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (1 samples, 0.41%)</title><rect x="20.7469%" y="357" width="0.4149%" height="15" fill="rgb(209,9,3)" fg:x="50" fg:w="1"/><text x="20.9969%" y="367.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="20.7469%" y="341" width="0.4149%" height="15" fill="rgb(230,59,30)" fg:x="50" fg:w="1"/><text x="20.9969%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="21.1618%" y="309" width="0.4149%" height="15" fill="rgb(209,121,21)" fg:x="51" fg:w="1"/><text x="21.4118%" y="319.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="21.1618%" y="293" width="0.4149%" height="15" fill="rgb(220,109,13)" fg:x="51" fg:w="1"/><text x="21.4118%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="21.1618%" y="277" width="0.4149%" height="15" fill="rgb(232,18,1)" fg:x="51" fg:w="1"/><text x="21.4118%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="21.5768%" y="309" width="0.4149%" height="15" fill="rgb(215,41,42)" fg:x="52" fg:w="1"/><text x="21.8268%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="21.5768%" y="293" width="0.4149%" height="15" fill="rgb(224,123,36)" fg:x="52" fg:w="1"/><text x="21.8268%" y="303.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="21.5768%" y="277" width="0.4149%" height="15" fill="rgb(240,125,3)" fg:x="52" fg:w="1"/><text x="21.8268%" y="287.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="21.5768%" y="261" width="0.4149%" height="15" fill="rgb(205,98,50)" fg:x="52" fg:w="1"/><text x="21.8268%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="21.5768%" y="245" width="0.4149%" height="15" fill="rgb(205,185,37)" fg:x="52" fg:w="1"/><text x="21.8268%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (3 samples, 1.24%)</title><rect x="21.1618%" y="341" width="1.2448%" height="15" fill="rgb(238,207,15)" fg:x="51" fg:w="3"/><text x="21.4118%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (3 samples, 1.24%)</title><rect x="21.1618%" y="325" width="1.2448%" height="15" fill="rgb(213,199,42)" fg:x="51" fg:w="3"/><text x="21.4118%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="21.9917%" y="309" width="0.4149%" height="15" fill="rgb(235,201,11)" fg:x="53" fg:w="1"/><text x="22.2417%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="21.9917%" y="293" width="0.4149%" height="15" fill="rgb(207,46,11)" fg:x="53" fg:w="1"/><text x="22.2417%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="21.9917%" y="277" width="0.4149%" height="15" fill="rgb(241,35,35)" fg:x="53" fg:w="1"/><text x="22.2417%" y="287.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="21.9917%" y="261" width="0.4149%" height="15" fill="rgb(243,32,47)" fg:x="53" fg:w="1"/><text x="22.2417%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.66%)</title><rect x="21.1618%" y="357" width="1.6598%" height="15" fill="rgb(247,202,23)" fg:x="51" fg:w="4"/><text x="21.4118%" y="367.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="22.4066%" y="341" width="0.4149%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="1"/><text x="22.6566%" y="351.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="22.4066%" y="325" width="0.4149%" height="15" fill="rgb(243,110,44)" fg:x="54" fg:w="1"/><text x="22.6566%" y="335.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="22.4066%" y="309" width="0.4149%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="1"/><text x="22.6566%" y="319.50"></text></g><g><title>rust-gkat`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.41%)</title><rect x="22.8216%" y="357" width="0.4149%" height="15" fill="rgb(216,99,12)" fg:x="55" fg:w="1"/><text x="23.0716%" y="367.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="22.8216%" y="341" width="0.4149%" height="15" fill="rgb(226,22,26)" fg:x="55" fg:w="1"/><text x="23.0716%" y="351.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="22.8216%" y="325" width="0.4149%" height="15" fill="rgb(217,163,10)" fg:x="55" fg:w="1"/><text x="23.0716%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="23.2365%" y="325" width="0.4149%" height="15" fill="rgb(213,25,53)" fg:x="56" fg:w="1"/><text x="23.4865%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="23.2365%" y="309" width="0.4149%" height="15" fill="rgb(252,105,26)" fg:x="56" fg:w="1"/><text x="23.4865%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="23.2365%" y="293" width="0.4149%" height="15" fill="rgb(220,39,43)" fg:x="56" fg:w="1"/><text x="23.4865%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="23.2365%" y="277" width="0.4149%" height="15" fill="rgb(229,68,48)" fg:x="56" fg:w="1"/><text x="23.4865%" y="287.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.41%)</title><rect x="23.2365%" y="261" width="0.4149%" height="15" fill="rgb(252,8,32)" fg:x="56" fg:w="1"/><text x="23.4865%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="23.6515%" y="325" width="0.4149%" height="15" fill="rgb(223,20,43)" fg:x="57" fg:w="1"/><text x="23.9015%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="23.6515%" y="309" width="0.4149%" height="15" fill="rgb(229,81,49)" fg:x="57" fg:w="1"/><text x="23.9015%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.6515%" y="293" width="0.4149%" height="15" fill="rgb(236,28,36)" fg:x="57" fg:w="1"/><text x="23.9015%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.6515%" y="277" width="0.4149%" height="15" fill="rgb(249,185,26)" fg:x="57" fg:w="1"/><text x="23.9015%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="23.6515%" y="261" width="0.4149%" height="15" fill="rgb(249,174,33)" fg:x="57" fg:w="1"/><text x="23.9015%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="23.6515%" y="245" width="0.4149%" height="15" fill="rgb(233,201,37)" fg:x="57" fg:w="1"/><text x="23.9015%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="23.6515%" y="229" width="0.4149%" height="15" fill="rgb(221,78,26)" fg:x="57" fg:w="1"/><text x="23.9015%" y="239.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="23.6515%" y="213" width="0.4149%" height="15" fill="rgb(250,127,30)" fg:x="57" fg:w="1"/><text x="23.9015%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.24%)</title><rect x="23.2365%" y="341" width="1.2448%" height="15" fill="rgb(230,49,44)" fg:x="56" fg:w="3"/><text x="23.4865%" y="351.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="24.0664%" y="325" width="0.4149%" height="15" fill="rgb(229,67,23)" fg:x="58" fg:w="1"/><text x="24.3164%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="24.0664%" y="309" width="0.4149%" height="15" fill="rgb(249,83,47)" fg:x="58" fg:w="1"/><text x="24.3164%" y="319.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="24.0664%" y="293" width="0.4149%" height="15" fill="rgb(215,43,3)" fg:x="58" fg:w="1"/><text x="24.3164%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="24.4813%" y="309" width="0.4149%" height="15" fill="rgb(238,154,13)" fg:x="59" fg:w="1"/><text x="24.7313%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="24.4813%" y="293" width="0.4149%" height="15" fill="rgb(219,56,2)" fg:x="59" fg:w="1"/><text x="24.7313%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="24.8963%" y="309" width="0.4149%" height="15" fill="rgb(233,0,4)" fg:x="60" fg:w="1"/><text x="25.1463%" y="319.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="24.8963%" y="293" width="0.4149%" height="15" fill="rgb(235,30,7)" fg:x="60" fg:w="1"/><text x="25.1463%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="24.8963%" y="277" width="0.4149%" height="15" fill="rgb(250,79,13)" fg:x="60" fg:w="1"/><text x="25.1463%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="24.8963%" y="261" width="0.4149%" height="15" fill="rgb(211,146,34)" fg:x="60" fg:w="1"/><text x="25.1463%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="24.8963%" y="245" width="0.4149%" height="15" fill="rgb(228,22,38)" fg:x="60" fg:w="1"/><text x="25.1463%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.66%)</title><rect x="24.4813%" y="325" width="1.6598%" height="15" fill="rgb(235,168,5)" fg:x="59" fg:w="4"/><text x="24.7313%" y="335.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (2 samples, 0.83%)</title><rect x="25.3112%" y="309" width="0.8299%" height="15" fill="rgb(221,155,16)" fg:x="61" fg:w="2"/><text x="25.5612%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (2 samples, 0.83%)</title><rect x="25.3112%" y="293" width="0.8299%" height="15" fill="rgb(215,215,53)" fg:x="61" fg:w="2"/><text x="25.5612%" y="303.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.83%)</title><rect x="25.3112%" y="277" width="0.8299%" height="15" fill="rgb(223,4,10)" fg:x="61" fg:w="2"/><text x="25.5612%" y="287.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="26.1411%" y="293" width="0.4149%" height="15" fill="rgb(234,103,6)" fg:x="63" fg:w="1"/><text x="26.3911%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="26.1411%" y="277" width="0.4149%" height="15" fill="rgb(227,97,0)" fg:x="63" fg:w="1"/><text x="26.3911%" y="287.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="26.1411%" y="261" width="0.4149%" height="15" fill="rgb(234,150,53)" fg:x="63" fg:w="1"/><text x="26.3911%" y="271.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (1 samples, 0.41%)</title><rect x="26.1411%" y="245" width="0.4149%" height="15" fill="rgb(228,201,54)" fg:x="63" fg:w="1"/><text x="26.3911%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.83%)</title><rect x="26.1411%" y="309" width="0.8299%" height="15" fill="rgb(222,22,37)" fg:x="63" fg:w="2"/><text x="26.3911%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="26.5560%" y="293" width="0.4149%" height="15" fill="rgb(237,53,32)" fg:x="64" fg:w="1"/><text x="26.8060%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="26.5560%" y="277" width="0.4149%" height="15" fill="rgb(233,25,53)" fg:x="64" fg:w="1"/><text x="26.8060%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="26.5560%" y="261" width="0.4149%" height="15" fill="rgb(210,40,34)" fg:x="64" fg:w="1"/><text x="26.8060%" y="271.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="26.5560%" y="245" width="0.4149%" height="15" fill="rgb(241,220,44)" fg:x="64" fg:w="1"/><text x="26.8060%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="26.9710%" y="309" width="0.4149%" height="15" fill="rgb(235,28,35)" fg:x="65" fg:w="1"/><text x="27.2210%" y="319.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="26.9710%" y="293" width="0.4149%" height="15" fill="rgb(210,56,17)" fg:x="65" fg:w="1"/><text x="27.2210%" y="303.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="26.9710%" y="277" width="0.4149%" height="15" fill="rgb(224,130,29)" fg:x="65" fg:w="1"/><text x="27.2210%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="26.9710%" y="261" width="0.4149%" height="15" fill="rgb(235,212,8)" fg:x="65" fg:w="1"/><text x="27.2210%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="26.9710%" y="245" width="0.4149%" height="15" fill="rgb(223,33,50)" fg:x="65" fg:w="1"/><text x="27.2210%" y="255.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="26.9710%" y="229" width="0.4149%" height="15" fill="rgb(219,149,13)" fg:x="65" fg:w="1"/><text x="27.2210%" y="239.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="26.9710%" y="213" width="0.4149%" height="15" fill="rgb(250,156,29)" fg:x="65" fg:w="1"/><text x="27.2210%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.41%)</title><rect x="27.3859%" y="293" width="0.4149%" height="15" fill="rgb(216,193,19)" fg:x="66" fg:w="1"/><text x="27.6359%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="27.8008%" y="293" width="0.4149%" height="15" fill="rgb(216,135,14)" fg:x="67" fg:w="1"/><text x="28.0508%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="27.8008%" y="277" width="0.4149%" height="15" fill="rgb(241,47,5)" fg:x="67" fg:w="1"/><text x="28.0508%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="27.8008%" y="261" width="0.4149%" height="15" fill="rgb(233,42,35)" fg:x="67" fg:w="1"/><text x="28.0508%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="27.8008%" y="245" width="0.4149%" height="15" fill="rgb(231,13,6)" fg:x="67" fg:w="1"/><text x="28.0508%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="27.8008%" y="229" width="0.4149%" height="15" fill="rgb(207,181,40)" fg:x="67" fg:w="1"/><text x="28.0508%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="27.8008%" y="213" width="0.4149%" height="15" fill="rgb(254,173,49)" fg:x="67" fg:w="1"/><text x="28.0508%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="27.8008%" y="197" width="0.4149%" height="15" fill="rgb(221,1,38)" fg:x="67" fg:w="1"/><text x="28.0508%" y="207.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="27.8008%" y="181" width="0.4149%" height="15" fill="rgb(206,124,46)" fg:x="67" fg:w="1"/><text x="28.0508%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="28.2158%" y="245" width="0.4149%" height="15" fill="rgb(249,21,11)" fg:x="68" fg:w="1"/><text x="28.4658%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="28.6307%" y="229" width="0.4149%" height="15" fill="rgb(222,201,40)" fg:x="69" fg:w="1"/><text x="28.8807%" y="239.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="28.6307%" y="213" width="0.4149%" height="15" fill="rgb(235,61,29)" fg:x="69" fg:w="1"/><text x="28.8807%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="28.6307%" y="197" width="0.4149%" height="15" fill="rgb(219,207,3)" fg:x="69" fg:w="1"/><text x="28.8807%" y="207.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (3 samples, 1.24%)</title><rect x="28.2158%" y="261" width="1.2448%" height="15" fill="rgb(222,56,46)" fg:x="68" fg:w="3"/><text x="28.4658%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.83%)</title><rect x="28.6307%" y="245" width="0.8299%" height="15" fill="rgb(239,76,54)" fg:x="69" fg:w="2"/><text x="28.8807%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="29.0456%" y="229" width="0.4149%" height="15" fill="rgb(231,124,27)" fg:x="70" fg:w="1"/><text x="29.2956%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="29.0456%" y="213" width="0.4149%" height="15" fill="rgb(249,195,6)" fg:x="70" fg:w="1"/><text x="29.2956%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="29.0456%" y="197" width="0.4149%" height="15" fill="rgb(237,174,47)" fg:x="70" fg:w="1"/><text x="29.2956%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="29.0456%" y="181" width="0.4149%" height="15" fill="rgb(206,201,31)" fg:x="70" fg:w="1"/><text x="29.2956%" y="191.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="29.0456%" y="165" width="0.4149%" height="15" fill="rgb(231,57,52)" fg:x="70" fg:w="1"/><text x="29.2956%" y="175.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="29.0456%" y="149" width="0.4149%" height="15" fill="rgb(248,177,22)" fg:x="70" fg:w="1"/><text x="29.2956%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="29.0456%" y="133" width="0.4149%" height="15" fill="rgb(215,211,37)" fg:x="70" fg:w="1"/><text x="29.2956%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="29.0456%" y="117" width="0.4149%" height="15" fill="rgb(241,128,51)" fg:x="70" fg:w="1"/><text x="29.2956%" y="127.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="29.0456%" y="101" width="0.4149%" height="15" fill="rgb(227,165,31)" fg:x="70" fg:w="1"/><text x="29.2956%" y="111.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::or (1 samples, 0.41%)</title><rect x="29.0456%" y="85" width="0.4149%" height="15" fill="rgb(228,167,24)" fg:x="70" fg:w="1"/><text x="29.2956%" y="95.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="29.0456%" y="69" width="0.4149%" height="15" fill="rgb(228,143,12)" fg:x="70" fg:w="1"/><text x="29.2956%" y="79.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="29.0456%" y="53" width="0.4149%" height="15" fill="rgb(249,149,8)" fg:x="70" fg:w="1"/><text x="29.2956%" y="63.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::hashable_formula_set::HashableFormulaSet&lt;E&gt; as core::hash::Hash&gt;::hash (1 samples, 0.41%)</title><rect x="29.0456%" y="37" width="0.4149%" height="15" fill="rgb(243,35,44)" fg:x="70" fg:w="1"/><text x="29.2956%" y="47.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.66%)</title><rect x="28.2158%" y="277" width="1.6598%" height="15" fill="rgb(246,89,9)" fg:x="68" fg:w="4"/><text x="28.4658%" y="287.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="29.4606%" y="261" width="0.4149%" height="15" fill="rgb(233,213,13)" fg:x="71" fg:w="1"/><text x="29.7106%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (1 samples, 0.41%)</title><rect x="29.4606%" y="245" width="0.4149%" height="15" fill="rgb(233,141,41)" fg:x="71" fg:w="1"/><text x="29.7106%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::predicates::cnf::is_cnf (1 samples, 0.41%)</title><rect x="29.8755%" y="229" width="0.4149%" height="15" fill="rgb(239,167,4)" fg:x="72" fg:w="1"/><text x="30.1255%" y="239.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="29.8755%" y="213" width="0.4149%" height="15" fill="rgb(209,217,16)" fg:x="72" fg:w="1"/><text x="30.1255%" y="223.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (2 samples, 0.83%)</title><rect x="29.8755%" y="261" width="0.8299%" height="15" fill="rgb(219,88,35)" fg:x="72" fg:w="2"/><text x="30.1255%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (2 samples, 0.83%)</title><rect x="29.8755%" y="245" width="0.8299%" height="15" fill="rgb(220,193,23)" fg:x="72" fg:w="2"/><text x="30.1255%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="30.2905%" y="229" width="0.4149%" height="15" fill="rgb(230,90,52)" fg:x="73" fg:w="1"/><text x="30.5405%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="30.2905%" y="213" width="0.4149%" height="15" fill="rgb(252,106,19)" fg:x="73" fg:w="1"/><text x="30.5405%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 1.24%)</title><rect x="29.8755%" y="277" width="1.2448%" height="15" fill="rgb(206,74,20)" fg:x="72" fg:w="3"/><text x="30.1255%" y="287.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (1 samples, 0.41%)</title><rect x="30.7054%" y="261" width="0.4149%" height="15" fill="rgb(230,138,44)" fg:x="74" fg:w="1"/><text x="30.9554%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="30.7054%" y="245" width="0.4149%" height="15" fill="rgb(235,182,43)" fg:x="74" fg:w="1"/><text x="30.9554%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (1 samples, 0.41%)</title><rect x="30.7054%" y="229" width="0.4149%" height="15" fill="rgb(242,16,51)" fg:x="74" fg:w="1"/><text x="30.9554%" y="239.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (1 samples, 0.41%)</title><rect x="30.7054%" y="213" width="0.4149%" height="15" fill="rgb(248,9,4)" fg:x="74" fg:w="1"/><text x="30.9554%" y="223.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="31.1203%" y="245" width="0.4149%" height="15" fill="rgb(210,31,22)" fg:x="75" fg:w="1"/><text x="31.3703%" y="255.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="31.1203%" y="229" width="0.4149%" height="15" fill="rgb(239,54,39)" fg:x="75" fg:w="1"/><text x="31.3703%" y="239.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="31.1203%" y="213" width="0.4149%" height="15" fill="rgb(230,99,41)" fg:x="75" fg:w="1"/><text x="31.3703%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.83%)</title><rect x="31.1203%" y="261" width="0.8299%" height="15" fill="rgb(253,106,12)" fg:x="75" fg:w="2"/><text x="31.3703%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (1 samples, 0.41%)</title><rect x="31.5353%" y="245" width="0.4149%" height="15" fill="rgb(213,46,41)" fg:x="76" fg:w="1"/><text x="31.7853%" y="255.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="31.5353%" y="229" width="0.4149%" height="15" fill="rgb(215,133,35)" fg:x="76" fg:w="1"/><text x="31.7853%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="31.9502%" y="261" width="0.4149%" height="15" fill="rgb(213,28,5)" fg:x="77" fg:w="1"/><text x="32.2002%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="31.9502%" y="245" width="0.4149%" height="15" fill="rgb(215,77,49)" fg:x="77" fg:w="1"/><text x="32.2002%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="31.9502%" y="229" width="0.4149%" height="15" fill="rgb(248,100,22)" fg:x="77" fg:w="1"/><text x="32.2002%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="31.9502%" y="213" width="0.4149%" height="15" fill="rgb(208,67,9)" fg:x="77" fg:w="1"/><text x="32.2002%" y="223.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="31.9502%" y="197" width="0.4149%" height="15" fill="rgb(219,133,21)" fg:x="77" fg:w="1"/><text x="32.2002%" y="207.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="31.9502%" y="181" width="0.4149%" height="15" fill="rgb(246,46,29)" fg:x="77" fg:w="1"/><text x="32.2002%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_automaton (78 samples, 32.37%)</title><rect x="0.4149%" y="485" width="32.3651%" height="15" fill="rgb(246,185,52)" fg:x="1" fg:w="78"/><text x="0.6649%" y="495.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (78 samples, 32.37%)</title><rect x="0.4149%" y="469" width="32.3651%" height="15" fill="rgb(252,136,11)" fg:x="1" fg:w="78"/><text x="0.6649%" y="479.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (78 samples, 32.37%)</title><rect x="0.4149%" y="453" width="32.3651%" height="15" fill="rgb(219,138,53)" fg:x="1" fg:w="78"/><text x="0.6649%" y="463.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (67 samples, 27.80%)</title><rect x="4.9793%" y="437" width="27.8008%" height="15" fill="rgb(211,51,23)" fg:x="12" fg:w="67"/><text x="5.2293%" y="447.50">rust-gkat`rust_gkat::kernel2::automaton::_&lt;im..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (46 samples, 19.09%)</title><rect x="13.6929%" y="421" width="19.0871%" height="15" fill="rgb(247,221,28)" fg:x="33" fg:w="46"/><text x="13.9429%" y="431.50">rust-gkat`rust_gkat::kernel2::..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (39 samples, 16.18%)</title><rect x="16.5975%" y="405" width="16.1826%" height="15" fill="rgb(251,222,45)" fg:x="40" fg:w="39"/><text x="16.8475%" y="415.50">rust-gkat`rust_gkat::kern..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (32 samples, 13.28%)</title><rect x="19.5021%" y="389" width="13.2780%" height="15" fill="rgb(217,162,53)" fg:x="47" fg:w="32"/><text x="19.7521%" y="399.50">rust-gkat`rust_gkat:..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (28 samples, 11.62%)</title><rect x="21.1618%" y="373" width="11.6183%" height="15" fill="rgb(229,93,14)" fg:x="51" fg:w="28"/><text x="21.4118%" y="383.50">rust-gkat`rust_gk..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (23 samples, 9.54%)</title><rect x="23.2365%" y="357" width="9.5436%" height="15" fill="rgb(209,67,49)" fg:x="56" fg:w="23"/><text x="23.4865%" y="367.50">rust-gkat`rust..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (20 samples, 8.30%)</title><rect x="24.4813%" y="341" width="8.2988%" height="15" fill="rgb(213,87,29)" fg:x="59" fg:w="20"/><text x="24.7313%" y="351.50">rust-gkat`ru..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (16 samples, 6.64%)</title><rect x="26.1411%" y="325" width="6.6390%" height="15" fill="rgb(205,151,52)" fg:x="63" fg:w="16"/><text x="26.3911%" y="335.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (13 samples, 5.39%)</title><rect x="27.3859%" y="309" width="5.3942%" height="15" fill="rgb(253,215,39)" fg:x="66" fg:w="13"/><text x="27.6359%" y="319.50">rust-gk..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (11 samples, 4.56%)</title><rect x="28.2158%" y="293" width="4.5643%" height="15" fill="rgb(221,220,41)" fg:x="68" fg:w="11"/><text x="28.4658%" y="303.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (4 samples, 1.66%)</title><rect x="31.1203%" y="277" width="1.6598%" height="15" fill="rgb(218,133,21)" fg:x="75" fg:w="4"/><text x="31.3703%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::automaton::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::mk_raw (1 samples, 0.41%)</title><rect x="32.3651%" y="261" width="0.4149%" height="15" fill="rgb(221,193,43)" fg:x="78" fg:w="1"/><text x="32.6151%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="32.3651%" y="245" width="0.4149%" height="15" fill="rgb(240,128,52)" fg:x="78" fg:w="1"/><text x="32.6151%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="32.3651%" y="229" width="0.4149%" height="15" fill="rgb(253,114,12)" fg:x="78" fg:w="1"/><text x="32.6151%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="32.3651%" y="213" width="0.4149%" height="15" fill="rgb(215,223,47)" fg:x="78" fg:w="1"/><text x="32.6151%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="32.3651%" y="197" width="0.4149%" height="15" fill="rgb(248,225,23)" fg:x="78" fg:w="1"/><text x="32.6151%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="32.3651%" y="181" width="0.4149%" height="15" fill="rgb(250,108,0)" fg:x="78" fg:w="1"/><text x="32.6151%" y="191.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="32.3651%" y="165" width="0.4149%" height="15" fill="rgb(228,208,7)" fg:x="78" fg:w="1"/><text x="32.6151%" y="175.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="32.3651%" y="149" width="0.4149%" height="15" fill="rgb(244,45,10)" fg:x="78" fg:w="1"/><text x="32.6151%" y="159.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="32.3651%" y="133" width="0.4149%" height="15" fill="rgb(207,125,25)" fg:x="78" fg:w="1"/><text x="32.6151%" y="143.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::syntax::gkat_sat::SATGkat as rust_gkat::syntax::gkat::Gkat&lt;logicng::formulas::formula::EncodedFormula&gt;&gt;::is_equiv (1 samples, 0.41%)</title><rect x="32.7801%" y="469" width="0.4149%" height="15" fill="rgb(210,195,18)" fg:x="79" fg:w="1"/><text x="33.0301%" y="479.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="32.7801%" y="453" width="0.4149%" height="15" fill="rgb(249,80,12)" fg:x="79" fg:w="1"/><text x="33.0301%" y="463.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="32.7801%" y="437" width="0.4149%" height="15" fill="rgb(221,65,9)" fg:x="79" fg:w="1"/><text x="33.0301%" y="447.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="32.7801%" y="421" width="0.4149%" height="15" fill="rgb(235,49,36)" fg:x="79" fg:w="1"/><text x="33.0301%" y="431.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1 samples, 0.41%)</title><rect x="32.7801%" y="405" width="0.4149%" height="15" fill="rgb(225,32,20)" fg:x="79" fg:w="1"/><text x="33.0301%" y="415.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 1.66%)</title><rect x="33.1950%" y="469" width="1.6598%" height="15" fill="rgb(215,141,46)" fg:x="80" fg:w="4"/><text x="33.4450%" y="479.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="35.2697%" y="437" width="0.4149%" height="15" fill="rgb(250,160,47)" fg:x="85" fg:w="1"/><text x="35.5197%" y="447.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="35.6846%" y="421" width="0.4149%" height="15" fill="rgb(216,222,40)" fg:x="86" fg:w="1"/><text x="35.9346%" y="431.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (3 samples, 1.24%)</title><rect x="35.2697%" y="453" width="1.2448%" height="15" fill="rgb(234,217,39)" fg:x="85" fg:w="3"/><text x="35.5197%" y="463.50"></text></g><g><title>rust-gkat`dashmap::mapref::entry::Entry&lt;K,V,S&gt;::or_insert_with (2 samples, 0.83%)</title><rect x="35.6846%" y="437" width="0.8299%" height="15" fill="rgb(207,178,40)" fg:x="86" fg:w="2"/><text x="35.9346%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="36.0996%" y="421" width="0.4149%" height="15" fill="rgb(221,136,13)" fg:x="87" fg:w="1"/><text x="36.3496%" y="431.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.41%)</title><rect x="36.0996%" y="405" width="0.4149%" height="15" fill="rgb(249,199,10)" fg:x="87" fg:w="1"/><text x="36.3496%" y="415.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="36.0996%" y="389" width="0.4149%" height="15" fill="rgb(249,222,13)" fg:x="87" fg:w="1"/><text x="36.3496%" y="399.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="36.9295%" y="437" width="0.4149%" height="15" fill="rgb(244,185,38)" fg:x="89" fg:w="1"/><text x="37.1795%" y="447.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::variable::Variable as core::convert::TryFrom&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding&gt;&gt;::try_from (1 samples, 0.41%)</title><rect x="37.3444%" y="437" width="0.4149%" height="15" fill="rgb(236,202,9)" fg:x="90" fg:w="1"/><text x="37.5944%" y="447.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memcpy (1 samples, 0.41%)</title><rect x="37.7593%" y="437" width="0.4149%" height="15" fill="rgb(250,229,37)" fg:x="91" fg:w="1"/><text x="38.0093%" y="447.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.41%)</title><rect x="38.1743%" y="437" width="0.4149%" height="15" fill="rgb(206,174,23)" fg:x="92" fg:w="1"/><text x="38.4243%" y="447.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="38.5892%" y="421" width="0.4149%" height="15" fill="rgb(211,33,43)" fg:x="93" fg:w="1"/><text x="38.8392%" y="431.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.83%)</title><rect x="39.4191%" y="405" width="0.8299%" height="15" fill="rgb(245,58,50)" fg:x="95" fg:w="2"/><text x="39.6691%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 2.90%)</title><rect x="38.5892%" y="437" width="2.9046%" height="15" fill="rgb(244,68,36)" fg:x="93" fg:w="7"/><text x="38.8392%" y="447.50">ru..</text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 2.49%)</title><rect x="39.0041%" y="421" width="2.4896%" height="15" fill="rgb(232,229,15)" fg:x="94" fg:w="6"/><text x="39.2541%" y="431.50">ru..</text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 1.24%)</title><rect x="40.2490%" y="405" width="1.2448%" height="15" fill="rgb(254,30,23)" fg:x="97" fg:w="3"/><text x="40.4990%" y="415.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="41.4938%" y="421" width="0.4149%" height="15" fill="rgb(235,160,14)" fg:x="100" fg:w="1"/><text x="41.7438%" y="431.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="41.4938%" y="405" width="0.4149%" height="15" fill="rgb(212,155,44)" fg:x="100" fg:w="1"/><text x="41.7438%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="41.4938%" y="389" width="0.4149%" height="15" fill="rgb(226,2,50)" fg:x="100" fg:w="1"/><text x="41.7438%" y="399.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (18 samples, 7.47%)</title><rect x="34.8548%" y="469" width="7.4689%" height="15" fill="rgb(234,177,6)" fg:x="84" fg:w="18"/><text x="35.1048%" y="479.50">rust-gkat`..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (14 samples, 5.81%)</title><rect x="36.5145%" y="453" width="5.8091%" height="15" fill="rgb(217,24,9)" fg:x="88" fg:w="14"/><text x="36.7645%" y="463.50">rust-gk..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (2 samples, 0.83%)</title><rect x="41.4938%" y="437" width="0.8299%" height="15" fill="rgb(220,13,46)" fg:x="100" fg:w="2"/><text x="41.7438%" y="447.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="41.9087%" y="421" width="0.4149%" height="15" fill="rgb(239,221,27)" fg:x="101" fg:w="1"/><text x="42.1587%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.24%)</title><rect x="42.3237%" y="437" width="1.2448%" height="15" fill="rgb(222,198,25)" fg:x="102" fg:w="3"/><text x="42.5737%" y="447.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="43.5685%" y="437" width="0.4149%" height="15" fill="rgb(211,99,13)" fg:x="105" fg:w="1"/><text x="43.8185%" y="447.50"></text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="43.5685%" y="421" width="0.4149%" height="15" fill="rgb(232,111,31)" fg:x="105" fg:w="1"/><text x="43.8185%" y="431.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::variables (8 samples, 3.32%)</title><rect x="42.3237%" y="453" width="3.3195%" height="15" fill="rgb(245,82,37)" fg:x="102" fg:w="8"/><text x="42.5737%" y="463.50">rus..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 1.66%)</title><rect x="43.9834%" y="437" width="1.6598%" height="15" fill="rgb(227,149,46)" fg:x="106" fg:w="4"/><text x="44.2334%" y="447.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="45.6432%" y="437" width="0.4149%" height="15" fill="rgb(218,36,50)" fg:x="110" fg:w="1"/><text x="45.8932%" y="447.50"></text></g><g><title>rust-gkat`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="45.6432%" y="421" width="0.4149%" height="15" fill="rgb(226,80,48)" fg:x="110" fg:w="1"/><text x="45.8932%" y="431.50"></text></g><g><title>rust-gkat`logicng::operations::functions::literals::literals (1 samples, 0.41%)</title><rect x="46.0581%" y="437" width="0.4149%" height="15" fill="rgb(238,224,15)" fg:x="111" fg:w="1"/><text x="46.3081%" y="447.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="46.0581%" y="421" width="0.4149%" height="15" fill="rgb(241,136,10)" fg:x="111" fg:w="1"/><text x="46.3081%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="46.8880%" y="421" width="0.4149%" height="15" fill="rgb(208,32,45)" fg:x="113" fg:w="1"/><text x="47.1380%" y="431.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="47.7178%" y="389" width="0.4149%" height="15" fill="rgb(207,135,9)" fg:x="115" fg:w="1"/><text x="47.9678%" y="399.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.07%)</title><rect x="47.3029%" y="405" width="2.0747%" height="15" fill="rgb(206,86,44)" fg:x="114" fg:w="5"/><text x="47.5529%" y="415.50">r..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3 samples, 1.24%)</title><rect x="48.1328%" y="389" width="1.2448%" height="15" fill="rgb(245,177,15)" fg:x="116" fg:w="3"/><text x="48.3828%" y="399.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.41%)</title><rect x="49.3776%" y="405" width="0.4149%" height="15" fill="rgb(206,64,50)" fg:x="119" fg:w="1"/><text x="49.6276%" y="415.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 5.39%)</title><rect x="47.3029%" y="421" width="5.3942%" height="15" fill="rgb(234,36,40)" fg:x="114" fg:w="13"/><text x="47.5529%" y="431.50">rust-gk..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 2.90%)</title><rect x="49.7925%" y="405" width="2.9046%" height="15" fill="rgb(213,64,8)" fg:x="120" fg:w="7"/><text x="50.0425%" y="415.50">ru..</text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (1 samples, 0.41%)</title><rect x="52.6971%" y="421" width="0.4149%" height="15" fill="rgb(210,75,36)" fg:x="127" fg:w="1"/><text x="52.9471%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="52.6971%" y="405" width="0.4149%" height="15" fill="rgb(229,88,21)" fg:x="127" fg:w="1"/><text x="52.9471%" y="415.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="53.9419%" y="405" width="0.4149%" height="15" fill="rgb(252,204,47)" fg:x="130" fg:w="1"/><text x="54.1919%" y="415.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="53.9419%" y="389" width="0.4149%" height="15" fill="rgb(208,77,27)" fg:x="130" fg:w="1"/><text x="54.1919%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="53.9419%" y="373" width="0.4149%" height="15" fill="rgb(221,76,26)" fg:x="130" fg:w="1"/><text x="54.1919%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="54.3568%" y="405" width="0.4149%" height="15" fill="rgb(225,139,18)" fg:x="131" fg:w="1"/><text x="54.6068%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.83%)</title><rect x="56.8465%" y="389" width="0.8299%" height="15" fill="rgb(230,137,11)" fg:x="137" fg:w="2"/><text x="57.0965%" y="399.50"></text></g><g><title>rust-gkat`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 2.90%)</title><rect x="57.6763%" y="357" width="2.9046%" height="15" fill="rgb(212,28,1)" fg:x="139" fg:w="7"/><text x="57.9263%" y="367.50">ru..</text></g><g><title>rust-gkat`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.41%)</title><rect x="60.5809%" y="357" width="0.4149%" height="15" fill="rgb(248,164,17)" fg:x="146" fg:w="1"/><text x="60.8309%" y="367.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.41%)</title><rect x="60.9959%" y="357" width="0.4149%" height="15" fill="rgb(222,171,42)" fg:x="147" fg:w="1"/><text x="61.2459%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="61.4108%" y="341" width="0.4149%" height="15" fill="rgb(243,84,45)" fg:x="148" fg:w="1"/><text x="61.6608%" y="351.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="61.4108%" y="325" width="0.4149%" height="15" fill="rgb(252,49,23)" fg:x="148" fg:w="1"/><text x="61.6608%" y="335.50"></text></g><g><title>rust-gkat`_mi_heap_realloc_zero (1 samples, 0.41%)</title><rect x="61.4108%" y="309" width="0.4149%" height="15" fill="rgb(215,19,7)" fg:x="148" fg:w="1"/><text x="61.6608%" y="319.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 4.56%)</title><rect x="57.6763%" y="373" width="4.5643%" height="15" fill="rgb(238,81,41)" fg:x="139" fg:w="11"/><text x="57.9263%" y="383.50">rust-..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::new_var (2 samples, 0.83%)</title><rect x="61.4108%" y="357" width="0.8299%" height="15" fill="rgb(210,199,37)" fg:x="148" fg:w="2"/><text x="61.6608%" y="367.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::insert (1 samples, 0.41%)</title><rect x="61.8257%" y="341" width="0.4149%" height="15" fill="rgb(244,192,49)" fg:x="149" fg:w="1"/><text x="62.0757%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 9.13%)</title><rect x="57.6763%" y="389" width="9.1286%" height="15" fill="rgb(226,211,11)" fg:x="139" fg:w="22"/><text x="57.9263%" y="399.50">rust-gkat`&lt;al..</text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (11 samples, 4.56%)</title><rect x="62.2407%" y="373" width="4.5643%" height="15" fill="rgb(236,162,54)" fg:x="150" fg:w="11"/><text x="62.4907%" y="383.50">rust-..</text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="66.8050%" y="389" width="0.4149%" height="15" fill="rgb(220,229,9)" fg:x="161" fg:w="1"/><text x="67.0550%" y="399.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memcpy (1 samples, 0.41%)</title><rect x="67.2199%" y="389" width="0.4149%" height="15" fill="rgb(250,87,22)" fg:x="162" fg:w="1"/><text x="67.4699%" y="399.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="67.6349%" y="389" width="0.4149%" height="15" fill="rgb(239,43,17)" fg:x="163" fg:w="1"/><text x="67.8849%" y="399.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="68.0498%" y="389" width="0.4149%" height="15" fill="rgb(231,177,25)" fg:x="164" fg:w="1"/><text x="68.2998%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="68.4647%" y="373" width="0.4149%" height="15" fill="rgb(219,179,1)" fg:x="165" fg:w="1"/><text x="68.7147%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="68.4647%" y="357" width="0.4149%" height="15" fill="rgb(238,219,53)" fg:x="165" fg:w="1"/><text x="68.7147%" y="367.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="68.4647%" y="341" width="0.4149%" height="15" fill="rgb(232,167,36)" fg:x="165" fg:w="1"/><text x="68.7147%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="68.4647%" y="325" width="0.4149%" height="15" fill="rgb(244,19,51)" fg:x="165" fg:w="1"/><text x="68.7147%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::functions::operands::operands (2 samples, 0.83%)</title><rect x="68.4647%" y="389" width="0.8299%" height="15" fill="rgb(224,6,22)" fg:x="165" fg:w="2"/><text x="68.7147%" y="399.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="68.8797%" y="373" width="0.4149%" height="15" fill="rgb(224,145,5)" fg:x="166" fg:w="1"/><text x="69.1297%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.41%)</title><rect x="69.2946%" y="373" width="0.4149%" height="15" fill="rgb(234,130,49)" fg:x="167" fg:w="1"/><text x="69.5446%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="69.2946%" y="357" width="0.4149%" height="15" fill="rgb(254,6,2)" fg:x="167" fg:w="1"/><text x="69.5446%" y="367.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.41%)</title><rect x="69.2946%" y="341" width="0.4149%" height="15" fill="rgb(208,96,46)" fg:x="167" fg:w="1"/><text x="69.5446%" y="351.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (1 samples, 0.41%)</title><rect x="69.2946%" y="325" width="0.4149%" height="15" fill="rgb(239,3,39)" fg:x="167" fg:w="1"/><text x="69.5446%" y="335.50"></text></g><g><title>rust-gkat`mi_find_page (1 samples, 0.41%)</title><rect x="69.2946%" y="309" width="0.4149%" height="15" fill="rgb(233,210,1)" fg:x="167" fg:w="1"/><text x="69.5446%" y="319.50"></text></g><g><title>rust-gkat`mi_page_fresh_alloc (1 samples, 0.41%)</title><rect x="69.2946%" y="293" width="0.4149%" height="15" fill="rgb(244,137,37)" fg:x="167" fg:w="1"/><text x="69.5446%" y="303.50"></text></g><g><title>rust-gkat`mi_segments_page_alloc (1 samples, 0.41%)</title><rect x="69.2946%" y="277" width="0.4149%" height="15" fill="rgb(240,136,2)" fg:x="167" fg:w="1"/><text x="69.5446%" y="287.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (2 samples, 0.83%)</title><rect x="69.7095%" y="373" width="0.8299%" height="15" fill="rgb(239,18,37)" fg:x="168" fg:w="2"/><text x="69.9595%" y="383.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.41%)</title><rect x="70.5394%" y="341" width="0.4149%" height="15" fill="rgb(218,185,22)" fg:x="170" fg:w="1"/><text x="70.7894%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 1.24%)</title><rect x="70.5394%" y="357" width="1.2448%" height="15" fill="rgb(225,218,4)" fg:x="170" fg:w="3"/><text x="70.7894%" y="367.50"></text></g><g><title>rust-gkat`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.83%)</title><rect x="70.9544%" y="341" width="0.8299%" height="15" fill="rgb(230,182,32)" fg:x="171" fg:w="2"/><text x="71.2044%" y="351.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (2 samples, 0.83%)</title><rect x="71.7842%" y="341" width="0.8299%" height="15" fill="rgb(242,56,43)" fg:x="173" fg:w="2"/><text x="72.0342%" y="351.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::variable::Variable as core::convert::TryFrom&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding&gt;&gt;::try_from (1 samples, 0.41%)</title><rect x="72.1992%" y="325" width="0.4149%" height="15" fill="rgb(233,99,24)" fg:x="174" fg:w="1"/><text x="72.4492%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (3 samples, 1.24%)</title><rect x="71.7842%" y="357" width="1.2448%" height="15" fill="rgb(234,209,42)" fg:x="173" fg:w="3"/><text x="72.0342%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="72.6141%" y="341" width="0.4149%" height="15" fill="rgb(227,7,12)" fg:x="175" fg:w="1"/><text x="72.8641%" y="351.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="72.6141%" y="325" width="0.4149%" height="15" fill="rgb(245,203,43)" fg:x="175" fg:w="1"/><text x="72.8641%" y="335.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (7 samples, 2.90%)</title><rect x="70.5394%" y="373" width="2.9046%" height="15" fill="rgb(238,205,33)" fg:x="170" fg:w="7"/><text x="70.7894%" y="383.50">ru..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="73.0290%" y="357" width="0.4149%" height="15" fill="rgb(231,56,7)" fg:x="176" fg:w="1"/><text x="73.2790%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (11 samples, 4.56%)</title><rect x="69.2946%" y="389" width="4.5643%" height="15" fill="rgb(244,186,29)" fg:x="167" fg:w="11"/><text x="69.5446%" y="399.50">rust-..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="73.4440%" y="373" width="0.4149%" height="15" fill="rgb(234,111,31)" fg:x="177" fg:w="1"/><text x="73.6940%" y="383.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.41%)</title><rect x="74.2739%" y="373" width="0.4149%" height="15" fill="rgb(241,149,10)" fg:x="179" fg:w="1"/><text x="74.5239%" y="383.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::get_pg_var (4 samples, 1.66%)</title><rect x="73.8589%" y="389" width="1.6598%" height="15" fill="rgb(249,206,44)" fg:x="178" fg:w="4"/><text x="74.1089%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.83%)</title><rect x="74.6888%" y="373" width="0.8299%" height="15" fill="rgb(251,153,30)" fg:x="180" fg:w="2"/><text x="74.9388%" y="383.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.83%)</title><rect x="74.6888%" y="357" width="0.8299%" height="15" fill="rgb(239,152,38)" fg:x="180" fg:w="2"/><text x="74.9388%" y="367.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::vector (1 samples, 0.41%)</title><rect x="75.5187%" y="389" width="0.4149%" height="15" fill="rgb(249,139,47)" fg:x="182" fg:w="1"/><text x="75.7687%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.41%)</title><rect x="75.5187%" y="373" width="0.4149%" height="15" fill="rgb(244,64,35)" fg:x="182" fg:w="1"/><text x="75.7687%" y="383.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (2 samples, 0.83%)</title><rect x="75.9336%" y="389" width="0.8299%" height="15" fill="rgb(216,46,15)" fg:x="183" fg:w="2"/><text x="76.1836%" y="399.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::attach_clause (1 samples, 0.41%)</title><rect x="76.3485%" y="373" width="0.4149%" height="15" fill="rgb(250,74,19)" fg:x="184" fg:w="1"/><text x="76.5985%" y="383.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.83%)</title><rect x="76.7635%" y="389" width="0.8299%" height="15" fill="rgb(249,42,33)" fg:x="185" fg:w="2"/><text x="77.0135%" y="399.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (56 samples, 23.24%)</title><rect x="54.7718%" y="405" width="23.2365%" height="15" fill="rgb(242,149,17)" fg:x="132" fg:w="56"/><text x="55.0218%" y="415.50">rust-gkat`logicng::operations::transf..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="77.5934%" y="389" width="0.4149%" height="15" fill="rgb(244,29,21)" fg:x="187" fg:w="1"/><text x="77.8434%" y="399.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (1 samples, 0.41%)</title><rect x="78.0083%" y="405" width="0.4149%" height="15" fill="rgb(220,130,37)" fg:x="188" fg:w="1"/><text x="78.2583%" y="415.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (62 samples, 25.73%)</title><rect x="53.1120%" y="421" width="25.7261%" height="15" fill="rgb(211,67,2)" fg:x="128" fg:w="62"/><text x="53.3620%" y="431.50">rust-gkat`logicng::operations::transforma..</text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="78.4232%" y="405" width="0.4149%" height="15" fill="rgb(235,68,52)" fg:x="189" fg:w="1"/><text x="78.6732%" y="415.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::add_clause (3 samples, 1.24%)</title><rect x="78.8382%" y="421" width="1.2448%" height="15" fill="rgb(246,142,3)" fg:x="190" fg:w="3"/><text x="79.0882%" y="431.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (1 samples, 0.41%)</title><rect x="79.6680%" y="405" width="0.4149%" height="15" fill="rgb(241,25,7)" fg:x="192" fg:w="1"/><text x="79.9180%" y="415.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::attach_clause (1 samples, 0.41%)</title><rect x="80.0830%" y="421" width="0.4149%" height="15" fill="rgb(242,119,39)" fg:x="193" fg:w="1"/><text x="80.3330%" y="431.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (83 samples, 34.44%)</title><rect x="46.4730%" y="437" width="34.4398%" height="15" fill="rgb(241,98,45)" fg:x="112" fg:w="83"/><text x="46.7230%" y="447.50">rust-gkat`logicng::operations::transformations::cnf::pla..</text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="80.4979%" y="421" width="0.4149%" height="15" fill="rgb(254,28,30)" fg:x="194" fg:w="1"/><text x="80.7479%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="80.9129%" y="421" width="0.4149%" height="15" fill="rgb(241,142,54)" fg:x="195" fg:w="1"/><text x="81.1629%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="80.9129%" y="405" width="0.4149%" height="15" fill="rgb(222,85,15)" fg:x="195" fg:w="1"/><text x="81.1629%" y="415.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="80.9129%" y="389" width="0.4149%" height="15" fill="rgb(210,85,47)" fg:x="195" fg:w="1"/><text x="81.1629%" y="399.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="80.9129%" y="373" width="0.4149%" height="15" fill="rgb(224,206,25)" fg:x="195" fg:w="1"/><text x="81.1629%" y="383.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="80.9129%" y="357" width="0.4149%" height="15" fill="rgb(243,201,19)" fg:x="195" fg:w="1"/><text x="81.1629%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="80.9129%" y="341" width="0.4149%" height="15" fill="rgb(236,59,4)" fg:x="195" fg:w="1"/><text x="81.1629%" y="351.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="80.9129%" y="325" width="0.4149%" height="15" fill="rgb(254,179,45)" fg:x="195" fg:w="1"/><text x="81.1629%" y="335.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::negate (1 samples, 0.41%)</title><rect x="80.9129%" y="309" width="0.4149%" height="15" fill="rgb(226,14,10)" fg:x="195" fg:w="1"/><text x="81.1629%" y="319.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="80.9129%" y="293" width="0.4149%" height="15" fill="rgb(244,27,41)" fg:x="195" fg:w="1"/><text x="81.1629%" y="303.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="81.3278%" y="405" width="0.4149%" height="15" fill="rgb(235,35,32)" fg:x="196" fg:w="1"/><text x="81.5778%" y="415.50"></text></g><g><title>rust-gkat`&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (1 samples, 0.41%)</title><rect x="81.3278%" y="389" width="0.4149%" height="15" fill="rgb(218,68,31)" fg:x="196" fg:w="1"/><text x="81.5778%" y="399.50"></text></g><g><title>rust-gkat`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.41%)</title><rect x="81.3278%" y="373" width="0.4149%" height="15" fill="rgb(207,120,37)" fg:x="196" fg:w="1"/><text x="81.5778%" y="383.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::variable::Variable as core::convert::TryFrom&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding&gt;&gt;::try_from (1 samples, 0.41%)</title><rect x="81.7427%" y="389" width="0.4149%" height="15" fill="rgb(227,98,0)" fg:x="197" fg:w="1"/><text x="81.9927%" y="399.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::not_cache::NotCache::lookup (1 samples, 0.41%)</title><rect x="82.1577%" y="389" width="0.4149%" height="15" fill="rgb(207,7,3)" fg:x="198" fg:w="1"/><text x="82.4077%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::map::make_hash (1 samples, 0.41%)</title><rect x="82.1577%" y="373" width="0.4149%" height="15" fill="rgb(206,98,19)" fg:x="198" fg:w="1"/><text x="82.4077%" y="383.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (4 samples, 1.66%)</title><rect x="81.3278%" y="421" width="1.6598%" height="15" fill="rgb(217,5,26)" fg:x="196" fg:w="4"/><text x="81.5778%" y="431.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (3 samples, 1.24%)</title><rect x="81.7427%" y="405" width="1.2448%" height="15" fill="rgb(235,190,38)" fg:x="197" fg:w="3"/><text x="81.9927%" y="415.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::flatten_ops (1 samples, 0.41%)</title><rect x="82.5726%" y="389" width="0.4149%" height="15" fill="rgb(247,86,24)" fg:x="199" fg:w="1"/><text x="82.8226%" y="399.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="82.5726%" y="373" width="0.4149%" height="15" fill="rgb(205,101,16)" fg:x="199" fg:w="1"/><text x="82.8226%" y="383.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="82.5726%" y="357" width="0.4149%" height="15" fill="rgb(246,168,33)" fg:x="199" fg:w="1"/><text x="82.8226%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.41%)</title><rect x="82.5726%" y="341" width="0.4149%" height="15" fill="rgb(231,114,1)" fg:x="199" fg:w="1"/><text x="82.8226%" y="351.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (99 samples, 41.08%)</title><rect x="42.3237%" y="469" width="41.0788%" height="15" fill="rgb(207,184,53)" fg:x="102" fg:w="99"/><text x="42.5737%" y="479.50">rust-gkat`logicng::solver::minisat_solver::MiniSat::add</text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (91 samples, 37.76%)</title><rect x="45.6432%" y="453" width="37.7593%" height="15" fill="rgb(224,95,51)" fg:x="110" fg:w="91"/><text x="45.8932%" y="463.50">rust-gkat`logicng::operations::transformations::cnf::plaisted..</text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (6 samples, 2.49%)</title><rect x="80.9129%" y="437" width="2.4896%" height="15" fill="rgb(212,188,45)" fg:x="195" fg:w="6"/><text x="81.1629%" y="447.50">ru..</text></g><g><title>rust-gkat`logicng::formulas::operation_cache::OperationCache&lt;V&gt;::insert (1 samples, 0.41%)</title><rect x="82.9876%" y="421" width="0.4149%" height="15" fill="rgb(223,154,38)" fg:x="200" fg:w="1"/><text x="83.2376%" y="431.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;logicng::solver::sat::minisat2_datastructures::MsWatcher&gt;]&gt; (5 samples, 2.07%)</title><rect x="83.8174%" y="437" width="2.0747%" height="15" fill="rgb(251,22,52)" fg:x="202" fg:w="5"/><text x="84.0674%" y="447.50">r..</text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.83%)</title><rect x="85.8921%" y="437" width="0.8299%" height="15" fill="rgb(229,209,22)" fg:x="207" fg:w="2"/><text x="86.1421%" y="447.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::reset (9 samples, 3.73%)</title><rect x="83.4025%" y="469" width="3.7344%" height="15" fill="rgb(234,138,34)" fg:x="201" fg:w="9"/><text x="83.6525%" y="479.50">rust..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::reset (9 samples, 3.73%)</title><rect x="83.4025%" y="453" width="3.7344%" height="15" fill="rgb(212,95,11)" fg:x="201" fg:w="9"/><text x="83.6525%" y="463.50">rust..</text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (1 samples, 0.41%)</title><rect x="86.7220%" y="437" width="0.4149%" height="15" fill="rgb(240,179,47)" fg:x="209" fg:w="1"/><text x="86.9720%" y="447.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::percolate_down (1 samples, 0.41%)</title><rect x="87.1369%" y="421" width="0.4149%" height="15" fill="rgb(240,163,11)" fg:x="210" fg:w="1"/><text x="87.3869%" y="431.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::analyze (2 samples, 0.83%)</title><rect x="87.5519%" y="421" width="0.8299%" height="15" fill="rgb(236,37,12)" fg:x="211" fg:w="2"/><text x="87.8019%" y="431.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::attach_clause (1 samples, 0.41%)</title><rect x="88.3817%" y="421" width="0.4149%" height="15" fill="rgb(232,164,16)" fg:x="213" fg:w="1"/><text x="88.6317%" y="431.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::cancel_until (3 samples, 1.24%)</title><rect x="88.7967%" y="421" width="1.2448%" height="15" fill="rgb(244,205,15)" fg:x="214" fg:w="3"/><text x="89.0467%" y="431.50"></text></g><g><title>rust-gkat`logicng::collections::lng_heap::LngHeap::insert (2 samples, 0.83%)</title><rect x="89.2116%" y="405" width="0.8299%" height="15" fill="rgb(223,117,47)" fg:x="215" fg:w="2"/><text x="89.4616%" y="415.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (17 samples, 7.05%)</title><rect x="87.1369%" y="469" width="7.0539%" height="15" fill="rgb(244,107,35)" fg:x="210" fg:w="17"/><text x="87.3869%" y="479.50">rust-gkat..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (17 samples, 7.05%)</title><rect x="87.1369%" y="453" width="7.0539%" height="15" fill="rgb(205,140,8)" fg:x="210" fg:w="17"/><text x="87.3869%" y="463.50">rust-gkat..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (17 samples, 7.05%)</title><rect x="87.1369%" y="437" width="7.0539%" height="15" fill="rgb(228,84,46)" fg:x="210" fg:w="17"/><text x="87.3869%" y="447.50">rust-gkat..</text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::propagate (10 samples, 4.15%)</title><rect x="90.0415%" y="421" width="4.1494%" height="15" fill="rgb(254,188,9)" fg:x="217" fg:w="10"/><text x="90.2915%" y="431.50">rust-..</text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (3 samples, 1.24%)</title><rect x="94.1909%" y="453" width="1.2448%" height="15" fill="rgb(206,112,54)" fg:x="227" fg:w="3"/><text x="94.4409%" y="463.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (3 samples, 1.24%)</title><rect x="94.1909%" y="437" width="1.2448%" height="15" fill="rgb(216,84,49)" fg:x="227" fg:w="3"/><text x="94.4409%" y="447.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.83%)</title><rect x="94.6058%" y="421" width="0.8299%" height="15" fill="rgb(214,194,35)" fg:x="228" fg:w="2"/><text x="94.8558%" y="431.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.41%)</title><rect x="95.0207%" y="405" width="0.4149%" height="15" fill="rgb(249,28,3)" fg:x="229" fg:w="1"/><text x="95.2707%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::equiv_iter (152 samples, 63.07%)</title><rect x="32.7801%" y="485" width="63.0705%" height="15" fill="rgb(222,56,52)" fg:x="79" fg:w="152"/><text x="33.0301%" y="495.50">rust-gkat`rust_gkat::kernel2::equiv_iter::_&lt;impl rust_gkat::kernel2::solver::Solver&lt;B&gt;&gt;::equiv_iter</text></g><g><title>rust-gkat`rust_gkat::kernel2::solver::Solver&lt;B&gt;::reject (4 samples, 1.66%)</title><rect x="94.1909%" y="469" width="1.6598%" height="15" fill="rgb(245,217,50)" fg:x="227" fg:w="4"/><text x="94.4409%" y="479.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::negate (1 samples, 0.41%)</title><rect x="95.4357%" y="453" width="0.4149%" height="15" fill="rgb(213,201,24)" fg:x="230" fg:w="1"/><text x="95.6857%" y="463.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="95.4357%" y="437" width="0.4149%" height="15" fill="rgb(248,116,28)" fg:x="230" fg:w="1"/><text x="95.6857%" y="447.50"></text></g><g><title>rust-gkat`lalrpop_util::lexer::MatcherBuilder::new (1 samples, 0.41%)</title><rect x="95.8506%" y="469" width="0.4149%" height="15" fill="rgb(219,72,43)" fg:x="231" fg:w="1"/><text x="96.1006%" y="479.50"></text></g><g><title>rust-gkat`regex_automata::hybrid::dfa::Builder::build_many (1 samples, 0.41%)</title><rect x="95.8506%" y="453" width="0.4149%" height="15" fill="rgb(209,138,14)" fg:x="231" fg:w="1"/><text x="96.1006%" y="463.50"></text></g><g><title>rust-gkat`regex_automata::nfa::thompson::compiler::Compiler::build_many (1 samples, 0.41%)</title><rect x="95.8506%" y="437" width="0.4149%" height="15" fill="rgb(222,18,33)" fg:x="231" fg:w="1"/><text x="96.1006%" y="447.50"></text></g><g><title>rust-gkat`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="95.8506%" y="421" width="0.4149%" height="15" fill="rgb(213,199,7)" fg:x="231" fg:w="1"/><text x="96.1006%" y="431.50"></text></g><g><title>rust-gkat`regex_automata::nfa::thompson::compiler::Compiler::c_at_least (1 samples, 0.41%)</title><rect x="95.8506%" y="405" width="0.4149%" height="15" fill="rgb(250,110,10)" fg:x="231" fg:w="1"/><text x="96.1006%" y="415.50"></text></g><g><title>rust-gkat`regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.41%)</title><rect x="95.8506%" y="389" width="0.4149%" height="15" fill="rgb(248,123,6)" fg:x="231" fg:w="1"/><text x="96.1006%" y="399.50"></text></g><g><title>rust-gkat`regex_automata::nfa::thompson::compiler::Utf8Compiler::new (1 samples, 0.41%)</title><rect x="95.8506%" y="373" width="0.4149%" height="15" fill="rgb(206,91,31)" fg:x="231" fg:w="1"/><text x="96.1006%" y="383.50"></text></g><g><title>rust-gkat`regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (1 samples, 0.41%)</title><rect x="95.8506%" y="357" width="0.4149%" height="15" fill="rgb(211,154,13)" fg:x="231" fg:w="1"/><text x="96.1006%" y="367.50"></text></g><g><title>rust-gkat`&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.41%)</title><rect x="95.8506%" y="341" width="0.4149%" height="15" fill="rgb(225,148,7)" fg:x="231" fg:w="1"/><text x="96.1006%" y="351.50"></text></g><g><title>rust-gkat`alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.41%)</title><rect x="95.8506%" y="325" width="0.4149%" height="15" fill="rgb(220,160,43)" fg:x="231" fg:w="1"/><text x="96.1006%" y="335.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.41%)</title><rect x="96.2656%" y="453" width="0.4149%" height="15" fill="rgb(213,52,39)" fg:x="232" fg:w="1"/><text x="96.5156%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (3 samples, 1.24%)</title><rect x="95.8506%" y="485" width="1.2448%" height="15" fill="rgb(243,137,7)" fg:x="231" fg:w="3"/><text x="96.1006%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::InputParser::parse (2 samples, 0.83%)</title><rect x="96.2656%" y="469" width="0.8299%" height="15" fill="rgb(230,79,13)" fg:x="232" fg:w="2"/><text x="96.5156%" y="479.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (1 samples, 0.41%)</title><rect x="96.6805%" y="453" width="0.4149%" height="15" fill="rgb(247,105,23)" fg:x="233" fg:w="1"/><text x="96.9305%" y="463.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.41%)</title><rect x="97.0954%" y="309" width="0.4149%" height="15" fill="rgb(223,179,41)" fg:x="234" fg:w="1"/><text x="97.3454%" y="319.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.41%)</title><rect x="97.0954%" y="293" width="0.4149%" height="15" fill="rgb(218,9,34)" fg:x="234" fg:w="1"/><text x="97.3454%" y="303.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="97.5104%" y="277" width="0.4149%" height="15" fill="rgb(222,106,8)" fg:x="235" fg:w="1"/><text x="97.7604%" y="287.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="97.5104%" y="261" width="0.4149%" height="15" fill="rgb(211,220,0)" fg:x="235" fg:w="1"/><text x="97.7604%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.5104%" y="245" width="0.4149%" height="15" fill="rgb(229,52,16)" fg:x="235" fg:w="1"/><text x="97.7604%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.5104%" y="229" width="0.4149%" height="15" fill="rgb(212,155,18)" fg:x="235" fg:w="1"/><text x="97.7604%" y="239.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.5104%" y="213" width="0.4149%" height="15" fill="rgb(242,21,14)" fg:x="235" fg:w="1"/><text x="97.7604%" y="223.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.5104%" y="197" width="0.4149%" height="15" fill="rgb(222,19,48)" fg:x="235" fg:w="1"/><text x="97.7604%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::compute_transformation (1 samples, 0.41%)</title><rect x="97.5104%" y="181" width="0.4149%" height="15" fill="rgb(232,45,27)" fg:x="235" fg:w="1"/><text x="97.7604%" y="191.50"></text></g><g><title>rust-gkat`logicng::formulas::formula::EncodedFormula::unpack (1 samples, 0.41%)</title><rect x="97.5104%" y="165" width="0.4149%" height="15" fill="rgb(249,103,42)" fg:x="235" fg:w="1"/><text x="97.7604%" y="175.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::sat (1 samples, 0.41%)</title><rect x="97.9253%" y="277" width="0.4149%" height="15" fill="rgb(246,81,33)" fg:x="236" fg:w="1"/><text x="98.1753%" y="287.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::solve (1 samples, 0.41%)</title><rect x="97.9253%" y="261" width="0.4149%" height="15" fill="rgb(252,33,42)" fg:x="236" fg:w="1"/><text x="98.1753%" y="271.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::search (1 samples, 0.41%)</title><rect x="97.9253%" y="245" width="0.4149%" height="15" fill="rgb(209,212,41)" fg:x="236" fg:w="1"/><text x="98.1753%" y="255.50"></text></g><g><title>rust-gkat`logicng::solver::sat::minisat2::MiniSat2Solver::unchecked_enqueue (1 samples, 0.41%)</title><rect x="97.9253%" y="229" width="0.4149%" height="15" fill="rgb(207,154,6)" fg:x="236" fg:w="1"/><text x="98.1753%" y="239.50"></text></g><g><title>rust-gkat`logicng::solver::minisat_solver::MiniSat::add (1 samples, 0.41%)</title><rect x="98.3402%" y="261" width="0.4149%" height="15" fill="rgb(223,64,47)" fg:x="237" fg:w="1"/><text x="98.5902%" y="271.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::cnf::plaisted_greenbaum_on_solver::add_cnf_to_solver (1 samples, 0.41%)</title><rect x="98.3402%" y="245" width="0.4149%" height="15" fill="rgb(211,161,38)" fg:x="237" fg:w="1"/><text x="98.5902%" y="255.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="98.3402%" y="229" width="0.4149%" height="15" fill="rgb(219,138,40)" fg:x="237" fg:w="1"/><text x="98.5902%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="98.3402%" y="213" width="0.4149%" height="15" fill="rgb(241,228,46)" fg:x="237" fg:w="1"/><text x="98.5902%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.41%)</title><rect x="98.3402%" y="197" width="0.4149%" height="15" fill="rgb(223,209,38)" fg:x="237" fg:w="1"/><text x="98.5902%" y="207.50"></text></g><g><title>rust-gkat`logicng::operations::transformations::nnf::nnf_rec (1 samples, 0.41%)</title><rect x="98.3402%" y="181" width="0.4149%" height="15" fill="rgb(236,164,45)" fg:x="237" fg:w="1"/><text x="98.5902%" y="191.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::and (1 samples, 0.41%)</title><rect x="98.3402%" y="165" width="0.4149%" height="15" fill="rgb(231,15,5)" fg:x="237" fg:w="1"/><text x="98.5902%" y="175.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_cache::nary_formula_cache::NaryFormulaCache::get_or_insert (1 samples, 0.41%)</title><rect x="98.3402%" y="149" width="0.4149%" height="15" fill="rgb(252,35,15)" fg:x="237" fg:w="1"/><text x="98.5902%" y="159.50"></text></g><g><title>rust-gkat`&lt;logicng::formulas::formula_cache::formula_encoding::FormulaEncoding as logicng::formulas::formula_cache::formula_encoding::Encoding&gt;::encode (1 samples, 0.41%)</title><rect x="98.3402%" y="133" width="0.4149%" height="15" fill="rgb(248,181,18)" fg:x="237" fg:w="1"/><text x="98.5902%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7552%" y="261" width="0.4149%" height="15" fill="rgb(233,39,42)" fg:x="238" fg:w="1"/><text x="99.0052%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7552%" y="245" width="0.4149%" height="15" fill="rgb(238,110,33)" fg:x="238" fg:w="1"/><text x="99.0052%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7552%" y="229" width="0.4149%" height="15" fill="rgb(233,195,10)" fg:x="238" fg:w="1"/><text x="99.0052%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7552%" y="213" width="0.4149%" height="15" fill="rgb(254,105,3)" fg:x="238" fg:w="1"/><text x="99.0052%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="98.7552%" y="197" width="0.4149%" height="15" fill="rgb(221,225,9)" fg:x="238" fg:w="1"/><text x="99.0052%" y="207.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::or (1 samples, 0.41%)</title><rect x="98.7552%" y="181" width="0.4149%" height="15" fill="rgb(224,227,45)" fg:x="238" fg:w="1"/><text x="99.0052%" y="191.50"></text></g><g><title>rust-gkat`logicng::formulas::formula_factory::FormulaFactory::filter (1 samples, 0.41%)</title><rect x="98.7552%" y="165" width="0.4149%" height="15" fill="rgb(229,198,43)" fg:x="238" fg:w="1"/><text x="99.0052%" y="175.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.41%)</title><rect x="98.7552%" y="149" width="0.4149%" height="15" fill="rgb(206,209,35)" fg:x="238" fg:w="1"/><text x="99.0052%" y="159.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (1 samples, 0.41%)</title><rect x="98.7552%" y="133" width="0.4149%" height="15" fill="rgb(245,195,53)" fg:x="238" fg:w="1"/><text x="99.0052%" y="143.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (1 samples, 0.41%)</title><rect x="98.7552%" y="117" width="0.4149%" height="15" fill="rgb(240,92,26)" fg:x="238" fg:w="1"/><text x="99.0052%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.41%)</title><rect x="99.1701%" y="245" width="0.4149%" height="15" fill="rgb(207,40,23)" fg:x="239" fg:w="1"/><text x="99.4201%" y="255.50"></text></g><g><title>all (241 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(223,111,35)" fg:x="0" fg:w="241"/><text x="0.2500%" y="607.50"></text></g><g><title>dyld`start (241 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(229,147,28)" fg:x="0" fg:w="241"/><text x="0.2500%" y="591.50">dyld`start</text></g><g><title>rust-gkat`main (240 samples, 99.59%)</title><rect x="0.4149%" y="565" width="99.5851%" height="15" fill="rgb(211,29,28)" fg:x="1" fg:w="240"/><text x="0.6649%" y="575.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (240 samples, 99.59%)</title><rect x="0.4149%" y="549" width="99.5851%" height="15" fill="rgb(228,72,33)" fg:x="1" fg:w="240"/><text x="0.6649%" y="559.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (240 samples, 99.59%)</title><rect x="0.4149%" y="533" width="99.5851%" height="15" fill="rgb(205,214,31)" fg:x="1" fg:w="240"/><text x="0.6649%" y="543.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (240 samples, 99.59%)</title><rect x="0.4149%" y="517" width="99.5851%" height="15" fill="rgb(224,111,15)" fg:x="1" fg:w="240"/><text x="0.6649%" y="527.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (240 samples, 99.59%)</title><rect x="0.4149%" y="501" width="99.5851%" height="15" fill="rgb(253,21,26)" fg:x="1" fg:w="240"/><text x="0.6649%" y="511.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="485" width="2.9046%" height="15" fill="rgb(245,139,43)" fg:x="234" fg:w="7"/><text x="97.3454%" y="495.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="469" width="2.9046%" height="15" fill="rgb(252,170,7)" fg:x="234" fg:w="7"/><text x="97.3454%" y="479.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="453" width="2.9046%" height="15" fill="rgb(231,118,14)" fg:x="234" fg:w="7"/><text x="97.3454%" y="463.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="437" width="2.9046%" height="15" fill="rgb(238,83,0)" fg:x="234" fg:w="7"/><text x="97.3454%" y="447.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="421" width="2.9046%" height="15" fill="rgb(221,39,39)" fg:x="234" fg:w="7"/><text x="97.3454%" y="431.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="405" width="2.9046%" height="15" fill="rgb(222,119,46)" fg:x="234" fg:w="7"/><text x="97.3454%" y="415.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="389" width="2.9046%" height="15" fill="rgb(222,165,49)" fg:x="234" fg:w="7"/><text x="97.3454%" y="399.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="373" width="2.9046%" height="15" fill="rgb(219,113,52)" fg:x="234" fg:w="7"/><text x="97.3454%" y="383.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="357" width="2.9046%" height="15" fill="rgb(214,7,15)" fg:x="234" fg:w="7"/><text x="97.3454%" y="367.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="341" width="2.9046%" height="15" fill="rgb(235,32,4)" fg:x="234" fg:w="7"/><text x="97.3454%" y="351.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (7 samples, 2.90%)</title><rect x="97.0954%" y="325" width="2.9046%" height="15" fill="rgb(238,90,54)" fg:x="234" fg:w="7"/><text x="97.3454%" y="335.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (6 samples, 2.49%)</title><rect x="97.5104%" y="309" width="2.4896%" height="15" fill="rgb(213,208,19)" fg:x="235" fg:w="6"/><text x="97.7604%" y="319.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (6 samples, 2.49%)</title><rect x="97.5104%" y="293" width="2.4896%" height="15" fill="rgb(233,156,4)" fg:x="235" fg:w="6"/><text x="97.7604%" y="303.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (4 samples, 1.66%)</title><rect x="98.3402%" y="277" width="1.6598%" height="15" fill="rgb(207,194,5)" fg:x="237" fg:w="4"/><text x="98.5902%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_exp (2 samples, 0.83%)</title><rect x="99.1701%" y="261" width="0.8299%" height="15" fill="rgb(206,111,30)" fg:x="239" fg:w="2"/><text x="99.4201%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5851%" y="245" width="0.4149%" height="15" fill="rgb(243,70,54)" fg:x="240" fg:w="1"/><text x="99.8351%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5851%" y="229" width="0.4149%" height="15" fill="rgb(242,28,8)" fg:x="240" fg:w="1"/><text x="99.8351%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.41%)</title><rect x="99.5851%" y="213" width="0.4149%" height="15" fill="rgb(219,106,18)" fg:x="240" fg:w="1"/><text x="99.8351%" y="223.50"></text></g><g><title>rust-gkat`mi_free (1 samples, 0.41%)</title><rect x="99.5851%" y="197" width="0.4149%" height="15" fill="rgb(244,222,10)" fg:x="240" fg:w="1"/><text x="99.8351%" y="207.50"></text></g></svg></svg>