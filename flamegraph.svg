<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="12401"><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (2 samples, 0.02%)</title><rect x="0.0081%" y="389" width="0.0161%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2581%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="0.0081%" y="373" width="0.0161%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2581%" y="383.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (4 samples, 0.03%)</title><rect x="0.0403%" y="373" width="0.0323%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="4"/><text x="0.2903%" y="383.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="0.0403%" y="357" width="0.0323%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="4"/><text x="0.2903%" y="367.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="0.0403%" y="341" width="0.0323%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="4"/><text x="0.2903%" y="351.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="0.0403%" y="325" width="0.0323%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="4"/><text x="0.2903%" y="335.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="0.0484%" y="309" width="0.0242%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="3"/><text x="0.2984%" y="319.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (2 samples, 0.02%)</title><rect x="0.0968%" y="357" width="0.0161%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="2"/><text x="0.3468%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="0.0968%" y="341" width="0.0161%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="2"/><text x="0.3468%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="0.0968%" y="325" width="0.0161%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="2"/><text x="0.3468%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.0968%" y="309" width="0.0161%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="2"/><text x="0.3468%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.0968%" y="293" width="0.0161%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="2"/><text x="0.3468%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.0968%" y="277" width="0.0161%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="2"/><text x="0.3468%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.0968%" y="261" width="0.0161%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="2"/><text x="0.3468%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.02%)</title><rect x="0.1210%" y="341" width="0.0161%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="2"/><text x="0.3710%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="0.1210%" y="325" width="0.0161%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="2"/><text x="0.3710%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="0.1371%" y="341" width="0.0161%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="2"/><text x="0.3871%" y="351.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="0.1371%" y="325" width="0.0161%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="2"/><text x="0.3871%" y="335.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.1371%" y="309" width="0.0161%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="2"/><text x="0.3871%" y="319.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="0.1371%" y="293" width="0.0161%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="2"/><text x="0.3871%" y="303.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (4 samples, 0.03%)</title><rect x="0.1532%" y="341" width="0.0323%" height="15" fill="rgb(249,33,26)" fg:x="19" fg:w="4"/><text x="0.4032%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="0.1532%" y="325" width="0.0323%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="4"/><text x="0.4032%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="0.1532%" y="309" width="0.0323%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="4"/><text x="0.4032%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="0.1532%" y="293" width="0.0323%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="4"/><text x="0.4032%" y="303.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="0.1532%" y="277" width="0.0323%" height="15" fill="rgb(241,131,45)" fg:x="19" fg:w="4"/><text x="0.4032%" y="287.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.02%)</title><rect x="0.1855%" y="341" width="0.0161%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="2"/><text x="0.4355%" y="351.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="0.2177%" y="309" width="0.0242%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="3"/><text x="0.4677%" y="319.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.05%)</title><rect x="0.2016%" y="325" width="0.0484%" height="15" fill="rgb(238,160,17)" fg:x="25" fg:w="6"/><text x="0.4516%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.06%)</title><rect x="0.2500%" y="325" width="0.0564%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="7"/><text x="0.5000%" y="335.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.06%)</title><rect x="0.2500%" y="309" width="0.0564%" height="15" fill="rgb(232,36,49)" fg:x="31" fg:w="7"/><text x="0.5000%" y="319.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.06%)</title><rect x="0.2500%" y="293" width="0.0564%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="7"/><text x="0.5000%" y="303.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="0.2661%" y="277" width="0.0403%" height="15" fill="rgb(229,88,8)" fg:x="33" fg:w="5"/><text x="0.5161%" y="287.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (2 samples, 0.02%)</title><rect x="0.3226%" y="325" width="0.0161%" height="15" fill="rgb(213,181,19)" fg:x="40" fg:w="2"/><text x="0.5726%" y="335.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="0.3226%" y="309" width="0.0161%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="2"/><text x="0.5726%" y="319.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.10%)</title><rect x="0.3387%" y="309" width="0.0968%" height="15" fill="rgb(241,83,37)" fg:x="42" fg:w="12"/><text x="0.5887%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.06%)</title><rect x="0.3790%" y="293" width="0.0564%" height="15" fill="rgb(233,36,39)" fg:x="47" fg:w="7"/><text x="0.6290%" y="303.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="0.4354%" y="261" width="0.0161%" height="15" fill="rgb(226,3,54)" fg:x="54" fg:w="2"/><text x="0.6854%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="0.4354%" y="309" width="0.0242%" height="15" fill="rgb(245,192,40)" fg:x="54" fg:w="3"/><text x="0.6854%" y="319.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="0.4354%" y="293" width="0.0242%" height="15" fill="rgb(238,167,29)" fg:x="54" fg:w="3"/><text x="0.6854%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.4354%" y="277" width="0.0242%" height="15" fill="rgb(232,182,51)" fg:x="54" fg:w="3"/><text x="0.6854%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="213" width="0.0161%" height="15" fill="rgb(231,60,39)" fg:x="57" fg:w="2"/><text x="0.7096%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="197" width="0.0161%" height="15" fill="rgb(208,69,12)" fg:x="57" fg:w="2"/><text x="0.7096%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="181" width="0.0161%" height="15" fill="rgb(235,93,37)" fg:x="57" fg:w="2"/><text x="0.7096%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="165" width="0.0161%" height="15" fill="rgb(213,116,39)" fg:x="57" fg:w="2"/><text x="0.7096%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="149" width="0.0161%" height="15" fill="rgb(222,207,29)" fg:x="57" fg:w="2"/><text x="0.7096%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="133" width="0.0161%" height="15" fill="rgb(206,96,30)" fg:x="57" fg:w="2"/><text x="0.7096%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="117" width="0.0161%" height="15" fill="rgb(218,138,4)" fg:x="57" fg:w="2"/><text x="0.7096%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.4596%" y="101" width="0.0161%" height="15" fill="rgb(250,191,14)" fg:x="57" fg:w="2"/><text x="0.7096%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.4596%" y="245" width="0.0242%" height="15" fill="rgb(239,60,40)" fg:x="57" fg:w="3"/><text x="0.7096%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.4596%" y="229" width="0.0242%" height="15" fill="rgb(206,27,48)" fg:x="57" fg:w="3"/><text x="0.7096%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.06%)</title><rect x="0.4596%" y="309" width="0.0645%" height="15" fill="rgb(225,35,8)" fg:x="57" fg:w="8"/><text x="0.7096%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.06%)</title><rect x="0.4596%" y="293" width="0.0645%" height="15" fill="rgb(250,213,24)" fg:x="57" fg:w="8"/><text x="0.7096%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.06%)</title><rect x="0.4596%" y="277" width="0.0645%" height="15" fill="rgb(247,123,22)" fg:x="57" fg:w="8"/><text x="0.7096%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="0.4596%" y="261" width="0.0645%" height="15" fill="rgb(231,138,38)" fg:x="57" fg:w="8"/><text x="0.7096%" y="271.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="0.4838%" y="245" width="0.0403%" height="15" fill="rgb(231,145,46)" fg:x="60" fg:w="5"/><text x="0.7338%" y="255.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (2 samples, 0.02%)</title><rect x="0.5242%" y="309" width="0.0161%" height="15" fill="rgb(251,118,11)" fg:x="65" fg:w="2"/><text x="0.7742%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="0.5242%" y="293" width="0.0161%" height="15" fill="rgb(217,147,25)" fg:x="65" fg:w="2"/><text x="0.7742%" y="303.50"></text></g><g><title>rust-gkat`mi_free (3 samples, 0.02%)</title><rect x="0.5483%" y="309" width="0.0242%" height="15" fill="rgb(247,81,37)" fg:x="68" fg:w="3"/><text x="0.7983%" y="319.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (9 samples, 0.07%)</title><rect x="0.6854%" y="277" width="0.0726%" height="15" fill="rgb(209,12,38)" fg:x="85" fg:w="9"/><text x="0.9354%" y="287.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (20 samples, 0.16%)</title><rect x="0.6129%" y="293" width="0.1613%" height="15" fill="rgb(227,1,9)" fg:x="76" fg:w="20"/><text x="0.8629%" y="303.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="0.7580%" y="277" width="0.0161%" height="15" fill="rgb(248,47,43)" fg:x="94" fg:w="2"/><text x="1.0080%" y="287.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="0.7983%" y="245" width="0.0484%" height="15" fill="rgb(221,10,30)" fg:x="99" fg:w="6"/><text x="1.0483%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.09%)</title><rect x="0.7741%" y="293" width="0.0887%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="11"/><text x="1.0241%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (10 samples, 0.08%)</title><rect x="0.7822%" y="277" width="0.0806%" height="15" fill="rgb(222,148,37)" fg:x="97" fg:w="10"/><text x="1.0322%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.08%)</title><rect x="0.7822%" y="261" width="0.0806%" height="15" fill="rgb(234,67,33)" fg:x="97" fg:w="10"/><text x="1.0322%" y="271.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="0.8467%" y="245" width="0.0161%" height="15" fill="rgb(247,98,35)" fg:x="105" fg:w="2"/><text x="1.0967%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.8628%" y="229" width="0.0242%" height="15" fill="rgb(247,138,52)" fg:x="107" fg:w="3"/><text x="1.1128%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.05%)</title><rect x="0.8628%" y="277" width="0.0484%" height="15" fill="rgb(213,79,30)" fg:x="107" fg:w="6"/><text x="1.1128%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="0.8628%" y="261" width="0.0484%" height="15" fill="rgb(246,177,23)" fg:x="107" fg:w="6"/><text x="1.1128%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="0.8628%" y="245" width="0.0484%" height="15" fill="rgb(230,62,27)" fg:x="107" fg:w="6"/><text x="1.1128%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.07%)</title><rect x="0.8628%" y="293" width="0.0726%" height="15" fill="rgb(216,154,8)" fg:x="107" fg:w="9"/><text x="1.1128%" y="303.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="0.9112%" y="277" width="0.0242%" height="15" fill="rgb(244,35,45)" fg:x="113" fg:w="3"/><text x="1.1612%" y="287.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.9112%" y="261" width="0.0242%" height="15" fill="rgb(251,115,12)" fg:x="113" fg:w="3"/><text x="1.1612%" y="271.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="0.9354%" y="293" width="0.0161%" height="15" fill="rgb(240,54,50)" fg:x="116" fg:w="2"/><text x="1.1854%" y="303.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="0.9596%" y="213" width="0.0161%" height="15" fill="rgb(233,84,52)" fg:x="119" fg:w="2"/><text x="1.2096%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="0.9596%" y="229" width="0.0242%" height="15" fill="rgb(207,117,47)" fg:x="119" fg:w="3"/><text x="1.2096%" y="239.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (8 samples, 0.06%)</title><rect x="0.9515%" y="293" width="0.0645%" height="15" fill="rgb(249,43,39)" fg:x="118" fg:w="8"/><text x="1.2015%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.06%)</title><rect x="0.9515%" y="277" width="0.0645%" height="15" fill="rgb(209,38,44)" fg:x="118" fg:w="8"/><text x="1.2015%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.06%)</title><rect x="0.9515%" y="261" width="0.0645%" height="15" fill="rgb(236,212,23)" fg:x="118" fg:w="8"/><text x="1.2015%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="0.9515%" y="245" width="0.0645%" height="15" fill="rgb(242,79,21)" fg:x="118" fg:w="8"/><text x="1.2015%" y="255.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="0.9838%" y="229" width="0.0323%" height="15" fill="rgb(211,96,35)" fg:x="122" fg:w="4"/><text x="1.2338%" y="239.50"></text></g><g><title>rust-gkat`mi_free (4 samples, 0.03%)</title><rect x="1.0241%" y="293" width="0.0323%" height="15" fill="rgb(253,215,40)" fg:x="127" fg:w="4"/><text x="1.2741%" y="303.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (10 samples, 0.08%)</title><rect x="1.1531%" y="261" width="0.0806%" height="15" fill="rgb(211,81,21)" fg:x="143" fg:w="10"/><text x="1.4031%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="1.2338%" y="245" width="0.0161%" height="15" fill="rgb(208,190,38)" fg:x="153" fg:w="2"/><text x="1.4838%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (19 samples, 0.15%)</title><rect x="1.1047%" y="277" width="0.1532%" height="15" fill="rgb(235,213,38)" fg:x="137" fg:w="19"/><text x="1.3547%" y="287.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="1.2338%" y="261" width="0.0242%" height="15" fill="rgb(237,122,38)" fg:x="153" fg:w="3"/><text x="1.4838%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.2741%" y="197" width="0.0161%" height="15" fill="rgb(244,218,35)" fg:x="158" fg:w="2"/><text x="1.5241%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.2741%" y="181" width="0.0161%" height="15" fill="rgb(240,68,47)" fg:x="158" fg:w="2"/><text x="1.5241%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.2741%" y="165" width="0.0161%" height="15" fill="rgb(210,16,53)" fg:x="158" fg:w="2"/><text x="1.5241%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.2741%" y="149" width="0.0161%" height="15" fill="rgb(235,124,12)" fg:x="158" fg:w="2"/><text x="1.5241%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="1.2741%" y="229" width="0.0323%" height="15" fill="rgb(224,169,11)" fg:x="158" fg:w="4"/><text x="1.5241%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="1.2741%" y="213" width="0.0323%" height="15" fill="rgb(250,166,2)" fg:x="158" fg:w="4"/><text x="1.5241%" y="223.50"></text></g><g><title>rust-gkat`cuddReclaim (7 samples, 0.06%)</title><rect x="1.3144%" y="229" width="0.0564%" height="15" fill="rgb(242,216,29)" fg:x="163" fg:w="7"/><text x="1.5644%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 0.15%)</title><rect x="1.2580%" y="277" width="0.1451%" height="15" fill="rgb(230,116,27)" fg:x="156" fg:w="18"/><text x="1.5080%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (16 samples, 0.13%)</title><rect x="1.2741%" y="261" width="0.1290%" height="15" fill="rgb(228,99,48)" fg:x="158" fg:w="16"/><text x="1.5241%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.13%)</title><rect x="1.2741%" y="245" width="0.1290%" height="15" fill="rgb(253,11,6)" fg:x="158" fg:w="16"/><text x="1.5241%" y="255.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="1.3709%" y="229" width="0.0323%" height="15" fill="rgb(247,143,39)" fg:x="170" fg:w="4"/><text x="1.6209%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.4031%" y="213" width="0.0161%" height="15" fill="rgb(236,97,10)" fg:x="174" fg:w="2"/><text x="1.6531%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.05%)</title><rect x="1.4031%" y="261" width="0.0484%" height="15" fill="rgb(233,208,19)" fg:x="174" fg:w="6"/><text x="1.6531%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="1.4031%" y="245" width="0.0484%" height="15" fill="rgb(216,164,2)" fg:x="174" fg:w="6"/><text x="1.6531%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="1.4031%" y="229" width="0.0484%" height="15" fill="rgb(220,129,5)" fg:x="174" fg:w="6"/><text x="1.6531%" y="239.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="1.4192%" y="213" width="0.0323%" height="15" fill="rgb(242,17,10)" fg:x="176" fg:w="4"/><text x="1.6692%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.06%)</title><rect x="1.4031%" y="277" width="0.0645%" height="15" fill="rgb(242,107,0)" fg:x="174" fg:w="8"/><text x="1.6531%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="1.4515%" y="261" width="0.0161%" height="15" fill="rgb(251,28,31)" fg:x="180" fg:w="2"/><text x="1.7015%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="1.4515%" y="245" width="0.0161%" height="15" fill="rgb(233,223,10)" fg:x="180" fg:w="2"/><text x="1.7015%" y="255.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="1.4676%" y="277" width="0.0161%" height="15" fill="rgb(215,21,27)" fg:x="182" fg:w="2"/><text x="1.7176%" y="287.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="1.4838%" y="245" width="0.0323%" height="15" fill="rgb(232,23,21)" fg:x="184" fg:w="4"/><text x="1.7338%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="1.4838%" y="229" width="0.0323%" height="15" fill="rgb(244,5,23)" fg:x="184" fg:w="4"/><text x="1.7338%" y="239.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="1.4999%" y="213" width="0.0161%" height="15" fill="rgb(226,81,46)" fg:x="186" fg:w="2"/><text x="1.7499%" y="223.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (5 samples, 0.04%)</title><rect x="1.4838%" y="277" width="0.0403%" height="15" fill="rgb(247,70,30)" fg:x="184" fg:w="5"/><text x="1.7338%" y="287.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.04%)</title><rect x="1.4838%" y="261" width="0.0403%" height="15" fill="rgb(212,68,19)" fg:x="184" fg:w="5"/><text x="1.7338%" y="271.50"></text></g><g><title>rust-gkat`mi_free (12 samples, 0.10%)</title><rect x="1.5321%" y="277" width="0.0968%" height="15" fill="rgb(240,187,13)" fg:x="190" fg:w="12"/><text x="1.7821%" y="287.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="1.7579%" y="245" width="0.0323%" height="15" fill="rgb(223,113,26)" fg:x="218" fg:w="4"/><text x="2.0079%" y="255.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (19 samples, 0.15%)</title><rect x="1.7902%" y="245" width="0.1532%" height="15" fill="rgb(206,192,2)" fg:x="222" fg:w="19"/><text x="2.0402%" y="255.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="1.9434%" y="245" width="0.0323%" height="15" fill="rgb(241,108,4)" fg:x="241" fg:w="4"/><text x="2.1934%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (36 samples, 0.29%)</title><rect x="1.7015%" y="261" width="0.2903%" height="15" fill="rgb(247,173,49)" fg:x="211" fg:w="36"/><text x="1.9515%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="2.0724%" y="165" width="0.0161%" height="15" fill="rgb(224,114,35)" fg:x="257" fg:w="2"/><text x="2.3224%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="2.0724%" y="149" width="0.0161%" height="15" fill="rgb(245,159,27)" fg:x="257" fg:w="2"/><text x="2.3224%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="2.0724%" y="197" width="0.0323%" height="15" fill="rgb(245,172,44)" fg:x="257" fg:w="4"/><text x="2.3224%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="2.0724%" y="181" width="0.0323%" height="15" fill="rgb(236,23,11)" fg:x="257" fg:w="4"/><text x="2.3224%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="2.1127%" y="197" width="0.0161%" height="15" fill="rgb(205,117,38)" fg:x="262" fg:w="2"/><text x="2.3627%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.07%)</title><rect x="2.0724%" y="213" width="0.0726%" height="15" fill="rgb(237,72,25)" fg:x="257" fg:w="9"/><text x="2.3224%" y="223.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="2.1289%" y="197" width="0.0161%" height="15" fill="rgb(244,70,9)" fg:x="264" fg:w="2"/><text x="2.3789%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="2.1450%" y="213" width="0.0242%" height="15" fill="rgb(217,125,39)" fg:x="266" fg:w="3"/><text x="2.3950%" y="223.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="2.1692%" y="213" width="0.0403%" height="15" fill="rgb(235,36,10)" fg:x="269" fg:w="5"/><text x="2.4192%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.23%)</title><rect x="1.9918%" y="261" width="0.2339%" height="15" fill="rgb(251,123,47)" fg:x="247" fg:w="29"/><text x="2.2418%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (27 samples, 0.22%)</title><rect x="2.0079%" y="245" width="0.2177%" height="15" fill="rgb(221,13,13)" fg:x="249" fg:w="27"/><text x="2.2579%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (23 samples, 0.19%)</title><rect x="2.0402%" y="229" width="0.1855%" height="15" fill="rgb(238,131,9)" fg:x="253" fg:w="23"/><text x="2.2902%" y="239.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="2.2095%" y="213" width="0.0161%" height="15" fill="rgb(211,50,8)" fg:x="274" fg:w="2"/><text x="2.4595%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="2.2256%" y="197" width="0.0161%" height="15" fill="rgb(245,182,24)" fg:x="276" fg:w="2"/><text x="2.4756%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.04%)</title><rect x="2.2256%" y="245" width="0.0403%" height="15" fill="rgb(242,14,37)" fg:x="276" fg:w="5"/><text x="2.4756%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.04%)</title><rect x="2.2256%" y="229" width="0.0403%" height="15" fill="rgb(246,228,12)" fg:x="276" fg:w="5"/><text x="2.4756%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="2.2256%" y="213" width="0.0403%" height="15" fill="rgb(213,55,15)" fg:x="276" fg:w="5"/><text x="2.4756%" y="223.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="2.2418%" y="197" width="0.0242%" height="15" fill="rgb(209,9,3)" fg:x="278" fg:w="3"/><text x="2.4918%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.06%)</title><rect x="2.2256%" y="261" width="0.0564%" height="15" fill="rgb(230,59,30)" fg:x="276" fg:w="7"/><text x="2.4756%" y="271.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="2.2659%" y="245" width="0.0161%" height="15" fill="rgb(209,121,21)" fg:x="281" fg:w="2"/><text x="2.5159%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="2.2659%" y="229" width="0.0161%" height="15" fill="rgb(220,109,13)" fg:x="281" fg:w="2"/><text x="2.5159%" y="239.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="2.2659%" y="213" width="0.0161%" height="15" fill="rgb(232,18,1)" fg:x="281" fg:w="2"/><text x="2.5159%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (11 samples, 0.09%)</title><rect x="2.2821%" y="261" width="0.0887%" height="15" fill="rgb(215,41,42)" fg:x="283" fg:w="11"/><text x="2.5321%" y="271.50"></text></g><g><title>rust-gkat`Cudd_Ref (5 samples, 0.04%)</title><rect x="2.3708%" y="261" width="0.0403%" height="15" fill="rgb(224,123,36)" fg:x="294" fg:w="5"/><text x="2.6208%" y="271.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.02%)</title><rect x="2.4111%" y="229" width="0.0161%" height="15" fill="rgb(240,125,3)" fg:x="299" fg:w="2"/><text x="2.6611%" y="239.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (5 samples, 0.04%)</title><rect x="2.4111%" y="261" width="0.0403%" height="15" fill="rgb(205,98,50)" fg:x="299" fg:w="5"/><text x="2.6611%" y="271.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.04%)</title><rect x="2.4111%" y="245" width="0.0403%" height="15" fill="rgb(205,185,37)" fg:x="299" fg:w="5"/><text x="2.6611%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="2.4272%" y="229" width="0.0242%" height="15" fill="rgb(238,207,15)" fg:x="301" fg:w="3"/><text x="2.6772%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="2.4272%" y="213" width="0.0242%" height="15" fill="rgb(213,199,42)" fg:x="301" fg:w="3"/><text x="2.6772%" y="223.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="2.4272%" y="197" width="0.0242%" height="15" fill="rgb(235,201,11)" fg:x="301" fg:w="3"/><text x="2.6772%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="2.4756%" y="261" width="0.0161%" height="15" fill="rgb(207,46,11)" fg:x="307" fg:w="2"/><text x="2.7256%" y="271.50"></text></g><g><title>rust-gkat`mi_free (13 samples, 0.10%)</title><rect x="2.4917%" y="261" width="0.1048%" height="15" fill="rgb(241,35,35)" fg:x="309" fg:w="13"/><text x="2.7417%" y="271.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="2.9675%" y="229" width="0.0323%" height="15" fill="rgb(243,32,47)" fg:x="368" fg:w="4"/><text x="3.2175%" y="239.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (18 samples, 0.15%)</title><rect x="2.9998%" y="229" width="0.1451%" height="15" fill="rgb(247,202,23)" fg:x="372" fg:w="18"/><text x="3.2498%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="3.1449%" y="213" width="0.0161%" height="15" fill="rgb(219,102,11)" fg:x="390" fg:w="2"/><text x="3.3949%" y="223.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="3.1449%" y="229" width="0.0323%" height="15" fill="rgb(243,110,44)" fg:x="390" fg:w="4"/><text x="3.3949%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (55 samples, 0.44%)</title><rect x="2.7578%" y="245" width="0.4435%" height="15" fill="rgb(222,74,54)" fg:x="342" fg:w="55"/><text x="3.0078%" y="255.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.02%)</title><rect x="3.1852%" y="229" width="0.0161%" height="15" fill="rgb(216,99,12)" fg:x="395" fg:w="2"/><text x="3.4352%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="3.2739%" y="181" width="0.0323%" height="15" fill="rgb(226,22,26)" fg:x="406" fg:w="4"/><text x="3.5239%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.07%)</title><rect x="3.2739%" y="197" width="0.0726%" height="15" fill="rgb(217,163,10)" fg:x="406" fg:w="9"/><text x="3.5239%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.04%)</title><rect x="3.3062%" y="181" width="0.0403%" height="15" fill="rgb(213,25,53)" fg:x="410" fg:w="5"/><text x="3.5562%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.27%)</title><rect x="3.2014%" y="245" width="0.2742%" height="15" fill="rgb(252,105,26)" fg:x="397" fg:w="34"/><text x="3.4514%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (31 samples, 0.25%)</title><rect x="3.2255%" y="229" width="0.2500%" height="15" fill="rgb(220,39,43)" fg:x="400" fg:w="31"/><text x="3.4755%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.23%)</title><rect x="3.2497%" y="213" width="0.2258%" height="15" fill="rgb(229,68,48)" fg:x="403" fg:w="28"/><text x="3.4997%" y="223.50"></text></g><g><title>rust-gkat`cuddReclaim (15 samples, 0.12%)</title><rect x="3.3546%" y="197" width="0.1210%" height="15" fill="rgb(252,8,32)" fg:x="416" fg:w="15"/><text x="3.6046%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="3.4755%" y="149" width="0.0161%" height="15" fill="rgb(223,20,43)" fg:x="431" fg:w="2"/><text x="3.7255%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="3.4755%" y="165" width="0.0242%" height="15" fill="rgb(229,81,49)" fg:x="431" fg:w="3"/><text x="3.7255%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="3.4755%" y="181" width="0.0403%" height="15" fill="rgb(236,28,36)" fg:x="431" fg:w="5"/><text x="3.7255%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="3.4997%" y="165" width="0.0161%" height="15" fill="rgb(249,185,26)" fg:x="434" fg:w="2"/><text x="3.7497%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="3.5158%" y="181" width="0.0161%" height="15" fill="rgb(249,174,33)" fg:x="436" fg:w="2"/><text x="3.7658%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.09%)</title><rect x="3.4755%" y="229" width="0.0887%" height="15" fill="rgb(233,201,37)" fg:x="431" fg:w="11"/><text x="3.7255%" y="239.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (11 samples, 0.09%)</title><rect x="3.4755%" y="213" width="0.0887%" height="15" fill="rgb(221,78,26)" fg:x="431" fg:w="11"/><text x="3.7255%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.09%)</title><rect x="3.4755%" y="197" width="0.0887%" height="15" fill="rgb(250,127,30)" fg:x="431" fg:w="11"/><text x="3.7255%" y="207.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="3.5320%" y="181" width="0.0323%" height="15" fill="rgb(230,49,44)" fg:x="438" fg:w="4"/><text x="3.7820%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="3.5804%" y="197" width="0.0242%" height="15" fill="rgb(229,67,23)" fg:x="444" fg:w="3"/><text x="3.8304%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.14%)</title><rect x="3.4755%" y="245" width="0.1371%" height="15" fill="rgb(249,83,47)" fg:x="431" fg:w="17"/><text x="3.7255%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="3.5642%" y="229" width="0.0484%" height="15" fill="rgb(215,43,3)" fg:x="442" fg:w="6"/><text x="3.8142%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="3.5642%" y="213" width="0.0484%" height="15" fill="rgb(238,154,13)" fg:x="442" fg:w="6"/><text x="3.8142%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (12 samples, 0.10%)</title><rect x="3.6207%" y="245" width="0.0968%" height="15" fill="rgb(219,56,2)" fg:x="449" fg:w="12"/><text x="3.8707%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="3.7255%" y="245" width="0.0161%" height="15" fill="rgb(233,0,4)" fg:x="462" fg:w="2"/><text x="3.9755%" y="255.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.02%)</title><rect x="3.7497%" y="213" width="0.0161%" height="15" fill="rgb(235,30,7)" fg:x="465" fg:w="2"/><text x="3.9997%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="3.7820%" y="149" width="0.0161%" height="15" fill="rgb(250,79,13)" fg:x="469" fg:w="2"/><text x="4.0320%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="3.7820%" y="133" width="0.0161%" height="15" fill="rgb(211,146,34)" fg:x="469" fg:w="2"/><text x="4.0320%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="3.7739%" y="165" width="0.0403%" height="15" fill="rgb(228,22,38)" fg:x="468" fg:w="5"/><text x="4.0239%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="3.7739%" y="181" width="0.0645%" height="15" fill="rgb(235,168,5)" fg:x="468" fg:w="8"/><text x="4.0239%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="3.8223%" y="165" width="0.0161%" height="15" fill="rgb(221,155,16)" fg:x="474" fg:w="2"/><text x="4.0723%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (16 samples, 0.13%)</title><rect x="3.7658%" y="213" width="0.1290%" height="15" fill="rgb(215,215,53)" fg:x="467" fg:w="16"/><text x="4.0158%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.13%)</title><rect x="3.7658%" y="197" width="0.1290%" height="15" fill="rgb(223,4,10)" fg:x="467" fg:w="16"/><text x="4.0158%" y="207.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="3.8465%" y="181" width="0.0484%" height="15" fill="rgb(234,103,6)" fg:x="477" fg:w="6"/><text x="4.0965%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (20 samples, 0.16%)</title><rect x="3.7416%" y="245" width="0.1613%" height="15" fill="rgb(227,97,0)" fg:x="464" fg:w="20"/><text x="3.9916%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.16%)</title><rect x="3.7416%" y="229" width="0.1613%" height="15" fill="rgb(234,150,53)" fg:x="464" fg:w="20"/><text x="3.9916%" y="239.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.02%)</title><rect x="3.9029%" y="245" width="0.0161%" height="15" fill="rgb(228,201,54)" fg:x="484" fg:w="2"/><text x="4.1529%" y="255.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="3.9190%" y="245" width="0.0484%" height="15" fill="rgb(222,22,37)" fg:x="486" fg:w="6"/><text x="4.1690%" y="255.50"></text></g><g><title>rust-gkat`mi_free (13 samples, 0.10%)</title><rect x="3.9674%" y="245" width="0.1048%" height="15" fill="rgb(237,53,32)" fg:x="492" fg:w="13"/><text x="4.2174%" y="255.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="4.6770%" y="213" width="0.0242%" height="15" fill="rgb(233,25,53)" fg:x="580" fg:w="3"/><text x="4.9270%" y="223.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (23 samples, 0.19%)</title><rect x="4.7012%" y="213" width="0.1855%" height="15" fill="rgb(210,40,34)" fg:x="583" fg:w="23"/><text x="4.9512%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="4.9109%" y="197" width="0.0323%" height="15" fill="rgb(241,220,44)" fg:x="609" fg:w="4"/><text x="5.1609%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.06%)</title><rect x="4.8867%" y="213" width="0.0645%" height="15" fill="rgb(235,28,35)" fg:x="606" fg:w="8"/><text x="5.1367%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (80 samples, 0.65%)</title><rect x="4.3222%" y="229" width="0.6451%" height="15" fill="rgb(210,56,17)" fg:x="536" fg:w="80"/><text x="4.5722%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="5.1125%" y="133" width="0.0161%" height="15" fill="rgb(224,130,29)" fg:x="634" fg:w="2"/><text x="5.3625%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="5.1125%" y="117" width="0.0161%" height="15" fill="rgb(235,212,8)" fg:x="634" fg:w="2"/><text x="5.3625%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="5.1125%" y="101" width="0.0161%" height="15" fill="rgb(223,33,50)" fg:x="634" fg:w="2"/><text x="5.3625%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="5.1125%" y="85" width="0.0161%" height="15" fill="rgb(219,149,13)" fg:x="634" fg:w="2"/><text x="5.3625%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="5.1125%" y="149" width="0.0323%" height="15" fill="rgb(250,156,29)" fg:x="634" fg:w="4"/><text x="5.3625%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="5.1286%" y="133" width="0.0161%" height="15" fill="rgb(216,193,19)" fg:x="636" fg:w="2"/><text x="5.3786%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.06%)</title><rect x="5.1125%" y="165" width="0.0564%" height="15" fill="rgb(216,135,14)" fg:x="634" fg:w="7"/><text x="5.3625%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="5.1528%" y="149" width="0.0161%" height="15" fill="rgb(241,47,5)" fg:x="639" fg:w="2"/><text x="5.4028%" y="159.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="5.1689%" y="165" width="0.0161%" height="15" fill="rgb(233,42,35)" fg:x="641" fg:w="2"/><text x="5.4189%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="5.1851%" y="165" width="0.0242%" height="15" fill="rgb(231,13,6)" fg:x="643" fg:w="3"/><text x="5.4351%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (15 samples, 0.12%)</title><rect x="5.1125%" y="181" width="0.1210%" height="15" fill="rgb(207,181,40)" fg:x="634" fg:w="15"/><text x="5.3625%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="5.2093%" y="165" width="0.0242%" height="15" fill="rgb(254,173,49)" fg:x="646" fg:w="3"/><text x="5.4593%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="5.2334%" y="181" width="0.0242%" height="15" fill="rgb(221,1,38)" fg:x="649" fg:w="3"/><text x="5.4834%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (16 samples, 0.13%)</title><rect x="5.2576%" y="181" width="0.1290%" height="15" fill="rgb(206,124,46)" fg:x="652" fg:w="16"/><text x="5.5076%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (52 samples, 0.42%)</title><rect x="4.9996%" y="213" width="0.4193%" height="15" fill="rgb(249,21,11)" fg:x="620" fg:w="52"/><text x="5.2496%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (49 samples, 0.40%)</title><rect x="5.0238%" y="197" width="0.3951%" height="15" fill="rgb(222,201,40)" fg:x="623" fg:w="49"/><text x="5.2738%" y="207.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="5.3867%" y="181" width="0.0323%" height="15" fill="rgb(235,61,29)" fg:x="668" fg:w="4"/><text x="5.6367%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.47%)</title><rect x="4.9673%" y="229" width="0.4677%" height="15" fill="rgb(219,207,3)" fg:x="616" fg:w="58"/><text x="5.2173%" y="239.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="5.4189%" y="213" width="0.0161%" height="15" fill="rgb(222,56,46)" fg:x="672" fg:w="2"/><text x="5.6689%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="5.4834%" y="133" width="0.0323%" height="15" fill="rgb(239,76,54)" fg:x="680" fg:w="4"/><text x="5.7334%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="5.4996%" y="117" width="0.0161%" height="15" fill="rgb(231,124,27)" fg:x="682" fg:w="2"/><text x="5.7496%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="5.4834%" y="149" width="0.0484%" height="15" fill="rgb(249,195,6)" fg:x="680" fg:w="6"/><text x="5.7334%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="5.5157%" y="133" width="0.0161%" height="15" fill="rgb(237,174,47)" fg:x="684" fg:w="2"/><text x="5.7657%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="5.5399%" y="149" width="0.0242%" height="15" fill="rgb(206,201,31)" fg:x="687" fg:w="3"/><text x="5.7899%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.10%)</title><rect x="5.4754%" y="165" width="0.0968%" height="15" fill="rgb(231,57,52)" fg:x="679" fg:w="12"/><text x="5.7254%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="5.5802%" y="165" width="0.0323%" height="15" fill="rgb(248,177,22)" fg:x="692" fg:w="4"/><text x="5.8302%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.20%)</title><rect x="5.4350%" y="213" width="0.2016%" height="15" fill="rgb(215,211,37)" fg:x="674" fg:w="25"/><text x="5.6850%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (24 samples, 0.19%)</title><rect x="5.4431%" y="197" width="0.1935%" height="15" fill="rgb(241,128,51)" fg:x="675" fg:w="24"/><text x="5.6931%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (23 samples, 0.19%)</title><rect x="5.4512%" y="181" width="0.1855%" height="15" fill="rgb(227,165,31)" fg:x="676" fg:w="23"/><text x="5.7012%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="5.6125%" y="165" width="0.0242%" height="15" fill="rgb(228,167,24)" fg:x="696" fg:w="3"/><text x="5.8625%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="5.6447%" y="181" width="0.0161%" height="15" fill="rgb(228,143,12)" fg:x="700" fg:w="2"/><text x="5.8947%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="5.6447%" y="165" width="0.0161%" height="15" fill="rgb(249,149,8)" fg:x="700" fg:w="2"/><text x="5.8947%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="5.6608%" y="181" width="0.0161%" height="15" fill="rgb(243,35,44)" fg:x="702" fg:w="2"/><text x="5.9108%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.27%)</title><rect x="5.4350%" y="229" width="0.2661%" height="15" fill="rgb(246,89,9)" fg:x="674" fg:w="33"/><text x="5.6850%" y="239.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.06%)</title><rect x="5.6366%" y="213" width="0.0645%" height="15" fill="rgb(233,213,13)" fg:x="699" fg:w="8"/><text x="5.8866%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="5.6366%" y="197" width="0.0645%" height="15" fill="rgb(233,141,41)" fg:x="699" fg:w="8"/><text x="5.8866%" y="207.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="5.6770%" y="181" width="0.0242%" height="15" fill="rgb(239,167,4)" fg:x="704" fg:w="3"/><text x="5.9270%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (33 samples, 0.27%)</title><rect x="5.7092%" y="229" width="0.2661%" height="15" fill="rgb(209,217,16)" fg:x="708" fg:w="33"/><text x="5.9592%" y="239.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.02%)</title><rect x="5.9995%" y="197" width="0.0242%" height="15" fill="rgb(219,88,35)" fg:x="744" fg:w="3"/><text x="6.2495%" y="207.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="6.0398%" y="117" width="0.0161%" height="15" fill="rgb(220,193,23)" fg:x="749" fg:w="2"/><text x="6.2898%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheResize (2 samples, 0.02%)</title><rect x="6.0398%" y="101" width="0.0161%" height="15" fill="rgb(230,90,52)" fg:x="749" fg:w="2"/><text x="6.2898%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="6.0398%" y="149" width="0.0242%" height="15" fill="rgb(252,106,19)" fg:x="749" fg:w="3"/><text x="6.2898%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="6.0398%" y="133" width="0.0242%" height="15" fill="rgb(206,74,20)" fg:x="749" fg:w="3"/><text x="6.2898%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="6.0398%" y="165" width="0.0403%" height="15" fill="rgb(230,138,44)" fg:x="749" fg:w="5"/><text x="6.2898%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="6.0640%" y="149" width="0.0161%" height="15" fill="rgb(235,182,43)" fg:x="752" fg:w="2"/><text x="6.3140%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (10 samples, 0.08%)</title><rect x="6.0802%" y="165" width="0.0806%" height="15" fill="rgb(242,16,51)" fg:x="754" fg:w="10"/><text x="6.3302%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (18 samples, 0.15%)</title><rect x="6.0237%" y="197" width="0.1451%" height="15" fill="rgb(248,9,4)" fg:x="747" fg:w="18"/><text x="6.2737%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (17 samples, 0.14%)</title><rect x="6.0318%" y="181" width="0.1371%" height="15" fill="rgb(210,31,22)" fg:x="748" fg:w="17"/><text x="6.2818%" y="191.50"></text></g><g><title>rust-gkat`mi_free (5 samples, 0.04%)</title><rect x="6.1689%" y="197" width="0.0403%" height="15" fill="rgb(239,54,39)" fg:x="765" fg:w="5"/><text x="6.4189%" y="207.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (29 samples, 0.23%)</title><rect x="5.9834%" y="229" width="0.2339%" height="15" fill="rgb(230,99,41)" fg:x="742" fg:w="29"/><text x="6.2334%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 0.23%)</title><rect x="5.9915%" y="213" width="0.2258%" height="15" fill="rgb(253,106,12)" fg:x="743" fg:w="28"/><text x="6.2415%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (18 samples, 0.15%)</title><rect x="6.2253%" y="229" width="0.1451%" height="15" fill="rgb(213,46,41)" fg:x="772" fg:w="18"/><text x="6.4753%" y="239.50"></text></g><g><title>rust-gkat`mi_free (23 samples, 0.19%)</title><rect x="6.3705%" y="229" width="0.1855%" height="15" fill="rgb(215,133,35)" fg:x="790" fg:w="23"/><text x="6.6205%" y="239.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 0.02%)</title><rect x="6.5559%" y="229" width="0.0242%" height="15" fill="rgb(213,28,5)" fg:x="813" fg:w="3"/><text x="6.8059%" y="239.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="7.4510%" y="197" width="0.0403%" height="15" fill="rgb(215,77,49)" fg:x="924" fg:w="5"/><text x="7.7010%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (28 samples, 0.23%)</title><rect x="7.4913%" y="197" width="0.2258%" height="15" fill="rgb(248,100,22)" fg:x="929" fg:w="28"/><text x="7.7413%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="7.7494%" y="181" width="0.0161%" height="15" fill="rgb(208,67,9)" fg:x="961" fg:w="2"/><text x="7.9994%" y="191.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.06%)</title><rect x="7.7171%" y="197" width="0.0645%" height="15" fill="rgb(219,133,21)" fg:x="957" fg:w="8"/><text x="7.9671%" y="207.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="7.7655%" y="181" width="0.0161%" height="15" fill="rgb(246,46,29)" fg:x="963" fg:w="2"/><text x="8.0155%" y="191.50"></text></g><g><title>rust-gkat`mi_find_page (2 samples, 0.02%)</title><rect x="7.7816%" y="165" width="0.0161%" height="15" fill="rgb(246,185,52)" fg:x="965" fg:w="2"/><text x="8.0316%" y="175.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (3 samples, 0.02%)</title><rect x="7.7816%" y="197" width="0.0242%" height="15" fill="rgb(252,136,11)" fg:x="965" fg:w="3"/><text x="8.0316%" y="207.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (3 samples, 0.02%)</title><rect x="7.7816%" y="181" width="0.0242%" height="15" fill="rgb(219,138,53)" fg:x="965" fg:w="3"/><text x="8.0316%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (109 samples, 0.88%)</title><rect x="6.9349%" y="213" width="0.8790%" height="15" fill="rgb(211,51,23)" fg:x="860" fg:w="109"/><text x="7.1849%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="7.9832%" y="149" width="0.0161%" height="15" fill="rgb(247,221,28)" fg:x="990" fg:w="2"/><text x="8.2332%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="7.9832%" y="133" width="0.0161%" height="15" fill="rgb(251,222,45)" fg:x="990" fg:w="2"/><text x="8.2332%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="7.9994%" y="149" width="0.0242%" height="15" fill="rgb(217,162,53)" fg:x="992" fg:w="3"/><text x="8.2494%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="8.0235%" y="149" width="0.0161%" height="15" fill="rgb(229,93,14)" fg:x="995" fg:w="2"/><text x="8.2735%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.09%)</title><rect x="7.9832%" y="165" width="0.0887%" height="15" fill="rgb(209,67,49)" fg:x="990" fg:w="11"/><text x="8.2332%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="8.0397%" y="149" width="0.0323%" height="15" fill="rgb(213,87,29)" fg:x="997" fg:w="4"/><text x="8.2897%" y="159.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (8 samples, 0.06%)</title><rect x="8.0719%" y="165" width="0.0645%" height="15" fill="rgb(205,151,52)" fg:x="1001" fg:w="8"/><text x="8.3219%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (24 samples, 0.19%)</title><rect x="8.1364%" y="165" width="0.1935%" height="15" fill="rgb(253,215,39)" fg:x="1009" fg:w="24"/><text x="8.3864%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (72 samples, 0.58%)</title><rect x="7.8139%" y="213" width="0.5806%" height="15" fill="rgb(221,220,41)" fg:x="969" fg:w="72"/><text x="8.0639%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (67 samples, 0.54%)</title><rect x="7.8542%" y="197" width="0.5403%" height="15" fill="rgb(218,133,21)" fg:x="974" fg:w="67"/><text x="8.1042%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (65 samples, 0.52%)</title><rect x="7.8703%" y="181" width="0.5242%" height="15" fill="rgb(221,193,43)" fg:x="976" fg:w="65"/><text x="8.1203%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (8 samples, 0.06%)</title><rect x="8.3300%" y="165" width="0.0645%" height="15" fill="rgb(240,128,52)" fg:x="1033" fg:w="8"/><text x="8.5800%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="8.4267%" y="117" width="0.0242%" height="15" fill="rgb(253,114,12)" fg:x="1045" fg:w="3"/><text x="8.6767%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="8.4348%" y="101" width="0.0161%" height="15" fill="rgb(215,223,47)" fg:x="1046" fg:w="2"/><text x="8.6848%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="8.4267%" y="133" width="0.0403%" height="15" fill="rgb(248,225,23)" fg:x="1045" fg:w="5"/><text x="8.6767%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="8.4671%" y="133" width="0.0323%" height="15" fill="rgb(250,108,0)" fg:x="1050" fg:w="4"/><text x="8.7171%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.08%)</title><rect x="8.4267%" y="149" width="0.0806%" height="15" fill="rgb(228,208,7)" fg:x="1045" fg:w="10"/><text x="8.6767%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (12 samples, 0.10%)</title><rect x="8.5154%" y="149" width="0.0968%" height="15" fill="rgb(244,45,10)" fg:x="1056" fg:w="12"/><text x="8.7654%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (28 samples, 0.23%)</title><rect x="8.4025%" y="165" width="0.2258%" height="15" fill="rgb(207,125,25)" fg:x="1042" fg:w="28"/><text x="8.6525%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="8.6122%" y="149" width="0.0161%" height="15" fill="rgb(210,195,18)" fg:x="1068" fg:w="2"/><text x="8.8622%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.24%)</title><rect x="8.3945%" y="197" width="0.2419%" height="15" fill="rgb(249,80,12)" fg:x="1041" fg:w="30"/><text x="8.6445%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (29 samples, 0.23%)</title><rect x="8.4025%" y="181" width="0.2339%" height="15" fill="rgb(221,65,9)" fg:x="1042" fg:w="29"/><text x="8.6525%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (12 samples, 0.10%)</title><rect x="8.6687%" y="165" width="0.0968%" height="15" fill="rgb(235,49,36)" fg:x="1075" fg:w="12"/><text x="8.9187%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.40%)</title><rect x="8.3945%" y="213" width="0.3951%" height="15" fill="rgb(225,32,20)" fg:x="1041" fg:w="49"/><text x="8.6445%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (19 samples, 0.15%)</title><rect x="8.6364%" y="197" width="0.1532%" height="15" fill="rgb(215,141,46)" fg:x="1071" fg:w="19"/><text x="8.8864%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.15%)</title><rect x="8.6445%" y="181" width="0.1451%" height="15" fill="rgb(250,160,47)" fg:x="1072" fg:w="18"/><text x="8.8945%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="8.7654%" y="165" width="0.0242%" height="15" fill="rgb(216,222,40)" fg:x="1087" fg:w="3"/><text x="9.0154%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (47 samples, 0.38%)</title><rect x="8.7977%" y="213" width="0.3790%" height="15" fill="rgb(234,217,39)" fg:x="1091" fg:w="47"/><text x="9.0477%" y="223.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="9.1767%" y="213" width="0.0161%" height="15" fill="rgb(207,178,40)" fg:x="1138" fg:w="2"/><text x="9.4267%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="9.1928%" y="213" width="0.0161%" height="15" fill="rgb(221,136,13)" fg:x="1140" fg:w="2"/><text x="9.4428%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (9 samples, 0.07%)</title><rect x="9.2412%" y="181" width="0.0726%" height="15" fill="rgb(249,199,10)" fg:x="1146" fg:w="9"/><text x="9.4912%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="9.2976%" y="165" width="0.0161%" height="15" fill="rgb(249,222,13)" fg:x="1153" fg:w="2"/><text x="9.5476%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="9.3380%" y="149" width="0.0242%" height="15" fill="rgb(244,185,38)" fg:x="1158" fg:w="3"/><text x="9.5880%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="9.3460%" y="133" width="0.0161%" height="15" fill="rgb(236,202,9)" fg:x="1159" fg:w="2"/><text x="9.5960%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (12 samples, 0.10%)</title><rect x="9.3702%" y="149" width="0.0968%" height="15" fill="rgb(250,229,37)" fg:x="1162" fg:w="12"/><text x="9.6202%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (22 samples, 0.18%)</title><rect x="9.3138%" y="181" width="0.1774%" height="15" fill="rgb(206,174,23)" fg:x="1155" fg:w="22"/><text x="9.5638%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (22 samples, 0.18%)</title><rect x="9.3138%" y="165" width="0.1774%" height="15" fill="rgb(211,33,43)" fg:x="1155" fg:w="22"/><text x="9.5638%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="9.4670%" y="149" width="0.0242%" height="15" fill="rgb(245,58,50)" fg:x="1174" fg:w="3"/><text x="9.7170%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (36 samples, 0.29%)</title><rect x="9.2251%" y="213" width="0.2903%" height="15" fill="rgb(244,68,36)" fg:x="1144" fg:w="36"/><text x="9.4751%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.29%)</title><rect x="9.2251%" y="197" width="0.2903%" height="15" fill="rgb(232,229,15)" fg:x="1144" fg:w="36"/><text x="9.4751%" y="207.50"></text></g><g><title>rust-gkat`mi_free (3 samples, 0.02%)</title><rect x="9.4912%" y="181" width="0.0242%" height="15" fill="rgb(254,30,23)" fg:x="1177" fg:w="3"/><text x="9.7412%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (28 samples, 0.23%)</title><rect x="9.5315%" y="213" width="0.2258%" height="15" fill="rgb(235,160,14)" fg:x="1182" fg:w="28"/><text x="9.7815%" y="223.50"></text></g><g><title>rust-gkat`mi_free (30 samples, 0.24%)</title><rect x="9.7573%" y="213" width="0.2419%" height="15" fill="rgb(212,155,44)" fg:x="1210" fg:w="30"/><text x="10.0073%" y="223.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (4 samples, 0.03%)</title><rect x="10.0073%" y="213" width="0.0323%" height="15" fill="rgb(226,2,50)" fg:x="1241" fg:w="4"/><text x="10.2573%" y="223.50"></text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (2 samples, 0.02%)</title><rect x="10.0395%" y="213" width="0.0161%" height="15" fill="rgb(234,177,6)" fg:x="1245" fg:w="2"/><text x="10.2895%" y="223.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.15%)</title><rect x="11.7652%" y="181" width="0.1532%" height="15" fill="rgb(217,24,9)" fg:x="1459" fg:w="19"/><text x="12.0152%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (44 samples, 0.35%)</title><rect x="11.9184%" y="181" width="0.3548%" height="15" fill="rgb(220,13,46)" fg:x="1478" fg:w="44"/><text x="12.1684%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.06%)</title><rect x="12.3135%" y="165" width="0.0564%" height="15" fill="rgb(239,221,27)" fg:x="1527" fg:w="7"/><text x="12.5635%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="12.3700%" y="165" width="0.0161%" height="15" fill="rgb(222,198,25)" fg:x="1534" fg:w="2"/><text x="12.6200%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.13%)</title><rect x="12.2732%" y="181" width="0.1290%" height="15" fill="rgb(211,99,13)" fg:x="1522" fg:w="16"/><text x="12.5232%" y="191.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.02%)</title><rect x="12.3861%" y="165" width="0.0161%" height="15" fill="rgb(232,111,31)" fg:x="1536" fg:w="2"/><text x="12.6361%" y="175.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.02%)</title><rect x="12.4022%" y="181" width="0.0161%" height="15" fill="rgb(245,82,37)" fg:x="1538" fg:w="2"/><text x="12.6522%" y="191.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (2 samples, 0.02%)</title><rect x="12.4022%" y="165" width="0.0161%" height="15" fill="rgb(227,149,46)" fg:x="1538" fg:w="2"/><text x="12.6522%" y="175.50"></text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (2 samples, 0.02%)</title><rect x="12.4022%" y="149" width="0.0161%" height="15" fill="rgb(218,36,50)" fg:x="1538" fg:w="2"/><text x="12.6522%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (213 samples, 1.72%)</title><rect x="10.7169%" y="197" width="1.7176%" height="15" fill="rgb(226,80,48)" fg:x="1329" fg:w="213"/><text x="10.9669%" y="207.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.02%)</title><rect x="12.4184%" y="181" width="0.0161%" height="15" fill="rgb(238,224,15)" fg:x="1540" fg:w="2"/><text x="12.6684%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="12.7570%" y="117" width="0.0161%" height="15" fill="rgb(241,136,10)" fg:x="1582" fg:w="2"/><text x="13.0070%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="12.7570%" y="101" width="0.0161%" height="15" fill="rgb(208,32,45)" fg:x="1582" fg:w="2"/><text x="13.0070%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="12.7570%" y="85" width="0.0161%" height="15" fill="rgb(207,135,9)" fg:x="1582" fg:w="2"/><text x="13.0070%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="12.7570%" y="69" width="0.0161%" height="15" fill="rgb(206,86,44)" fg:x="1582" fg:w="2"/><text x="13.0070%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="12.7570%" y="133" width="0.0242%" height="15" fill="rgb(245,177,15)" fg:x="1582" fg:w="3"/><text x="13.0070%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.03%)</title><rect x="12.7812%" y="133" width="0.0323%" height="15" fill="rgb(206,64,50)" fg:x="1585" fg:w="4"/><text x="13.0312%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="12.8135%" y="133" width="0.0484%" height="15" fill="rgb(234,36,40)" fg:x="1589" fg:w="6"/><text x="13.0635%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.15%)</title><rect x="12.7328%" y="149" width="0.1451%" height="15" fill="rgb(213,64,8)" fg:x="1579" fg:w="18"/><text x="12.9828%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="12.8619%" y="133" width="0.0161%" height="15" fill="rgb(210,75,36)" fg:x="1595" fg:w="2"/><text x="13.1119%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (8 samples, 0.06%)</title><rect x="12.8780%" y="149" width="0.0645%" height="15" fill="rgb(229,88,21)" fg:x="1597" fg:w="8"/><text x="13.1280%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (35 samples, 0.28%)</title><rect x="12.9425%" y="149" width="0.2822%" height="15" fill="rgb(252,204,47)" fg:x="1605" fg:w="35"/><text x="13.1925%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (88 samples, 0.71%)</title><rect x="12.5877%" y="165" width="0.7096%" height="15" fill="rgb(208,77,27)" fg:x="1561" fg:w="88"/><text x="12.8377%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (9 samples, 0.07%)</title><rect x="13.2247%" y="149" width="0.0726%" height="15" fill="rgb(221,76,26)" fg:x="1640" fg:w="9"/><text x="13.4747%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (93 samples, 0.75%)</title><rect x="12.5554%" y="181" width="0.7499%" height="15" fill="rgb(225,139,18)" fg:x="1557" fg:w="93"/><text x="12.8054%" y="191.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (110 samples, 0.89%)</title><rect x="12.4345%" y="197" width="0.8870%" height="15" fill="rgb(230,137,11)" fg:x="1542" fg:w="110"/><text x="12.6845%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="13.3054%" y="181" width="0.0161%" height="15" fill="rgb(212,28,1)" fg:x="1650" fg:w="2"/><text x="13.5554%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="13.3538%" y="117" width="0.0242%" height="15" fill="rgb(248,164,17)" fg:x="1656" fg:w="3"/><text x="13.6038%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="13.3780%" y="117" width="0.0161%" height="15" fill="rgb(222,171,42)" fg:x="1659" fg:w="2"/><text x="13.6280%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.07%)</title><rect x="13.3457%" y="133" width="0.0726%" height="15" fill="rgb(243,84,45)" fg:x="1655" fg:w="9"/><text x="13.5957%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="13.3941%" y="117" width="0.0242%" height="15" fill="rgb(252,49,23)" fg:x="1661" fg:w="3"/><text x="13.6441%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="13.4183%" y="133" width="0.0161%" height="15" fill="rgb(215,19,7)" fg:x="1664" fg:w="2"/><text x="13.6683%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (21 samples, 0.17%)</title><rect x="13.3376%" y="165" width="0.1693%" height="15" fill="rgb(238,81,41)" fg:x="1654" fg:w="21"/><text x="13.5876%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (21 samples, 0.17%)</title><rect x="13.3376%" y="149" width="0.1693%" height="15" fill="rgb(210,199,37)" fg:x="1654" fg:w="21"/><text x="13.5876%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (9 samples, 0.07%)</title><rect x="13.4344%" y="133" width="0.0726%" height="15" fill="rgb(244,192,49)" fg:x="1666" fg:w="9"/><text x="13.6844%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.19%)</title><rect x="13.3296%" y="181" width="0.1935%" height="15" fill="rgb(226,211,11)" fg:x="1653" fg:w="24"/><text x="13.5796%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="13.5070%" y="165" width="0.0161%" height="15" fill="rgb(236,162,54)" fg:x="1675" fg:w="2"/><text x="13.7570%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="13.5715%" y="149" width="0.0242%" height="15" fill="rgb(220,229,9)" fg:x="1683" fg:w="3"/><text x="13.8215%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="13.5715%" y="133" width="0.0242%" height="15" fill="rgb(250,87,22)" fg:x="1683" fg:w="3"/><text x="13.8215%" y="143.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="13.5796%" y="117" width="0.0161%" height="15" fill="rgb(239,43,17)" fg:x="1684" fg:w="2"/><text x="13.8296%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.03%)</title><rect x="13.5957%" y="149" width="0.0323%" height="15" fill="rgb(231,177,25)" fg:x="1686" fg:w="4"/><text x="13.8457%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (10 samples, 0.08%)</title><rect x="13.6279%" y="149" width="0.0806%" height="15" fill="rgb(219,179,1)" fg:x="1690" fg:w="10"/><text x="13.8779%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (25 samples, 0.20%)</title><rect x="13.5231%" y="181" width="0.2016%" height="15" fill="rgb(238,219,53)" fg:x="1677" fg:w="25"/><text x="13.7731%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (25 samples, 0.20%)</title><rect x="13.5231%" y="165" width="0.2016%" height="15" fill="rgb(232,167,36)" fg:x="1677" fg:w="25"/><text x="13.7731%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="13.7086%" y="149" width="0.0161%" height="15" fill="rgb(244,19,51)" fg:x="1700" fg:w="2"/><text x="13.9586%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.41%)</title><rect x="13.3215%" y="197" width="0.4113%" height="15" fill="rgb(224,6,22)" fg:x="1652" fg:w="51"/><text x="13.5715%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (82 samples, 0.66%)</title><rect x="13.7408%" y="197" width="0.6612%" height="15" fill="rgb(224,145,5)" fg:x="1704" fg:w="82"/><text x="13.9908%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="14.4021%" y="197" width="0.0161%" height="15" fill="rgb(234,130,49)" fg:x="1786" fg:w="2"/><text x="14.6521%" y="207.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="14.4263%" y="197" width="0.0161%" height="15" fill="rgb(254,6,2)" fg:x="1789" fg:w="2"/><text x="14.6763%" y="207.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.10%)</title><rect x="14.4424%" y="165" width="0.0968%" height="15" fill="rgb(208,96,46)" fg:x="1791" fg:w="12"/><text x="14.6924%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="14.5633%" y="117" width="0.0323%" height="15" fill="rgb(239,3,39)" fg:x="1806" fg:w="4"/><text x="14.8133%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="14.5553%" y="133" width="0.0645%" height="15" fill="rgb(233,210,1)" fg:x="1805" fg:w="8"/><text x="14.8053%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="14.5956%" y="117" width="0.0242%" height="15" fill="rgb(244,137,37)" fg:x="1810" fg:w="3"/><text x="14.8456%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="14.6198%" y="133" width="0.0161%" height="15" fill="rgb(240,136,2)" fg:x="1813" fg:w="2"/><text x="14.8698%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (10 samples, 0.08%)</title><rect x="14.6359%" y="133" width="0.0806%" height="15" fill="rgb(239,18,37)" fg:x="1815" fg:w="10"/><text x="14.8859%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (23 samples, 0.19%)</title><rect x="14.5392%" y="165" width="0.1855%" height="15" fill="rgb(218,185,22)" fg:x="1803" fg:w="23"/><text x="14.7892%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (23 samples, 0.19%)</title><rect x="14.5392%" y="149" width="0.1855%" height="15" fill="rgb(225,218,4)" fg:x="1803" fg:w="23"/><text x="14.7892%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="14.7246%" y="165" width="0.0161%" height="15" fill="rgb(230,182,32)" fg:x="1826" fg:w="2"/><text x="14.9746%" y="175.50"></text></g><g><title>rust-gkat`mi_free (2 samples, 0.02%)</title><rect x="14.7407%" y="165" width="0.0161%" height="15" fill="rgb(242,56,43)" fg:x="1828" fg:w="2"/><text x="14.9907%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.32%)</title><rect x="14.4424%" y="181" width="0.3226%" height="15" fill="rgb(233,99,24)" fg:x="1791" fg:w="40"/><text x="14.6924%" y="191.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (41 samples, 0.33%)</title><rect x="14.4424%" y="197" width="0.3306%" height="15" fill="rgb(234,209,42)" fg:x="1791" fg:w="41"/><text x="14.6924%" y="207.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.02%)</title><rect x="14.7811%" y="197" width="0.0161%" height="15" fill="rgb(227,7,12)" fg:x="1833" fg:w="2"/><text x="15.0311%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (76 samples, 0.61%)</title><rect x="14.8053%" y="197" width="0.6129%" height="15" fill="rgb(245,203,43)" fg:x="1836" fg:w="76"/><text x="15.0553%" y="207.50"></text></g><g><title>rust-gkat`mi_free (52 samples, 0.42%)</title><rect x="15.4181%" y="197" width="0.4193%" height="15" fill="rgb(238,205,33)" fg:x="1912" fg:w="52"/><text x="15.6681%" y="207.50"></text></g><g><title>rust-gkat`mi_free_generic_local (2 samples, 0.02%)</title><rect x="15.8374%" y="197" width="0.0161%" height="15" fill="rgb(231,56,7)" fg:x="1964" fg:w="2"/><text x="16.0874%" y="207.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (4 samples, 0.03%)</title><rect x="15.8536%" y="197" width="0.0323%" height="15" fill="rgb(244,186,29)" fg:x="1966" fg:w="4"/><text x="16.1036%" y="207.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (2 samples, 0.02%)</title><rect x="15.8697%" y="181" width="0.0161%" height="15" fill="rgb(234,111,31)" fg:x="1968" fg:w="2"/><text x="16.1197%" y="191.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (9 samples, 0.07%)</title><rect x="15.8858%" y="197" width="0.0726%" height="15" fill="rgb(241,149,10)" fg:x="1970" fg:w="9"/><text x="16.1358%" y="207.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.14%)</title><rect x="19.6274%" y="165" width="0.1371%" height="15" fill="rgb(249,206,44)" fg:x="2434" fg:w="17"/><text x="19.8774%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (32 samples, 0.26%)</title><rect x="19.7645%" y="165" width="0.2580%" height="15" fill="rgb(251,153,30)" fg:x="2451" fg:w="32"/><text x="20.0145%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.07%)</title><rect x="20.0548%" y="149" width="0.0726%" height="15" fill="rgb(239,152,38)" fg:x="2487" fg:w="9"/><text x="20.3048%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="20.1274%" y="149" width="0.0403%" height="15" fill="rgb(249,139,47)" fg:x="2496" fg:w="5"/><text x="20.3774%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.15%)</title><rect x="20.0226%" y="165" width="0.1532%" height="15" fill="rgb(244,64,35)" fg:x="2483" fg:w="19"/><text x="20.2726%" y="175.50"></text></g><g><title>rust-gkat`mi_find_page (3 samples, 0.02%)</title><rect x="20.1758%" y="133" width="0.0242%" height="15" fill="rgb(216,46,15)" fg:x="2502" fg:w="3"/><text x="20.4258%" y="143.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (4 samples, 0.03%)</title><rect x="20.1758%" y="149" width="0.0323%" height="15" fill="rgb(250,74,19)" fg:x="2502" fg:w="4"/><text x="20.4258%" y="159.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (6 samples, 0.05%)</title><rect x="20.1758%" y="165" width="0.0484%" height="15" fill="rgb(249,42,33)" fg:x="2502" fg:w="6"/><text x="20.4258%" y="175.50"></text></g><g><title>rust-gkat`mi_find_page (2 samples, 0.02%)</title><rect x="20.2080%" y="149" width="0.0161%" height="15" fill="rgb(242,149,17)" fg:x="2506" fg:w="2"/><text x="20.4580%" y="159.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (336 samples, 2.71%)</title><rect x="17.5550%" y="181" width="2.7095%" height="15" fill="rgb(244,29,21)" fg:x="2177" fg:w="336"/><text x="17.8050%" y="191.50">ru..</text></g><g><title>rust-gkat`mi_malloc_aligned (5 samples, 0.04%)</title><rect x="20.2242%" y="165" width="0.0403%" height="15" fill="rgb(220,130,37)" fg:x="2508" fg:w="5"/><text x="20.4742%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="20.6758%" y="101" width="0.0161%" height="15" fill="rgb(211,67,2)" fg:x="2564" fg:w="2"/><text x="20.9258%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="20.6758%" y="117" width="0.0323%" height="15" fill="rgb(235,68,52)" fg:x="2564" fg:w="4"/><text x="20.9258%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="20.7080%" y="117" width="0.0323%" height="15" fill="rgb(246,142,3)" fg:x="2568" fg:w="4"/><text x="20.9580%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.10%)</title><rect x="20.6758%" y="133" width="0.0968%" height="15" fill="rgb(241,25,7)" fg:x="2564" fg:w="12"/><text x="20.9258%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="20.7403%" y="117" width="0.0323%" height="15" fill="rgb(242,119,39)" fg:x="2572" fg:w="4"/><text x="20.9903%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.07%)</title><rect x="20.7806%" y="133" width="0.0726%" height="15" fill="rgb(241,98,45)" fg:x="2577" fg:w="9"/><text x="21.0306%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (37 samples, 0.30%)</title><rect x="20.8532%" y="133" width="0.2984%" height="15" fill="rgb(254,28,30)" fg:x="2586" fg:w="37"/><text x="21.1032%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (107 samples, 0.86%)</title><rect x="20.3613%" y="165" width="0.8628%" height="15" fill="rgb(241,142,54)" fg:x="2525" fg:w="107"/><text x="20.6113%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (103 samples, 0.83%)</title><rect x="20.3935%" y="149" width="0.8306%" height="15" fill="rgb(222,85,15)" fg:x="2529" fg:w="103"/><text x="20.6435%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (9 samples, 0.07%)</title><rect x="21.1515%" y="133" width="0.0726%" height="15" fill="rgb(210,85,47)" fg:x="2623" fg:w="9"/><text x="21.4015%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (123 samples, 0.99%)</title><rect x="20.2645%" y="181" width="0.9919%" height="15" fill="rgb(224,206,25)" fg:x="2513" fg:w="123"/><text x="20.5145%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="21.2322%" y="165" width="0.0242%" height="15" fill="rgb(243,201,19)" fg:x="2633" fg:w="3"/><text x="21.4822%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="21.2564%" y="181" width="0.0242%" height="15" fill="rgb(236,59,4)" fg:x="2636" fg:w="3"/><text x="21.5064%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="21.3451%" y="85" width="0.0242%" height="15" fill="rgb(254,179,45)" fg:x="2647" fg:w="3"/><text x="21.5951%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="21.3451%" y="101" width="0.0484%" height="15" fill="rgb(226,14,10)" fg:x="2647" fg:w="6"/><text x="21.5951%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="21.3692%" y="85" width="0.0242%" height="15" fill="rgb(244,27,41)" fg:x="2650" fg:w="3"/><text x="21.6192%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="21.3934%" y="101" width="0.0242%" height="15" fill="rgb(235,35,32)" fg:x="2653" fg:w="3"/><text x="21.6434%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (12 samples, 0.10%)</title><rect x="21.3370%" y="117" width="0.0968%" height="15" fill="rgb(218,68,31)" fg:x="2646" fg:w="12"/><text x="21.5870%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.03%)</title><rect x="21.4338%" y="117" width="0.0323%" height="15" fill="rgb(207,120,37)" fg:x="2658" fg:w="4"/><text x="21.6838%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (19 samples, 0.15%)</title><rect x="21.4660%" y="117" width="0.1532%" height="15" fill="rgb(227,98,0)" fg:x="2662" fg:w="19"/><text x="21.7160%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (40 samples, 0.32%)</title><rect x="21.3128%" y="149" width="0.3226%" height="15" fill="rgb(207,7,3)" fg:x="2643" fg:w="40"/><text x="21.5628%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (40 samples, 0.32%)</title><rect x="21.3128%" y="133" width="0.3226%" height="15" fill="rgb(206,98,19)" fg:x="2643" fg:w="40"/><text x="21.5628%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="21.6192%" y="117" width="0.0161%" height="15" fill="rgb(217,5,26)" fg:x="2681" fg:w="2"/><text x="21.8692%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (44 samples, 0.35%)</title><rect x="21.2886%" y="165" width="0.3548%" height="15" fill="rgb(235,190,38)" fg:x="2640" fg:w="44"/><text x="21.5386%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (4 samples, 0.03%)</title><rect x="21.6918%" y="117" width="0.0323%" height="15" fill="rgb(247,86,24)" fg:x="2690" fg:w="4"/><text x="21.9418%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="21.6918%" y="133" width="0.0484%" height="15" fill="rgb(205,101,16)" fg:x="2690" fg:w="6"/><text x="21.9418%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="21.7241%" y="117" width="0.0161%" height="15" fill="rgb(246,168,33)" fg:x="2694" fg:w="2"/><text x="21.9741%" y="127.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (6 samples, 0.05%)</title><rect x="21.7402%" y="133" width="0.0484%" height="15" fill="rgb(231,114,1)" fg:x="2696" fg:w="6"/><text x="21.9902%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (19 samples, 0.15%)</title><rect x="21.7886%" y="133" width="0.1532%" height="15" fill="rgb(207,184,53)" fg:x="2702" fg:w="19"/><text x="22.0386%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (84 samples, 0.68%)</title><rect x="21.2805%" y="181" width="0.6774%" height="15" fill="rgb(224,95,51)" fg:x="2639" fg:w="84"/><text x="21.5305%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (38 samples, 0.31%)</title><rect x="21.6515%" y="165" width="0.3064%" height="15" fill="rgb(212,188,45)" fg:x="2685" fg:w="38"/><text x="21.9015%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (38 samples, 0.31%)</title><rect x="21.6515%" y="149" width="0.3064%" height="15" fill="rgb(223,154,38)" fg:x="2685" fg:w="38"/><text x="21.9015%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="21.9418%" y="133" width="0.0161%" height="15" fill="rgb(251,22,52)" fg:x="2721" fg:w="2"/><text x="22.1918%" y="143.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.02%)</title><rect x="21.9579%" y="181" width="0.0161%" height="15" fill="rgb(229,209,22)" fg:x="2723" fg:w="2"/><text x="22.2079%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (145 samples, 1.17%)</title><rect x="21.9740%" y="181" width="1.1693%" height="15" fill="rgb(234,138,34)" fg:x="2725" fg:w="145"/><text x="22.2240%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (6 samples, 0.05%)</title><rect x="23.1433%" y="181" width="0.0484%" height="15" fill="rgb(212,95,11)" fg:x="2870" fg:w="6"/><text x="23.3933%" y="191.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="23.1997%" y="181" width="0.0242%" height="15" fill="rgb(240,179,47)" fg:x="2877" fg:w="3"/><text x="23.4497%" y="191.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="23.4094%" y="133" width="0.0161%" height="15" fill="rgb(240,163,11)" fg:x="2903" fg:w="2"/><text x="23.6594%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (23 samples, 0.19%)</title><rect x="23.2481%" y="149" width="0.1855%" height="15" fill="rgb(236,37,12)" fg:x="2883" fg:w="23"/><text x="23.4981%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="23.4578%" y="85" width="0.0161%" height="15" fill="rgb(232,164,16)" fg:x="2909" fg:w="2"/><text x="23.7078%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="23.4578%" y="101" width="0.0242%" height="15" fill="rgb(244,205,15)" fg:x="2909" fg:w="3"/><text x="23.7078%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="23.4497%" y="117" width="0.0484%" height="15" fill="rgb(223,117,47)" fg:x="2908" fg:w="6"/><text x="23.6997%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="23.4820%" y="101" width="0.0161%" height="15" fill="rgb(244,107,35)" fg:x="2912" fg:w="2"/><text x="23.7320%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (16 samples, 0.13%)</title><rect x="23.5062%" y="117" width="0.1290%" height="15" fill="rgb(205,140,8)" fg:x="2915" fg:w="16"/><text x="23.7562%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (30 samples, 0.24%)</title><rect x="23.4336%" y="149" width="0.2419%" height="15" fill="rgb(228,84,46)" fg:x="2906" fg:w="30"/><text x="23.6836%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (29 samples, 0.23%)</title><rect x="23.4417%" y="133" width="0.2339%" height="15" fill="rgb(254,188,9)" fg:x="2907" fg:w="29"/><text x="23.6917%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.04%)</title><rect x="23.6352%" y="117" width="0.0403%" height="15" fill="rgb(206,112,54)" fg:x="2931" fg:w="5"/><text x="23.8852%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.50%)</title><rect x="23.2320%" y="165" width="0.5000%" height="15" fill="rgb(216,84,49)" fg:x="2881" fg:w="62"/><text x="23.4820%" y="175.50"></text></g><g><title>rust-gkat`mi_free (6 samples, 0.05%)</title><rect x="23.6836%" y="149" width="0.0484%" height="15" fill="rgb(214,194,35)" fg:x="2937" fg:w="6"/><text x="23.9336%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="23.7320%" y="165" width="0.0161%" height="15" fill="rgb(249,28,3)" fg:x="2943" fg:w="2"/><text x="23.9820%" y="175.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (66 samples, 0.53%)</title><rect x="23.2239%" y="181" width="0.5322%" height="15" fill="rgb(222,56,52)" fg:x="2880" fg:w="66"/><text x="23.4739%" y="191.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="23.7561%" y="181" width="0.0242%" height="15" fill="rgb(245,217,50)" fg:x="2946" fg:w="3"/><text x="24.0061%" y="191.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="23.7884%" y="181" width="0.0323%" height="15" fill="rgb(213,201,24)" fg:x="2950" fg:w="4"/><text x="24.0384%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (121 samples, 0.98%)</title><rect x="23.8207%" y="181" width="0.9757%" height="15" fill="rgb(248,116,28)" fg:x="2954" fg:w="121"/><text x="24.0707%" y="191.50"></text></g><g><title>rust-gkat`mi_free (86 samples, 0.69%)</title><rect x="24.7964%" y="181" width="0.6935%" height="15" fill="rgb(219,72,43)" fg:x="3075" fg:w="86"/><text x="25.0464%" y="191.50"></text></g><g><title>rust-gkat`mi_free_generic_local (5 samples, 0.04%)</title><rect x="25.4899%" y="181" width="0.0403%" height="15" fill="rgb(209,138,14)" fg:x="3161" fg:w="5"/><text x="25.7399%" y="191.50"></text></g><g><title>rust-gkat`mi_find_page (2 samples, 0.02%)</title><rect x="25.5383%" y="149" width="0.0161%" height="15" fill="rgb(222,18,33)" fg:x="3167" fg:w="2"/><text x="25.7883%" y="159.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (4 samples, 0.03%)</title><rect x="25.5302%" y="181" width="0.0323%" height="15" fill="rgb(213,199,7)" fg:x="3166" fg:w="4"/><text x="25.7802%" y="191.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (4 samples, 0.03%)</title><rect x="25.5302%" y="165" width="0.0323%" height="15" fill="rgb(250,110,10)" fg:x="3166" fg:w="4"/><text x="25.7802%" y="175.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (14 samples, 0.11%)</title><rect x="25.5625%" y="181" width="0.1129%" height="15" fill="rgb(248,123,6)" fg:x="3170" fg:w="14"/><text x="25.8125%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.29%)</title><rect x="31.3926%" y="149" width="0.2903%" height="15" fill="rgb(206,91,31)" fg:x="3893" fg:w="36"/><text x="31.6426%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (27 samples, 0.22%)</title><rect x="31.6910%" y="149" width="0.2177%" height="15" fill="rgb(211,154,13)" fg:x="3930" fg:w="27"/><text x="31.9410%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.08%)</title><rect x="31.9894%" y="133" width="0.0806%" height="15" fill="rgb(225,148,7)" fg:x="3967" fg:w="10"/><text x="32.2394%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="32.0700%" y="133" width="0.0242%" height="15" fill="rgb(220,160,43)" fg:x="3977" fg:w="3"/><text x="32.3200%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.19%)</title><rect x="31.9087%" y="149" width="0.1935%" height="15" fill="rgb(213,52,39)" fg:x="3957" fg:w="24"/><text x="32.1587%" y="159.50"></text></g><g><title>rust-gkat`mi_find_page (3 samples, 0.02%)</title><rect x="32.1103%" y="117" width="0.0242%" height="15" fill="rgb(243,137,7)" fg:x="3982" fg:w="3"/><text x="32.3603%" y="127.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (6 samples, 0.05%)</title><rect x="32.1022%" y="133" width="0.0484%" height="15" fill="rgb(230,79,13)" fg:x="3981" fg:w="6"/><text x="32.3522%" y="143.50"></text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (2 samples, 0.02%)</title><rect x="32.1345%" y="117" width="0.0161%" height="15" fill="rgb(247,105,23)" fg:x="3985" fg:w="2"/><text x="32.3845%" y="127.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (10 samples, 0.08%)</title><rect x="32.1022%" y="149" width="0.0806%" height="15" fill="rgb(223,179,41)" fg:x="3981" fg:w="10"/><text x="32.3522%" y="159.50"></text></g><g><title>rust-gkat`mi_find_page (4 samples, 0.03%)</title><rect x="32.1506%" y="133" width="0.0323%" height="15" fill="rgb(218,9,34)" fg:x="3987" fg:w="4"/><text x="32.4006%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (504 samples, 4.06%)</title><rect x="28.1510%" y="165" width="4.0642%" height="15" fill="rgb(222,106,8)" fg:x="3491" fg:w="504"/><text x="28.4010%" y="175.50">rust..</text></g><g><title>rust-gkat`mi_malloc_aligned (4 samples, 0.03%)</title><rect x="32.1829%" y="149" width="0.0323%" height="15" fill="rgb(211,220,0)" fg:x="3991" fg:w="4"/><text x="32.4329%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="32.7796%" y="85" width="0.0242%" height="15" fill="rgb(229,52,16)" fg:x="4065" fg:w="3"/><text x="33.0296%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="32.7796%" y="101" width="0.0403%" height="15" fill="rgb(212,155,18)" fg:x="4065" fg:w="5"/><text x="33.0296%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="32.8038%" y="85" width="0.0161%" height="15" fill="rgb(242,21,14)" fg:x="4068" fg:w="2"/><text x="33.0538%" y="95.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="32.8280%" y="101" width="0.0484%" height="15" fill="rgb(222,19,48)" fg:x="4071" fg:w="6"/><text x="33.0780%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.15%)</title><rect x="32.7554%" y="117" width="0.1451%" height="15" fill="rgb(232,45,27)" fg:x="4062" fg:w="18"/><text x="33.0054%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="32.8764%" y="101" width="0.0242%" height="15" fill="rgb(249,103,42)" fg:x="4077" fg:w="3"/><text x="33.1264%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (12 samples, 0.10%)</title><rect x="32.9006%" y="117" width="0.0968%" height="15" fill="rgb(246,81,33)" fg:x="4080" fg:w="12"/><text x="33.1506%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (43 samples, 0.35%)</title><rect x="32.9973%" y="117" width="0.3467%" height="15" fill="rgb(252,33,42)" fg:x="4092" fg:w="43"/><text x="33.2473%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (128 samples, 1.03%)</title><rect x="32.4651%" y="133" width="1.0322%" height="15" fill="rgb(209,212,41)" fg:x="4026" fg:w="128"/><text x="32.7151%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (19 samples, 0.15%)</title><rect x="33.3441%" y="117" width="0.1532%" height="15" fill="rgb(207,154,6)" fg:x="4135" fg:w="19"/><text x="33.5941%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (135 samples, 1.09%)</title><rect x="32.4167%" y="149" width="1.0886%" height="15" fill="rgb(223,64,47)" fg:x="4020" fg:w="135"/><text x="32.6667%" y="159.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="33.5054%" y="149" width="0.0161%" height="15" fill="rgb(211,161,38)" fg:x="4155" fg:w="2"/><text x="33.7554%" y="159.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="33.5054%" y="133" width="0.0161%" height="15" fill="rgb(219,138,40)" fg:x="4155" fg:w="2"/><text x="33.7554%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="33.5054%" y="117" width="0.0161%" height="15" fill="rgb(241,228,46)" fg:x="4155" fg:w="2"/><text x="33.7554%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (167 samples, 1.35%)</title><rect x="32.2151%" y="165" width="1.3467%" height="15" fill="rgb(223,209,38)" fg:x="3995" fg:w="167"/><text x="32.4651%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="33.5215%" y="149" width="0.0403%" height="15" fill="rgb(236,164,45)" fg:x="4157" fg:w="5"/><text x="33.7715%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="33.6505%" y="149" width="0.0242%" height="15" fill="rgb(231,15,5)" fg:x="4173" fg:w="3"/><text x="33.9005%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.15%)</title><rect x="33.5618%" y="165" width="0.1532%" height="15" fill="rgb(252,35,15)" fg:x="4162" fg:w="19"/><text x="33.8118%" y="175.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (5 samples, 0.04%)</title><rect x="33.6747%" y="149" width="0.0403%" height="15" fill="rgb(248,181,18)" fg:x="4176" fg:w="5"/><text x="33.9247%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="33.8118%" y="101" width="0.0484%" height="15" fill="rgb(233,39,42)" fg:x="4193" fg:w="6"/><text x="34.0618%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.04%)</title><rect x="33.8199%" y="85" width="0.0403%" height="15" fill="rgb(238,110,33)" fg:x="4194" fg:w="5"/><text x="34.0699%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (6 samples, 0.05%)</title><rect x="33.8602%" y="101" width="0.0484%" height="15" fill="rgb(233,195,10)" fg:x="4199" fg:w="6"/><text x="34.1102%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (15 samples, 0.12%)</title><rect x="33.9086%" y="101" width="0.1210%" height="15" fill="rgb(254,105,3)" fg:x="4205" fg:w="15"/><text x="34.1586%" y="111.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 0.30%)</title><rect x="33.7715%" y="149" width="0.2984%" height="15" fill="rgb(221,225,9)" fg:x="4188" fg:w="37"/><text x="34.0215%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (35 samples, 0.28%)</title><rect x="33.7876%" y="133" width="0.2822%" height="15" fill="rgb(224,227,45)" fg:x="4190" fg:w="35"/><text x="34.0376%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (35 samples, 0.28%)</title><rect x="33.7876%" y="117" width="0.2822%" height="15" fill="rgb(229,198,43)" fg:x="4190" fg:w="35"/><text x="34.0376%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (5 samples, 0.04%)</title><rect x="34.0295%" y="101" width="0.0403%" height="15" fill="rgb(206,209,35)" fg:x="4220" fg:w="5"/><text x="34.2795%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="34.1021%" y="101" width="0.0323%" height="15" fill="rgb(245,195,53)" fg:x="4229" fg:w="4"/><text x="34.3521%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="34.1182%" y="85" width="0.0161%" height="15" fill="rgb(240,92,26)" fg:x="4231" fg:w="2"/><text x="34.3682%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.08%)</title><rect x="34.0940%" y="117" width="0.0806%" height="15" fill="rgb(207,40,23)" fg:x="4228" fg:w="10"/><text x="34.3440%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="34.1505%" y="101" width="0.0242%" height="15" fill="rgb(223,111,35)" fg:x="4235" fg:w="3"/><text x="34.4005%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.07%)</title><rect x="34.1747%" y="117" width="0.0726%" height="15" fill="rgb(229,147,28)" fg:x="4238" fg:w="9"/><text x="34.4247%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (24 samples, 0.19%)</title><rect x="34.2472%" y="117" width="0.1935%" height="15" fill="rgb(211,29,28)" fg:x="4247" fg:w="24"/><text x="34.4972%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (49 samples, 0.40%)</title><rect x="34.0698%" y="149" width="0.3951%" height="15" fill="rgb(228,72,33)" fg:x="4225" fg:w="49"/><text x="34.3198%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (48 samples, 0.39%)</title><rect x="34.0779%" y="133" width="0.3871%" height="15" fill="rgb(205,214,31)" fg:x="4226" fg:w="48"/><text x="34.3279%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="34.4408%" y="117" width="0.0242%" height="15" fill="rgb(224,111,15)" fg:x="4271" fg:w="3"/><text x="34.6908%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="34.4650%" y="149" width="0.0161%" height="15" fill="rgb(253,21,26)" fg:x="4274" fg:w="2"/><text x="34.7150%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (96 samples, 0.77%)</title><rect x="33.7150%" y="165" width="0.7741%" height="15" fill="rgb(245,139,43)" fg:x="4181" fg:w="96"/><text x="33.9650%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="34.4892%" y="165" width="0.0161%" height="15" fill="rgb(252,170,7)" fg:x="4277" fg:w="2"/><text x="34.7392%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (132 samples, 1.06%)</title><rect x="34.5214%" y="165" width="1.0644%" height="15" fill="rgb(231,118,14)" fg:x="4281" fg:w="132"/><text x="34.7714%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (38 samples, 0.31%)</title><rect x="35.5858%" y="165" width="0.3064%" height="15" fill="rgb(238,83,0)" fg:x="4413" fg:w="38"/><text x="35.8358%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.06%)</title><rect x="35.8923%" y="165" width="0.0645%" height="15" fill="rgb(221,39,39)" fg:x="4451" fg:w="8"/><text x="36.1423%" y="175.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="35.9568%" y="165" width="0.0161%" height="15" fill="rgb(222,119,46)" fg:x="4459" fg:w="2"/><text x="36.2068%" y="175.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="35.9729%" y="165" width="0.0242%" height="15" fill="rgb(222,165,49)" fg:x="4461" fg:w="3"/><text x="36.2229%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="36.2874%" y="117" width="0.0323%" height="15" fill="rgb(219,113,52)" fg:x="4500" fg:w="4"/><text x="36.5374%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="36.3277%" y="101" width="0.0242%" height="15" fill="rgb(214,7,15)" fg:x="4505" fg:w="3"/><text x="36.5777%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="36.3197%" y="117" width="0.0403%" height="15" fill="rgb(235,32,4)" fg:x="4504" fg:w="5"/><text x="36.5697%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (43 samples, 0.35%)</title><rect x="36.0213%" y="133" width="0.3467%" height="15" fill="rgb(238,90,54)" fg:x="4467" fg:w="43"/><text x="36.2713%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="36.4084%" y="69" width="0.0161%" height="15" fill="rgb(213,208,19)" fg:x="4515" fg:w="2"/><text x="36.6584%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="36.4084%" y="53" width="0.0161%" height="15" fill="rgb(233,156,4)" fg:x="4515" fg:w="2"/><text x="36.6584%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="36.4084%" y="37" width="0.0161%" height="15" fill="rgb(207,194,5)" fg:x="4515" fg:w="2"/><text x="36.6584%" y="47.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="36.4084%" y="85" width="0.0242%" height="15" fill="rgb(206,111,30)" fg:x="4515" fg:w="3"/><text x="36.6584%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="36.4003%" y="101" width="0.0403%" height="15" fill="rgb(243,70,54)" fg:x="4514" fg:w="5"/><text x="36.6503%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (5 samples, 0.04%)</title><rect x="36.4406%" y="101" width="0.0403%" height="15" fill="rgb(242,28,8)" fg:x="4519" fg:w="5"/><text x="36.6906%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (21 samples, 0.17%)</title><rect x="36.4809%" y="101" width="0.1693%" height="15" fill="rgb(219,106,18)" fg:x="4524" fg:w="21"/><text x="36.7309%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (41 samples, 0.33%)</title><rect x="36.3680%" y="133" width="0.3306%" height="15" fill="rgb(244,222,10)" fg:x="4510" fg:w="41"/><text x="36.6180%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (41 samples, 0.33%)</title><rect x="36.3680%" y="117" width="0.3306%" height="15" fill="rgb(236,179,52)" fg:x="4510" fg:w="41"/><text x="36.6180%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (6 samples, 0.05%)</title><rect x="36.6503%" y="101" width="0.0484%" height="15" fill="rgb(213,23,39)" fg:x="4545" fg:w="6"/><text x="36.9003%" y="111.50"></text></g><g><title>rust-gkat`mi_free (10 samples, 0.08%)</title><rect x="36.7148%" y="133" width="0.0806%" height="15" fill="rgb(238,48,10)" fg:x="4553" fg:w="10"/><text x="36.9648%" y="143.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (100 samples, 0.81%)</title><rect x="35.9971%" y="165" width="0.8064%" height="15" fill="rgb(251,196,23)" fg:x="4464" fg:w="100"/><text x="36.2471%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 0.80%)</title><rect x="36.0052%" y="149" width="0.7983%" height="15" fill="rgb(250,152,24)" fg:x="4465" fg:w="99"/><text x="36.2552%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="36.8035%" y="165" width="0.0161%" height="15" fill="rgb(209,150,17)" fg:x="4564" fg:w="2"/><text x="37.0535%" y="175.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (5 samples, 0.04%)</title><rect x="36.8196%" y="165" width="0.0403%" height="15" fill="rgb(234,202,34)" fg:x="4566" fg:w="5"/><text x="37.0696%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="36.8599%" y="165" width="0.0161%" height="15" fill="rgb(253,148,53)" fg:x="4571" fg:w="2"/><text x="37.1099%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (282 samples, 2.27%)</title><rect x="36.8761%" y="165" width="2.2740%" height="15" fill="rgb(218,129,16)" fg:x="4573" fg:w="282"/><text x="37.1261%" y="175.50">r..</text></g><g><title>rust-gkat`mi_free (89 samples, 0.72%)</title><rect x="39.1501%" y="165" width="0.7177%" height="15" fill="rgb(216,85,19)" fg:x="4855" fg:w="89"/><text x="39.4001%" y="175.50"></text></g><g><title>rust-gkat`mi_free_generic_local (3 samples, 0.02%)</title><rect x="39.8678%" y="165" width="0.0242%" height="15" fill="rgb(235,228,7)" fg:x="4944" fg:w="3"/><text x="40.1178%" y="175.50"></text></g><g><title>rust-gkat`mi_find_page (3 samples, 0.02%)</title><rect x="39.9081%" y="133" width="0.0242%" height="15" fill="rgb(245,175,0)" fg:x="4949" fg:w="3"/><text x="40.1581%" y="143.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (9 samples, 0.07%)</title><rect x="39.9000%" y="149" width="0.0726%" height="15" fill="rgb(208,168,36)" fg:x="4948" fg:w="9"/><text x="40.1500%" y="159.50"></text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (5 samples, 0.04%)</title><rect x="39.9323%" y="133" width="0.0403%" height="15" fill="rgb(246,171,24)" fg:x="4952" fg:w="5"/><text x="40.1823%" y="143.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (11 samples, 0.09%)</title><rect x="39.8919%" y="165" width="0.0887%" height="15" fill="rgb(215,142,24)" fg:x="4947" fg:w="11"/><text x="40.1419%" y="175.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (38 samples, 0.31%)</title><rect x="39.9806%" y="165" width="0.3064%" height="15" fill="rgb(250,187,7)" fg:x="4958" fg:w="38"/><text x="40.2306%" y="175.50"></text></g><g><title>rust-gkat`mi_page_queue_enqueue_from (2 samples, 0.02%)</title><rect x="40.2871%" y="165" width="0.0161%" height="15" fill="rgb(228,66,33)" fg:x="4996" fg:w="2"/><text x="40.5371%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="43.3836%" y="149" width="0.0242%" height="15" fill="rgb(234,215,21)" fg:x="5380" fg:w="3"/><text x="43.6336%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.31%)</title><rect x="45.3351%" y="133" width="0.3064%" height="15" fill="rgb(222,191,20)" fg:x="5622" fg:w="38"/><text x="45.5851%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (14 samples, 0.11%)</title><rect x="45.6415%" y="133" width="0.1129%" height="15" fill="rgb(245,79,54)" fg:x="5660" fg:w="14"/><text x="45.8915%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="45.7705%" y="117" width="0.0403%" height="15" fill="rgb(240,10,37)" fg:x="5676" fg:w="5"/><text x="46.0205%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.08%)</title><rect x="45.9237%" y="101" width="0.0806%" height="15" fill="rgb(214,192,32)" fg:x="5695" fg:w="10"/><text x="46.1737%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="46.0044%" y="101" width="0.0403%" height="15" fill="rgb(209,36,54)" fg:x="5705" fg:w="5"/><text x="46.2544%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.31%)</title><rect x="45.7544%" y="133" width="0.3145%" height="15" fill="rgb(220,10,11)" fg:x="5674" fg:w="39"/><text x="46.0044%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.24%)</title><rect x="45.8269%" y="117" width="0.2419%" height="15" fill="rgb(221,106,17)" fg:x="5683" fg:w="30"/><text x="46.0769%" y="127.50"></text></g><g><title>rust-gkat`mi_segment_free (2 samples, 0.02%)</title><rect x="46.0527%" y="101" width="0.0161%" height="15" fill="rgb(251,142,44)" fg:x="5711" fg:w="2"/><text x="46.3027%" y="111.50"></text></g><g><title>rust-gkat`mi_find_page (2 samples, 0.02%)</title><rect x="46.0689%" y="101" width="0.0161%" height="15" fill="rgb(238,13,15)" fg:x="5713" fg:w="2"/><text x="46.3189%" y="111.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (3 samples, 0.02%)</title><rect x="46.0689%" y="117" width="0.0242%" height="15" fill="rgb(208,107,27)" fg:x="5713" fg:w="3"/><text x="46.3189%" y="127.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (4 samples, 0.03%)</title><rect x="46.0689%" y="133" width="0.0323%" height="15" fill="rgb(205,136,37)" fg:x="5713" fg:w="4"/><text x="46.3189%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (337 samples, 2.72%)</title><rect x="43.4078%" y="149" width="2.7175%" height="15" fill="rgb(250,205,27)" fg:x="5383" fg:w="337"/><text x="43.6578%" y="159.50">ru..</text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 0.02%)</title><rect x="46.1011%" y="133" width="0.0242%" height="15" fill="rgb(210,80,43)" fg:x="5717" fg:w="3"/><text x="46.3511%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="46.5366%" y="69" width="0.0242%" height="15" fill="rgb(247,160,36)" fg:x="5771" fg:w="3"/><text x="46.7866%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="46.5366%" y="53" width="0.0242%" height="15" fill="rgb(234,13,49)" fg:x="5771" fg:w="3"/><text x="46.7866%" y="63.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="46.5446%" y="37" width="0.0161%" height="15" fill="rgb(234,122,0)" fg:x="5772" fg:w="2"/><text x="46.7946%" y="47.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.06%)</title><rect x="46.5366%" y="85" width="0.0564%" height="15" fill="rgb(207,146,38)" fg:x="5771" fg:w="7"/><text x="46.7866%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="46.5769%" y="69" width="0.0161%" height="15" fill="rgb(207,177,25)" fg:x="5776" fg:w="2"/><text x="46.8269%" y="79.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="46.6011%" y="85" width="0.0242%" height="15" fill="rgb(211,178,42)" fg:x="5779" fg:w="3"/><text x="46.8511%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (16 samples, 0.13%)</title><rect x="46.5285%" y="101" width="0.1290%" height="15" fill="rgb(230,69,54)" fg:x="5770" fg:w="16"/><text x="46.7785%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="46.6253%" y="85" width="0.0323%" height="15" fill="rgb(214,135,41)" fg:x="5782" fg:w="4"/><text x="46.8753%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (9 samples, 0.07%)</title><rect x="46.6575%" y="101" width="0.0726%" height="15" fill="rgb(237,67,25)" fg:x="5786" fg:w="9"/><text x="46.9075%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (26 samples, 0.21%)</title><rect x="46.7301%" y="101" width="0.2097%" height="15" fill="rgb(222,189,50)" fg:x="5795" fg:w="26"/><text x="46.9801%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (88 samples, 0.71%)</title><rect x="46.2947%" y="133" width="0.7096%" height="15" fill="rgb(245,148,34)" fg:x="5741" fg:w="88"/><text x="46.5447%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (84 samples, 0.68%)</title><rect x="46.3269%" y="117" width="0.6774%" height="15" fill="rgb(222,29,6)" fg:x="5745" fg:w="84"/><text x="46.5769%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (8 samples, 0.06%)</title><rect x="46.9398%" y="101" width="0.0645%" height="15" fill="rgb(221,189,43)" fg:x="5821" fg:w="8"/><text x="47.1898%" y="111.50"></text></g><g><title>rust-gkat`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="47.0043%" y="133" width="0.0161%" height="15" fill="rgb(207,36,27)" fg:x="5829" fg:w="2"/><text x="47.2543%" y="143.50"></text></g><g><title>rust-gkat`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="47.0043%" y="117" width="0.0161%" height="15" fill="rgb(217,90,24)" fg:x="5829" fg:w="2"/><text x="47.2543%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (117 samples, 0.94%)</title><rect x="46.1253%" y="149" width="0.9435%" height="15" fill="rgb(224,66,35)" fg:x="5720" fg:w="117"/><text x="46.3753%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="47.0204%" y="133" width="0.0484%" height="15" fill="rgb(221,13,50)" fg:x="5831" fg:w="6"/><text x="47.2704%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="47.2139%" y="133" width="0.0242%" height="15" fill="rgb(236,68,49)" fg:x="5855" fg:w="3"/><text x="47.4639%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.24%)</title><rect x="47.0688%" y="149" width="0.2419%" height="15" fill="rgb(229,146,28)" fg:x="5837" fg:w="30"/><text x="47.3188%" y="159.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (9 samples, 0.07%)</title><rect x="47.2381%" y="133" width="0.0726%" height="15" fill="rgb(225,31,38)" fg:x="5858" fg:w="9"/><text x="47.4881%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="47.3591%" y="85" width="0.0161%" height="15" fill="rgb(250,208,3)" fg:x="5873" fg:w="2"/><text x="47.6091%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="47.3591%" y="69" width="0.0161%" height="15" fill="rgb(246,54,23)" fg:x="5873" fg:w="2"/><text x="47.6091%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (8 samples, 0.06%)</title><rect x="47.3752%" y="85" width="0.0645%" height="15" fill="rgb(243,76,11)" fg:x="5875" fg:w="8"/><text x="47.6252%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheResize (4 samples, 0.03%)</title><rect x="47.4075%" y="69" width="0.0323%" height="15" fill="rgb(245,21,50)" fg:x="5879" fg:w="4"/><text x="47.6575%" y="79.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="47.4397%" y="85" width="0.0403%" height="15" fill="rgb(228,9,43)" fg:x="5883" fg:w="5"/><text x="47.6897%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (18 samples, 0.15%)</title><rect x="47.3591%" y="101" width="0.1451%" height="15" fill="rgb(208,100,47)" fg:x="5873" fg:w="18"/><text x="47.6091%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="47.4800%" y="85" width="0.0242%" height="15" fill="rgb(232,26,8)" fg:x="5888" fg:w="3"/><text x="47.7300%" y="95.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (19 samples, 0.15%)</title><rect x="47.3591%" y="117" width="0.1532%" height="15" fill="rgb(216,166,38)" fg:x="5873" fg:w="19"/><text x="47.6091%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.18%)</title><rect x="47.3430%" y="133" width="0.1774%" height="15" fill="rgb(251,202,51)" fg:x="5871" fg:w="22"/><text x="47.5930%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="47.5687%" y="85" width="0.0161%" height="15" fill="rgb(254,216,34)" fg:x="5899" fg:w="2"/><text x="47.8187%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="47.5687%" y="101" width="0.0242%" height="15" fill="rgb(251,32,27)" fg:x="5899" fg:w="3"/><text x="47.8187%" y="111.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="47.5929%" y="101" width="0.0242%" height="15" fill="rgb(208,127,28)" fg:x="5902" fg:w="3"/><text x="47.8429%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="47.6171%" y="101" width="0.0484%" height="15" fill="rgb(224,137,22)" fg:x="5905" fg:w="6"/><text x="47.8671%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (20 samples, 0.16%)</title><rect x="47.5284%" y="133" width="0.1613%" height="15" fill="rgb(254,70,32)" fg:x="5894" fg:w="20"/><text x="47.7784%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (20 samples, 0.16%)</title><rect x="47.5284%" y="117" width="0.1613%" height="15" fill="rgb(229,75,37)" fg:x="5894" fg:w="20"/><text x="47.7784%" y="127.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="47.6655%" y="101" width="0.0242%" height="15" fill="rgb(252,64,23)" fg:x="5911" fg:w="3"/><text x="47.9155%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="47.6897%" y="133" width="0.0242%" height="15" fill="rgb(232,162,48)" fg:x="5914" fg:w="3"/><text x="47.9397%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (52 samples, 0.42%)</title><rect x="47.3107%" y="149" width="0.4193%" height="15" fill="rgb(246,160,12)" fg:x="5867" fg:w="52"/><text x="47.5607%" y="159.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.02%)</title><rect x="47.7139%" y="133" width="0.0161%" height="15" fill="rgb(247,166,0)" fg:x="5917" fg:w="2"/><text x="47.9639%" y="143.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.02%)</title><rect x="47.7300%" y="149" width="0.0161%" height="15" fill="rgb(249,219,21)" fg:x="5919" fg:w="2"/><text x="47.9800%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (104 samples, 0.84%)</title><rect x="47.7461%" y="149" width="0.8386%" height="15" fill="rgb(205,209,3)" fg:x="5921" fg:w="104"/><text x="47.9961%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (49 samples, 0.40%)</title><rect x="48.5848%" y="149" width="0.3951%" height="15" fill="rgb(243,44,1)" fg:x="6025" fg:w="49"/><text x="48.8348%" y="159.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.04%)</title><rect x="49.0041%" y="149" width="0.0403%" height="15" fill="rgb(206,159,16)" fg:x="6077" fg:w="5"/><text x="49.2541%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="49.5605%" y="101" width="0.0242%" height="15" fill="rgb(244,77,30)" fg:x="6146" fg:w="3"/><text x="49.8105%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="49.5847%" y="101" width="0.0161%" height="15" fill="rgb(218,69,12)" fg:x="6149" fg:w="2"/><text x="49.8347%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="49.6008%" y="101" width="0.0323%" height="15" fill="rgb(212,87,7)" fg:x="6151" fg:w="4"/><text x="49.8508%" y="111.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="49.6089%" y="85" width="0.0242%" height="15" fill="rgb(245,114,25)" fg:x="6152" fg:w="3"/><text x="49.8589%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (72 samples, 0.58%)</title><rect x="49.0686%" y="117" width="0.5806%" height="15" fill="rgb(210,61,42)" fg:x="6085" fg:w="72"/><text x="49.3186%" y="127.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.02%)</title><rect x="49.6331%" y="101" width="0.0161%" height="15" fill="rgb(211,52,33)" fg:x="6155" fg:w="2"/><text x="49.8831%" y="111.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (2 samples, 0.02%)</title><rect x="49.6331%" y="85" width="0.0161%" height="15" fill="rgb(234,58,33)" fg:x="6155" fg:w="2"/><text x="49.8831%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="49.7057%" y="69" width="0.0161%" height="15" fill="rgb(220,115,36)" fg:x="6164" fg:w="2"/><text x="49.9557%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.08%)</title><rect x="49.6734%" y="85" width="0.0806%" height="15" fill="rgb(243,153,54)" fg:x="6160" fg:w="10"/><text x="49.9234%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="49.7299%" y="69" width="0.0242%" height="15" fill="rgb(251,47,18)" fg:x="6167" fg:w="3"/><text x="49.9799%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (10 samples, 0.08%)</title><rect x="49.7541%" y="85" width="0.0806%" height="15" fill="rgb(242,102,42)" fg:x="6170" fg:w="10"/><text x="50.0041%" y="95.50"></text></g><g><title>rust-gkat`cuddReclaim (19 samples, 0.15%)</title><rect x="49.8347%" y="85" width="0.1532%" height="15" fill="rgb(234,31,38)" fg:x="6180" fg:w="19"/><text x="50.0847%" y="95.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (45 samples, 0.36%)</title><rect x="49.6492%" y="117" width="0.3629%" height="15" fill="rgb(221,117,51)" fg:x="6157" fg:w="45"/><text x="49.8992%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (44 samples, 0.35%)</title><rect x="49.6573%" y="101" width="0.3548%" height="15" fill="rgb(212,20,18)" fg:x="6158" fg:w="44"/><text x="49.9073%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="49.9879%" y="85" width="0.0242%" height="15" fill="rgb(245,133,36)" fg:x="6199" fg:w="3"/><text x="50.2379%" y="95.50"></text></g><g><title>rust-gkat`mi_free (19 samples, 0.15%)</title><rect x="50.0202%" y="117" width="0.1532%" height="15" fill="rgb(212,6,19)" fg:x="6203" fg:w="19"/><text x="50.2702%" y="127.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (143 samples, 1.15%)</title><rect x="49.0444%" y="149" width="1.1531%" height="15" fill="rgb(218,1,36)" fg:x="6082" fg:w="143"/><text x="49.2944%" y="159.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (143 samples, 1.15%)</title><rect x="49.0444%" y="133" width="1.1531%" height="15" fill="rgb(246,84,54)" fg:x="6082" fg:w="143"/><text x="49.2944%" y="143.50"></text></g><g><title>rust-gkat`mi_free_generic_local (3 samples, 0.02%)</title><rect x="50.1734%" y="117" width="0.0242%" height="15" fill="rgb(242,110,6)" fg:x="6222" fg:w="3"/><text x="50.4234%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="50.1976%" y="149" width="0.0403%" height="15" fill="rgb(214,47,5)" fg:x="6225" fg:w="5"/><text x="50.4476%" y="159.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (4 samples, 0.03%)</title><rect x="50.2379%" y="149" width="0.0323%" height="15" fill="rgb(218,159,25)" fg:x="6230" fg:w="4"/><text x="50.4879%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (282 samples, 2.27%)</title><rect x="50.2701%" y="149" width="2.2740%" height="15" fill="rgb(215,211,28)" fg:x="6234" fg:w="282"/><text x="50.5201%" y="159.50">r..</text></g><g><title>rust-gkat`mi_free (69 samples, 0.56%)</title><rect x="52.5441%" y="149" width="0.5564%" height="15" fill="rgb(238,59,32)" fg:x="6516" fg:w="69"/><text x="52.7941%" y="159.50"></text></g><g><title>rust-gkat`mi_find_page (4 samples, 0.03%)</title><rect x="53.1570%" y="117" width="0.0323%" height="15" fill="rgb(226,82,3)" fg:x="6592" fg:w="4"/><text x="53.4070%" y="127.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (11 samples, 0.09%)</title><rect x="53.1086%" y="149" width="0.0887%" height="15" fill="rgb(240,164,32)" fg:x="6586" fg:w="11"/><text x="53.3586%" y="159.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (8 samples, 0.06%)</title><rect x="53.1328%" y="133" width="0.0645%" height="15" fill="rgb(232,46,7)" fg:x="6589" fg:w="8"/><text x="53.3828%" y="143.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (32 samples, 0.26%)</title><rect x="53.1973%" y="149" width="0.2580%" height="15" fill="rgb(229,129,53)" fg:x="6597" fg:w="32"/><text x="53.4473%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.10%)</title><rect x="56.7938%" y="117" width="0.1048%" height="15" fill="rgb(234,188,29)" fg:x="7043" fg:w="13"/><text x="57.0438%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (7 samples, 0.06%)</title><rect x="56.8986%" y="117" width="0.0564%" height="15" fill="rgb(246,141,4)" fg:x="7056" fg:w="7"/><text x="57.1486%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (69 samples, 0.56%)</title><rect x="56.9551%" y="101" width="0.5564%" height="15" fill="rgb(229,23,39)" fg:x="7063" fg:w="69"/><text x="57.2051%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (70 samples, 0.56%)</title><rect x="56.9551%" y="117" width="0.5645%" height="15" fill="rgb(206,12,3)" fg:x="7063" fg:w="70"/><text x="57.2051%" y="127.50"></text></g><g><title>rust-gkat`mi_page_free_list_extend (2 samples, 0.02%)</title><rect x="57.5196%" y="85" width="0.0161%" height="15" fill="rgb(252,226,20)" fg:x="7133" fg:w="2"/><text x="57.7696%" y="95.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (3 samples, 0.02%)</title><rect x="57.5196%" y="117" width="0.0242%" height="15" fill="rgb(216,123,35)" fg:x="7133" fg:w="3"/><text x="57.7696%" y="127.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (3 samples, 0.02%)</title><rect x="57.5196%" y="101" width="0.0242%" height="15" fill="rgb(212,68,40)" fg:x="7133" fg:w="3"/><text x="57.7696%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (235 samples, 1.90%)</title><rect x="55.6649%" y="133" width="1.8950%" height="15" fill="rgb(254,125,32)" fg:x="6903" fg:w="235"/><text x="55.9149%" y="143.50">r..</text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.02%)</title><rect x="57.5437%" y="117" width="0.0161%" height="15" fill="rgb(253,97,22)" fg:x="7136" fg:w="2"/><text x="57.7937%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="57.7373%" y="85" width="0.0242%" height="15" fill="rgb(241,101,14)" fg:x="7160" fg:w="3"/><text x="57.9873%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="57.7615%" y="85" width="0.0161%" height="15" fill="rgb(238,103,29)" fg:x="7163" fg:w="2"/><text x="58.0115%" y="95.50"></text></g><g><title>rust-gkat`cuddReclaim (18 samples, 0.15%)</title><rect x="57.7776%" y="85" width="0.1451%" height="15" fill="rgb(233,195,47)" fg:x="7165" fg:w="18"/><text x="58.0276%" y="95.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (37 samples, 0.30%)</title><rect x="57.6566%" y="117" width="0.2984%" height="15" fill="rgb(246,218,30)" fg:x="7150" fg:w="37"/><text x="57.9066%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (35 samples, 0.28%)</title><rect x="57.6728%" y="101" width="0.2822%" height="15" fill="rgb(219,145,47)" fg:x="7152" fg:w="35"/><text x="57.9228%" y="111.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="57.9227%" y="85" width="0.0323%" height="15" fill="rgb(243,12,26)" fg:x="7183" fg:w="4"/><text x="58.1727%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (54 samples, 0.44%)</title><rect x="57.5599%" y="133" width="0.4354%" height="15" fill="rgb(214,87,16)" fg:x="7138" fg:w="54"/><text x="57.8099%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="57.9550%" y="117" width="0.0403%" height="15" fill="rgb(208,99,42)" fg:x="7187" fg:w="5"/><text x="58.2050%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="58.0518%" y="117" width="0.0242%" height="15" fill="rgb(253,99,2)" fg:x="7199" fg:w="3"/><text x="58.3018%" y="127.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.13%)</title><rect x="57.9953%" y="133" width="0.1290%" height="15" fill="rgb(220,168,23)" fg:x="7192" fg:w="16"/><text x="58.2453%" y="143.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (6 samples, 0.05%)</title><rect x="58.0760%" y="117" width="0.0484%" height="15" fill="rgb(242,38,24)" fg:x="7202" fg:w="6"/><text x="58.3260%" y="127.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="58.1485%" y="69" width="0.0484%" height="15" fill="rgb(225,182,9)" fg:x="7211" fg:w="6"/><text x="58.3985%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.07%)</title><rect x="58.1324%" y="117" width="0.0726%" height="15" fill="rgb(243,178,37)" fg:x="7209" fg:w="9"/><text x="58.3824%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (9 samples, 0.07%)</title><rect x="58.1324%" y="101" width="0.0726%" height="15" fill="rgb(232,139,19)" fg:x="7209" fg:w="9"/><text x="58.3824%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (9 samples, 0.07%)</title><rect x="58.1324%" y="85" width="0.0726%" height="15" fill="rgb(225,201,24)" fg:x="7209" fg:w="9"/><text x="58.3824%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="58.2292%" y="85" width="0.0161%" height="15" fill="rgb(221,47,46)" fg:x="7221" fg:w="2"/><text x="58.4792%" y="95.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (14 samples, 0.11%)</title><rect x="58.2050%" y="117" width="0.1129%" height="15" fill="rgb(249,23,13)" fg:x="7218" fg:w="14"/><text x="58.4550%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.10%)</title><rect x="58.2130%" y="101" width="0.1048%" height="15" fill="rgb(219,9,5)" fg:x="7219" fg:w="13"/><text x="58.4630%" y="111.50"></text></g><g><title>rust-gkat`cuddReclaim (9 samples, 0.07%)</title><rect x="58.2453%" y="85" width="0.0726%" height="15" fill="rgb(254,171,16)" fg:x="7223" fg:w="9"/><text x="58.4953%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.25%)</title><rect x="58.1243%" y="133" width="0.2500%" height="15" fill="rgb(230,171,20)" fg:x="7208" fg:w="31"/><text x="58.3743%" y="143.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (6 samples, 0.05%)</title><rect x="58.3259%" y="117" width="0.0484%" height="15" fill="rgb(210,71,41)" fg:x="7233" fg:w="6"/><text x="58.5759%" y="127.50"></text></g><g><title>rust-gkat`Cudd_ReadLogicZero (2 samples, 0.02%)</title><rect x="58.3743%" y="133" width="0.0161%" height="15" fill="rgb(206,173,20)" fg:x="7239" fg:w="2"/><text x="58.6243%" y="143.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (49 samples, 0.40%)</title><rect x="58.3905%" y="133" width="0.3951%" height="15" fill="rgb(233,88,34)" fg:x="7241" fg:w="49"/><text x="58.6405%" y="143.50"></text></g><g><title>rust-gkat`Cudd_Ref (26 samples, 0.21%)</title><rect x="58.7856%" y="133" width="0.2097%" height="15" fill="rgb(223,209,46)" fg:x="7290" fg:w="26"/><text x="59.0356%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="58.9952%" y="133" width="0.0242%" height="15" fill="rgb(250,43,18)" fg:x="7316" fg:w="3"/><text x="59.2452%" y="143.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="59.0194%" y="133" width="0.0161%" height="15" fill="rgb(208,13,10)" fg:x="7319" fg:w="2"/><text x="59.2694%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="59.2855%" y="85" width="0.0242%" height="15" fill="rgb(212,200,36)" fg:x="7352" fg:w="3"/><text x="59.5355%" y="95.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="59.3097%" y="85" width="0.0161%" height="15" fill="rgb(225,90,30)" fg:x="7355" fg:w="2"/><text x="59.5597%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (37 samples, 0.30%)</title><rect x="59.0436%" y="101" width="0.2984%" height="15" fill="rgb(236,182,39)" fg:x="7322" fg:w="37"/><text x="59.2936%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="59.3581%" y="53" width="0.0161%" height="15" fill="rgb(212,144,35)" fg:x="7361" fg:w="2"/><text x="59.6081%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="59.3581%" y="37" width="0.0161%" height="15" fill="rgb(228,63,44)" fg:x="7361" fg:w="2"/><text x="59.6081%" y="47.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="59.3501%" y="69" width="0.0645%" height="15" fill="rgb(228,109,6)" fg:x="7360" fg:w="8"/><text x="59.6001%" y="79.50"></text></g><g><title>rust-gkat`cuddUniqueInter (4 samples, 0.03%)</title><rect x="59.3823%" y="53" width="0.0323%" height="15" fill="rgb(238,117,24)" fg:x="7364" fg:w="4"/><text x="59.6323%" y="63.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="59.4226%" y="69" width="0.0242%" height="15" fill="rgb(242,26,26)" fg:x="7369" fg:w="3"/><text x="59.6726%" y="79.50"></text></g><g><title>rust-gkat`cuddReclaim (13 samples, 0.10%)</title><rect x="59.4468%" y="69" width="0.1048%" height="15" fill="rgb(221,92,48)" fg:x="7372" fg:w="13"/><text x="59.6968%" y="79.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (27 samples, 0.22%)</title><rect x="59.3420%" y="101" width="0.2177%" height="15" fill="rgb(209,209,32)" fg:x="7359" fg:w="27"/><text x="59.5920%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (27 samples, 0.22%)</title><rect x="59.3420%" y="85" width="0.2177%" height="15" fill="rgb(221,70,22)" fg:x="7359" fg:w="27"/><text x="59.5920%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 0.60%)</title><rect x="59.0356%" y="117" width="0.5967%" height="15" fill="rgb(248,145,5)" fg:x="7321" fg:w="74"/><text x="59.2856%" y="127.50"></text></g><g><title>rust-gkat`mi_free (6 samples, 0.05%)</title><rect x="59.5839%" y="101" width="0.0484%" height="15" fill="rgb(226,116,26)" fg:x="7389" fg:w="6"/><text x="59.8339%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (77 samples, 0.62%)</title><rect x="59.0356%" y="133" width="0.6209%" height="15" fill="rgb(244,5,17)" fg:x="7321" fg:w="77"/><text x="59.2856%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (8 samples, 0.06%)</title><rect x="59.6565%" y="133" width="0.0645%" height="15" fill="rgb(252,159,33)" fg:x="7398" fg:w="8"/><text x="59.9065%" y="143.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (6 samples, 0.05%)</title><rect x="59.7210%" y="133" width="0.0484%" height="15" fill="rgb(206,71,0)" fg:x="7406" fg:w="6"/><text x="59.9710%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (194 samples, 1.56%)</title><rect x="59.7774%" y="133" width="1.5644%" height="15" fill="rgb(233,118,54)" fg:x="7413" fg:w="194"/><text x="60.0274%" y="143.50"></text></g><g><title>rust-gkat`mi_free (28 samples, 0.23%)</title><rect x="61.3418%" y="133" width="0.2258%" height="15" fill="rgb(234,83,48)" fg:x="7607" fg:w="28"/><text x="61.5918%" y="143.50"></text></g><g><title>rust-gkat`mi_free_generic_local (3 samples, 0.02%)</title><rect x="61.5676%" y="133" width="0.0242%" height="15" fill="rgb(228,3,54)" fg:x="7635" fg:w="3"/><text x="61.8176%" y="143.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (3 samples, 0.02%)</title><rect x="61.5918%" y="133" width="0.0242%" height="15" fill="rgb(226,155,13)" fg:x="7638" fg:w="3"/><text x="61.8418%" y="143.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (3 samples, 0.02%)</title><rect x="61.5918%" y="117" width="0.0242%" height="15" fill="rgb(241,28,37)" fg:x="7638" fg:w="3"/><text x="61.8418%" y="127.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (23 samples, 0.19%)</title><rect x="61.6160%" y="133" width="0.1855%" height="15" fill="rgb(233,93,10)" fg:x="7641" fg:w="23"/><text x="61.8660%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="63.5271%" y="101" width="0.0645%" height="15" fill="rgb(225,113,19)" fg:x="7878" fg:w="8"/><text x="63.7771%" y="111.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="63.5916%" y="101" width="0.0242%" height="15" fill="rgb(241,2,18)" fg:x="7886" fg:w="3"/><text x="63.8416%" y="111.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="63.6320%" y="85" width="0.0161%" height="15" fill="rgb(228,207,21)" fg:x="7891" fg:w="2"/><text x="63.8820%" y="95.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="63.6158%" y="101" width="0.0403%" height="15" fill="rgb(213,211,35)" fg:x="7889" fg:w="5"/><text x="63.8658%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (74 samples, 0.60%)</title><rect x="63.0756%" y="117" width="0.5967%" height="15" fill="rgb(209,83,10)" fg:x="7822" fg:w="74"/><text x="63.3256%" y="127.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (2 samples, 0.02%)</title><rect x="63.6562%" y="101" width="0.0161%" height="15" fill="rgb(209,164,1)" fg:x="7894" fg:w="2"/><text x="63.9062%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="63.7771%" y="53" width="0.0161%" height="15" fill="rgb(213,184,43)" fg:x="7909" fg:w="2"/><text x="64.0271%" y="63.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="63.7771%" y="69" width="0.0242%" height="15" fill="rgb(231,61,34)" fg:x="7909" fg:w="3"/><text x="64.0271%" y="79.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="63.8094%" y="69" width="0.0484%" height="15" fill="rgb(235,75,3)" fg:x="7913" fg:w="6"/><text x="64.0594%" y="79.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (20 samples, 0.16%)</title><rect x="63.7207%" y="101" width="0.1613%" height="15" fill="rgb(220,106,47)" fg:x="7902" fg:w="20"/><text x="63.9707%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (19 samples, 0.15%)</title><rect x="63.7287%" y="85" width="0.1532%" height="15" fill="rgb(210,196,33)" fg:x="7903" fg:w="19"/><text x="63.9787%" y="95.50"></text></g><g><title>rust-gkat`cuddUniqueInter (3 samples, 0.02%)</title><rect x="63.8578%" y="69" width="0.0242%" height="15" fill="rgb(229,154,42)" fg:x="7919" fg:w="3"/><text x="64.1078%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.25%)</title><rect x="63.6723%" y="117" width="0.2500%" height="15" fill="rgb(228,114,26)" fg:x="7896" fg:w="31"/><text x="63.9223%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="63.8819%" y="101" width="0.0403%" height="15" fill="rgb(208,144,1)" fg:x="7922" fg:w="5"/><text x="64.1319%" y="111.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.11%)</title><rect x="63.9223%" y="117" width="0.1129%" height="15" fill="rgb(239,112,37)" fg:x="7927" fg:w="14"/><text x="64.1723%" y="127.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (5 samples, 0.04%)</title><rect x="63.9948%" y="101" width="0.0403%" height="15" fill="rgb(210,96,50)" fg:x="7936" fg:w="5"/><text x="64.2448%" y="111.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="64.0432%" y="101" width="0.0323%" height="15" fill="rgb(222,178,2)" fg:x="7942" fg:w="4"/><text x="64.2932%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="64.0513%" y="85" width="0.0242%" height="15" fill="rgb(226,74,18)" fg:x="7943" fg:w="3"/><text x="64.3013%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="64.0513%" y="69" width="0.0242%" height="15" fill="rgb(225,67,54)" fg:x="7943" fg:w="3"/><text x="64.3013%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.07%)</title><rect x="64.0352%" y="117" width="0.0726%" height="15" fill="rgb(251,92,32)" fg:x="7941" fg:w="9"/><text x="64.2852%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="64.0755%" y="101" width="0.0323%" height="15" fill="rgb(228,149,22)" fg:x="7946" fg:w="4"/><text x="64.3255%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="64.0835%" y="85" width="0.0242%" height="15" fill="rgb(243,54,13)" fg:x="7947" fg:w="3"/><text x="64.3335%" y="95.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (21 samples, 0.17%)</title><rect x="64.1158%" y="117" width="0.1693%" height="15" fill="rgb(243,180,28)" fg:x="7951" fg:w="21"/><text x="64.3658%" y="127.50"></text></g><g><title>rust-gkat`Cudd_Ref (15 samples, 0.12%)</title><rect x="64.2851%" y="117" width="0.1210%" height="15" fill="rgb(208,167,24)" fg:x="7972" fg:w="15"/><text x="64.5351%" y="127.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="64.4142%" y="117" width="0.0242%" height="15" fill="rgb(245,73,45)" fg:x="7988" fg:w="3"/><text x="64.6642%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="64.5512%" y="69" width="0.0161%" height="15" fill="rgb(237,203,48)" fg:x="8005" fg:w="2"/><text x="64.8012%" y="79.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (16 samples, 0.13%)</title><rect x="64.4464%" y="85" width="0.1290%" height="15" fill="rgb(211,197,16)" fg:x="7992" fg:w="16"/><text x="64.6964%" y="95.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="64.5754%" y="37" width="0.0161%" height="15" fill="rgb(243,99,51)" fg:x="8008" fg:w="2"/><text x="64.8254%" y="47.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="64.5754%" y="53" width="0.0242%" height="15" fill="rgb(215,123,29)" fg:x="8008" fg:w="3"/><text x="64.8254%" y="63.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="64.5996%" y="53" width="0.0242%" height="15" fill="rgb(239,186,37)" fg:x="8011" fg:w="3"/><text x="64.8496%" y="63.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="64.6238%" y="53" width="0.0403%" height="15" fill="rgb(252,136,39)" fg:x="8014" fg:w="5"/><text x="64.8738%" y="63.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (13 samples, 0.10%)</title><rect x="64.5754%" y="85" width="0.1048%" height="15" fill="rgb(223,213,32)" fg:x="8008" fg:w="13"/><text x="64.8254%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (13 samples, 0.10%)</title><rect x="64.5754%" y="69" width="0.1048%" height="15" fill="rgb(233,115,5)" fg:x="8008" fg:w="13"/><text x="64.8254%" y="79.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="64.6641%" y="53" width="0.0161%" height="15" fill="rgb(207,226,44)" fg:x="8019" fg:w="2"/><text x="64.9141%" y="63.50"></text></g><g><title>rust-gkat`mi_free (7 samples, 0.06%)</title><rect x="64.6803%" y="85" width="0.0564%" height="15" fill="rgb(208,126,0)" fg:x="8021" fg:w="7"/><text x="64.9303%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.31%)</title><rect x="64.4384%" y="101" width="0.3064%" height="15" fill="rgb(244,66,21)" fg:x="7991" fg:w="38"/><text x="64.6884%" y="111.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (39 samples, 0.31%)</title><rect x="64.4384%" y="117" width="0.3145%" height="15" fill="rgb(222,97,12)" fg:x="7991" fg:w="39"/><text x="64.6884%" y="127.50"></text></g><g><title>rust-gkat`core::ptr::drop_in_place&lt;rust_gkat::syntax::exp::Exp_&gt; (2 samples, 0.02%)</title><rect x="64.7609%" y="117" width="0.0161%" height="15" fill="rgb(219,213,19)" fg:x="8031" fg:w="2"/><text x="65.0109%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (93 samples, 0.75%)</title><rect x="64.7770%" y="117" width="0.7499%" height="15" fill="rgb(252,169,30)" fg:x="8033" fg:w="93"/><text x="65.0270%" y="127.50"></text></g><g><title>rust-gkat`mi_free (17 samples, 0.14%)</title><rect x="65.5270%" y="117" width="0.1371%" height="15" fill="rgb(206,32,51)" fg:x="8126" fg:w="17"/><text x="65.7770%" y="127.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (11 samples, 0.09%)</title><rect x="65.6721%" y="117" width="0.0887%" height="15" fill="rgb(250,172,42)" fg:x="8144" fg:w="11"/><text x="65.9221%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.10%)</title><rect x="66.3898%" y="101" width="0.0968%" height="15" fill="rgb(209,34,43)" fg:x="8233" fg:w="12"/><text x="66.6398%" y="111.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="66.4543%" y="85" width="0.0323%" height="15" fill="rgb(223,11,35)" fg:x="8241" fg:w="4"/><text x="66.7043%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.04%)</title><rect x="66.4866%" y="101" width="0.0403%" height="15" fill="rgb(251,219,26)" fg:x="8245" fg:w="5"/><text x="66.7366%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="66.4946%" y="85" width="0.0323%" height="15" fill="rgb(231,119,3)" fg:x="8246" fg:w="4"/><text x="66.7446%" y="95.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="66.5027%" y="69" width="0.0242%" height="15" fill="rgb(216,97,11)" fg:x="8247" fg:w="3"/><text x="66.7527%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="66.5269%" y="101" width="0.0242%" height="15" fill="rgb(223,59,9)" fg:x="8250" fg:w="3"/><text x="66.7769%" y="111.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="66.5511%" y="85" width="0.0242%" height="15" fill="rgb(233,93,31)" fg:x="8253" fg:w="3"/><text x="66.8011%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.04%)</title><rect x="66.5511%" y="101" width="0.0403%" height="15" fill="rgb(239,81,33)" fg:x="8253" fg:w="5"/><text x="66.8011%" y="111.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (7 samples, 0.06%)</title><rect x="66.6075%" y="101" width="0.0564%" height="15" fill="rgb(213,120,34)" fg:x="8260" fg:w="7"/><text x="66.8575%" y="111.50"></text></g><g><title>rust-gkat`Cudd_Ref (6 samples, 0.05%)</title><rect x="66.6640%" y="101" width="0.0484%" height="15" fill="rgb(243,49,53)" fg:x="8267" fg:w="6"/><text x="66.9140%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="66.7124%" y="101" width="0.0242%" height="15" fill="rgb(247,216,33)" fg:x="8273" fg:w="3"/><text x="66.9624%" y="111.50"></text></g><g><title>rust-gkat`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="66.7366%" y="101" width="0.0161%" height="15" fill="rgb(226,26,14)" fg:x="8276" fg:w="2"/><text x="66.9866%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (7 samples, 0.06%)</title><rect x="66.7527%" y="69" width="0.0564%" height="15" fill="rgb(215,49,53)" fg:x="8278" fg:w="7"/><text x="67.0027%" y="79.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (3 samples, 0.02%)</title><rect x="66.8253%" y="37" width="0.0242%" height="15" fill="rgb(245,162,40)" fg:x="8287" fg:w="3"/><text x="67.0753%" y="47.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="66.8494%" y="37" width="0.0161%" height="15" fill="rgb(229,68,17)" fg:x="8290" fg:w="2"/><text x="67.0994%" y="47.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (8 samples, 0.06%)</title><rect x="66.8091%" y="69" width="0.0645%" height="15" fill="rgb(213,182,10)" fg:x="8285" fg:w="8"/><text x="67.0591%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (8 samples, 0.06%)</title><rect x="66.8091%" y="53" width="0.0645%" height="15" fill="rgb(245,125,30)" fg:x="8285" fg:w="8"/><text x="67.0591%" y="63.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (16 samples, 0.13%)</title><rect x="66.7527%" y="101" width="0.1290%" height="15" fill="rgb(232,202,2)" fg:x="8278" fg:w="16"/><text x="67.0027%" y="111.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.13%)</title><rect x="66.7527%" y="85" width="0.1290%" height="15" fill="rgb(237,140,51)" fg:x="8278" fg:w="16"/><text x="67.0027%" y="95.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (35 samples, 0.28%)</title><rect x="66.8978%" y="101" width="0.2822%" height="15" fill="rgb(236,157,25)" fg:x="8296" fg:w="35"/><text x="67.1478%" y="111.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (2 samples, 0.02%)</title><rect x="67.4300%" y="85" width="0.0161%" height="15" fill="rgb(219,209,0)" fg:x="8362" fg:w="2"/><text x="67.6800%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="67.4462%" y="85" width="0.0161%" height="15" fill="rgb(240,116,54)" fg:x="8364" fg:w="2"/><text x="67.6962%" y="95.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="67.4462%" y="69" width="0.0161%" height="15" fill="rgb(216,10,36)" fg:x="8364" fg:w="2"/><text x="67.6962%" y="79.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="67.4462%" y="53" width="0.0161%" height="15" fill="rgb(222,72,44)" fg:x="8364" fg:w="2"/><text x="67.6962%" y="63.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="67.4462%" y="37" width="0.0161%" height="15" fill="rgb(232,159,9)" fg:x="8364" fg:w="2"/><text x="67.6962%" y="47.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="67.4704%" y="85" width="0.0161%" height="15" fill="rgb(210,39,32)" fg:x="8367" fg:w="2"/><text x="67.7204%" y="95.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="67.4865%" y="85" width="0.0161%" height="15" fill="rgb(216,194,45)" fg:x="8369" fg:w="2"/><text x="67.7365%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (3 samples, 0.02%)</title><rect x="67.5026%" y="53" width="0.0242%" height="15" fill="rgb(218,18,35)" fg:x="8371" fg:w="3"/><text x="67.7526%" y="63.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (4 samples, 0.03%)</title><rect x="67.5026%" y="85" width="0.0323%" height="15" fill="rgb(207,83,51)" fg:x="8371" fg:w="4"/><text x="67.7526%" y="95.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="67.5026%" y="69" width="0.0323%" height="15" fill="rgb(225,63,43)" fg:x="8371" fg:w="4"/><text x="67.7526%" y="79.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="67.5349%" y="85" width="0.0161%" height="15" fill="rgb(207,57,36)" fg:x="8375" fg:w="2"/><text x="67.7849%" y="95.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (10 samples, 0.08%)</title><rect x="67.5591%" y="85" width="0.0806%" height="15" fill="rgb(216,99,33)" fg:x="8378" fg:w="10"/><text x="67.8091%" y="95.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 0.02%)</title><rect x="67.6397%" y="85" width="0.0242%" height="15" fill="rgb(225,42,16)" fg:x="8388" fg:w="3"/><text x="67.8897%" y="95.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (4 samples, 0.03%)</title><rect x="67.7042%" y="69" width="0.0323%" height="15" fill="rgb(220,201,45)" fg:x="8396" fg:w="4"/><text x="67.9542%" y="79.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="67.7042%" y="53" width="0.0323%" height="15" fill="rgb(225,33,4)" fg:x="8396" fg:w="4"/><text x="67.9542%" y="63.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (4 samples, 0.03%)</title><rect x="67.7042%" y="37" width="0.0323%" height="15" fill="rgb(224,33,50)" fg:x="8396" fg:w="4"/><text x="67.9542%" y="47.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="67.7365%" y="69" width="0.0242%" height="15" fill="rgb(246,198,51)" fg:x="8400" fg:w="3"/><text x="67.9865%" y="79.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (14 samples, 0.11%)</title><rect x="67.6639%" y="85" width="0.1129%" height="15" fill="rgb(205,22,4)" fg:x="8391" fg:w="14"/><text x="67.9139%" y="95.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (72 samples, 0.58%)</title><rect x="67.2043%" y="101" width="0.5806%" height="15" fill="rgb(206,3,8)" fg:x="8334" fg:w="72"/><text x="67.4543%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (254 samples, 2.05%)</title><rect x="65.7608%" y="117" width="2.0482%" height="15" fill="rgb(251,23,15)" fg:x="8155" fg:w="254"/><text x="66.0108%" y="127.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (3 samples, 0.02%)</title><rect x="67.7849%" y="101" width="0.0242%" height="15" fill="rgb(252,88,28)" fg:x="8406" fg:w="3"/><text x="68.0349%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (758 samples, 6.11%)</title><rect x="61.8095%" y="133" width="6.1124%" height="15" fill="rgb(212,127,14)" fg:x="7665" fg:w="758"/><text x="62.0595%" y="143.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (14 samples, 0.11%)</title><rect x="67.8090%" y="117" width="0.1129%" height="15" fill="rgb(247,145,37)" fg:x="8409" fg:w="14"/><text x="68.0590%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (3 samples, 0.02%)</title><rect x="67.8978%" y="101" width="0.0242%" height="15" fill="rgb(209,117,53)" fg:x="8420" fg:w="3"/><text x="68.1478%" y="111.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="68.0268%" y="117" width="0.0161%" height="15" fill="rgb(212,90,42)" fg:x="8436" fg:w="2"/><text x="68.2768%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="68.0510%" y="117" width="0.0403%" height="15" fill="rgb(218,164,37)" fg:x="8439" fg:w="5"/><text x="68.3010%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="68.1074%" y="101" width="0.0161%" height="15" fill="rgb(246,65,34)" fg:x="8446" fg:w="2"/><text x="68.3574%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (1,822 samples, 14.69%)</title><rect x="53.4634%" y="149" width="14.6924%" height="15" fill="rgb(231,100,33)" fg:x="6630" fg:w="1822"/><text x="53.7134%" y="159.50">rust-gkat`rust_gkat::k..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (29 samples, 0.23%)</title><rect x="67.9219%" y="133" width="0.2339%" height="15" fill="rgb(228,126,14)" fg:x="8423" fg:w="29"/><text x="68.1719%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (8 samples, 0.06%)</title><rect x="68.0913%" y="117" width="0.0645%" height="15" fill="rgb(215,173,21)" fg:x="8444" fg:w="8"/><text x="68.3413%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (3 samples, 0.02%)</title><rect x="68.1316%" y="101" width="0.0242%" height="15" fill="rgb(210,6,40)" fg:x="8449" fg:w="3"/><text x="68.3816%" y="111.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="68.3251%" y="133" width="0.0323%" height="15" fill="rgb(212,48,18)" fg:x="8473" fg:w="4"/><text x="68.5751%" y="143.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="68.3574%" y="133" width="0.0161%" height="15" fill="rgb(230,214,11)" fg:x="8477" fg:w="2"/><text x="68.6074%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="68.3735%" y="133" width="0.0242%" height="15" fill="rgb(254,105,39)" fg:x="8479" fg:w="3"/><text x="68.6235%" y="143.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="68.4300%" y="117" width="0.0161%" height="15" fill="rgb(245,158,5)" fg:x="8486" fg:w="2"/><text x="68.6800%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="68.4542%" y="117" width="0.0242%" height="15" fill="rgb(249,208,11)" fg:x="8489" fg:w="3"/><text x="68.7042%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="68.5187%" y="101" width="0.0161%" height="15" fill="rgb(210,39,28)" fg:x="8497" fg:w="2"/><text x="68.7687%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (3,504 samples, 28.26%)</title><rect x="40.3032%" y="165" width="28.2558%" height="15" fill="rgb(211,56,53)" fg:x="4998" fg:w="3504"/><text x="40.5532%" y="175.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;i..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (50 samples, 0.40%)</title><rect x="68.1558%" y="149" width="0.4032%" height="15" fill="rgb(226,201,30)" fg:x="8452" fg:w="50"/><text x="68.4058%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (20 samples, 0.16%)</title><rect x="68.3977%" y="133" width="0.1613%" height="15" fill="rgb(239,101,34)" fg:x="8482" fg:w="20"/><text x="68.6477%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (10 samples, 0.08%)</title><rect x="68.4783%" y="117" width="0.0806%" height="15" fill="rgb(226,209,5)" fg:x="8492" fg:w="10"/><text x="68.7283%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (3 samples, 0.02%)</title><rect x="68.5348%" y="101" width="0.0242%" height="15" fill="rgb(250,105,47)" fg:x="8499" fg:w="3"/><text x="68.7848%" y="111.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="68.6961%" y="149" width="0.0161%" height="15" fill="rgb(230,72,3)" fg:x="8519" fg:w="2"/><text x="68.9461%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="68.7122%" y="149" width="0.0242%" height="15" fill="rgb(232,218,39)" fg:x="8521" fg:w="3"/><text x="68.9622%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="68.8009%" y="133" width="0.0242%" height="15" fill="rgb(248,166,6)" fg:x="8532" fg:w="3"/><text x="69.0509%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (11 samples, 0.09%)</title><rect x="68.8412%" y="133" width="0.0887%" height="15" fill="rgb(247,89,20)" fg:x="8537" fg:w="11"/><text x="69.0912%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="69.0025%" y="101" width="0.0242%" height="15" fill="rgb(248,130,54)" fg:x="8557" fg:w="3"/><text x="69.2525%" y="111.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (5,377 samples, 43.36%)</title><rect x="25.6753%" y="181" width="43.3594%" height="15" fill="rgb(234,196,4)" fg:x="3184" fg:w="5377"/><text x="25.9253%" y="191.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::so..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (59 samples, 0.48%)</title><rect x="68.5590%" y="165" width="0.4758%" height="15" fill="rgb(250,143,31)" fg:x="8502" fg:w="59"/><text x="68.8090%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (35 samples, 0.28%)</title><rect x="68.7525%" y="149" width="0.2822%" height="15" fill="rgb(211,110,34)" fg:x="8526" fg:w="35"/><text x="69.0025%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (13 samples, 0.10%)</title><rect x="68.9299%" y="133" width="0.1048%" height="15" fill="rgb(215,124,48)" fg:x="8548" fg:w="13"/><text x="69.1799%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (7 samples, 0.06%)</title><rect x="68.9783%" y="117" width="0.0564%" height="15" fill="rgb(216,46,13)" fg:x="8554" fg:w="7"/><text x="69.2283%" y="127.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="69.1396%" y="165" width="0.0242%" height="15" fill="rgb(205,184,25)" fg:x="8574" fg:w="3"/><text x="69.3896%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="69.1880%" y="165" width="0.0323%" height="15" fill="rgb(228,1,10)" fg:x="8580" fg:w="4"/><text x="69.4380%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="69.2525%" y="149" width="0.0323%" height="15" fill="rgb(213,116,27)" fg:x="8588" fg:w="4"/><text x="69.5025%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="69.3089%" y="149" width="0.0242%" height="15" fill="rgb(241,95,50)" fg:x="8595" fg:w="3"/><text x="69.5589%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="69.3815%" y="133" width="0.0564%" height="15" fill="rgb(238,48,32)" fg:x="8604" fg:w="7"/><text x="69.6315%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="69.5347%" y="117" width="0.0484%" height="15" fill="rgb(235,113,49)" fg:x="8623" fg:w="6"/><text x="69.7847%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (6,654 samples, 53.66%)</title><rect x="15.9584%" y="197" width="53.6570%" height="15" fill="rgb(205,127,43)" fg:x="1979" fg:w="6654"/><text x="16.2084%" y="207.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::de..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (72 samples, 0.58%)</title><rect x="69.0348%" y="181" width="0.5806%" height="15" fill="rgb(250,162,2)" fg:x="8561" fg:w="72"/><text x="69.2848%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (49 samples, 0.40%)</title><rect x="69.2202%" y="165" width="0.3951%" height="15" fill="rgb(220,13,41)" fg:x="8584" fg:w="49"/><text x="69.4702%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (35 samples, 0.28%)</title><rect x="69.3331%" y="149" width="0.2822%" height="15" fill="rgb(249,221,25)" fg:x="8598" fg:w="35"/><text x="69.5831%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (22 samples, 0.18%)</title><rect x="69.4379%" y="133" width="0.1774%" height="15" fill="rgb(215,208,19)" fg:x="8611" fg:w="22"/><text x="69.6879%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (4 samples, 0.03%)</title><rect x="69.5831%" y="117" width="0.0323%" height="15" fill="rgb(236,175,2)" fg:x="8629" fg:w="4"/><text x="69.8331%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="69.5992%" y="101" width="0.0161%" height="15" fill="rgb(241,52,2)" fg:x="8631" fg:w="2"/><text x="69.8492%" y="111.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="69.6557%" y="181" width="0.0403%" height="15" fill="rgb(248,140,14)" fg:x="8638" fg:w="5"/><text x="69.9057%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="69.7444%" y="165" width="0.0161%" height="15" fill="rgb(253,22,42)" fg:x="8649" fg:w="2"/><text x="69.9944%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="69.7605%" y="165" width="0.0161%" height="15" fill="rgb(234,61,47)" fg:x="8651" fg:w="2"/><text x="70.0105%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="69.7847%" y="165" width="0.0242%" height="15" fill="rgb(208,226,15)" fg:x="8654" fg:w="3"/><text x="70.0347%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="69.8734%" y="149" width="0.0403%" height="15" fill="rgb(217,221,4)" fg:x="8665" fg:w="5"/><text x="70.1234%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="69.9863%" y="133" width="0.0161%" height="15" fill="rgb(212,174,34)" fg:x="8679" fg:w="2"/><text x="70.2363%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="70.0024%" y="133" width="0.0242%" height="15" fill="rgb(253,83,4)" fg:x="8681" fg:w="3"/><text x="70.2524%" y="143.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="70.0831%" y="117" width="0.0242%" height="15" fill="rgb(250,195,49)" fg:x="8691" fg:w="3"/><text x="70.3331%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="70.1153%" y="117" width="0.0161%" height="15" fill="rgb(241,192,25)" fg:x="8695" fg:w="2"/><text x="70.3653%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (7,456 samples, 60.12%)</title><rect x="10.0556%" y="213" width="60.1242%" height="15" fill="rgb(208,124,10)" fg:x="1247" fg:w="7456"/><text x="10.3056%" y="223.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (70 samples, 0.56%)</title><rect x="69.6154%" y="197" width="0.5645%" height="15" fill="rgb(222,33,0)" fg:x="8633" fg:w="70"/><text x="69.8654%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (60 samples, 0.48%)</title><rect x="69.6960%" y="181" width="0.4838%" height="15" fill="rgb(234,209,28)" fg:x="8643" fg:w="60"/><text x="69.9460%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (46 samples, 0.37%)</title><rect x="69.8089%" y="165" width="0.3709%" height="15" fill="rgb(224,11,23)" fg:x="8657" fg:w="46"/><text x="70.0589%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (33 samples, 0.27%)</title><rect x="69.9137%" y="149" width="0.2661%" height="15" fill="rgb(232,99,1)" fg:x="8670" fg:w="33"/><text x="70.1637%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (19 samples, 0.15%)</title><rect x="70.0266%" y="133" width="0.1532%" height="15" fill="rgb(237,95,45)" fg:x="8684" fg:w="19"/><text x="70.2766%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (6 samples, 0.05%)</title><rect x="70.1314%" y="117" width="0.0484%" height="15" fill="rgb(208,109,11)" fg:x="8697" fg:w="6"/><text x="70.3814%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (2 samples, 0.02%)</title><rect x="70.1637%" y="101" width="0.0161%" height="15" fill="rgb(216,190,48)" fg:x="8701" fg:w="2"/><text x="70.4137%" y="111.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="70.2605%" y="165" width="0.0161%" height="15" fill="rgb(251,171,36)" fg:x="8713" fg:w="2"/><text x="70.5105%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="70.2605%" y="149" width="0.0161%" height="15" fill="rgb(230,62,22)" fg:x="8713" fg:w="2"/><text x="70.5105%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="70.2766%" y="165" width="0.0242%" height="15" fill="rgb(225,114,35)" fg:x="8715" fg:w="3"/><text x="70.5266%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="70.3895%" y="149" width="0.0323%" height="15" fill="rgb(215,118,42)" fg:x="8729" fg:w="4"/><text x="70.6395%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="70.5346%" y="133" width="0.0645%" height="15" fill="rgb(243,119,21)" fg:x="8747" fg:w="8"/><text x="70.7846%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="70.6556%" y="117" width="0.0242%" height="15" fill="rgb(252,177,53)" fg:x="8762" fg:w="3"/><text x="70.9056%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (7,956 samples, 64.16%)</title><rect x="6.5801%" y="229" width="64.1561%" height="15" fill="rgb(237,209,29)" fg:x="816" fg:w="7956"/><text x="6.8301%" y="239.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (69 samples, 0.56%)</title><rect x="70.1798%" y="213" width="0.5564%" height="15" fill="rgb(212,65,23)" fg:x="8703" fg:w="69"/><text x="70.4298%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (64 samples, 0.52%)</title><rect x="70.2201%" y="197" width="0.5161%" height="15" fill="rgb(230,222,46)" fg:x="8708" fg:w="64"/><text x="70.4701%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (62 samples, 0.50%)</title><rect x="70.2363%" y="181" width="0.5000%" height="15" fill="rgb(215,135,32)" fg:x="8710" fg:w="62"/><text x="70.4863%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (54 samples, 0.44%)</title><rect x="70.3008%" y="165" width="0.4354%" height="15" fill="rgb(246,101,22)" fg:x="8718" fg:w="54"/><text x="70.5508%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (39 samples, 0.31%)</title><rect x="70.4217%" y="149" width="0.3145%" height="15" fill="rgb(206,107,13)" fg:x="8733" fg:w="39"/><text x="70.6717%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (17 samples, 0.14%)</title><rect x="70.5991%" y="133" width="0.1371%" height="15" fill="rgb(250,100,44)" fg:x="8755" fg:w="17"/><text x="70.8491%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (7 samples, 0.06%)</title><rect x="70.6798%" y="117" width="0.0564%" height="15" fill="rgb(231,147,38)" fg:x="8765" fg:w="7"/><text x="70.9298%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (2 samples, 0.02%)</title><rect x="70.7201%" y="101" width="0.0161%" height="15" fill="rgb(229,8,40)" fg:x="8770" fg:w="2"/><text x="70.9701%" y="111.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="70.8330%" y="181" width="0.0645%" height="15" fill="rgb(221,135,30)" fg:x="8784" fg:w="8"/><text x="71.0830%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="70.9217%" y="165" width="0.0242%" height="15" fill="rgb(249,193,18)" fg:x="8795" fg:w="3"/><text x="71.1717%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="70.9459%" y="165" width="0.0161%" height="15" fill="rgb(209,133,39)" fg:x="8798" fg:w="2"/><text x="71.1959%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="70.9620%" y="165" width="0.0484%" height="15" fill="rgb(232,100,14)" fg:x="8800" fg:w="6"/><text x="71.2120%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="71.0749%" y="149" width="0.0161%" height="15" fill="rgb(224,185,1)" fg:x="8814" fg:w="2"/><text x="71.3249%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (10 samples, 0.08%)</title><rect x="71.0991%" y="149" width="0.0806%" height="15" fill="rgb(223,139,8)" fg:x="8817" fg:w="10"/><text x="71.3491%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="71.2604%" y="133" width="0.0403%" height="15" fill="rgb(232,213,38)" fg:x="8837" fg:w="5"/><text x="71.5104%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="71.3491%" y="117" width="0.0323%" height="15" fill="rgb(207,94,22)" fg:x="8848" fg:w="4"/><text x="71.5991%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (8,347 samples, 67.31%)</title><rect x="4.0884%" y="245" width="67.3091%" height="15" fill="rgb(219,183,54)" fg:x="507" fg:w="8347"/><text x="4.3384%" y="255.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (82 samples, 0.66%)</title><rect x="70.7362%" y="229" width="0.6612%" height="15" fill="rgb(216,185,54)" fg:x="8772" fg:w="82"/><text x="70.9862%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (77 samples, 0.62%)</title><rect x="70.7766%" y="213" width="0.6209%" height="15" fill="rgb(254,217,39)" fg:x="8777" fg:w="77"/><text x="71.0266%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (74 samples, 0.60%)</title><rect x="70.8007%" y="197" width="0.5967%" height="15" fill="rgb(240,178,23)" fg:x="8780" fg:w="74"/><text x="71.0507%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (62 samples, 0.50%)</title><rect x="70.8975%" y="181" width="0.5000%" height="15" fill="rgb(218,11,47)" fg:x="8792" fg:w="62"/><text x="71.1475%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (48 samples, 0.39%)</title><rect x="71.0104%" y="165" width="0.3871%" height="15" fill="rgb(218,51,51)" fg:x="8806" fg:w="48"/><text x="71.2604%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (27 samples, 0.22%)</title><rect x="71.1797%" y="149" width="0.2177%" height="15" fill="rgb(238,126,27)" fg:x="8827" fg:w="27"/><text x="71.4297%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (12 samples, 0.10%)</title><rect x="71.3007%" y="133" width="0.0968%" height="15" fill="rgb(249,202,22)" fg:x="8842" fg:w="12"/><text x="71.5507%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (2 samples, 0.02%)</title><rect x="71.3813%" y="117" width="0.0161%" height="15" fill="rgb(254,195,49)" fg:x="8852" fg:w="2"/><text x="71.6313%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="71.4539%" y="197" width="0.0161%" height="15" fill="rgb(208,123,14)" fg:x="8861" fg:w="2"/><text x="71.7039%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="71.5104%" y="181" width="0.0161%" height="15" fill="rgb(224,200,8)" fg:x="8868" fg:w="2"/><text x="71.7604%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="71.5507%" y="165" width="0.0161%" height="15" fill="rgb(217,61,36)" fg:x="8873" fg:w="2"/><text x="71.8007%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="71.5749%" y="165" width="0.0564%" height="15" fill="rgb(206,35,45)" fg:x="8876" fg:w="7"/><text x="71.8249%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="71.7281%" y="149" width="0.0484%" height="15" fill="rgb(217,65,33)" fg:x="8895" fg:w="6"/><text x="71.9781%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="71.8732%" y="133" width="0.0161%" height="15" fill="rgb(222,158,48)" fg:x="8913" fg:w="2"/><text x="72.1232%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="71.8894%" y="133" width="0.0484%" height="15" fill="rgb(254,2,54)" fg:x="8915" fg:w="6"/><text x="72.1394%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="72.0023%" y="117" width="0.0242%" height="15" fill="rgb(250,143,38)" fg:x="8929" fg:w="3"/><text x="72.2523%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (8,612 samples, 69.45%)</title><rect x="2.6127%" y="261" width="69.4460%" height="15" fill="rgb(248,25,0)" fg:x="324" fg:w="8612"/><text x="2.8627%" y="271.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (82 samples, 0.66%)</title><rect x="71.3975%" y="245" width="0.6612%" height="15" fill="rgb(206,152,27)" fg:x="8854" fg:w="82"/><text x="71.6475%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (80 samples, 0.65%)</title><rect x="71.4136%" y="229" width="0.6451%" height="15" fill="rgb(240,77,30)" fg:x="8856" fg:w="80"/><text x="71.6636%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (79 samples, 0.64%)</title><rect x="71.4217%" y="213" width="0.6370%" height="15" fill="rgb(231,5,3)" fg:x="8857" fg:w="79"/><text x="71.6717%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (73 samples, 0.59%)</title><rect x="71.4700%" y="197" width="0.5887%" height="15" fill="rgb(207,226,32)" fg:x="8863" fg:w="73"/><text x="71.7200%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (66 samples, 0.53%)</title><rect x="71.5265%" y="181" width="0.5322%" height="15" fill="rgb(222,207,47)" fg:x="8870" fg:w="66"/><text x="71.7765%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (53 samples, 0.43%)</title><rect x="71.6313%" y="165" width="0.4274%" height="15" fill="rgb(229,115,45)" fg:x="8883" fg:w="53"/><text x="71.8813%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (35 samples, 0.28%)</title><rect x="71.7765%" y="149" width="0.2822%" height="15" fill="rgb(224,191,6)" fg:x="8901" fg:w="35"/><text x="72.0265%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (15 samples, 0.12%)</title><rect x="71.9377%" y="133" width="0.1210%" height="15" fill="rgb(230,227,24)" fg:x="8921" fg:w="15"/><text x="72.1877%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (4 samples, 0.03%)</title><rect x="72.0264%" y="117" width="0.0323%" height="15" fill="rgb(228,80,19)" fg:x="8932" fg:w="4"/><text x="72.2764%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="72.0345%" y="101" width="0.0242%" height="15" fill="rgb(247,229,0)" fg:x="8933" fg:w="3"/><text x="72.2845%" y="111.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="72.0587%" y="245" width="0.0161%" height="15" fill="rgb(237,194,15)" fg:x="8936" fg:w="2"/><text x="72.3087%" y="255.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="72.0910%" y="213" width="0.0161%" height="15" fill="rgb(219,203,20)" fg:x="8940" fg:w="2"/><text x="72.3410%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="72.1313%" y="197" width="0.0323%" height="15" fill="rgb(234,128,8)" fg:x="8945" fg:w="4"/><text x="72.3813%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="72.2200%" y="181" width="0.0484%" height="15" fill="rgb(248,202,8)" fg:x="8956" fg:w="6"/><text x="72.4700%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="72.3167%" y="165" width="0.0161%" height="15" fill="rgb(206,104,37)" fg:x="8968" fg:w="2"/><text x="72.5667%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="72.3490%" y="165" width="0.0484%" height="15" fill="rgb(223,8,27)" fg:x="8972" fg:w="6"/><text x="72.5990%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="72.4619%" y="149" width="0.0161%" height="15" fill="rgb(216,217,28)" fg:x="8986" fg:w="2"/><text x="72.7119%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (4 samples, 0.03%)</title><rect x="72.4780%" y="149" width="0.0323%" height="15" fill="rgb(249,199,1)" fg:x="8988" fg:w="4"/><text x="72.7280%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="72.5103%" y="149" width="0.0242%" height="15" fill="rgb(240,85,17)" fg:x="8992" fg:w="3"/><text x="72.7603%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (9 samples, 0.07%)</title><rect x="72.5345%" y="149" width="0.0726%" height="15" fill="rgb(206,108,45)" fg:x="8995" fg:w="9"/><text x="72.7845%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="72.7280%" y="133" width="0.0161%" height="15" fill="rgb(245,210,41)" fg:x="9019" fg:w="2"/><text x="72.9780%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (9 samples, 0.07%)</title><rect x="72.7764%" y="133" width="0.0726%" height="15" fill="rgb(206,13,37)" fg:x="9025" fg:w="9"/><text x="73.0264%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="72.8651%" y="117" width="0.0161%" height="15" fill="rgb(250,61,18)" fg:x="9036" fg:w="2"/><text x="73.1151%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="72.8812%" y="117" width="0.0323%" height="15" fill="rgb(235,172,48)" fg:x="9038" fg:w="4"/><text x="73.1312%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (8,843 samples, 71.31%)</title><rect x="1.6289%" y="277" width="71.3088%" height="15" fill="rgb(249,201,17)" fg:x="202" fg:w="8843"/><text x="1.8789%" y="287.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (109 samples, 0.88%)</title><rect x="72.0587%" y="261" width="0.8790%" height="15" fill="rgb(219,208,6)" fg:x="8936" fg:w="109"/><text x="72.3087%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (107 samples, 0.86%)</title><rect x="72.0748%" y="245" width="0.8628%" height="15" fill="rgb(248,31,23)" fg:x="8938" fg:w="107"/><text x="72.3248%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (107 samples, 0.86%)</title><rect x="72.0748%" y="229" width="0.8628%" height="15" fill="rgb(245,15,42)" fg:x="8938" fg:w="107"/><text x="72.3248%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (102 samples, 0.82%)</title><rect x="72.1152%" y="213" width="0.8225%" height="15" fill="rgb(222,217,39)" fg:x="8943" fg:w="102"/><text x="72.3652%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (96 samples, 0.77%)</title><rect x="72.1635%" y="197" width="0.7741%" height="15" fill="rgb(210,219,27)" fg:x="8949" fg:w="96"/><text x="72.4135%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (83 samples, 0.67%)</title><rect x="72.2684%" y="181" width="0.6693%" height="15" fill="rgb(252,166,36)" fg:x="8962" fg:w="83"/><text x="72.5184%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (67 samples, 0.54%)</title><rect x="72.3974%" y="165" width="0.5403%" height="15" fill="rgb(245,132,34)" fg:x="8978" fg:w="67"/><text x="72.6474%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (41 samples, 0.33%)</title><rect x="72.6070%" y="149" width="0.3306%" height="15" fill="rgb(236,54,3)" fg:x="9004" fg:w="41"/><text x="72.8570%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (11 samples, 0.09%)</title><rect x="72.8490%" y="133" width="0.0887%" height="15" fill="rgb(241,173,43)" fg:x="9034" fg:w="11"/><text x="73.0990%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (3 samples, 0.02%)</title><rect x="72.9135%" y="117" width="0.0242%" height="15" fill="rgb(215,190,9)" fg:x="9042" fg:w="3"/><text x="73.1635%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="72.9860%" y="197" width="0.0403%" height="15" fill="rgb(242,101,16)" fg:x="9051" fg:w="5"/><text x="73.2360%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="73.0506%" y="181" width="0.0161%" height="15" fill="rgb(223,190,21)" fg:x="9059" fg:w="2"/><text x="73.3006%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="73.0667%" y="181" width="0.0242%" height="15" fill="rgb(215,228,25)" fg:x="9061" fg:w="3"/><text x="73.3167%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="73.0909%" y="181" width="0.0161%" height="15" fill="rgb(225,36,22)" fg:x="9064" fg:w="2"/><text x="73.3409%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="73.0909%" y="165" width="0.0161%" height="15" fill="rgb(251,106,46)" fg:x="9064" fg:w="2"/><text x="73.3409%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="73.1070%" y="181" width="0.0484%" height="15" fill="rgb(208,90,1)" fg:x="9066" fg:w="6"/><text x="73.3570%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="73.2280%" y="165" width="0.0323%" height="15" fill="rgb(243,10,4)" fg:x="9081" fg:w="4"/><text x="73.4780%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="73.2602%" y="165" width="0.0242%" height="15" fill="rgb(212,137,27)" fg:x="9085" fg:w="3"/><text x="73.5102%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (11 samples, 0.09%)</title><rect x="73.2925%" y="165" width="0.0887%" height="15" fill="rgb(231,220,49)" fg:x="9089" fg:w="11"/><text x="73.5425%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="73.4860%" y="149" width="0.0242%" height="15" fill="rgb(237,96,20)" fg:x="9113" fg:w="3"/><text x="73.7360%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="73.5102%" y="149" width="0.0161%" height="15" fill="rgb(239,229,30)" fg:x="9116" fg:w="2"/><text x="73.7602%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="73.5263%" y="149" width="0.0242%" height="15" fill="rgb(219,65,33)" fg:x="9118" fg:w="3"/><text x="73.7763%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="73.5344%" y="133" width="0.0161%" height="15" fill="rgb(243,134,7)" fg:x="9119" fg:w="2"/><text x="73.7844%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (13 samples, 0.10%)</title><rect x="73.5505%" y="149" width="0.1048%" height="15" fill="rgb(216,177,54)" fg:x="9121" fg:w="13"/><text x="73.8005%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="73.7682%" y="133" width="0.0161%" height="15" fill="rgb(211,160,20)" fg:x="9148" fg:w="2"/><text x="74.0182%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="73.7682%" y="117" width="0.0161%" height="15" fill="rgb(239,85,39)" fg:x="9148" fg:w="2"/><text x="74.0182%" y="127.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="73.7682%" y="101" width="0.0161%" height="15" fill="rgb(232,125,22)" fg:x="9148" fg:w="2"/><text x="74.0182%" y="111.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="73.7682%" y="85" width="0.0161%" height="15" fill="rgb(244,57,34)" fg:x="9148" fg:w="2"/><text x="74.0182%" y="95.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (11 samples, 0.09%)</title><rect x="73.7844%" y="133" width="0.0887%" height="15" fill="rgb(214,203,32)" fg:x="9150" fg:w="11"/><text x="74.0344%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (9,040 samples, 72.90%)</title><rect x="1.0564%" y="293" width="72.8973%" height="15" fill="rgb(207,58,43)" fg:x="131" fg:w="9040"/><text x="1.3064%" y="303.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (126 samples, 1.02%)</title><rect x="72.9377%" y="277" width="1.0160%" height="15" fill="rgb(215,193,15)" fg:x="9045" fg:w="126"/><text x="73.1877%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (126 samples, 1.02%)</title><rect x="72.9377%" y="261" width="1.0160%" height="15" fill="rgb(232,15,44)" fg:x="9045" fg:w="126"/><text x="73.1877%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (125 samples, 1.01%)</title><rect x="72.9457%" y="245" width="1.0080%" height="15" fill="rgb(212,3,48)" fg:x="9046" fg:w="125"/><text x="73.1957%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (125 samples, 1.01%)</title><rect x="72.9457%" y="229" width="1.0080%" height="15" fill="rgb(218,128,7)" fg:x="9046" fg:w="125"/><text x="73.1957%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (123 samples, 0.99%)</title><rect x="72.9619%" y="213" width="0.9919%" height="15" fill="rgb(226,216,39)" fg:x="9048" fg:w="123"/><text x="73.2119%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (115 samples, 0.93%)</title><rect x="73.0264%" y="197" width="0.9273%" height="15" fill="rgb(243,47,51)" fg:x="9056" fg:w="115"/><text x="73.2764%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (99 samples, 0.80%)</title><rect x="73.1554%" y="181" width="0.7983%" height="15" fill="rgb(241,183,40)" fg:x="9072" fg:w="99"/><text x="73.4054%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (71 samples, 0.57%)</title><rect x="73.3812%" y="165" width="0.5725%" height="15" fill="rgb(231,217,32)" fg:x="9100" fg:w="71"/><text x="73.6312%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (37 samples, 0.30%)</title><rect x="73.6554%" y="149" width="0.2984%" height="15" fill="rgb(229,61,38)" fg:x="9134" fg:w="37"/><text x="73.9054%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (10 samples, 0.08%)</title><rect x="73.8731%" y="133" width="0.0806%" height="15" fill="rgb(225,210,5)" fg:x="9161" fg:w="10"/><text x="74.1231%" y="143.50"></text></g><g><title>rust-gkat`Cudd_Ref (4 samples, 0.03%)</title><rect x="74.0666%" y="197" width="0.0323%" height="15" fill="rgb(231,79,45)" fg:x="9185" fg:w="4"/><text x="74.3166%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="74.0989%" y="197" width="0.0161%" height="15" fill="rgb(224,100,7)" fg:x="9189" fg:w="2"/><text x="74.3489%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="74.0989%" y="181" width="0.0161%" height="15" fill="rgb(241,198,18)" fg:x="9189" fg:w="2"/><text x="74.3489%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="74.0989%" y="165" width="0.0161%" height="15" fill="rgb(252,97,53)" fg:x="9189" fg:w="2"/><text x="74.3489%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="74.1231%" y="197" width="0.0161%" height="15" fill="rgb(220,88,7)" fg:x="9192" fg:w="2"/><text x="74.3731%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="74.1876%" y="181" width="0.0242%" height="15" fill="rgb(213,176,14)" fg:x="9200" fg:w="3"/><text x="74.4376%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="74.2279%" y="181" width="0.0484%" height="15" fill="rgb(246,73,7)" fg:x="9205" fg:w="6"/><text x="74.4779%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.04%)</title><rect x="74.3327%" y="165" width="0.0403%" height="15" fill="rgb(245,64,36)" fg:x="9218" fg:w="5"/><text x="74.5827%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="74.3811%" y="165" width="0.0242%" height="15" fill="rgb(245,80,10)" fg:x="9224" fg:w="3"/><text x="74.6311%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="74.3811%" y="149" width="0.0242%" height="15" fill="rgb(232,107,50)" fg:x="9224" fg:w="3"/><text x="74.6311%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (10 samples, 0.08%)</title><rect x="74.4053%" y="165" width="0.0806%" height="15" fill="rgb(253,3,0)" fg:x="9227" fg:w="10"/><text x="74.6553%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="74.6150%" y="149" width="0.0161%" height="15" fill="rgb(212,99,53)" fg:x="9253" fg:w="2"/><text x="74.8650%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.04%)</title><rect x="74.6311%" y="149" width="0.0403%" height="15" fill="rgb(249,111,54)" fg:x="9255" fg:w="5"/><text x="74.8811%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="74.6391%" y="133" width="0.0323%" height="15" fill="rgb(249,55,30)" fg:x="9256" fg:w="4"/><text x="74.8891%" y="143.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="74.6553%" y="117" width="0.0161%" height="15" fill="rgb(237,47,42)" fg:x="9258" fg:w="2"/><text x="74.9053%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (14 samples, 0.11%)</title><rect x="74.6714%" y="149" width="0.1129%" height="15" fill="rgb(211,20,18)" fg:x="9260" fg:w="14"/><text x="74.9214%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="74.8569%" y="133" width="0.0645%" height="15" fill="rgb(231,203,46)" fg:x="9283" fg:w="8"/><text x="75.1069%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (9,226 samples, 74.40%)</title><rect x="0.5806%" y="309" width="74.3972%" height="15" fill="rgb(237,142,3)" fg:x="72" fg:w="9226"/><text x="0.8306%" y="319.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (127 samples, 1.02%)</title><rect x="73.9537%" y="293" width="1.0241%" height="15" fill="rgb(241,107,1)" fg:x="9171" fg:w="127"/><text x="74.2037%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (126 samples, 1.02%)</title><rect x="73.9618%" y="277" width="1.0160%" height="15" fill="rgb(229,83,13)" fg:x="9172" fg:w="126"/><text x="74.2118%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (126 samples, 1.02%)</title><rect x="73.9618%" y="261" width="1.0160%" height="15" fill="rgb(241,91,40)" fg:x="9172" fg:w="126"/><text x="74.2118%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (124 samples, 1.00%)</title><rect x="73.9779%" y="245" width="0.9999%" height="15" fill="rgb(225,3,45)" fg:x="9174" fg:w="124"/><text x="74.2279%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (122 samples, 0.98%)</title><rect x="73.9940%" y="229" width="0.9838%" height="15" fill="rgb(244,223,14)" fg:x="9176" fg:w="122"/><text x="74.2440%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (117 samples, 0.94%)</title><rect x="74.0344%" y="213" width="0.9435%" height="15" fill="rgb(224,124,37)" fg:x="9181" fg:w="117"/><text x="74.2844%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (104 samples, 0.84%)</title><rect x="74.1392%" y="197" width="0.8386%" height="15" fill="rgb(251,171,30)" fg:x="9194" fg:w="104"/><text x="74.3892%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (87 samples, 0.70%)</title><rect x="74.2763%" y="181" width="0.7016%" height="15" fill="rgb(236,46,54)" fg:x="9211" fg:w="87"/><text x="74.5263%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (61 samples, 0.49%)</title><rect x="74.4859%" y="165" width="0.4919%" height="15" fill="rgb(245,213,5)" fg:x="9237" fg:w="61"/><text x="74.7359%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (24 samples, 0.19%)</title><rect x="74.7843%" y="149" width="0.1935%" height="15" fill="rgb(230,144,27)" fg:x="9274" fg:w="24"/><text x="75.0343%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (7 samples, 0.06%)</title><rect x="74.9214%" y="133" width="0.0564%" height="15" fill="rgb(220,86,6)" fg:x="9291" fg:w="7"/><text x="75.1714%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="74.9940%" y="261" width="0.0161%" height="15" fill="rgb(240,20,13)" fg:x="9300" fg:w="2"/><text x="75.2440%" y="271.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="74.9940%" y="245" width="0.0161%" height="15" fill="rgb(217,89,34)" fg:x="9300" fg:w="2"/><text x="75.2440%" y="255.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="74.9940%" y="229" width="0.0161%" height="15" fill="rgb(229,13,5)" fg:x="9300" fg:w="2"/><text x="75.2440%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="75.0262%" y="229" width="0.0242%" height="15" fill="rgb(244,67,35)" fg:x="9304" fg:w="3"/><text x="75.2762%" y="239.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="75.0504%" y="229" width="0.0161%" height="15" fill="rgb(221,40,2)" fg:x="9307" fg:w="2"/><text x="75.3004%" y="239.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="75.0827%" y="213" width="0.0242%" height="15" fill="rgb(237,157,21)" fg:x="9311" fg:w="3"/><text x="75.3327%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="75.1391%" y="197" width="0.0242%" height="15" fill="rgb(222,94,11)" fg:x="9318" fg:w="3"/><text x="75.3891%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="75.1633%" y="197" width="0.0161%" height="15" fill="rgb(249,113,6)" fg:x="9321" fg:w="2"/><text x="75.4133%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="75.1875%" y="197" width="0.0484%" height="15" fill="rgb(238,137,36)" fg:x="9324" fg:w="6"/><text x="75.4375%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="75.3084%" y="181" width="0.0323%" height="15" fill="rgb(210,102,26)" fg:x="9339" fg:w="4"/><text x="75.5584%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="75.3407%" y="181" width="0.0242%" height="15" fill="rgb(218,30,30)" fg:x="9343" fg:w="3"/><text x="75.5907%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="75.3649%" y="181" width="0.0161%" height="15" fill="rgb(214,67,26)" fg:x="9346" fg:w="2"/><text x="75.6149%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="75.3649%" y="165" width="0.0161%" height="15" fill="rgb(251,9,53)" fg:x="9346" fg:w="2"/><text x="75.6149%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="75.3810%" y="181" width="0.0484%" height="15" fill="rgb(228,204,25)" fg:x="9348" fg:w="6"/><text x="75.6310%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="75.5262%" y="165" width="0.0242%" height="15" fill="rgb(207,153,8)" fg:x="9366" fg:w="3"/><text x="75.7762%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="75.5584%" y="165" width="0.0161%" height="15" fill="rgb(242,9,16)" fg:x="9370" fg:w="2"/><text x="75.8084%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="75.5584%" y="149" width="0.0161%" height="15" fill="rgb(217,211,10)" fg:x="9370" fg:w="2"/><text x="75.8084%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (13 samples, 0.10%)</title><rect x="75.5826%" y="165" width="0.1048%" height="15" fill="rgb(219,228,52)" fg:x="9373" fg:w="13"/><text x="75.8326%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (16 samples, 0.13%)</title><rect x="75.8729%" y="149" width="0.1290%" height="15" fill="rgb(231,92,29)" fg:x="9409" fg:w="16"/><text x="76.1229%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="76.0503%" y="133" width="0.0403%" height="15" fill="rgb(232,8,23)" fg:x="9431" fg:w="5"/><text x="76.3003%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (9,396 samples, 75.77%)</title><rect x="0.3387%" y="325" width="75.7681%" height="15" fill="rgb(216,211,34)" fg:x="42" fg:w="9396"/><text x="0.5887%" y="335.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (140 samples, 1.13%)</title><rect x="74.9778%" y="309" width="1.1289%" height="15" fill="rgb(236,151,0)" fg:x="9298" fg:w="140"/><text x="75.2278%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (139 samples, 1.12%)</title><rect x="74.9859%" y="293" width="1.1209%" height="15" fill="rgb(209,168,3)" fg:x="9299" fg:w="139"/><text x="75.2359%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (139 samples, 1.12%)</title><rect x="74.9859%" y="277" width="1.1209%" height="15" fill="rgb(208,129,28)" fg:x="9299" fg:w="139"/><text x="75.2359%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (136 samples, 1.10%)</title><rect x="75.0101%" y="261" width="1.0967%" height="15" fill="rgb(229,78,22)" fg:x="9302" fg:w="136"/><text x="75.2601%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (134 samples, 1.08%)</title><rect x="75.0262%" y="245" width="1.0806%" height="15" fill="rgb(228,187,13)" fg:x="9304" fg:w="134"/><text x="75.2762%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (129 samples, 1.04%)</title><rect x="75.0665%" y="229" width="1.0402%" height="15" fill="rgb(240,119,24)" fg:x="9309" fg:w="129"/><text x="75.3165%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (124 samples, 1.00%)</title><rect x="75.1068%" y="213" width="0.9999%" height="15" fill="rgb(209,194,42)" fg:x="9314" fg:w="124"/><text x="75.3568%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (108 samples, 0.87%)</title><rect x="75.2359%" y="197" width="0.8709%" height="15" fill="rgb(247,200,46)" fg:x="9330" fg:w="108"/><text x="75.4859%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (84 samples, 0.68%)</title><rect x="75.4294%" y="181" width="0.6774%" height="15" fill="rgb(218,76,16)" fg:x="9354" fg:w="84"/><text x="75.6794%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (52 samples, 0.42%)</title><rect x="75.6874%" y="165" width="0.4193%" height="15" fill="rgb(225,21,48)" fg:x="9386" fg:w="52"/><text x="75.9374%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (13 samples, 0.10%)</title><rect x="76.0019%" y="149" width="0.1048%" height="15" fill="rgb(239,223,50)" fg:x="9425" fg:w="13"/><text x="76.2519%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (2 samples, 0.02%)</title><rect x="76.0906%" y="133" width="0.0161%" height="15" fill="rgb(244,45,21)" fg:x="9436" fg:w="2"/><text x="76.3406%" y="143.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="76.2197%" y="213" width="0.0161%" height="15" fill="rgb(232,33,43)" fg:x="9452" fg:w="2"/><text x="76.4697%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="76.2358%" y="213" width="0.0323%" height="15" fill="rgb(209,8,3)" fg:x="9454" fg:w="4"/><text x="76.4858%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="76.3326%" y="197" width="0.0161%" height="15" fill="rgb(214,25,53)" fg:x="9466" fg:w="2"/><text x="76.5826%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="76.3567%" y="197" width="0.0161%" height="15" fill="rgb(254,186,54)" fg:x="9469" fg:w="2"/><text x="76.6067%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="76.3567%" y="181" width="0.0161%" height="15" fill="rgb(208,174,49)" fg:x="9469" fg:w="2"/><text x="76.6067%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="76.3729%" y="197" width="0.0403%" height="15" fill="rgb(233,191,51)" fg:x="9471" fg:w="5"/><text x="76.6229%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="76.4777%" y="181" width="0.0161%" height="15" fill="rgb(222,134,10)" fg:x="9484" fg:w="2"/><text x="76.7277%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="76.4777%" y="165" width="0.0161%" height="15" fill="rgb(230,226,20)" fg:x="9484" fg:w="2"/><text x="76.7277%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="76.5019%" y="181" width="0.0564%" height="15" fill="rgb(251,111,25)" fg:x="9487" fg:w="7"/><text x="76.7519%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="76.6954%" y="165" width="0.0242%" height="15" fill="rgb(224,40,46)" fg:x="9511" fg:w="3"/><text x="76.9454%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="76.7277%" y="165" width="0.0484%" height="15" fill="rgb(236,108,47)" fg:x="9515" fg:w="6"/><text x="76.9777%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="76.7357%" y="149" width="0.0403%" height="15" fill="rgb(234,93,0)" fg:x="9516" fg:w="5"/><text x="76.9857%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="76.7519%" y="133" width="0.0242%" height="15" fill="rgb(224,213,32)" fg:x="9518" fg:w="3"/><text x="77.0019%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (12 samples, 0.10%)</title><rect x="76.7841%" y="165" width="0.0968%" height="15" fill="rgb(251,11,48)" fg:x="9522" fg:w="12"/><text x="77.0341%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="77.0260%" y="149" width="0.0242%" height="15" fill="rgb(236,173,5)" fg:x="9552" fg:w="3"/><text x="77.2760%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="77.0502%" y="149" width="0.0161%" height="15" fill="rgb(230,95,12)" fg:x="9555" fg:w="2"/><text x="77.3002%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (19 samples, 0.15%)</title><rect x="77.0744%" y="149" width="0.1532%" height="15" fill="rgb(232,209,1)" fg:x="9558" fg:w="19"/><text x="77.3244%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="77.2599%" y="133" width="0.0242%" height="15" fill="rgb(232,6,1)" fg:x="9581" fg:w="3"/><text x="77.5099%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="77.2922%" y="133" width="0.0564%" height="15" fill="rgb(210,224,50)" fg:x="9585" fg:w="7"/><text x="77.5422%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (9,577 samples, 77.23%)</title><rect x="0.2016%" y="341" width="77.2276%" height="15" fill="rgb(228,127,35)" fg:x="25" fg:w="9577"/><text x="0.4516%" y="351.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (164 samples, 1.32%)</title><rect x="76.1068%" y="325" width="1.3225%" height="15" fill="rgb(245,102,45)" fg:x="9438" fg:w="164"/><text x="76.3568%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (164 samples, 1.32%)</title><rect x="76.1068%" y="309" width="1.3225%" height="15" fill="rgb(214,1,49)" fg:x="9438" fg:w="164"/><text x="76.3568%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (163 samples, 1.31%)</title><rect x="76.1148%" y="293" width="1.3144%" height="15" fill="rgb(226,163,40)" fg:x="9439" fg:w="163"/><text x="76.3648%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (163 samples, 1.31%)</title><rect x="76.1148%" y="277" width="1.3144%" height="15" fill="rgb(239,212,28)" fg:x="9439" fg:w="163"/><text x="76.3648%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (163 samples, 1.31%)</title><rect x="76.1148%" y="261" width="1.3144%" height="15" fill="rgb(220,20,13)" fg:x="9439" fg:w="163"/><text x="76.3648%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (158 samples, 1.27%)</title><rect x="76.1551%" y="245" width="1.2741%" height="15" fill="rgb(210,164,35)" fg:x="9444" fg:w="158"/><text x="76.4051%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (153 samples, 1.23%)</title><rect x="76.1955%" y="229" width="1.2338%" height="15" fill="rgb(248,109,41)" fg:x="9449" fg:w="153"/><text x="76.4455%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (144 samples, 1.16%)</title><rect x="76.2680%" y="213" width="1.1612%" height="15" fill="rgb(238,23,50)" fg:x="9458" fg:w="144"/><text x="76.5180%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (126 samples, 1.02%)</title><rect x="76.4132%" y="197" width="1.0160%" height="15" fill="rgb(211,48,49)" fg:x="9476" fg:w="126"/><text x="76.6632%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (108 samples, 0.87%)</title><rect x="76.5583%" y="181" width="0.8709%" height="15" fill="rgb(223,36,21)" fg:x="9494" fg:w="108"/><text x="76.8083%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (68 samples, 0.55%)</title><rect x="76.8809%" y="165" width="0.5483%" height="15" fill="rgb(207,123,46)" fg:x="9534" fg:w="68"/><text x="77.1309%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (25 samples, 0.20%)</title><rect x="77.2276%" y="149" width="0.2016%" height="15" fill="rgb(240,218,32)" fg:x="9577" fg:w="25"/><text x="77.4776%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (10 samples, 0.08%)</title><rect x="77.3486%" y="133" width="0.0806%" height="15" fill="rgb(252,5,43)" fg:x="9592" fg:w="10"/><text x="77.5986%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="77.3970%" y="117" width="0.0323%" height="15" fill="rgb(252,84,19)" fg:x="9598" fg:w="4"/><text x="77.6470%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="77.5179%" y="229" width="0.0242%" height="15" fill="rgb(243,152,39)" fg:x="9613" fg:w="3"/><text x="77.7679%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="77.5663%" y="213" width="0.0242%" height="15" fill="rgb(234,160,15)" fg:x="9619" fg:w="3"/><text x="77.8163%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="77.6147%" y="213" width="0.0323%" height="15" fill="rgb(237,34,20)" fg:x="9625" fg:w="4"/><text x="77.8647%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="77.7276%" y="197" width="0.0645%" height="15" fill="rgb(229,97,13)" fg:x="9639" fg:w="8"/><text x="77.9776%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (6 samples, 0.05%)</title><rect x="77.9131%" y="181" width="0.0484%" height="15" fill="rgb(234,71,50)" fg:x="9662" fg:w="6"/><text x="78.1631%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="77.9615%" y="181" width="0.0161%" height="15" fill="rgb(253,155,4)" fg:x="9668" fg:w="2"/><text x="78.2115%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="77.9776%" y="181" width="0.0242%" height="15" fill="rgb(222,185,37)" fg:x="9670" fg:w="3"/><text x="78.2276%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="77.9856%" y="165" width="0.0161%" height="15" fill="rgb(251,177,13)" fg:x="9671" fg:w="2"/><text x="78.2356%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="77.9856%" y="149" width="0.0161%" height="15" fill="rgb(250,179,40)" fg:x="9671" fg:w="2"/><text x="78.2356%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (13 samples, 0.10%)</title><rect x="78.0098%" y="181" width="0.1048%" height="15" fill="rgb(242,44,2)" fg:x="9674" fg:w="13"/><text x="78.2598%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="78.2356%" y="165" width="0.0323%" height="15" fill="rgb(216,177,13)" fg:x="9702" fg:w="4"/><text x="78.4856%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (7 samples, 0.06%)</title><rect x="78.2679%" y="165" width="0.0564%" height="15" fill="rgb(216,106,43)" fg:x="9706" fg:w="7"/><text x="78.5179%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="78.3243%" y="165" width="0.0242%" height="15" fill="rgb(216,183,2)" fg:x="9713" fg:w="3"/><text x="78.5743%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="78.3243%" y="149" width="0.0242%" height="15" fill="rgb(249,75,3)" fg:x="9713" fg:w="3"/><text x="78.5743%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="78.3324%" y="133" width="0.0161%" height="15" fill="rgb(219,67,39)" fg:x="9714" fg:w="2"/><text x="78.5824%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (18 samples, 0.15%)</title><rect x="78.3485%" y="165" width="0.1451%" height="15" fill="rgb(253,228,2)" fg:x="9716" fg:w="18"/><text x="78.5985%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="78.7759%" y="149" width="0.0161%" height="15" fill="rgb(235,138,27)" fg:x="9769" fg:w="2"/><text x="79.0259%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (17 samples, 0.14%)</title><rect x="78.8082%" y="149" width="0.1371%" height="15" fill="rgb(236,97,51)" fg:x="9773" fg:w="17"/><text x="79.0582%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (5 samples, 0.04%)</title><rect x="79.0662%" y="133" width="0.0403%" height="15" fill="rgb(240,80,30)" fg:x="9805" fg:w="5"/><text x="79.3162%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (9,806 samples, 79.07%)</title><rect x="0.1210%" y="357" width="79.0743%" height="15" fill="rgb(230,178,19)" fg:x="15" fg:w="9806"/><text x="0.3710%" y="367.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (219 samples, 1.77%)</title><rect x="77.4292%" y="341" width="1.7660%" height="15" fill="rgb(210,190,27)" fg:x="9602" fg:w="219"/><text x="77.6792%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (218 samples, 1.76%)</title><rect x="77.4373%" y="325" width="1.7579%" height="15" fill="rgb(222,107,31)" fg:x="9603" fg:w="218"/><text x="77.6873%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (218 samples, 1.76%)</title><rect x="77.4373%" y="309" width="1.7579%" height="15" fill="rgb(216,127,34)" fg:x="9603" fg:w="218"/><text x="77.6873%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (217 samples, 1.75%)</title><rect x="77.4454%" y="293" width="1.7499%" height="15" fill="rgb(234,116,52)" fg:x="9604" fg:w="217"/><text x="77.6954%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (215 samples, 1.73%)</title><rect x="77.4615%" y="277" width="1.7337%" height="15" fill="rgb(222,124,15)" fg:x="9606" fg:w="215"/><text x="77.7115%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (213 samples, 1.72%)</title><rect x="77.4776%" y="261" width="1.7176%" height="15" fill="rgb(231,179,28)" fg:x="9608" fg:w="213"/><text x="77.7276%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (209 samples, 1.69%)</title><rect x="77.5099%" y="245" width="1.6853%" height="15" fill="rgb(226,93,45)" fg:x="9612" fg:w="209"/><text x="77.7599%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (205 samples, 1.65%)</title><rect x="77.5421%" y="229" width="1.6531%" height="15" fill="rgb(215,8,51)" fg:x="9616" fg:w="205"/><text x="77.7921%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (192 samples, 1.55%)</title><rect x="77.6470%" y="213" width="1.5483%" height="15" fill="rgb(223,106,5)" fg:x="9629" fg:w="192"/><text x="77.8970%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (174 samples, 1.40%)</title><rect x="77.7921%" y="197" width="1.4031%" height="15" fill="rgb(250,191,5)" fg:x="9647" fg:w="174"/><text x="78.0421%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (134 samples, 1.08%)</title><rect x="78.1147%" y="181" width="1.0806%" height="15" fill="rgb(242,132,44)" fg:x="9687" fg:w="134"/><text x="78.3647%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (87 samples, 0.70%)</title><rect x="78.4937%" y="165" width="0.7016%" height="15" fill="rgb(251,152,29)" fg:x="9734" fg:w="87"/><text x="78.7437%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (31 samples, 0.25%)</title><rect x="78.9452%" y="149" width="0.2500%" height="15" fill="rgb(218,179,5)" fg:x="9790" fg:w="31"/><text x="79.1952%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (11 samples, 0.09%)</title><rect x="79.1065%" y="133" width="0.0887%" height="15" fill="rgb(227,67,19)" fg:x="9810" fg:w="11"/><text x="79.3565%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="79.1710%" y="117" width="0.0242%" height="15" fill="rgb(233,119,31)" fg:x="9818" fg:w="3"/><text x="79.4210%" y="127.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="79.2597%" y="229" width="0.0161%" height="15" fill="rgb(241,120,22)" fg:x="9829" fg:w="2"/><text x="79.5097%" y="239.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="79.3323%" y="213" width="0.0161%" height="15" fill="rgb(224,102,30)" fg:x="9838" fg:w="2"/><text x="79.5823%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="79.3323%" y="197" width="0.0161%" height="15" fill="rgb(210,164,37)" fg:x="9838" fg:w="2"/><text x="79.5823%" y="207.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="79.3323%" y="181" width="0.0161%" height="15" fill="rgb(226,191,16)" fg:x="9838" fg:w="2"/><text x="79.5823%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (10 samples, 0.08%)</title><rect x="79.3484%" y="213" width="0.0806%" height="15" fill="rgb(214,40,45)" fg:x="9840" fg:w="10"/><text x="79.5984%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (6 samples, 0.05%)</title><rect x="79.5097%" y="197" width="0.0484%" height="15" fill="rgb(244,29,26)" fg:x="9860" fg:w="6"/><text x="79.7597%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="79.5581%" y="197" width="0.0242%" height="15" fill="rgb(216,16,5)" fg:x="9866" fg:w="3"/><text x="79.8081%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="79.5662%" y="181" width="0.0161%" height="15" fill="rgb(249,76,35)" fg:x="9867" fg:w="2"/><text x="79.8162%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="79.5823%" y="197" width="0.0645%" height="15" fill="rgb(207,11,44)" fg:x="9869" fg:w="8"/><text x="79.8323%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="79.7113%" y="181" width="0.0323%" height="15" fill="rgb(228,190,49)" fg:x="9885" fg:w="4"/><text x="79.9613%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="79.7516%" y="181" width="0.0484%" height="15" fill="rgb(214,173,12)" fg:x="9890" fg:w="6"/><text x="80.0016%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="79.7678%" y="165" width="0.0323%" height="15" fill="rgb(218,26,35)" fg:x="9892" fg:w="4"/><text x="80.0178%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="79.8081%" y="181" width="0.0161%" height="15" fill="rgb(220,200,19)" fg:x="9897" fg:w="2"/><text x="80.0581%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (19 samples, 0.15%)</title><rect x="79.8242%" y="181" width="0.1532%" height="15" fill="rgb(239,95,49)" fg:x="9899" fg:w="19"/><text x="80.0742%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (9 samples, 0.07%)</title><rect x="80.1387%" y="165" width="0.0726%" height="15" fill="rgb(235,85,53)" fg:x="9938" fg:w="9"/><text x="80.3887%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (5 samples, 0.04%)</title><rect x="80.2113%" y="165" width="0.0403%" height="15" fill="rgb(233,133,31)" fg:x="9947" fg:w="5"/><text x="80.4613%" y="175.50"></text></g><g><title>rust-gkat`cuddCacheLookup2 (2 samples, 0.02%)</title><rect x="80.2597%" y="133" width="0.0161%" height="15" fill="rgb(218,25,20)" fg:x="9953" fg:w="2"/><text x="80.5097%" y="143.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="80.2758%" y="133" width="0.0242%" height="15" fill="rgb(252,210,38)" fg:x="9955" fg:w="3"/><text x="80.5258%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (7 samples, 0.06%)</title><rect x="80.2597%" y="149" width="0.0564%" height="15" fill="rgb(242,134,21)" fg:x="9953" fg:w="7"/><text x="80.5097%" y="159.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="80.3000%" y="133" width="0.0161%" height="15" fill="rgb(213,28,48)" fg:x="9958" fg:w="2"/><text x="80.5500%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (9 samples, 0.07%)</title><rect x="80.2516%" y="165" width="0.0726%" height="15" fill="rgb(250,196,2)" fg:x="9952" fg:w="9"/><text x="80.5016%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (31 samples, 0.25%)</title><rect x="80.3242%" y="165" width="0.2500%" height="15" fill="rgb(227,5,17)" fg:x="9961" fg:w="31"/><text x="80.5742%" y="175.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="80.8564%" y="149" width="0.0161%" height="15" fill="rgb(221,226,24)" fg:x="10027" fg:w="2"/><text x="81.1064%" y="159.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="80.8725%" y="149" width="0.0161%" height="15" fill="rgb(211,5,48)" fg:x="10029" fg:w="2"/><text x="81.1225%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="80.8967%" y="149" width="0.0161%" height="15" fill="rgb(219,150,6)" fg:x="10032" fg:w="2"/><text x="81.1467%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="80.8967%" y="133" width="0.0161%" height="15" fill="rgb(251,46,16)" fg:x="10032" fg:w="2"/><text x="81.1467%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (22 samples, 0.18%)</title><rect x="80.9209%" y="149" width="0.1774%" height="15" fill="rgb(220,204,40)" fg:x="10035" fg:w="22"/><text x="81.1709%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="81.2193%" y="133" width="0.0161%" height="15" fill="rgb(211,85,2)" fg:x="10072" fg:w="2"/><text x="81.4693%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="81.2193%" y="117" width="0.0161%" height="15" fill="rgb(229,17,7)" fg:x="10072" fg:w="2"/><text x="81.4693%" y="127.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="81.2434%" y="133" width="0.0564%" height="15" fill="rgb(239,72,28)" fg:x="10075" fg:w="7"/><text x="81.4934%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="81.4047%" y="117" width="0.0242%" height="15" fill="rgb(230,47,54)" fg:x="10095" fg:w="3"/><text x="81.6547%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (10,089 samples, 81.36%)</title><rect x="0.0806%" y="373" width="81.3563%" height="15" fill="rgb(214,50,8)" fg:x="10" fg:w="10089"/><text x="0.3306%" y="383.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="79.1952%" y="357" width="2.2418%" height="15" fill="rgb(216,198,43)" fg:x="9821" fg:w="278"/><text x="79.4452%" y="367.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="79.1952%" y="341" width="2.2418%" height="15" fill="rgb(234,20,35)" fg:x="9821" fg:w="278"/><text x="79.4452%" y="351.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="79.1952%" y="325" width="2.2418%" height="15" fill="rgb(254,45,19)" fg:x="9821" fg:w="278"/><text x="79.4452%" y="335.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="79.1952%" y="309" width="2.2418%" height="15" fill="rgb(219,14,44)" fg:x="9821" fg:w="278"/><text x="79.4452%" y="319.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (277 samples, 2.23%)</title><rect x="79.2033%" y="293" width="2.2337%" height="15" fill="rgb(217,220,26)" fg:x="9822" fg:w="277"/><text x="79.4533%" y="303.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (276 samples, 2.23%)</title><rect x="79.2114%" y="277" width="2.2256%" height="15" fill="rgb(213,158,28)" fg:x="9823" fg:w="276"/><text x="79.4614%" y="287.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (274 samples, 2.21%)</title><rect x="79.2275%" y="261" width="2.2095%" height="15" fill="rgb(252,51,52)" fg:x="9825" fg:w="274"/><text x="79.4775%" y="271.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (272 samples, 2.19%)</title><rect x="79.2436%" y="245" width="2.1934%" height="15" fill="rgb(246,89,16)" fg:x="9827" fg:w="272"/><text x="79.4936%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (266 samples, 2.14%)</title><rect x="79.2920%" y="229" width="2.1450%" height="15" fill="rgb(216,158,49)" fg:x="9833" fg:w="266"/><text x="79.5420%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (249 samples, 2.01%)</title><rect x="79.4291%" y="213" width="2.0079%" height="15" fill="rgb(236,107,19)" fg:x="9850" fg:w="249"/><text x="79.6791%" y="223.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (222 samples, 1.79%)</title><rect x="79.6468%" y="197" width="1.7902%" height="15" fill="rgb(228,185,30)" fg:x="9877" fg:w="222"/><text x="79.8968%" y="207.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (181 samples, 1.46%)</title><rect x="79.9774%" y="181" width="1.4596%" height="15" fill="rgb(246,134,8)" fg:x="9918" fg:w="181"/><text x="80.2274%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (107 samples, 0.86%)</title><rect x="80.5741%" y="165" width="0.8628%" height="15" fill="rgb(214,143,50)" fg:x="9992" fg:w="107"/><text x="80.8241%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (42 samples, 0.34%)</title><rect x="81.0983%" y="149" width="0.3387%" height="15" fill="rgb(228,75,8)" fg:x="10057" fg:w="42"/><text x="81.3483%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (17 samples, 0.14%)</title><rect x="81.2999%" y="133" width="0.1371%" height="15" fill="rgb(207,175,4)" fg:x="10082" fg:w="17"/><text x="81.5499%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="81.5257%" y="245" width="0.0323%" height="15" fill="rgb(205,108,24)" fg:x="10110" fg:w="4"/><text x="81.7757%" y="255.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="81.6466%" y="229" width="0.0242%" height="15" fill="rgb(244,120,49)" fg:x="10125" fg:w="3"/><text x="81.8966%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="81.7192%" y="213" width="0.0242%" height="15" fill="rgb(223,47,38)" fg:x="10134" fg:w="3"/><text x="81.9692%" y="223.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="81.7434%" y="213" width="0.0161%" height="15" fill="rgb(229,179,11)" fg:x="10137" fg:w="2"/><text x="81.9934%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="81.7676%" y="213" width="0.0161%" height="15" fill="rgb(231,122,1)" fg:x="10140" fg:w="2"/><text x="82.0176%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="81.7837%" y="213" width="0.0645%" height="15" fill="rgb(245,119,9)" fg:x="10142" fg:w="8"/><text x="82.0337%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="81.9127%" y="197" width="0.0242%" height="15" fill="rgb(241,163,25)" fg:x="10158" fg:w="3"/><text x="82.1627%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="81.9369%" y="197" width="0.0242%" height="15" fill="rgb(217,214,3)" fg:x="10161" fg:w="3"/><text x="82.1869%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (9 samples, 0.07%)</title><rect x="81.9773%" y="197" width="0.0726%" height="15" fill="rgb(240,86,28)" fg:x="10166" fg:w="9"/><text x="82.2273%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (16 samples, 0.13%)</title><rect x="82.1466%" y="181" width="0.1290%" height="15" fill="rgb(215,47,9)" fg:x="10187" fg:w="16"/><text x="82.3966%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="82.2756%" y="181" width="0.0161%" height="15" fill="rgb(252,25,45)" fg:x="10203" fg:w="2"/><text x="82.5256%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="82.2918%" y="181" width="0.0484%" height="15" fill="rgb(251,164,9)" fg:x="10205" fg:w="6"/><text x="82.5418%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="82.2918%" y="165" width="0.0484%" height="15" fill="rgb(233,194,0)" fg:x="10205" fg:w="6"/><text x="82.5418%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="82.3240%" y="149" width="0.0161%" height="15" fill="rgb(249,111,24)" fg:x="10209" fg:w="2"/><text x="82.5740%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (15 samples, 0.12%)</title><rect x="82.3563%" y="181" width="0.1210%" height="15" fill="rgb(250,223,3)" fg:x="10213" fg:w="15"/><text x="82.6063%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (10 samples, 0.08%)</title><rect x="82.6869%" y="165" width="0.0806%" height="15" fill="rgb(236,178,37)" fg:x="10254" fg:w="10"/><text x="82.9369%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="82.7675%" y="165" width="0.0161%" height="15" fill="rgb(241,158,50)" fg:x="10264" fg:w="2"/><text x="83.0175%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="82.7836%" y="165" width="0.0484%" height="15" fill="rgb(213,121,41)" fg:x="10266" fg:w="6"/><text x="83.0336%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="82.7836%" y="149" width="0.0484%" height="15" fill="rgb(240,92,3)" fg:x="10266" fg:w="6"/><text x="83.0336%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (6 samples, 0.05%)</title><rect x="82.7836%" y="133" width="0.0484%" height="15" fill="rgb(205,123,3)" fg:x="10266" fg:w="6"/><text x="83.0336%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="82.8320%" y="165" width="0.0161%" height="15" fill="rgb(205,97,47)" fg:x="10272" fg:w="2"/><text x="83.0820%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="82.8482%" y="165" width="0.0161%" height="15" fill="rgb(247,152,14)" fg:x="10274" fg:w="2"/><text x="83.0982%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (45 samples, 0.36%)</title><rect x="82.8643%" y="165" width="0.3629%" height="15" fill="rgb(248,195,53)" fg:x="10276" fg:w="45"/><text x="83.1143%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="83.6707%" y="149" width="0.0161%" height="15" fill="rgb(226,201,16)" fg:x="10376" fg:w="2"/><text x="83.9207%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="83.6868%" y="149" width="0.0323%" height="15" fill="rgb(205,98,0)" fg:x="10378" fg:w="4"/><text x="83.9368%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="83.6949%" y="133" width="0.0242%" height="15" fill="rgb(214,191,48)" fg:x="10379" fg:w="3"/><text x="83.9449%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (22 samples, 0.18%)</title><rect x="83.7271%" y="149" width="0.1774%" height="15" fill="rgb(237,112,39)" fg:x="10383" fg:w="22"/><text x="83.9771%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (10,413 samples, 83.97%)</title><rect x="0.0242%" y="389" width="83.9690%" height="15" fill="rgb(247,203,27)" fg:x="3" fg:w="10413"/><text x="0.2742%" y="399.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (317 samples, 2.56%)</title><rect x="81.4370%" y="373" width="2.5562%" height="15" fill="rgb(235,124,28)" fg:x="10099" fg:w="317"/><text x="81.6870%" y="383.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="81.4450%" y="357" width="2.5482%" height="15" fill="rgb(208,207,46)" fg:x="10100" fg:w="316"/><text x="81.6950%" y="367.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="81.4450%" y="341" width="2.5482%" height="15" fill="rgb(234,176,4)" fg:x="10100" fg:w="316"/><text x="81.6950%" y="351.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="81.4450%" y="325" width="2.5482%" height="15" fill="rgb(230,133,28)" fg:x="10100" fg:w="316"/><text x="81.6950%" y="335.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="81.4450%" y="309" width="2.5482%" height="15" fill="rgb(211,137,40)" fg:x="10100" fg:w="316"/><text x="81.6950%" y="319.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="81.4450%" y="293" width="2.5482%" height="15" fill="rgb(254,35,13)" fg:x="10100" fg:w="316"/><text x="81.6950%" y="303.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (315 samples, 2.54%)</title><rect x="81.4531%" y="277" width="2.5401%" height="15" fill="rgb(225,49,51)" fg:x="10101" fg:w="315"/><text x="81.7031%" y="287.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (309 samples, 2.49%)</title><rect x="81.5015%" y="261" width="2.4917%" height="15" fill="rgb(251,10,15)" fg:x="10107" fg:w="309"/><text x="81.7515%" y="271.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (302 samples, 2.44%)</title><rect x="81.5579%" y="245" width="2.4353%" height="15" fill="rgb(228,207,15)" fg:x="10114" fg:w="302"/><text x="81.8079%" y="255.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (288 samples, 2.32%)</title><rect x="81.6708%" y="229" width="2.3224%" height="15" fill="rgb(241,99,19)" fg:x="10128" fg:w="288"/><text x="81.9208%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (266 samples, 2.14%)</title><rect x="81.8482%" y="213" width="2.1450%" height="15" fill="rgb(207,104,49)" fg:x="10150" fg:w="266"/><text x="82.0982%" y="223.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (241 samples, 1.94%)</title><rect x="82.0498%" y="197" width="1.9434%" height="15" fill="rgb(234,99,18)" fg:x="10175" fg:w="241"/><text x="82.2998%" y="207.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (188 samples, 1.52%)</title><rect x="82.4772%" y="181" width="1.5160%" height="15" fill="rgb(213,191,49)" fg:x="10228" fg:w="188"/><text x="82.7272%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (95 samples, 0.77%)</title><rect x="83.2272%" y="165" width="0.7661%" height="15" fill="rgb(210,226,19)" fg:x="10321" fg:w="95"/><text x="83.4772%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (11 samples, 0.09%)</title><rect x="83.9045%" y="149" width="0.0887%" height="15" fill="rgb(229,97,18)" fg:x="10405" fg:w="11"/><text x="84.1545%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="84.0497%" y="229" width="0.0242%" height="15" fill="rgb(211,167,15)" fg:x="10423" fg:w="3"/><text x="84.2997%" y="239.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="84.0819%" y="213" width="0.0161%" height="15" fill="rgb(210,169,34)" fg:x="10427" fg:w="2"/><text x="84.3319%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="84.0981%" y="213" width="0.0242%" height="15" fill="rgb(241,121,31)" fg:x="10429" fg:w="3"/><text x="84.3481%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="84.1061%" y="197" width="0.0161%" height="15" fill="rgb(232,40,11)" fg:x="10430" fg:w="2"/><text x="84.3561%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="84.1222%" y="213" width="0.0242%" height="15" fill="rgb(205,86,26)" fg:x="10432" fg:w="3"/><text x="84.3722%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.04%)</title><rect x="84.1787%" y="197" width="0.0403%" height="15" fill="rgb(231,126,28)" fg:x="10439" fg:w="5"/><text x="84.4287%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="84.2190%" y="197" width="0.0161%" height="15" fill="rgb(219,221,18)" fg:x="10444" fg:w="2"/><text x="84.4690%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="84.2190%" y="181" width="0.0161%" height="15" fill="rgb(211,40,0)" fg:x="10444" fg:w="2"/><text x="84.4690%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="84.2351%" y="197" width="0.0484%" height="15" fill="rgb(239,85,43)" fg:x="10446" fg:w="6"/><text x="84.4851%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.04%)</title><rect x="84.3561%" y="181" width="0.0403%" height="15" fill="rgb(231,55,21)" fg:x="10461" fg:w="5"/><text x="84.6061%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.06%)</title><rect x="84.4125%" y="181" width="0.0645%" height="15" fill="rgb(225,184,43)" fg:x="10468" fg:w="8"/><text x="84.6625%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.04%)</title><rect x="84.6061%" y="165" width="0.0403%" height="15" fill="rgb(251,158,41)" fg:x="10492" fg:w="5"/><text x="84.8561%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.04%)</title><rect x="84.6464%" y="165" width="0.0403%" height="15" fill="rgb(234,159,37)" fg:x="10497" fg:w="5"/><text x="84.8964%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="84.6625%" y="149" width="0.0242%" height="15" fill="rgb(216,204,22)" fg:x="10499" fg:w="3"/><text x="84.9125%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="84.6625%" y="133" width="0.0242%" height="15" fill="rgb(214,17,3)" fg:x="10499" fg:w="3"/><text x="84.9125%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="84.6867%" y="165" width="0.0161%" height="15" fill="rgb(212,111,17)" fg:x="10502" fg:w="2"/><text x="84.9367%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (13 samples, 0.10%)</title><rect x="84.7028%" y="165" width="0.1048%" height="15" fill="rgb(221,157,24)" fg:x="10504" fg:w="13"/><text x="84.9528%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (12 samples, 0.10%)</title><rect x="85.0012%" y="149" width="0.0968%" height="15" fill="rgb(252,16,13)" fg:x="10541" fg:w="12"/><text x="85.2512%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (10,557 samples, 85.13%)</title><rect x="0.0081%" y="405" width="85.1302%" height="15" fill="rgb(221,62,2)" fg:x="1" fg:w="10557"/><text x="0.2581%" y="415.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (142 samples, 1.15%)</title><rect x="83.9932%" y="389" width="1.1451%" height="15" fill="rgb(247,87,22)" fg:x="10416" fg:w="142"/><text x="84.2432%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (142 samples, 1.15%)</title><rect x="83.9932%" y="373" width="1.1451%" height="15" fill="rgb(215,73,9)" fg:x="10416" fg:w="142"/><text x="84.2432%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (142 samples, 1.15%)</title><rect x="83.9932%" y="357" width="1.1451%" height="15" fill="rgb(207,175,33)" fg:x="10416" fg:w="142"/><text x="84.2432%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (142 samples, 1.15%)</title><rect x="83.9932%" y="341" width="1.1451%" height="15" fill="rgb(243,129,54)" fg:x="10416" fg:w="142"/><text x="84.2432%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (142 samples, 1.15%)</title><rect x="83.9932%" y="325" width="1.1451%" height="15" fill="rgb(227,119,45)" fg:x="10416" fg:w="142"/><text x="84.2432%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (141 samples, 1.14%)</title><rect x="84.0013%" y="309" width="1.1370%" height="15" fill="rgb(205,109,36)" fg:x="10417" fg:w="141"/><text x="84.2513%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (141 samples, 1.14%)</title><rect x="84.0013%" y="293" width="1.1370%" height="15" fill="rgb(205,6,39)" fg:x="10417" fg:w="141"/><text x="84.2513%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (141 samples, 1.14%)</title><rect x="84.0013%" y="277" width="1.1370%" height="15" fill="rgb(221,32,16)" fg:x="10417" fg:w="141"/><text x="84.2513%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (139 samples, 1.12%)</title><rect x="84.0174%" y="261" width="1.1209%" height="15" fill="rgb(228,144,50)" fg:x="10419" fg:w="139"/><text x="84.2674%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (137 samples, 1.10%)</title><rect x="84.0335%" y="245" width="1.1047%" height="15" fill="rgb(229,201,53)" fg:x="10421" fg:w="137"/><text x="84.2835%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (132 samples, 1.06%)</title><rect x="84.0739%" y="229" width="1.0644%" height="15" fill="rgb(249,153,27)" fg:x="10426" fg:w="132"/><text x="84.3239%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (123 samples, 0.99%)</title><rect x="84.1464%" y="213" width="0.9919%" height="15" fill="rgb(227,106,25)" fg:x="10435" fg:w="123"/><text x="84.3964%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (106 samples, 0.85%)</title><rect x="84.2835%" y="197" width="0.8548%" height="15" fill="rgb(230,65,29)" fg:x="10452" fg:w="106"/><text x="84.5335%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (82 samples, 0.66%)</title><rect x="84.4771%" y="181" width="0.6612%" height="15" fill="rgb(221,57,46)" fg:x="10476" fg:w="82"/><text x="84.7271%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (41 samples, 0.33%)</title><rect x="84.8077%" y="165" width="0.3306%" height="15" fill="rgb(229,161,17)" fg:x="10517" fg:w="41"/><text x="85.0577%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (5 samples, 0.04%)</title><rect x="85.0980%" y="149" width="0.0403%" height="15" fill="rgb(222,213,11)" fg:x="10553" fg:w="5"/><text x="85.3480%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="85.1947%" y="245" width="0.0161%" height="15" fill="rgb(235,35,13)" fg:x="10565" fg:w="2"/><text x="85.4447%" y="255.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="85.2431%" y="229" width="0.0161%" height="15" fill="rgb(233,158,34)" fg:x="10571" fg:w="2"/><text x="85.4931%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="85.2754%" y="213" width="0.0242%" height="15" fill="rgb(215,151,48)" fg:x="10575" fg:w="3"/><text x="85.5254%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="85.3076%" y="213" width="0.0242%" height="15" fill="rgb(229,84,14)" fg:x="10579" fg:w="3"/><text x="85.5576%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="85.3157%" y="197" width="0.0161%" height="15" fill="rgb(229,68,14)" fg:x="10580" fg:w="2"/><text x="85.5657%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="85.4125%" y="197" width="0.0161%" height="15" fill="rgb(243,106,26)" fg:x="10592" fg:w="2"/><text x="85.6625%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="85.4286%" y="197" width="0.0161%" height="15" fill="rgb(206,45,38)" fg:x="10594" fg:w="2"/><text x="85.6786%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="85.4447%" y="197" width="0.0242%" height="15" fill="rgb(226,6,15)" fg:x="10596" fg:w="3"/><text x="85.6947%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="85.4528%" y="181" width="0.0161%" height="15" fill="rgb(232,22,54)" fg:x="10597" fg:w="2"/><text x="85.7028%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (11 samples, 0.09%)</title><rect x="85.4770%" y="197" width="0.0887%" height="15" fill="rgb(229,222,32)" fg:x="10600" fg:w="11"/><text x="85.7270%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (7 samples, 0.06%)</title><rect x="85.6463%" y="181" width="0.0564%" height="15" fill="rgb(228,62,29)" fg:x="10621" fg:w="7"/><text x="85.8963%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="85.7108%" y="181" width="0.0161%" height="15" fill="rgb(251,103,34)" fg:x="10629" fg:w="2"/><text x="85.9608%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="85.7108%" y="165" width="0.0161%" height="15" fill="rgb(233,12,30)" fg:x="10629" fg:w="2"/><text x="85.9608%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="85.7108%" y="149" width="0.0161%" height="15" fill="rgb(238,52,0)" fg:x="10629" fg:w="2"/><text x="85.9608%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (14 samples, 0.11%)</title><rect x="85.7350%" y="181" width="0.1129%" height="15" fill="rgb(223,98,5)" fg:x="10632" fg:w="14"/><text x="85.9850%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (10 samples, 0.08%)</title><rect x="86.0414%" y="165" width="0.0806%" height="15" fill="rgb(228,75,37)" fg:x="10670" fg:w="10"/><text x="86.2914%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (4 samples, 0.03%)</title><rect x="86.1221%" y="165" width="0.0323%" height="15" fill="rgb(205,115,49)" fg:x="10680" fg:w="4"/><text x="86.3721%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="86.1543%" y="165" width="0.0242%" height="15" fill="rgb(250,154,43)" fg:x="10684" fg:w="3"/><text x="86.4043%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="86.1543%" y="149" width="0.0242%" height="15" fill="rgb(226,43,29)" fg:x="10684" fg:w="3"/><text x="86.4043%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="86.1624%" y="133" width="0.0161%" height="15" fill="rgb(249,228,39)" fg:x="10685" fg:w="2"/><text x="86.4124%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (29 samples, 0.23%)</title><rect x="86.1866%" y="165" width="0.2339%" height="15" fill="rgb(216,79,43)" fg:x="10688" fg:w="29"/><text x="86.4366%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="86.7753%" y="149" width="0.0161%" height="15" fill="rgb(228,95,12)" fg:x="10761" fg:w="2"/><text x="87.0253%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="86.7995%" y="149" width="0.0323%" height="15" fill="rgb(249,221,15)" fg:x="10764" fg:w="4"/><text x="87.0495%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (23 samples, 0.19%)</title><rect x="86.8317%" y="149" width="0.1855%" height="15" fill="rgb(233,34,13)" fg:x="10768" fg:w="23"/><text x="87.0817%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (10,805 samples, 87.13%)</title><rect x="0.0000%" y="421" width="87.1301%" height="15" fill="rgb(214,103,39)" fg:x="0" fg:w="10805"/><text x="0.2500%" y="431.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="405" width="1.9918%" height="15" fill="rgb(251,126,39)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="415.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="389" width="1.9918%" height="15" fill="rgb(214,216,36)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="399.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="373" width="1.9918%" height="15" fill="rgb(220,221,8)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="383.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="357" width="1.9918%" height="15" fill="rgb(240,216,3)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="367.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="341" width="1.9918%" height="15" fill="rgb(232,218,17)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="351.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="325" width="1.9918%" height="15" fill="rgb(229,163,45)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="335.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (247 samples, 1.99%)</title><rect x="85.1383%" y="309" width="1.9918%" height="15" fill="rgb(231,110,42)" fg:x="10558" fg:w="247"/><text x="85.3883%" y="319.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (246 samples, 1.98%)</title><rect x="85.1464%" y="293" width="1.9837%" height="15" fill="rgb(208,170,48)" fg:x="10559" fg:w="246"/><text x="85.3964%" y="303.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (245 samples, 1.98%)</title><rect x="85.1544%" y="277" width="1.9756%" height="15" fill="rgb(239,116,25)" fg:x="10560" fg:w="245"/><text x="85.4044%" y="287.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (243 samples, 1.96%)</title><rect x="85.1706%" y="261" width="1.9595%" height="15" fill="rgb(219,200,50)" fg:x="10562" fg:w="243"/><text x="85.4206%" y="271.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (238 samples, 1.92%)</title><rect x="85.2109%" y="245" width="1.9192%" height="15" fill="rgb(245,200,0)" fg:x="10567" fg:w="238"/><text x="85.4609%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (232 samples, 1.87%)</title><rect x="85.2593%" y="229" width="1.8708%" height="15" fill="rgb(245,119,33)" fg:x="10573" fg:w="232"/><text x="85.5093%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (223 samples, 1.80%)</title><rect x="85.3318%" y="213" width="1.7982%" height="15" fill="rgb(231,125,12)" fg:x="10582" fg:w="223"/><text x="85.5818%" y="223.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (194 samples, 1.56%)</title><rect x="85.5657%" y="197" width="1.5644%" height="15" fill="rgb(216,96,41)" fg:x="10611" fg:w="194"/><text x="85.8157%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (159 samples, 1.28%)</title><rect x="85.8479%" y="181" width="1.2822%" height="15" fill="rgb(248,43,45)" fg:x="10646" fg:w="159"/><text x="86.0979%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (88 samples, 0.71%)</title><rect x="86.4204%" y="165" width="0.7096%" height="15" fill="rgb(217,222,7)" fg:x="10717" fg:w="88"/><text x="86.6704%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (14 samples, 0.11%)</title><rect x="87.0172%" y="149" width="0.1129%" height="15" fill="rgb(233,28,6)" fg:x="10791" fg:w="14"/><text x="87.2672%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="87.2430%" y="229" width="0.0242%" height="15" fill="rgb(231,218,15)" fg:x="10819" fg:w="3"/><text x="87.4930%" y="239.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.03%)</title><rect x="87.2672%" y="229" width="0.0323%" height="15" fill="rgb(226,171,48)" fg:x="10822" fg:w="4"/><text x="87.5172%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="87.3397%" y="213" width="0.0242%" height="15" fill="rgb(235,201,9)" fg:x="10831" fg:w="3"/><text x="87.5897%" y="223.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="87.3639%" y="213" width="0.0161%" height="15" fill="rgb(217,80,15)" fg:x="10834" fg:w="2"/><text x="87.6139%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (7 samples, 0.06%)</title><rect x="87.3962%" y="213" width="0.0564%" height="15" fill="rgb(219,152,8)" fg:x="10838" fg:w="7"/><text x="87.6462%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (8 samples, 0.06%)</title><rect x="87.5091%" y="197" width="0.0645%" height="15" fill="rgb(243,107,38)" fg:x="10852" fg:w="8"/><text x="87.7591%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="87.5736%" y="197" width="0.0161%" height="15" fill="rgb(231,17,5)" fg:x="10860" fg:w="2"/><text x="87.8236%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (13 samples, 0.10%)</title><rect x="87.5897%" y="197" width="0.1048%" height="15" fill="rgb(209,25,54)" fg:x="10862" fg:w="13"/><text x="87.8397%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (10 samples, 0.08%)</title><rect x="87.8478%" y="181" width="0.0806%" height="15" fill="rgb(219,0,2)" fg:x="10894" fg:w="10"/><text x="88.0978%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (5 samples, 0.04%)</title><rect x="87.9284%" y="181" width="0.0403%" height="15" fill="rgb(246,9,5)" fg:x="10904" fg:w="5"/><text x="88.1784%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="88.0010%" y="149" width="0.0161%" height="15" fill="rgb(226,159,4)" fg:x="10913" fg:w="2"/><text x="88.2510%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.06%)</title><rect x="87.9687%" y="181" width="0.0564%" height="15" fill="rgb(219,175,34)" fg:x="10909" fg:w="7"/><text x="88.2187%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (4 samples, 0.03%)</title><rect x="87.9929%" y="165" width="0.0323%" height="15" fill="rgb(236,10,46)" fg:x="10912" fg:w="4"/><text x="88.2429%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="88.0252%" y="181" width="0.0161%" height="15" fill="rgb(240,211,16)" fg:x="10916" fg:w="2"/><text x="88.2752%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (19 samples, 0.15%)</title><rect x="88.0413%" y="181" width="0.1532%" height="15" fill="rgb(205,3,43)" fg:x="10918" fg:w="19"/><text x="88.2913%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (11 samples, 0.09%)</title><rect x="88.4203%" y="165" width="0.0887%" height="15" fill="rgb(245,7,22)" fg:x="10965" fg:w="11"/><text x="88.6703%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (6 samples, 0.05%)</title><rect x="88.5090%" y="165" width="0.0484%" height="15" fill="rgb(239,132,32)" fg:x="10976" fg:w="6"/><text x="88.7590%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (6 samples, 0.05%)</title><rect x="88.5574%" y="165" width="0.0484%" height="15" fill="rgb(228,202,34)" fg:x="10982" fg:w="6"/><text x="88.8074%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="88.5654%" y="149" width="0.0403%" height="15" fill="rgb(254,200,22)" fg:x="10983" fg:w="5"/><text x="88.8154%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (3 samples, 0.02%)</title><rect x="88.5816%" y="133" width="0.0242%" height="15" fill="rgb(219,10,39)" fg:x="10985" fg:w="3"/><text x="88.8316%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (34 samples, 0.27%)</title><rect x="88.6138%" y="165" width="0.2742%" height="15" fill="rgb(226,210,39)" fg:x="10989" fg:w="34"/><text x="88.8638%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="89.3638%" y="149" width="0.0161%" height="15" fill="rgb(208,219,16)" fg:x="11082" fg:w="2"/><text x="89.6138%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="89.3880%" y="149" width="0.0161%" height="15" fill="rgb(216,158,51)" fg:x="11085" fg:w="2"/><text x="89.6380%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (28 samples, 0.23%)</title><rect x="89.4041%" y="149" width="0.2258%" height="15" fill="rgb(233,14,44)" fg:x="11087" fg:w="28"/><text x="89.6541%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (11,123 samples, 89.69%)</title><rect x="0.0000%" y="437" width="89.6944%" height="15" fill="rgb(237,97,39)" fg:x="0" fg:w="11123"/><text x="0.2500%" y="447.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="421" width="2.5643%" height="15" fill="rgb(218,198,43)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="431.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="405" width="2.5643%" height="15" fill="rgb(231,104,20)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="415.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="389" width="2.5643%" height="15" fill="rgb(254,36,13)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="399.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="373" width="2.5643%" height="15" fill="rgb(248,14,50)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="383.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="357" width="2.5643%" height="15" fill="rgb(217,107,29)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="367.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (318 samples, 2.56%)</title><rect x="87.1301%" y="341" width="2.5643%" height="15" fill="rgb(251,169,33)" fg:x="10805" fg:w="318"/><text x="87.3801%" y="351.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (317 samples, 2.56%)</title><rect x="87.1381%" y="325" width="2.5562%" height="15" fill="rgb(217,108,32)" fg:x="10806" fg:w="317"/><text x="87.3881%" y="335.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (316 samples, 2.55%)</title><rect x="87.1462%" y="309" width="2.5482%" height="15" fill="rgb(219,66,42)" fg:x="10807" fg:w="316"/><text x="87.3962%" y="319.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (314 samples, 2.53%)</title><rect x="87.1623%" y="293" width="2.5321%" height="15" fill="rgb(206,180,7)" fg:x="10809" fg:w="314"/><text x="87.4123%" y="303.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (313 samples, 2.52%)</title><rect x="87.1704%" y="277" width="2.5240%" height="15" fill="rgb(208,226,31)" fg:x="10810" fg:w="313"/><text x="87.4204%" y="287.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (311 samples, 2.51%)</title><rect x="87.1865%" y="261" width="2.5079%" height="15" fill="rgb(218,26,49)" fg:x="10812" fg:w="311"/><text x="87.4365%" y="271.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (306 samples, 2.47%)</title><rect x="87.2268%" y="245" width="2.4675%" height="15" fill="rgb(233,197,48)" fg:x="10817" fg:w="306"/><text x="87.4768%" y="255.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (297 samples, 2.39%)</title><rect x="87.2994%" y="229" width="2.3950%" height="15" fill="rgb(252,181,51)" fg:x="10826" fg:w="297"/><text x="87.5494%" y="239.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="87.4526%" y="213" width="2.2418%" height="15" fill="rgb(253,90,19)" fg:x="10845" fg:w="278"/><text x="87.7026%" y="223.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (248 samples, 2.00%)</title><rect x="87.6945%" y="197" width="1.9998%" height="15" fill="rgb(215,171,30)" fg:x="10875" fg:w="248"/><text x="87.9445%" y="207.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (186 samples, 1.50%)</title><rect x="88.1945%" y="181" width="1.4999%" height="15" fill="rgb(214,222,9)" fg:x="10937" fg:w="186"/><text x="88.4445%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (100 samples, 0.81%)</title><rect x="88.8880%" y="165" width="0.8064%" height="15" fill="rgb(223,3,22)" fg:x="11023" fg:w="100"/><text x="89.1380%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (8 samples, 0.06%)</title><rect x="89.6299%" y="149" width="0.0645%" height="15" fill="rgb(225,196,46)" fg:x="11115" fg:w="8"/><text x="89.8799%" y="159.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="89.7347%" y="245" width="0.0242%" height="15" fill="rgb(209,110,37)" fg:x="11128" fg:w="3"/><text x="89.9847%" y="255.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="89.7670%" y="245" width="0.0242%" height="15" fill="rgb(249,89,12)" fg:x="11132" fg:w="3"/><text x="90.0170%" y="255.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="89.7750%" y="229" width="0.0161%" height="15" fill="rgb(226,27,33)" fg:x="11133" fg:w="2"/><text x="90.0250%" y="239.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="89.8395%" y="229" width="0.0242%" height="15" fill="rgb(213,82,22)" fg:x="11141" fg:w="3"/><text x="90.0895%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="89.8798%" y="213" width="0.0161%" height="15" fill="rgb(248,140,0)" fg:x="11146" fg:w="2"/><text x="90.1298%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (10 samples, 0.08%)</title><rect x="89.8960%" y="213" width="0.0806%" height="15" fill="rgb(228,106,3)" fg:x="11148" fg:w="10"/><text x="90.1460%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (3 samples, 0.02%)</title><rect x="90.0169%" y="197" width="0.0242%" height="15" fill="rgb(209,23,37)" fg:x="11163" fg:w="3"/><text x="90.2669%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="90.0411%" y="197" width="0.0161%" height="15" fill="rgb(241,93,50)" fg:x="11166" fg:w="2"/><text x="90.2911%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (5 samples, 0.04%)</title><rect x="90.0573%" y="197" width="0.0403%" height="15" fill="rgb(253,46,43)" fg:x="11168" fg:w="5"/><text x="90.3073%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="90.0734%" y="181" width="0.0242%" height="15" fill="rgb(226,206,43)" fg:x="11170" fg:w="3"/><text x="90.3234%" y="191.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="90.0814%" y="165" width="0.0161%" height="15" fill="rgb(217,54,7)" fg:x="11171" fg:w="2"/><text x="90.3314%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="90.1056%" y="197" width="0.0161%" height="15" fill="rgb(223,5,52)" fg:x="11174" fg:w="2"/><text x="90.3556%" y="207.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (12 samples, 0.10%)</title><rect x="90.1218%" y="197" width="0.0968%" height="15" fill="rgb(206,52,46)" fg:x="11176" fg:w="12"/><text x="90.3718%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (5 samples, 0.04%)</title><rect x="90.3314%" y="181" width="0.0403%" height="15" fill="rgb(253,136,11)" fg:x="11202" fg:w="5"/><text x="90.5814%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="90.3717%" y="181" width="0.0161%" height="15" fill="rgb(208,106,33)" fg:x="11207" fg:w="2"/><text x="90.6217%" y="191.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="90.3879%" y="181" width="0.0242%" height="15" fill="rgb(206,54,4)" fg:x="11209" fg:w="3"/><text x="90.6379%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="90.3959%" y="165" width="0.0161%" height="15" fill="rgb(213,3,15)" fg:x="11210" fg:w="2"/><text x="90.6459%" y="175.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="90.3959%" y="149" width="0.0161%" height="15" fill="rgb(252,211,39)" fg:x="11210" fg:w="2"/><text x="90.6459%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (14 samples, 0.11%)</title><rect x="90.4201%" y="181" width="0.1129%" height="15" fill="rgb(223,6,36)" fg:x="11213" fg:w="14"/><text x="90.6701%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (13 samples, 0.10%)</title><rect x="90.7507%" y="165" width="0.1048%" height="15" fill="rgb(252,169,45)" fg:x="11254" fg:w="13"/><text x="91.0007%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (10 samples, 0.08%)</title><rect x="90.8556%" y="165" width="0.0806%" height="15" fill="rgb(212,48,26)" fg:x="11267" fg:w="10"/><text x="91.1056%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="90.9362%" y="165" width="0.0242%" height="15" fill="rgb(251,102,48)" fg:x="11277" fg:w="3"/><text x="91.1862%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="90.9362%" y="149" width="0.0242%" height="15" fill="rgb(243,208,16)" fg:x="11277" fg:w="3"/><text x="91.1862%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (5 samples, 0.04%)</title><rect x="90.9604%" y="165" width="0.0403%" height="15" fill="rgb(219,96,24)" fg:x="11280" fg:w="5"/><text x="91.2104%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (31 samples, 0.25%)</title><rect x="91.0007%" y="165" width="0.2500%" height="15" fill="rgb(219,33,29)" fg:x="11285" fg:w="31"/><text x="91.2507%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="91.6781%" y="149" width="0.0242%" height="15" fill="rgb(223,176,5)" fg:x="11369" fg:w="3"/><text x="91.9281%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="91.6862%" y="133" width="0.0161%" height="15" fill="rgb(228,140,14)" fg:x="11370" fg:w="2"/><text x="91.9362%" y="143.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (18 samples, 0.15%)</title><rect x="91.7184%" y="149" width="0.1451%" height="15" fill="rgb(217,179,31)" fg:x="11374" fg:w="18"/><text x="91.9684%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (11,402 samples, 91.94%)</title><rect x="0.0000%" y="453" width="91.9442%" height="15" fill="rgb(230,9,30)" fg:x="0" fg:w="11402"/><text x="0.2500%" y="463.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="437" width="2.2498%" height="15" fill="rgb(230,136,20)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="447.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="421" width="2.2498%" height="15" fill="rgb(215,210,22)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="431.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="405" width="2.2498%" height="15" fill="rgb(218,43,5)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="415.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="389" width="2.2498%" height="15" fill="rgb(216,11,5)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="399.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="373" width="2.2498%" height="15" fill="rgb(209,82,29)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="383.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="357" width="2.2498%" height="15" fill="rgb(244,115,12)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="367.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (279 samples, 2.25%)</title><rect x="89.6944%" y="341" width="2.2498%" height="15" fill="rgb(222,82,18)" fg:x="11123" fg:w="279"/><text x="89.9444%" y="351.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="89.7024%" y="325" width="2.2418%" height="15" fill="rgb(249,227,8)" fg:x="11124" fg:w="278"/><text x="89.9524%" y="335.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="89.7024%" y="309" width="2.2418%" height="15" fill="rgb(253,141,45)" fg:x="11124" fg:w="278"/><text x="89.9524%" y="319.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="89.7024%" y="293" width="2.2418%" height="15" fill="rgb(234,184,4)" fg:x="11124" fg:w="278"/><text x="89.9524%" y="303.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (278 samples, 2.24%)</title><rect x="89.7024%" y="277" width="2.2418%" height="15" fill="rgb(218,194,23)" fg:x="11124" fg:w="278"/><text x="89.9524%" y="287.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (276 samples, 2.23%)</title><rect x="89.7186%" y="261" width="2.2256%" height="15" fill="rgb(235,66,41)" fg:x="11126" fg:w="276"/><text x="89.9686%" y="271.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (266 samples, 2.14%)</title><rect x="89.7992%" y="245" width="2.1450%" height="15" fill="rgb(245,217,1)" fg:x="11136" fg:w="266"/><text x="90.0492%" y="255.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (258 samples, 2.08%)</title><rect x="89.8637%" y="229" width="2.0805%" height="15" fill="rgb(229,91,1)" fg:x="11144" fg:w="258"/><text x="90.1137%" y="239.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (244 samples, 1.97%)</title><rect x="89.9766%" y="213" width="1.9676%" height="15" fill="rgb(207,101,30)" fg:x="11158" fg:w="244"/><text x="90.2266%" y="223.50">r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (214 samples, 1.73%)</title><rect x="90.2185%" y="197" width="1.7257%" height="15" fill="rgb(223,82,49)" fg:x="11188" fg:w="214"/><text x="90.4685%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (175 samples, 1.41%)</title><rect x="90.5330%" y="181" width="1.4112%" height="15" fill="rgb(218,167,17)" fg:x="11227" fg:w="175"/><text x="90.7830%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (86 samples, 0.69%)</title><rect x="91.2507%" y="165" width="0.6935%" height="15" fill="rgb(208,103,14)" fg:x="11316" fg:w="86"/><text x="91.5007%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (10 samples, 0.08%)</title><rect x="91.8636%" y="149" width="0.0806%" height="15" fill="rgb(238,20,8)" fg:x="11392" fg:w="10"/><text x="92.1136%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="92.0168%" y="261" width="0.0161%" height="15" fill="rgb(218,80,54)" fg:x="11411" fg:w="2"/><text x="92.2668%" y="271.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (3 samples, 0.02%)</title><rect x="92.0893%" y="245" width="0.0242%" height="15" fill="rgb(240,144,17)" fg:x="11420" fg:w="3"/><text x="92.3393%" y="255.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (2 samples, 0.02%)</title><rect x="92.2022%" y="229" width="0.0161%" height="15" fill="rgb(245,27,50)" fg:x="11434" fg:w="2"/><text x="92.4522%" y="239.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (3 samples, 0.02%)</title><rect x="92.2184%" y="229" width="0.0242%" height="15" fill="rgb(251,51,7)" fg:x="11436" fg:w="3"/><text x="92.4684%" y="239.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="92.2184%" y="213" width="0.0242%" height="15" fill="rgb(245,217,29)" fg:x="11436" fg:w="3"/><text x="92.4684%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="92.2426%" y="229" width="0.0161%" height="15" fill="rgb(221,176,29)" fg:x="11439" fg:w="2"/><text x="92.4926%" y="239.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (6 samples, 0.05%)</title><rect x="92.2587%" y="229" width="0.0484%" height="15" fill="rgb(212,180,24)" fg:x="11441" fg:w="6"/><text x="92.5087%" y="239.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (4 samples, 0.03%)</title><rect x="92.4361%" y="213" width="0.0323%" height="15" fill="rgb(254,24,2)" fg:x="11463" fg:w="4"/><text x="92.6861%" y="223.50"></text></g><g><title>rust-gkat`Cudd_Ref (3 samples, 0.02%)</title><rect x="92.4683%" y="213" width="0.0242%" height="15" fill="rgb(230,100,2)" fg:x="11467" fg:w="3"/><text x="92.7183%" y="223.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="92.4925%" y="213" width="0.0161%" height="15" fill="rgb(219,142,25)" fg:x="11470" fg:w="2"/><text x="92.7425%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="92.4925%" y="197" width="0.0161%" height="15" fill="rgb(240,73,43)" fg:x="11470" fg:w="2"/><text x="92.7425%" y="207.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="92.5087%" y="213" width="0.0161%" height="15" fill="rgb(214,114,15)" fg:x="11472" fg:w="2"/><text x="92.7587%" y="223.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="92.5248%" y="213" width="0.0161%" height="15" fill="rgb(207,130,4)" fg:x="11474" fg:w="2"/><text x="92.7748%" y="223.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (12 samples, 0.10%)</title><rect x="92.5409%" y="213" width="0.0968%" height="15" fill="rgb(221,25,40)" fg:x="11476" fg:w="12"/><text x="92.7909%" y="223.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (7 samples, 0.06%)</title><rect x="92.7748%" y="197" width="0.0564%" height="15" fill="rgb(241,184,7)" fg:x="11505" fg:w="7"/><text x="93.0248%" y="207.50"></text></g><g><title>rust-gkat`Cudd_Ref (2 samples, 0.02%)</title><rect x="92.8312%" y="197" width="0.0161%" height="15" fill="rgb(235,159,4)" fg:x="11512" fg:w="2"/><text x="93.0812%" y="207.50"></text></g><g><title>rust-gkat`cuddReclaim (2 samples, 0.02%)</title><rect x="92.8715%" y="165" width="0.0161%" height="15" fill="rgb(214,87,48)" fg:x="11517" fg:w="2"/><text x="93.1215%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (7 samples, 0.06%)</title><rect x="92.8474%" y="197" width="0.0564%" height="15" fill="rgb(246,198,24)" fg:x="11514" fg:w="7"/><text x="93.0974%" y="207.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (6 samples, 0.05%)</title><rect x="92.8554%" y="181" width="0.0484%" height="15" fill="rgb(209,66,40)" fg:x="11515" fg:w="6"/><text x="93.1054%" y="191.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="92.8877%" y="165" width="0.0161%" height="15" fill="rgb(233,147,39)" fg:x="11519" fg:w="2"/><text x="93.1377%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (20 samples, 0.16%)</title><rect x="92.9119%" y="197" width="0.1613%" height="15" fill="rgb(231,145,52)" fg:x="11522" fg:w="20"/><text x="93.1619%" y="207.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (21 samples, 0.17%)</title><rect x="93.3473%" y="181" width="0.1693%" height="15" fill="rgb(206,20,26)" fg:x="11576" fg:w="21"/><text x="93.5973%" y="191.50"></text></g><g><title>rust-gkat`Cudd_Ref (6 samples, 0.05%)</title><rect x="93.5167%" y="181" width="0.0484%" height="15" fill="rgb(238,220,4)" fg:x="11597" fg:w="6"/><text x="93.7667%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="93.6134%" y="149" width="0.0161%" height="15" fill="rgb(252,195,42)" fg:x="11609" fg:w="2"/><text x="93.8634%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (4 samples, 0.03%)</title><rect x="93.6295%" y="149" width="0.0323%" height="15" fill="rgb(209,10,6)" fg:x="11611" fg:w="4"/><text x="93.8795%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (14 samples, 0.11%)</title><rect x="93.5650%" y="181" width="0.1129%" height="15" fill="rgb(229,3,52)" fg:x="11603" fg:w="14"/><text x="93.8150%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (10 samples, 0.08%)</title><rect x="93.5973%" y="165" width="0.0806%" height="15" fill="rgb(253,49,37)" fg:x="11607" fg:w="10"/><text x="93.8473%" y="175.50"></text></g><g><title>rust-gkat`cuddUniqueInter (2 samples, 0.02%)</title><rect x="93.6618%" y="149" width="0.0161%" height="15" fill="rgb(240,103,49)" fg:x="11615" fg:w="2"/><text x="93.9118%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="93.6779%" y="181" width="0.0242%" height="15" fill="rgb(250,182,30)" fg:x="11617" fg:w="3"/><text x="93.9279%" y="191.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (53 samples, 0.43%)</title><rect x="93.7021%" y="181" width="0.4274%" height="15" fill="rgb(248,8,30)" fg:x="11620" fg:w="53"/><text x="93.9521%" y="191.50"></text></g><g><title>rust-gkat`Cudd_RecursiveDeref (13 samples, 0.10%)</title><rect x="94.6698%" y="165" width="0.1048%" height="15" fill="rgb(237,120,30)" fg:x="11740" fg:w="13"/><text x="94.9198%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (11 samples, 0.09%)</title><rect x="94.7746%" y="165" width="0.0887%" height="15" fill="rgb(221,146,34)" fg:x="11753" fg:w="11"/><text x="95.0246%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (14 samples, 0.11%)</title><rect x="94.8633%" y="165" width="0.1129%" height="15" fill="rgb(242,55,13)" fg:x="11764" fg:w="14"/><text x="95.1133%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (11 samples, 0.09%)</title><rect x="94.8875%" y="149" width="0.0887%" height="15" fill="rgb(242,112,31)" fg:x="11767" fg:w="11"/><text x="95.1375%" y="159.50"></text></g><g><title>rust-gkat`cuddReclaim (5 samples, 0.04%)</title><rect x="94.9359%" y="133" width="0.0403%" height="15" fill="rgb(249,192,27)" fg:x="11773" fg:w="5"/><text x="95.1859%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="94.9762%" y="165" width="0.0161%" height="15" fill="rgb(208,204,44)" fg:x="11778" fg:w="2"/><text x="95.2262%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="94.9762%" y="149" width="0.0161%" height="15" fill="rgb(208,93,54)" fg:x="11778" fg:w="2"/><text x="95.2262%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="94.9923%" y="165" width="0.0242%" height="15" fill="rgb(242,1,31)" fg:x="11780" fg:w="3"/><text x="95.2423%" y="175.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (57 samples, 0.46%)</title><rect x="95.0165%" y="165" width="0.4596%" height="15" fill="rgb(241,83,25)" fg:x="11783" fg:w="57"/><text x="95.2665%" y="175.50"></text></g><g><title>rust-gkat`Cudd_Ref (5 samples, 0.04%)</title><rect x="96.4035%" y="149" width="0.0403%" height="15" fill="rgb(205,169,50)" fg:x="11955" fg:w="5"/><text x="96.6535%" y="159.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (4 samples, 0.03%)</title><rect x="96.4438%" y="149" width="0.0323%" height="15" fill="rgb(239,186,37)" fg:x="11960" fg:w="4"/><text x="96.6938%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="96.4519%" y="133" width="0.0242%" height="15" fill="rgb(205,221,10)" fg:x="11961" fg:w="3"/><text x="96.7019%" y="143.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (3 samples, 0.02%)</title><rect x="96.4842%" y="149" width="0.0242%" height="15" fill="rgb(218,196,15)" fg:x="11965" fg:w="3"/><text x="96.7342%" y="159.50"></text></g><g><title>rust-gkat`lru::LruCache&lt;K,V,S&gt;::capturing_put (42 samples, 0.34%)</title><rect x="96.5083%" y="149" width="0.3387%" height="15" fill="rgb(218,196,35)" fg:x="11968" fg:w="42"/><text x="96.7583%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::equiv_iter::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::equiv_iter (12,033 samples, 97.03%)</title><rect x="0.0000%" y="469" width="97.0325%" height="15" fill="rgb(233,63,24)" fg:x="0" fg:w="12033"/><text x="0.2500%" y="479.50">rust-gkat`rust_gkat::kernel1::equiv_iter::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::equiv_iter</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="453" width="5.0883%" height="15" fill="rgb(225,8,4)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="463.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="437" width="5.0883%" height="15" fill="rgb(234,105,35)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="447.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="421" width="5.0883%" height="15" fill="rgb(236,21,32)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="431.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="405" width="5.0883%" height="15" fill="rgb(228,109,6)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="415.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="389" width="5.0883%" height="15" fill="rgb(229,215,31)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="399.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="373" width="5.0883%" height="15" fill="rgb(221,52,54)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="383.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="357" width="5.0883%" height="15" fill="rgb(252,129,43)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="367.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="341" width="5.0883%" height="15" fill="rgb(248,183,27)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="351.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="325" width="5.0883%" height="15" fill="rgb(250,0,22)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="335.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (631 samples, 5.09%)</title><rect x="91.9442%" y="309" width="5.0883%" height="15" fill="rgb(213,166,10)" fg:x="11402" fg:w="631"/><text x="92.1942%" y="319.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (628 samples, 5.06%)</title><rect x="91.9684%" y="293" width="5.0641%" height="15" fill="rgb(207,163,36)" fg:x="11405" fg:w="628"/><text x="92.2184%" y="303.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (625 samples, 5.04%)</title><rect x="91.9926%" y="277" width="5.0399%" height="15" fill="rgb(208,122,22)" fg:x="11408" fg:w="625"/><text x="92.2426%" y="287.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (620 samples, 5.00%)</title><rect x="92.0329%" y="261" width="4.9996%" height="15" fill="rgb(207,104,49)" fg:x="11413" fg:w="620"/><text x="92.2829%" y="271.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (610 samples, 4.92%)</title><rect x="92.1135%" y="245" width="4.9190%" height="15" fill="rgb(248,211,50)" fg:x="11423" fg:w="610"/><text x="92.3635%" y="255.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (586 samples, 4.73%)</title><rect x="92.3071%" y="229" width="4.7254%" height="15" fill="rgb(217,13,45)" fg:x="11447" fg:w="586"/><text x="92.5571%" y="239.50">rust-g..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (545 samples, 4.39%)</title><rect x="92.6377%" y="213" width="4.3948%" height="15" fill="rgb(211,216,49)" fg:x="11488" fg:w="545"/><text x="92.8877%" y="223.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (491 samples, 3.96%)</title><rect x="93.0731%" y="197" width="3.9594%" height="15" fill="rgb(221,58,53)" fg:x="11542" fg:w="491"/><text x="93.3231%" y="207.50">rust..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (360 samples, 2.90%)</title><rect x="94.1295%" y="181" width="2.9030%" height="15" fill="rgb(220,112,41)" fg:x="11673" fg:w="360"/><text x="94.3795%" y="191.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (193 samples, 1.56%)</title><rect x="95.4762%" y="165" width="1.5563%" height="15" fill="rgb(236,38,28)" fg:x="11840" fg:w="193"/><text x="95.7262%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (23 samples, 0.19%)</title><rect x="96.8470%" y="149" width="0.1855%" height="15" fill="rgb(227,195,22)" fg:x="12010" fg:w="23"/><text x="97.0970%" y="159.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="97.0325%" y="453" width="0.0242%" height="15" fill="rgb(214,55,33)" fg:x="12033" fg:w="3"/><text x="97.2825%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="97.2663%" y="437" width="0.0161%" height="15" fill="rgb(248,80,13)" fg:x="12062" fg:w="2"/><text x="97.5163%" y="447.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_len (3 samples, 0.02%)</title><rect x="97.6776%" y="421" width="0.0242%" height="15" fill="rgb(238,52,6)" fg:x="12113" fg:w="3"/><text x="97.9276%" y="431.50"></text></g><g><title>rust-gkat`&lt;lalrpop_util::lexer::Matcher&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.45%)</title><rect x="97.2825%" y="437" width="0.4516%" height="15" fill="rgb(224,198,47)" fg:x="12064" fg:w="56"/><text x="97.5325%" y="447.50"></text></g><g><title>rust-gkat`regex_automata::util::determinize::state::State::match_pattern (4 samples, 0.03%)</title><rect x="97.7018%" y="421" width="0.0323%" height="15" fill="rgb(233,171,20)" fg:x="12116" fg:w="4"/><text x="97.9518%" y="431.50"></text></g><g><title>rust-gkat`mi_free (3 samples, 0.02%)</title><rect x="97.7341%" y="437" width="0.0242%" height="15" fill="rgb(241,30,25)" fg:x="12120" fg:w="3"/><text x="97.9841%" y="447.50"></text></g><g><title>rust-gkat`regex_automata::hybrid::dfa::LazyRef::get_cached_state (9 samples, 0.07%)</title><rect x="97.7582%" y="437" width="0.0726%" height="15" fill="rgb(207,171,38)" fg:x="12123" fg:w="9"/><text x="98.0082%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__goto (7 samples, 0.06%)</title><rect x="97.8389%" y="437" width="0.0564%" height="15" fill="rgb(234,70,1)" fg:x="12133" fg:w="7"/><text x="98.0889%" y="447.50"></text></g><g><title>rust-gkat`mi_find_page (3 samples, 0.02%)</title><rect x="98.2501%" y="389" width="0.0242%" height="15" fill="rgb(232,178,18)" fg:x="12184" fg:w="3"/><text x="98.5001%" y="399.50"></text></g><g><title>rust-gkat`mi_page_free_list_extend (3 samples, 0.02%)</title><rect x="98.2501%" y="373" width="0.0242%" height="15" fill="rgb(241,78,40)" fg:x="12184" fg:w="3"/><text x="98.5001%" y="383.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (6 samples, 0.05%)</title><rect x="98.2421%" y="421" width="0.0484%" height="15" fill="rgb(222,35,25)" fg:x="12183" fg:w="6"/><text x="98.4921%" y="431.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (5 samples, 0.04%)</title><rect x="98.2501%" y="405" width="0.0403%" height="15" fill="rgb(207,92,16)" fg:x="12184" fg:w="5"/><text x="98.5001%" y="415.50"></text></g><g><title>rust-gkat`mi_page_free_list_extend (2 samples, 0.02%)</title><rect x="98.2743%" y="389" width="0.0161%" height="15" fill="rgb(216,59,51)" fg:x="12187" fg:w="2"/><text x="98.5243%" y="399.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (4 samples, 0.03%)</title><rect x="98.2905%" y="421" width="0.0323%" height="15" fill="rgb(213,80,28)" fg:x="12189" fg:w="4"/><text x="98.5405%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action12 (9 samples, 0.07%)</title><rect x="98.3308%" y="421" width="0.0726%" height="15" fill="rgb(220,93,7)" fg:x="12194" fg:w="9"/><text x="98.5808%" y="431.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (169 samples, 1.36%)</title><rect x="97.0648%" y="453" width="1.3628%" height="15" fill="rgb(225,24,44)" fg:x="12037" fg:w="169"/><text x="97.3148%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (66 samples, 0.53%)</title><rect x="97.8953%" y="437" width="0.5322%" height="15" fill="rgb(243,74,40)" fg:x="12140" fg:w="66"/><text x="98.1453%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__action9 (2 samples, 0.02%)</title><rect x="98.4114%" y="421" width="0.0161%" height="15" fill="rgb(228,39,7)" fg:x="12204" fg:w="2"/><text x="98.6614%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (181 samples, 1.46%)</title><rect x="97.0325%" y="469" width="1.4596%" height="15" fill="rgb(227,79,8)" fg:x="12033" fg:w="181"/><text x="97.2825%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (8 samples, 0.06%)</title><rect x="98.4275%" y="453" width="0.0645%" height="15" fill="rgb(236,58,11)" fg:x="12206" fg:w="8"/><text x="98.6775%" y="463.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.05%)</title><rect x="98.5485%" y="213" width="0.0484%" height="15" fill="rgb(249,63,35)" fg:x="12221" fg:w="6"/><text x="98.7985%" y="223.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (2 samples, 0.02%)</title><rect x="98.5808%" y="197" width="0.0161%" height="15" fill="rgb(252,114,16)" fg:x="12225" fg:w="2"/><text x="98.8308%" y="207.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="98.6211%" y="181" width="0.0242%" height="15" fill="rgb(254,151,24)" fg:x="12230" fg:w="3"/><text x="98.8711%" y="191.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (6 samples, 0.05%)</title><rect x="98.6211%" y="197" width="0.0484%" height="15" fill="rgb(253,54,39)" fg:x="12230" fg:w="6"/><text x="98.8711%" y="207.50"></text></g><g><title>rust-gkat`mi_malloc_aligned (3 samples, 0.02%)</title><rect x="98.6453%" y="181" width="0.0242%" height="15" fill="rgb(243,25,45)" fg:x="12233" fg:w="3"/><text x="98.8953%" y="191.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="98.7178%" y="165" width="0.0161%" height="15" fill="rgb(234,134,9)" fg:x="12242" fg:w="2"/><text x="98.9678%" y="175.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (4 samples, 0.03%)</title><rect x="98.7662%" y="149" width="0.0323%" height="15" fill="rgb(227,166,31)" fg:x="12248" fg:w="4"/><text x="99.0162%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="98.8146%" y="133" width="0.0161%" height="15" fill="rgb(245,143,41)" fg:x="12254" fg:w="2"/><text x="99.0646%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (18 samples, 0.15%)</title><rect x="98.6937%" y="181" width="0.1451%" height="15" fill="rgb(238,181,32)" fg:x="12239" fg:w="18"/><text x="98.9437%" y="191.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.10%)</title><rect x="98.7420%" y="165" width="0.0968%" height="15" fill="rgb(224,113,18)" fg:x="12245" fg:w="12"/><text x="98.9920%" y="175.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.04%)</title><rect x="98.7985%" y="149" width="0.0403%" height="15" fill="rgb(240,229,28)" fg:x="12252" fg:w="5"/><text x="99.0485%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.09%)</title><rect x="98.9275%" y="149" width="0.0887%" height="15" fill="rgb(250,185,3)" fg:x="12268" fg:w="11"/><text x="99.1775%" y="159.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="99.0162%" y="149" width="0.0242%" height="15" fill="rgb(212,59,25)" fg:x="12279" fg:w="3"/><text x="99.2662%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="99.0807%" y="133" width="0.0242%" height="15" fill="rgb(221,87,20)" fg:x="12287" fg:w="3"/><text x="99.3307%" y="143.50"></text></g><g><title>rust-gkat`core::ptr::hash (2 samples, 0.02%)</title><rect x="99.1049%" y="133" width="0.0161%" height="15" fill="rgb(213,74,28)" fg:x="12290" fg:w="2"/><text x="99.3549%" y="143.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="99.2017%" y="117" width="0.0403%" height="15" fill="rgb(224,132,34)" fg:x="12302" fg:w="5"/><text x="99.4517%" y="127.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.22%)</title><rect x="99.0485%" y="149" width="0.2177%" height="15" fill="rgb(222,101,24)" fg:x="12283" fg:w="27"/><text x="99.2985%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.15%)</title><rect x="99.1210%" y="133" width="0.1451%" height="15" fill="rgb(254,142,4)" fg:x="12292" fg:w="18"/><text x="99.3710%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="99.2420%" y="117" width="0.0242%" height="15" fill="rgb(230,229,49)" fg:x="12307" fg:w="3"/><text x="99.4920%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (50 samples, 0.40%)</title><rect x="98.8711%" y="165" width="0.4032%" height="15" fill="rgb(238,70,47)" fg:x="12261" fg:w="50"/><text x="99.1211%" y="175.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="99.3630%" y="133" width="0.0645%" height="15" fill="rgb(231,160,17)" fg:x="12322" fg:w="8"/><text x="99.6130%" y="143.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="99.4275%" y="133" width="0.0242%" height="15" fill="rgb(218,68,53)" fg:x="12330" fg:w="3"/><text x="99.6775%" y="143.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (20 samples, 0.16%)</title><rect x="99.3388%" y="149" width="0.1613%" height="15" fill="rgb(236,111,10)" fg:x="12319" fg:w="20"/><text x="99.5888%" y="159.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="99.4597%" y="133" width="0.0403%" height="15" fill="rgb(224,34,41)" fg:x="12334" fg:w="5"/><text x="99.7097%" y="143.50"></text></g><g><title>rust-gkat`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (2 samples, 0.02%)</title><rect x="99.5162%" y="149" width="0.0161%" height="15" fill="rgb(241,118,19)" fg:x="12341" fg:w="2"/><text x="99.7662%" y="159.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.04%)</title><rect x="99.5807%" y="117" width="0.0403%" height="15" fill="rgb(238,129,25)" fg:x="12349" fg:w="5"/><text x="99.8307%" y="127.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="99.6210%" y="117" width="0.0161%" height="15" fill="rgb(238,22,31)" fg:x="12354" fg:w="2"/><text x="99.8710%" y="127.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (12 samples, 0.10%)</title><rect x="99.5646%" y="133" width="0.0968%" height="15" fill="rgb(222,174,48)" fg:x="12347" fg:w="12"/><text x="99.8146%" y="143.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="99.6371%" y="117" width="0.0242%" height="15" fill="rgb(206,152,40)" fg:x="12356" fg:w="3"/><text x="99.8871%" y="127.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="99.7097%" y="101" width="0.0242%" height="15" fill="rgb(218,99,54)" fg:x="12365" fg:w="3"/><text x="99.9597%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="99.7339%" y="101" width="0.0242%" height="15" fill="rgb(220,174,26)" fg:x="12368" fg:w="3"/><text x="99.9839%" y="111.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="99.7339%" y="85" width="0.0242%" height="15" fill="rgb(245,116,9)" fg:x="12368" fg:w="3"/><text x="99.9839%" y="95.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (8 samples, 0.06%)</title><rect x="99.7016%" y="117" width="0.0645%" height="15" fill="rgb(209,72,35)" fg:x="12364" fg:w="8"/><text x="99.9516%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (11 samples, 0.09%)</title><rect x="99.6855%" y="133" width="0.0887%" height="15" fill="rgb(226,126,21)" fg:x="12362" fg:w="11"/><text x="99.9355%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (34 samples, 0.27%)</title><rect x="99.5323%" y="149" width="0.2742%" height="15" fill="rgb(227,192,1)" fg:x="12343" fg:w="34"/><text x="99.7823%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (4 samples, 0.03%)</title><rect x="99.7742%" y="133" width="0.0323%" height="15" fill="rgb(237,180,29)" fg:x="12373" fg:w="4"/><text x="100.0242%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (2 samples, 0.02%)</title><rect x="99.7903%" y="117" width="0.0161%" height="15" fill="rgb(230,197,35)" fg:x="12375" fg:w="2"/><text x="100.0403%" y="127.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (71 samples, 0.57%)</title><rect x="99.2823%" y="165" width="0.5725%" height="15" fill="rgb(246,193,31)" fg:x="12312" fg:w="71"/><text x="99.5323%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (6 samples, 0.05%)</title><rect x="99.8065%" y="149" width="0.0484%" height="15" fill="rgb(241,36,4)" fg:x="12377" fg:w="6"/><text x="100.0565%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (5 samples, 0.04%)</title><rect x="99.8145%" y="133" width="0.0403%" height="15" fill="rgb(241,130,17)" fg:x="12378" fg:w="5"/><text x="100.0645%" y="143.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="99.8387%" y="117" width="0.0161%" height="15" fill="rgb(206,137,32)" fg:x="12381" fg:w="2"/><text x="100.0887%" y="127.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="99.8629%" y="149" width="0.0161%" height="15" fill="rgb(237,228,51)" fg:x="12384" fg:w="2"/><text x="100.1129%" y="159.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="99.8629%" y="133" width="0.0161%" height="15" fill="rgb(243,6,42)" fg:x="12384" fg:w="2"/><text x="100.1129%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (132 samples, 1.06%)</title><rect x="98.8388%" y="181" width="1.0644%" height="15" fill="rgb(251,74,28)" fg:x="12257" fg:w="132"/><text x="99.0888%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (6 samples, 0.05%)</title><rect x="99.8549%" y="165" width="0.0484%" height="15" fill="rgb(218,20,49)" fg:x="12383" fg:w="6"/><text x="100.1049%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (2 samples, 0.02%)</title><rect x="99.8871%" y="149" width="0.0161%" height="15" fill="rgb(238,28,14)" fg:x="12387" fg:w="2"/><text x="100.1371%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (154 samples, 1.24%)</title><rect x="98.6856%" y="197" width="1.2418%" height="15" fill="rgb(229,40,46)" fg:x="12238" fg:w="154"/><text x="98.9356%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (3 samples, 0.02%)</title><rect x="99.9032%" y="181" width="0.0242%" height="15" fill="rgb(244,195,20)" fg:x="12389" fg:w="3"/><text x="100.1532%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (2 samples, 0.02%)</title><rect x="99.9113%" y="165" width="0.0161%" height="15" fill="rgb(253,56,35)" fg:x="12390" fg:w="2"/><text x="100.1613%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddAnd (2 samples, 0.02%)</title><rect x="99.9274%" y="181" width="0.0161%" height="15" fill="rgb(210,149,44)" fg:x="12392" fg:w="2"/><text x="100.1774%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="99.9274%" y="165" width="0.0161%" height="15" fill="rgb(240,135,12)" fg:x="12392" fg:w="2"/><text x="100.1774%" y="175.50"></text></g><g><title>rust-gkat`Cudd_bddOr (2 samples, 0.02%)</title><rect x="99.9436%" y="181" width="0.0161%" height="15" fill="rgb(251,24,50)" fg:x="12394" fg:w="2"/><text x="100.1936%" y="191.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="99.9436%" y="165" width="0.0161%" height="15" fill="rgb(243,200,47)" fg:x="12394" fg:w="2"/><text x="100.1936%" y="175.50"></text></g><g><title>rust-gkat`cuddBddAndRecur (2 samples, 0.02%)</title><rect x="99.9436%" y="149" width="0.0161%" height="15" fill="rgb(224,166,26)" fg:x="12394" fg:w="2"/><text x="100.1936%" y="159.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="469" width="1.4838%" height="15" fill="rgb(233,0,47)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="453" width="1.4838%" height="15" fill="rgb(253,80,5)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="437" width="1.4838%" height="15" fill="rgb(214,133,25)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="421" width="1.4838%" height="15" fill="rgb(209,27,14)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="405" width="1.4838%" height="15" fill="rgb(219,102,51)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="389" width="1.4838%" height="15" fill="rgb(237,18,16)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="373" width="1.4838%" height="15" fill="rgb(241,85,17)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="357" width="1.4838%" height="15" fill="rgb(236,90,42)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="341" width="1.4838%" height="15" fill="rgb(249,57,21)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="325" width="1.4838%" height="15" fill="rgb(243,12,36)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (184 samples, 1.48%)</title><rect x="98.4921%" y="309" width="1.4838%" height="15" fill="rgb(253,128,47)" fg:x="12214" fg:w="184"/><text x="98.7421%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (183 samples, 1.48%)</title><rect x="98.5001%" y="293" width="1.4757%" height="15" fill="rgb(207,33,20)" fg:x="12215" fg:w="183"/><text x="98.7501%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (183 samples, 1.48%)</title><rect x="98.5001%" y="277" width="1.4757%" height="15" fill="rgb(233,215,35)" fg:x="12215" fg:w="183"/><text x="98.7501%" y="287.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (182 samples, 1.47%)</title><rect x="98.5082%" y="261" width="1.4676%" height="15" fill="rgb(249,188,52)" fg:x="12216" fg:w="182"/><text x="98.7582%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (180 samples, 1.45%)</title><rect x="98.5243%" y="245" width="1.4515%" height="15" fill="rgb(225,12,32)" fg:x="12218" fg:w="180"/><text x="98.7743%" y="255.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (178 samples, 1.44%)</title><rect x="98.5404%" y="229" width="1.4354%" height="15" fill="rgb(247,98,14)" fg:x="12220" fg:w="178"/><text x="98.7904%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (171 samples, 1.38%)</title><rect x="98.5969%" y="213" width="1.3789%" height="15" fill="rgb(247,219,48)" fg:x="12227" fg:w="171"/><text x="98.8469%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (6 samples, 0.05%)</title><rect x="99.9274%" y="197" width="0.0484%" height="15" fill="rgb(253,60,48)" fg:x="12392" fg:w="6"/><text x="100.1774%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (2 samples, 0.02%)</title><rect x="99.9597%" y="181" width="0.0161%" height="15" fill="rgb(245,15,52)" fg:x="12396" fg:w="2"/><text x="100.2097%" y="191.50"></text></g><g><title>dyld`start (12,400 samples, 99.99%)</title><rect x="0.0000%" y="565" width="99.9919%" height="15" fill="rgb(220,133,28)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="575.50">dyld`start</text></g><g><title>rust-gkat`main (12,400 samples, 99.99%)</title><rect x="0.0000%" y="549" width="99.9919%" height="15" fill="rgb(217,180,4)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="559.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (12,400 samples, 99.99%)</title><rect x="0.0000%" y="533" width="99.9919%" height="15" fill="rgb(251,24,1)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="543.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (12,400 samples, 99.99%)</title><rect x="0.0000%" y="517" width="99.9919%" height="15" fill="rgb(212,185,49)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="527.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (12,400 samples, 99.99%)</title><rect x="0.0000%" y="501" width="99.9919%" height="15" fill="rgb(215,175,22)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="511.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (12,400 samples, 99.99%)</title><rect x="0.0000%" y="485" width="99.9919%" height="15" fill="rgb(250,205,14)" fg:x="0" fg:w="12400"/><text x="0.2500%" y="495.50">rust-gkat`rust_gkat::main</text></g><g><title>all (12,401 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(225,211,22)" fg:x="0" fg:w="12401"/><text x="0.2500%" y="591.50"></text></g></svg></svg>