<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="468"><g><title>dyld`dyld4::start(dyld4::KernelArgs*, void*, void*)::$_0::operator() (1 samples, 0.21%)</title><rect x="0.0000%" y="661" width="0.2137%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>dyld`dyld4::prepare (1 samples, 0.21%)</title><rect x="0.0000%" y="645" width="0.2137%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>dyld`dyld4::ExternallyViewableState::notifyMonitorOfMainCalled (1 samples, 0.21%)</title><rect x="0.0000%" y="629" width="0.2137%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>dyld`dyld4::RemoteNotificationResponder::notifyMonitorOfMainCalled (1 samples, 0.21%)</title><rect x="0.0000%" y="613" width="0.2137%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>dyld`mach_port_destruct (1 samples, 0.21%)</title><rect x="0.0000%" y="597" width="0.2137%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.21%)</title><rect x="0.2137%" y="661" width="0.2137%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.4637%" y="671.50"></text></g><g><title>libsystem_c.dylib`exit (1 samples, 0.21%)</title><rect x="0.2137%" y="645" width="0.2137%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.4637%" y="655.50"></text></g><g><title>libsystem_c.dylib`__cxa_finalize_ranges (1 samples, 0.21%)</title><rect x="0.2137%" y="629" width="0.2137%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.4637%" y="639.50"></text></g><g><title>rust-gkat`mi_process_done (1 samples, 0.21%)</title><rect x="0.2137%" y="613" width="0.2137%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.4637%" y="623.50"></text></g><g><title>rust-gkat`mi_heap_collect_ex (1 samples, 0.21%)</title><rect x="0.2137%" y="597" width="0.2137%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.4637%" y="607.50"></text></g><g><title>rust-gkat`_mi_heap_collect_retired (1 samples, 0.21%)</title><rect x="0.2137%" y="581" width="0.2137%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.4637%" y="591.50"></text></g><g><title>rust-gkat`mi_segment_try_purge (1 samples, 0.21%)</title><rect x="0.2137%" y="565" width="0.2137%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.4637%" y="575.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.21%)</title><rect x="0.2137%" y="549" width="0.2137%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.4637%" y="559.50"></text></g><g><title>libsystem_c.dylib`_mach_boottime_usec (1 samples, 0.21%)</title><rect x="0.2137%" y="533" width="0.2137%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.4637%" y="543.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.21%)</title><rect x="0.2137%" y="517" width="0.2137%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.4637%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.21%)</title><rect x="0.2137%" y="501" width="0.2137%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.4637%" y="511.50"></text></g><g><title>rust-gkat`(anonymous namespace)::smt_solver::~smt_solver (1 samples, 0.21%)</title><rect x="0.4274%" y="501" width="0.2137%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.6774%" y="511.50"></text></g><g><title>rust-gkat`smt::kernel::~kernel (1 samples, 0.21%)</title><rect x="0.4274%" y="485" width="0.2137%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.6774%" y="495.50"></text></g><g><title>rust-gkat`smt::context::~context (1 samples, 0.21%)</title><rect x="0.4274%" y="469" width="0.2137%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.6774%" y="479.50"></text></g><g><title>rust-gkat`asserted_formulas::~asserted_formulas (1 samples, 0.21%)</title><rect x="0.4274%" y="453" width="0.2137%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.6774%" y="463.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="0.4274%" y="437" width="0.2137%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.6774%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="0.4274%" y="421" width="0.2137%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="0.6774%" y="431.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="0.4274%" y="405" width="0.2137%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.6774%" y="415.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="0.4274%" y="389" width="0.2137%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.6774%" y="399.50"></text></g><g><title>rust-gkat`ast_manager::delete_node (1 samples, 0.21%)</title><rect x="0.4274%" y="373" width="0.2137%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.6774%" y="383.50"></text></g><g><title>rust-gkat`Z3_del_context (2 samples, 0.43%)</title><rect x="0.4274%" y="581" width="0.4274%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="2"/><text x="0.6774%" y="591.50"></text></g><g><title>rust-gkat`api::context::~context (2 samples, 0.43%)</title><rect x="0.4274%" y="565" width="0.4274%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="2"/><text x="0.6774%" y="575.50"></text></g><g><title>rust-gkat`api::context::del_object (2 samples, 0.43%)</title><rect x="0.4274%" y="549" width="0.4274%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="2"/><text x="0.6774%" y="559.50"></text></g><g><title>rust-gkat`Z3_solver_ref::~Z3_solver_ref (2 samples, 0.43%)</title><rect x="0.4274%" y="533" width="0.4274%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="2"/><text x="0.6774%" y="543.50"></text></g><g><title>rust-gkat`combined_solver::~combined_solver (2 samples, 0.43%)</title><rect x="0.4274%" y="517" width="0.4274%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="2"/><text x="0.6774%" y="527.50"></text></g><g><title>rust-gkat`(anonymous namespace)::tactic2solver::~tactic2solver (1 samples, 0.21%)</title><rect x="0.6410%" y="501" width="0.2137%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="0.8910%" y="511.50"></text></g><g><title>rust-gkat`using_params_tactical::~using_params_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="485" width="0.2137%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="0.8910%" y="495.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="469" width="0.2137%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="1"/><text x="0.8910%" y="479.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="453" width="0.2137%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="1"/><text x="0.8910%" y="463.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="437" width="0.2137%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="1"/><text x="0.8910%" y="447.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="421" width="0.2137%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="1"/><text x="0.8910%" y="431.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="405" width="0.2137%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="1"/><text x="0.8910%" y="415.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="389" width="0.2137%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="1"/><text x="0.8910%" y="399.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="373" width="0.2137%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="1"/><text x="0.8910%" y="383.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="357" width="0.2137%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="1"/><text x="0.8910%" y="367.50"></text></g><g><title>rust-gkat`cond_tactical::~cond_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="341" width="0.2137%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="1"/><text x="0.8910%" y="351.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="325" width="0.2137%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="1"/><text x="0.8910%" y="335.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="309" width="0.2137%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="1"/><text x="0.8910%" y="319.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="293" width="0.2137%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="1"/><text x="0.8910%" y="303.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="277" width="0.2137%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="1"/><text x="0.8910%" y="287.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="261" width="0.2137%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="1"/><text x="0.8910%" y="271.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="245" width="0.2137%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="1"/><text x="0.8910%" y="255.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="229" width="0.2137%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="1"/><text x="0.8910%" y="239.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="213" width="0.2137%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="1"/><text x="0.8910%" y="223.50"></text></g><g><title>rust-gkat`and_then_tactical::~and_then_tactical (1 samples, 0.21%)</title><rect x="0.6410%" y="197" width="0.2137%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="1"/><text x="0.8910%" y="207.50"></text></g><g><title>rust-gkat`dependent_expr_state_tactic::~dependent_expr_state_tactic (1 samples, 0.21%)</title><rect x="0.6410%" y="181" width="0.2137%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="1"/><text x="0.8910%" y="191.50"></text></g><g><title>rust-gkat`dependent_expr_state::~dependent_expr_state (1 samples, 0.21%)</title><rect x="0.6410%" y="165" width="0.2137%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="1"/><text x="0.8910%" y="175.50"></text></g><g><title>rust-gkat`region::~region (1 samples, 0.21%)</title><rect x="0.6410%" y="149" width="0.2137%" height="15" fill="rgb(247,123,22)" fg:x="3" fg:w="1"/><text x="0.8910%" y="159.50"></text></g><g><title>rust-gkat`del_pages(char*) (1 samples, 0.21%)</title><rect x="0.6410%" y="133" width="0.2137%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="1"/><text x="0.8910%" y="143.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (2 samples, 0.43%)</title><rect x="0.8547%" y="533" width="0.4274%" height="15" fill="rgb(231,145,46)" fg:x="4" fg:w="2"/><text x="1.1047%" y="543.50"></text></g><g><title>rust-gkat`params_ref::params_ref (1 samples, 0.21%)</title><rect x="1.2821%" y="533" width="0.2137%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="1.5321%" y="543.50"></text></g><g><title>rust-gkat`reslimit::inc (2 samples, 0.43%)</title><rect x="1.4957%" y="533" width="0.4274%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="2"/><text x="1.7457%" y="543.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (2 samples, 0.43%)</title><rect x="2.3504%" y="517" width="0.4274%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="2"/><text x="2.6004%" y="527.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (3 samples, 0.64%)</title><rect x="2.7778%" y="501" width="0.6410%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="3"/><text x="3.0278%" y="511.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="3.2051%" y="485" width="0.2137%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="1"/><text x="3.4551%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="3.2051%" y="469" width="0.2137%" height="15" fill="rgb(248,47,43)" fg:x="15" fg:w="1"/><text x="3.4551%" y="479.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="3.6325%" y="485" width="0.2137%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="1"/><text x="3.8825%" y="495.50"></text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="3.8462%" y="485" width="0.4274%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="2"/><text x="4.0962%" y="495.50"></text></g><g><title>rust-gkat`hoist_rewriter::is_and(expr*, ref_vector (2 samples, 0.43%)</title><rect x="3.8462%" y="469" width="0.4274%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="2"/><text x="4.0962%" y="479.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="3.8462%" y="453" width="0.4274%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="2"/><text x="4.0962%" y="463.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="3.8462%" y="437" width="0.4274%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="2"/><text x="4.0962%" y="447.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="4.0598%" y="421" width="0.2137%" height="15" fill="rgb(247,138,52)" fg:x="19" fg:w="1"/><text x="4.3098%" y="431.50"></text></g><g><title>rust-gkat`ast_manager::coercion_needed (1 samples, 0.21%)</title><rect x="4.0598%" y="405" width="0.2137%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="1"/><text x="4.3098%" y="415.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (5 samples, 1.07%)</title><rect x="3.4188%" y="501" width="1.0684%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="5"/><text x="3.6688%" y="511.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="4.2735%" y="485" width="0.2137%" height="15" fill="rgb(230,62,27)" fg:x="20" fg:w="1"/><text x="4.5235%" y="495.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (9 samples, 1.92%)</title><rect x="2.7778%" y="517" width="1.9231%" height="15" fill="rgb(216,154,8)" fg:x="13" fg:w="9"/><text x="3.0278%" y="527.50">r..</text></g><g><title>rust-gkat`bool_rewriter::mk_not_core(expr*, obj_ref (1 samples, 0.21%)</title><rect x="4.4872%" y="501" width="0.2137%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="1"/><text x="4.7372%" y="511.50"></text></g><g><title>rust-gkat`act_cache::find (1 samples, 0.21%)</title><rect x="4.7009%" y="517" width="0.2137%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="4.9509%" y="527.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (2 samples, 0.43%)</title><rect x="5.5556%" y="501" width="0.4274%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="2"/><text x="5.8056%" y="511.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (2 samples, 0.43%)</title><rect x="5.5556%" y="485" width="0.4274%" height="15" fill="rgb(233,84,52)" fg:x="26" fg:w="2"/><text x="5.8056%" y="495.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="5.7692%" y="469" width="0.2137%" height="15" fill="rgb(207,117,47)" fg:x="27" fg:w="1"/><text x="6.0192%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="5.7692%" y="453" width="0.2137%" height="15" fill="rgb(249,43,39)" fg:x="27" fg:w="1"/><text x="6.0192%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.21%)</title><rect x="5.9829%" y="485" width="0.2137%" height="15" fill="rgb(209,38,44)" fg:x="28" fg:w="1"/><text x="6.2329%" y="495.50"></text></g><g><title>rust-gkat`act_cache::insert (7 samples, 1.50%)</title><rect x="4.9145%" y="517" width="1.4957%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="7"/><text x="5.1645%" y="527.50"></text></g><g><title>rust-gkat`vector&lt;std::__1::pair&lt;expr*, unsigned int&gt;, false, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="5.9829%" y="501" width="0.4274%" height="15" fill="rgb(242,79,21)" fg:x="28" fg:w="2"/><text x="6.2329%" y="511.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc_size (1 samples, 0.21%)</title><rect x="6.1966%" y="485" width="0.2137%" height="15" fill="rgb(211,96,35)" fg:x="29" fg:w="1"/><text x="6.4466%" y="495.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (3 samples, 0.64%)</title><rect x="7.0513%" y="501" width="0.6410%" height="15" fill="rgb(253,215,40)" fg:x="33" fg:w="3"/><text x="7.3013%" y="511.50"></text></g><g><title>rust-gkat`vector&lt;expr*, false, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="7.6923%" y="501" width="0.4274%" height="15" fill="rgb(211,81,21)" fg:x="36" fg:w="2"/><text x="7.9423%" y="511.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="7.9060%" y="485" width="0.2137%" height="15" fill="rgb(208,190,38)" fg:x="37" fg:w="1"/><text x="8.1560%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.21%)</title><rect x="7.9060%" y="469" width="0.2137%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="1"/><text x="8.1560%" y="479.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (10 samples, 2.14%)</title><rect x="6.4103%" y="517" width="2.1368%" height="15" fill="rgb(237,122,38)" fg:x="30" fg:w="10"/><text x="6.6603%" y="527.50">r..</text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="8.1197%" y="501" width="0.4274%" height="15" fill="rgb(244,218,35)" fg:x="38" fg:w="2"/><text x="8.3697%" y="511.50"></text></g><g><title>rust-gkat`memory::reallocate (2 samples, 0.43%)</title><rect x="8.1197%" y="485" width="0.4274%" height="15" fill="rgb(240,68,47)" fg:x="38" fg:w="2"/><text x="8.3697%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.43%)</title><rect x="8.1197%" y="469" width="0.4274%" height="15" fill="rgb(210,16,53)" fg:x="38" fg:w="2"/><text x="8.3697%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.43%)</title><rect x="8.1197%" y="453" width="0.4274%" height="15" fill="rgb(235,124,12)" fg:x="38" fg:w="2"/><text x="8.3697%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.43%)</title><rect x="8.1197%" y="437" width="0.4274%" height="15" fill="rgb(224,169,11)" fg:x="38" fg:w="2"/><text x="8.3697%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.43%)</title><rect x="8.1197%" y="421" width="0.4274%" height="15" fill="rgb(250,166,2)" fg:x="38" fg:w="2"/><text x="8.3697%" y="431.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (32 samples, 6.84%)</title><rect x="1.9231%" y="533" width="6.8376%" height="15" fill="rgb(242,216,29)" fg:x="9" fg:w="32"/><text x="2.1731%" y="543.50">rust-gkat..</text></g><g><title>rust-gkat`vector&lt;std::__1::pair&lt;expr*, unsigned int&gt;, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="8.5470%" y="517" width="0.2137%" height="15" fill="rgb(230,116,27)" fg:x="40" fg:w="1"/><text x="8.7970%" y="527.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="8.7607%" y="517" width="0.2137%" height="15" fill="rgb(228,99,48)" fg:x="41" fg:w="1"/><text x="9.0107%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="8.7607%" y="501" width="0.2137%" height="15" fill="rgb(253,11,6)" fg:x="41" fg:w="1"/><text x="9.0107%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.21%)</title><rect x="8.7607%" y="485" width="0.2137%" height="15" fill="rgb(247,143,39)" fg:x="41" fg:w="1"/><text x="9.0107%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.21%)</title><rect x="8.7607%" y="469" width="0.2137%" height="15" fill="rgb(236,97,10)" fg:x="41" fg:w="1"/><text x="9.0107%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.21%)</title><rect x="8.7607%" y="453" width="0.2137%" height="15" fill="rgb(233,208,19)" fg:x="41" fg:w="1"/><text x="9.0107%" y="463.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="8.9744%" y="501" width="0.2137%" height="15" fill="rgb(216,164,2)" fg:x="42" fg:w="1"/><text x="9.2244%" y="511.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="8.9744%" y="485" width="0.2137%" height="15" fill="rgb(220,129,5)" fg:x="42" fg:w="1"/><text x="9.2244%" y="495.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="9.1880%" y="501" width="0.2137%" height="15" fill="rgb(242,17,10)" fg:x="43" fg:w="1"/><text x="9.4380%" y="511.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="9.1880%" y="485" width="0.2137%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="1"/><text x="9.4380%" y="495.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="9.1880%" y="469" width="0.2137%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="9.4380%" y="479.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="9.1880%" y="453" width="0.2137%" height="15" fill="rgb(233,223,10)" fg:x="43" fg:w="1"/><text x="9.4380%" y="463.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="9.4017%" y="501" width="0.2137%" height="15" fill="rgb(215,21,27)" fg:x="44" fg:w="1"/><text x="9.6517%" y="511.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="9.4017%" y="485" width="0.2137%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="1"/><text x="9.6517%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="9.4017%" y="469" width="0.2137%" height="15" fill="rgb(244,5,23)" fg:x="44" fg:w="1"/><text x="9.6517%" y="479.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (2 samples, 0.43%)</title><rect x="9.6154%" y="501" width="0.4274%" height="15" fill="rgb(226,81,46)" fg:x="45" fg:w="2"/><text x="9.8654%" y="511.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc (1 samples, 0.21%)</title><rect x="9.8291%" y="485" width="0.2137%" height="15" fill="rgb(247,70,30)" fg:x="46" fg:w="1"/><text x="10.0791%" y="495.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="10.0427%" y="501" width="0.2137%" height="15" fill="rgb(212,68,19)" fg:x="47" fg:w="1"/><text x="10.2927%" y="511.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="10.0427%" y="485" width="0.2137%" height="15" fill="rgb(240,187,13)" fg:x="47" fg:w="1"/><text x="10.2927%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="10.0427%" y="469" width="0.2137%" height="15" fill="rgb(223,113,26)" fg:x="47" fg:w="1"/><text x="10.2927%" y="479.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="10.0427%" y="453" width="0.2137%" height="15" fill="rgb(206,192,2)" fg:x="47" fg:w="1"/><text x="10.2927%" y="463.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="10.0427%" y="437" width="0.2137%" height="15" fill="rgb(241,108,4)" fg:x="47" fg:w="1"/><text x="10.2927%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="10.0427%" y="421" width="0.2137%" height="15" fill="rgb(247,173,49)" fg:x="47" fg:w="1"/><text x="10.2927%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.21%)</title><rect x="10.0427%" y="405" width="0.2137%" height="15" fill="rgb(224,114,35)" fg:x="47" fg:w="1"/><text x="10.2927%" y="415.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="10.2564%" y="485" width="0.2137%" height="15" fill="rgb(245,159,27)" fg:x="48" fg:w="1"/><text x="10.5064%" y="495.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="10.2564%" y="469" width="0.2137%" height="15" fill="rgb(245,172,44)" fg:x="48" fg:w="1"/><text x="10.5064%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.21%)</title><rect x="10.2564%" y="453" width="0.2137%" height="15" fill="rgb(236,23,11)" fg:x="48" fg:w="1"/><text x="10.5064%" y="463.50"></text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (2 samples, 0.43%)</title><rect x="10.2564%" y="501" width="0.4274%" height="15" fill="rgb(205,117,38)" fg:x="48" fg:w="2"/><text x="10.5064%" y="511.50"></text></g><g><title>rust-gkat`core_hashtable&lt;symbol_table&lt;int&gt;::hash_entry, symbol_table&lt;int&gt;::key_data_hash_proc, symbol_table&lt;int&gt;::key_data_eq_proc&gt;::find_core(symbol_table (1 samples, 0.21%)</title><rect x="10.4701%" y="485" width="0.2137%" height="15" fill="rgb(237,72,25)" fg:x="49" fg:w="1"/><text x="10.7201%" y="495.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (10 samples, 2.14%)</title><rect x="8.7607%" y="533" width="2.1368%" height="15" fill="rgb(244,70,9)" fg:x="41" fg:w="10"/><text x="9.0107%" y="543.50">r..</text></g><g><title>rust-gkat`th_rewriter::imp::imp (9 samples, 1.92%)</title><rect x="8.9744%" y="517" width="1.9231%" height="15" fill="rgb(217,125,39)" fg:x="42" fg:w="9"/><text x="9.2244%" y="527.50">r..</text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="10.6838%" y="501" width="0.2137%" height="15" fill="rgb(235,36,10)" fg:x="50" fg:w="1"/><text x="10.9338%" y="511.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="10.6838%" y="485" width="0.2137%" height="15" fill="rgb(251,123,47)" fg:x="50" fg:w="1"/><text x="10.9338%" y="495.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="10.6838%" y="469" width="0.2137%" height="15" fill="rgb(221,13,13)" fg:x="50" fg:w="1"/><text x="10.9338%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="10.8974%" y="485" width="0.2137%" height="15" fill="rgb(238,131,9)" fg:x="51" fg:w="1"/><text x="11.1474%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (2 samples, 0.43%)</title><rect x="10.8974%" y="517" width="0.4274%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="2"/><text x="11.1474%" y="527.50"></text></g><g><title>rust-gkat`memory::deallocate (2 samples, 0.43%)</title><rect x="10.8974%" y="501" width="0.4274%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="2"/><text x="11.1474%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.21%)</title><rect x="11.1111%" y="485" width="0.2137%" height="15" fill="rgb(242,14,37)" fg:x="52" fg:w="1"/><text x="11.3611%" y="495.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (1 samples, 0.21%)</title><rect x="11.3248%" y="517" width="0.2137%" height="15" fill="rgb(246,228,12)" fg:x="53" fg:w="1"/><text x="11.5748%" y="527.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="11.3248%" y="501" width="0.2137%" height="15" fill="rgb(213,55,15)" fg:x="53" fg:w="1"/><text x="11.5748%" y="511.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="11.3248%" y="485" width="0.2137%" height="15" fill="rgb(209,9,3)" fg:x="53" fg:w="1"/><text x="11.5748%" y="495.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="11.3248%" y="469" width="0.2137%" height="15" fill="rgb(230,59,30)" fg:x="53" fg:w="1"/><text x="11.5748%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="11.3248%" y="453" width="0.2137%" height="15" fill="rgb(209,121,21)" fg:x="53" fg:w="1"/><text x="11.5748%" y="463.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="11.5385%" y="501" width="0.2137%" height="15" fill="rgb(220,109,13)" fg:x="54" fg:w="1"/><text x="11.7885%" y="511.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="11.5385%" y="485" width="0.2137%" height="15" fill="rgb(232,18,1)" fg:x="54" fg:w="1"/><text x="11.7885%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="11.5385%" y="469" width="0.2137%" height="15" fill="rgb(215,41,42)" fg:x="54" fg:w="1"/><text x="11.7885%" y="479.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="11.7521%" y="501" width="0.2137%" height="15" fill="rgb(224,123,36)" fg:x="55" fg:w="1"/><text x="12.0021%" y="511.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc_size (1 samples, 0.21%)</title><rect x="11.7521%" y="485" width="0.2137%" height="15" fill="rgb(240,125,3)" fg:x="55" fg:w="1"/><text x="12.0021%" y="495.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (53 samples, 11.32%)</title><rect x="0.8547%" y="565" width="11.3248%" height="15" fill="rgb(205,98,50)" fg:x="4" fg:w="53"/><text x="1.1047%" y="575.50">rust-gkat`_si(uns..</text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (53 samples, 11.32%)</title><rect x="0.8547%" y="549" width="11.3248%" height="15" fill="rgb(205,185,37)" fg:x="4" fg:w="53"/><text x="1.1047%" y="559.50">rust-gkat`simplif..</text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (6 samples, 1.28%)</title><rect x="10.8974%" y="533" width="1.2821%" height="15" fill="rgb(238,207,15)" fg:x="51" fg:w="6"/><text x="11.1474%" y="543.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (3 samples, 0.64%)</title><rect x="11.5385%" y="517" width="0.6410%" height="15" fill="rgb(213,199,42)" fg:x="54" fg:w="3"/><text x="11.7885%" y="527.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="11.9658%" y="501" width="0.2137%" height="15" fill="rgb(235,201,11)" fg:x="56" fg:w="1"/><text x="12.2158%" y="511.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="11.9658%" y="485" width="0.2137%" height="15" fill="rgb(207,46,11)" fg:x="56" fg:w="1"/><text x="12.2158%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="11.9658%" y="469" width="0.2137%" height="15" fill="rgb(241,35,35)" fg:x="56" fg:w="1"/><text x="12.2158%" y="479.50"></text></g><g><title>rust-gkat`Z3_mk_and (1 samples, 0.21%)</title><rect x="12.1795%" y="517" width="0.2137%" height="15" fill="rgb(243,32,47)" fg:x="57" fg:w="1"/><text x="12.4295%" y="527.50"></text></g><g><title>rust-gkat`api::context::check_sorts (1 samples, 0.21%)</title><rect x="12.1795%" y="501" width="0.2137%" height="15" fill="rgb(247,202,23)" fg:x="57" fg:w="1"/><text x="12.4295%" y="511.50"></text></g><g><title>rust-gkat`ast_manager::check_sorts_core (1 samples, 0.21%)</title><rect x="12.1795%" y="485" width="0.2137%" height="15" fill="rgb(219,102,11)" fg:x="57" fg:w="1"/><text x="12.4295%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.21%)</title><rect x="12.3932%" y="485" width="0.2137%" height="15" fill="rgb(243,110,44)" fg:x="58" fg:w="1"/><text x="12.6432%" y="495.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="12.6068%" y="485" width="0.2137%" height="15" fill="rgb(222,74,54)" fg:x="59" fg:w="1"/><text x="12.8568%" y="495.50"></text></g><g><title>rust-gkat`params_ref::params_ref (1 samples, 0.21%)</title><rect x="12.8205%" y="485" width="0.2137%" height="15" fill="rgb(216,99,12)" fg:x="60" fg:w="1"/><text x="13.0705%" y="495.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (3 samples, 0.64%)</title><rect x="13.4615%" y="469" width="0.6410%" height="15" fill="rgb(226,22,26)" fg:x="63" fg:w="3"/><text x="13.7115%" y="479.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (3 samples, 0.64%)</title><rect x="13.4615%" y="453" width="0.6410%" height="15" fill="rgb(217,163,10)" fg:x="63" fg:w="3"/><text x="13.7115%" y="463.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="14.1026%" y="453" width="0.2137%" height="15" fill="rgb(213,25,53)" fg:x="66" fg:w="1"/><text x="14.3526%" y="463.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (1 samples, 0.21%)</title><rect x="14.1026%" y="437" width="0.2137%" height="15" fill="rgb(252,105,26)" fg:x="66" fg:w="1"/><text x="14.3526%" y="447.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="14.1026%" y="421" width="0.2137%" height="15" fill="rgb(220,39,43)" fg:x="66" fg:w="1"/><text x="14.3526%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.21%)</title><rect x="14.1026%" y="405" width="0.2137%" height="15" fill="rgb(229,68,48)" fg:x="66" fg:w="1"/><text x="14.3526%" y="415.50"></text></g><g><title>rust-gkat`act_cache::insert (2 samples, 0.43%)</title><rect x="14.1026%" y="469" width="0.4274%" height="15" fill="rgb(252,8,32)" fg:x="66" fg:w="2"/><text x="14.3526%" y="479.50"></text></g><g><title>rust-gkat`vector&lt;std::__1::pair&lt;expr*, unsigned int&gt;, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="14.3162%" y="453" width="0.2137%" height="15" fill="rgb(223,20,43)" fg:x="67" fg:w="1"/><text x="14.5662%" y="463.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="14.3162%" y="437" width="0.2137%" height="15" fill="rgb(229,81,49)" fg:x="67" fg:w="1"/><text x="14.5662%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="14.3162%" y="421" width="0.2137%" height="15" fill="rgb(236,28,36)" fg:x="67" fg:w="1"/><text x="14.5662%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="14.3162%" y="405" width="0.2137%" height="15" fill="rgb(249,185,26)" fg:x="67" fg:w="1"/><text x="14.5662%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.21%)</title><rect x="14.3162%" y="389" width="0.2137%" height="15" fill="rgb(249,174,33)" fg:x="67" fg:w="1"/><text x="14.5662%" y="399.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="14.5299%" y="469" width="0.2137%" height="15" fill="rgb(233,201,37)" fg:x="68" fg:w="1"/><text x="14.7799%" y="479.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="14.5299%" y="453" width="0.2137%" height="15" fill="rgb(221,78,26)" fg:x="68" fg:w="1"/><text x="14.7799%" y="463.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="14.5299%" y="437" width="0.2137%" height="15" fill="rgb(250,127,30)" fg:x="68" fg:w="1"/><text x="14.7799%" y="447.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (1 samples, 0.21%)</title><rect x="14.5299%" y="421" width="0.2137%" height="15" fill="rgb(230,49,44)" fg:x="68" fg:w="1"/><text x="14.7799%" y="431.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="15.1709%" y="453" width="0.2137%" height="15" fill="rgb(229,67,23)" fg:x="71" fg:w="1"/><text x="15.4209%" y="463.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="15.3846%" y="437" width="0.2137%" height="15" fill="rgb(249,83,47)" fg:x="72" fg:w="1"/><text x="15.6346%" y="447.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (5 samples, 1.07%)</title><rect x="14.7436%" y="469" width="1.0684%" height="15" fill="rgb(215,43,3)" fg:x="69" fg:w="5"/><text x="14.9936%" y="479.50"></text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="15.3846%" y="453" width="0.4274%" height="15" fill="rgb(238,154,13)" fg:x="72" fg:w="2"/><text x="15.6346%" y="463.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="15.5983%" y="437" width="0.2137%" height="15" fill="rgb(219,56,2)" fg:x="73" fg:w="1"/><text x="15.8483%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="15.5983%" y="421" width="0.2137%" height="15" fill="rgb(233,0,4)" fg:x="73" fg:w="1"/><text x="15.8483%" y="431.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (14 samples, 2.99%)</title><rect x="13.0342%" y="485" width="2.9915%" height="15" fill="rgb(235,30,7)" fg:x="61" fg:w="14"/><text x="13.2842%" y="495.50">rus..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::check_max_steps (1 samples, 0.21%)</title><rect x="15.8120%" y="469" width="0.2137%" height="15" fill="rgb(250,79,13)" fg:x="74" fg:w="1"/><text x="16.0620%" y="479.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="16.0256%" y="437" width="0.2137%" height="15" fill="rgb(211,146,34)" fg:x="75" fg:w="1"/><text x="16.2756%" y="447.50"></text></g><g><title>libc++.1.dylib`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="16.0256%" y="421" width="0.2137%" height="15" fill="rgb(228,22,38)" fg:x="75" fg:w="1"/><text x="16.2756%" y="431.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::updt_local_params (2 samples, 0.43%)</title><rect x="16.0256%" y="453" width="0.4274%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="2"/><text x="16.2756%" y="463.50"></text></g><g><title>rust-gkat`params_ref::get_uint (1 samples, 0.21%)</title><rect x="16.2393%" y="437" width="0.2137%" height="15" fill="rgb(221,155,16)" fg:x="76" fg:w="1"/><text x="16.4893%" y="447.50"></text></g><g><title>rust-gkat`params_ref::~params_ref (1 samples, 0.21%)</title><rect x="16.4530%" y="437" width="0.2137%" height="15" fill="rgb(215,215,53)" fg:x="77" fg:w="1"/><text x="16.7030%" y="447.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (2 samples, 0.43%)</title><rect x="16.4530%" y="453" width="0.4274%" height="15" fill="rgb(223,4,10)" fg:x="77" fg:w="2"/><text x="16.7030%" y="463.50"></text></g><g><title>rust-gkat`poly_rewriter&lt;arith_rewriter_core&gt;::updt_params (1 samples, 0.21%)</title><rect x="16.6667%" y="437" width="0.2137%" height="15" fill="rgb(234,103,6)" fg:x="78" fg:w="1"/><text x="16.9167%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="16.6667%" y="421" width="0.2137%" height="15" fill="rgb(227,97,0)" fg:x="78" fg:w="1"/><text x="16.9167%" y="431.50"></text></g><g><title>rust-gkat`array_util::array_util (1 samples, 0.21%)</title><rect x="16.8803%" y="453" width="0.2137%" height="15" fill="rgb(234,150,53)" fg:x="79" fg:w="1"/><text x="17.1303%" y="463.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="16.8803%" y="437" width="0.2137%" height="15" fill="rgb(228,201,54)" fg:x="79" fg:w="1"/><text x="17.1303%" y="447.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="17.0940%" y="437" width="0.2137%" height="15" fill="rgb(222,22,37)" fg:x="80" fg:w="1"/><text x="17.3440%" y="447.50"></text></g><g><title>rust-gkat`core_hashtable&lt;symbol_table&lt;int&gt;::hash_entry, symbol_table&lt;int&gt;::key_data_hash_proc, symbol_table&lt;int&gt;::key_data_eq_proc&gt;::find_core(symbol_table (1 samples, 0.21%)</title><rect x="17.0940%" y="421" width="0.2137%" height="15" fill="rgb(237,53,32)" fg:x="80" fg:w="1"/><text x="17.3440%" y="431.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (2 samples, 0.43%)</title><rect x="17.0940%" y="453" width="0.4274%" height="15" fill="rgb(233,25,53)" fg:x="80" fg:w="2"/><text x="17.3440%" y="463.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="17.3077%" y="437" width="0.2137%" height="15" fill="rgb(210,40,34)" fg:x="81" fg:w="1"/><text x="17.5577%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="17.3077%" y="421" width="0.2137%" height="15" fill="rgb(241,220,44)" fg:x="81" fg:w="1"/><text x="17.5577%" y="431.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="17.5214%" y="453" width="0.2137%" height="15" fill="rgb(235,28,35)" fg:x="82" fg:w="1"/><text x="17.7714%" y="463.50"></text></g><g><title>libc++.1.dylib`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="17.9487%" y="373" width="0.2137%" height="15" fill="rgb(210,56,17)" fg:x="84" fg:w="1"/><text x="18.1987%" y="383.50"></text></g><g><title>rust-gkat`fpa_rewriter::fpa_rewriter (3 samples, 0.64%)</title><rect x="17.7350%" y="453" width="0.6410%" height="15" fill="rgb(224,130,29)" fg:x="83" fg:w="3"/><text x="17.9850%" y="463.50"></text></g><g><title>rust-gkat`fpa_util::fpa_util (3 samples, 0.64%)</title><rect x="17.7350%" y="437" width="0.6410%" height="15" fill="rgb(235,212,8)" fg:x="83" fg:w="3"/><text x="17.9850%" y="447.50"></text></g><g><title>rust-gkat`bv_util::bv_util (3 samples, 0.64%)</title><rect x="17.7350%" y="421" width="0.6410%" height="15" fill="rgb(223,33,50)" fg:x="83" fg:w="3"/><text x="17.9850%" y="431.50"></text></g><g><title>rust-gkat`symbol::symbol (3 samples, 0.64%)</title><rect x="17.7350%" y="405" width="0.6410%" height="15" fill="rgb(219,149,13)" fg:x="83" fg:w="3"/><text x="17.9850%" y="415.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (2 samples, 0.43%)</title><rect x="17.9487%" y="389" width="0.4274%" height="15" fill="rgb(250,156,29)" fg:x="84" fg:w="2"/><text x="18.1987%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="18.1624%" y="373" width="0.2137%" height="15" fill="rgb(216,193,19)" fg:x="85" fg:w="1"/><text x="18.4124%" y="383.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (1 samples, 0.21%)</title><rect x="18.3761%" y="453" width="0.2137%" height="15" fill="rgb(216,135,14)" fg:x="86" fg:w="1"/><text x="18.6261%" y="463.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="18.3761%" y="437" width="0.2137%" height="15" fill="rgb(241,47,5)" fg:x="86" fg:w="1"/><text x="18.6261%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="18.3761%" y="421" width="0.2137%" height="15" fill="rgb(233,42,35)" fg:x="86" fg:w="1"/><text x="18.6261%" y="431.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="18.5897%" y="453" width="0.2137%" height="15" fill="rgb(231,13,6)" fg:x="87" fg:w="1"/><text x="18.8397%" y="463.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (2 samples, 0.43%)</title><rect x="18.8034%" y="453" width="0.4274%" height="15" fill="rgb(207,181,40)" fg:x="88" fg:w="2"/><text x="19.0534%" y="463.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (2 samples, 0.43%)</title><rect x="18.8034%" y="437" width="0.4274%" height="15" fill="rgb(254,173,49)" fg:x="88" fg:w="2"/><text x="19.0534%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (2 samples, 0.43%)</title><rect x="18.8034%" y="421" width="0.4274%" height="15" fill="rgb(221,1,38)" fg:x="88" fg:w="2"/><text x="19.0534%" y="431.50"></text></g><g><title>rust-gkat`act_cache::act_cache (2 samples, 0.43%)</title><rect x="18.8034%" y="405" width="0.4274%" height="15" fill="rgb(206,124,46)" fg:x="88" fg:w="2"/><text x="19.0534%" y="415.50"></text></g><g><title>rust-gkat`memory::allocate (2 samples, 0.43%)</title><rect x="18.8034%" y="389" width="0.4274%" height="15" fill="rgb(249,21,11)" fg:x="88" fg:w="2"/><text x="19.0534%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.43%)</title><rect x="18.8034%" y="373" width="0.4274%" height="15" fill="rgb(222,201,40)" fg:x="88" fg:w="2"/><text x="19.0534%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="19.0171%" y="357" width="0.2137%" height="15" fill="rgb(235,61,29)" fg:x="89" fg:w="1"/><text x="19.2671%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.21%)</title><rect x="19.0171%" y="341" width="0.2137%" height="15" fill="rgb(219,207,3)" fg:x="89" fg:w="1"/><text x="19.2671%" y="351.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="19.2308%" y="437" width="0.2137%" height="15" fill="rgb(222,56,46)" fg:x="90" fg:w="1"/><text x="19.4808%" y="447.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="19.2308%" y="421" width="0.2137%" height="15" fill="rgb(239,76,54)" fg:x="90" fg:w="1"/><text x="19.4808%" y="431.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (1 samples, 0.21%)</title><rect x="19.4444%" y="437" width="0.2137%" height="15" fill="rgb(231,124,27)" fg:x="91" fg:w="1"/><text x="19.6944%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="19.4444%" y="421" width="0.2137%" height="15" fill="rgb(249,195,6)" fg:x="91" fg:w="1"/><text x="19.6944%" y="431.50"></text></g><g><title>rust-gkat`re2automaton::re2automaton (1 samples, 0.21%)</title><rect x="19.6581%" y="437" width="0.2137%" height="15" fill="rgb(237,174,47)" fg:x="92" fg:w="1"/><text x="19.9081%" y="447.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="19.6581%" y="421" width="0.2137%" height="15" fill="rgb(206,201,31)" fg:x="92" fg:w="1"/><text x="19.9081%" y="431.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="19.6581%" y="405" width="0.2137%" height="15" fill="rgb(231,57,52)" fg:x="92" fg:w="1"/><text x="19.9081%" y="415.50"></text></g><g><title>rust-gkat`core_hashtable&lt;ptr_hash_entry&lt;char const&gt;, str_hash_proc, str_eq_proc&gt;::insert_if_not_there_core(char const*&amp;&amp;, ptr_hash_entry (1 samples, 0.21%)</title><rect x="19.6581%" y="389" width="0.2137%" height="15" fill="rgb(248,177,22)" fg:x="92" fg:w="1"/><text x="19.9081%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (19 samples, 4.06%)</title><rect x="16.0256%" y="485" width="4.0598%" height="15" fill="rgb(215,211,37)" fg:x="75" fg:w="19"/><text x="16.2756%" y="495.50">rust..</text></g><g><title>rust-gkat`th_rewriter::imp::imp (19 samples, 4.06%)</title><rect x="16.0256%" y="469" width="4.0598%" height="15" fill="rgb(241,128,51)" fg:x="75" fg:w="19"/><text x="16.2756%" y="479.50">rust..</text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (4 samples, 0.85%)</title><rect x="19.2308%" y="453" width="0.8547%" height="15" fill="rgb(227,165,31)" fg:x="90" fg:w="4"/><text x="19.4808%" y="463.50"></text></g><g><title>rust-gkat`seq_rewriter::op_cache::op_cache (1 samples, 0.21%)</title><rect x="19.8718%" y="437" width="0.2137%" height="15" fill="rgb(228,167,24)" fg:x="93" fg:w="1"/><text x="20.1218%" y="447.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="19.8718%" y="421" width="0.2137%" height="15" fill="rgb(228,143,12)" fg:x="93" fg:w="1"/><text x="20.1218%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="19.8718%" y="405" width="0.2137%" height="15" fill="rgb(249,149,8)" fg:x="93" fg:w="1"/><text x="20.1218%" y="415.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="20.0855%" y="469" width="0.2137%" height="15" fill="rgb(243,35,44)" fg:x="94" fg:w="1"/><text x="20.3355%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.21%)</title><rect x="20.0855%" y="453" width="0.2137%" height="15" fill="rgb(246,89,9)" fg:x="94" fg:w="1"/><text x="20.3355%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.21%)</title><rect x="20.2991%" y="437" width="0.2137%" height="15" fill="rgb(233,213,13)" fg:x="95" fg:w="1"/><text x="20.5491%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (2 samples, 0.43%)</title><rect x="20.2991%" y="469" width="0.4274%" height="15" fill="rgb(233,141,41)" fg:x="95" fg:w="2"/><text x="20.5491%" y="479.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (2 samples, 0.43%)</title><rect x="20.2991%" y="453" width="0.4274%" height="15" fill="rgb(239,167,4)" fg:x="95" fg:w="2"/><text x="20.5491%" y="463.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="20.5128%" y="437" width="0.2137%" height="15" fill="rgb(209,217,16)" fg:x="96" fg:w="1"/><text x="20.7628%" y="447.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="20.5128%" y="421" width="0.2137%" height="15" fill="rgb(219,88,35)" fg:x="96" fg:w="1"/><text x="20.7628%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="20.7265%" y="437" width="0.2137%" height="15" fill="rgb(220,193,23)" fg:x="97" fg:w="1"/><text x="20.9765%" y="447.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="20.9402%" y="421" width="0.2137%" height="15" fill="rgb(230,90,52)" fg:x="98" fg:w="1"/><text x="21.1902%" y="431.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (3 samples, 0.64%)</title><rect x="20.7265%" y="469" width="0.6410%" height="15" fill="rgb(252,106,19)" fg:x="97" fg:w="3"/><text x="20.9765%" y="479.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (3 samples, 0.64%)</title><rect x="20.7265%" y="453" width="0.6410%" height="15" fill="rgb(206,74,20)" fg:x="97" fg:w="3"/><text x="20.9765%" y="463.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (2 samples, 0.43%)</title><rect x="20.9402%" y="437" width="0.4274%" height="15" fill="rgb(230,138,44)" fg:x="98" fg:w="2"/><text x="21.1902%" y="447.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="21.1538%" y="421" width="0.2137%" height="15" fill="rgb(235,182,43)" fg:x="99" fg:w="1"/><text x="21.4038%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="21.1538%" y="405" width="0.2137%" height="15" fill="rgb(242,16,51)" fg:x="99" fg:w="1"/><text x="21.4038%" y="415.50"></text></g><g><title>rust-gkat`datatype::util::~util (2 samples, 0.43%)</title><rect x="21.3675%" y="453" width="0.4274%" height="15" fill="rgb(248,9,4)" fg:x="100" fg:w="2"/><text x="21.6175%" y="463.50"></text></g><g><title>rust-gkat`memory::deallocate (2 samples, 0.43%)</title><rect x="21.3675%" y="437" width="0.4274%" height="15" fill="rgb(210,31,22)" fg:x="100" fg:w="2"/><text x="21.6175%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.43%)</title><rect x="21.3675%" y="421" width="0.4274%" height="15" fill="rgb(239,54,39)" fg:x="100" fg:w="2"/><text x="21.6175%" y="431.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="21.7949%" y="453" width="0.2137%" height="15" fill="rgb(230,99,41)" fg:x="102" fg:w="1"/><text x="22.0449%" y="463.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="21.7949%" y="437" width="0.2137%" height="15" fill="rgb(253,106,12)" fg:x="102" fg:w="1"/><text x="22.0449%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="21.7949%" y="421" width="0.2137%" height="15" fill="rgb(213,46,41)" fg:x="102" fg:w="1"/><text x="22.0449%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 10.04%)</title><rect x="12.1795%" y="549" width="10.0427%" height="15" fill="rgb(215,133,35)" fg:x="57" fg:w="47"/><text x="12.4295%" y="559.50">rust-gkat`&lt;allo..</text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 10.04%)</title><rect x="12.1795%" y="533" width="10.0427%" height="15" fill="rgb(213,28,5)" fg:x="57" fg:w="47"/><text x="12.4295%" y="543.50">rust-gkat`&lt;rust..</text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (46 samples, 9.83%)</title><rect x="12.3932%" y="517" width="9.8291%" height="15" fill="rgb(215,77,49)" fg:x="58" fg:w="46"/><text x="12.6432%" y="527.50">rust-gkat`_si(..</text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (46 samples, 9.83%)</title><rect x="12.3932%" y="501" width="9.8291%" height="15" fill="rgb(248,100,22)" fg:x="58" fg:w="46"/><text x="12.6432%" y="511.50">rust-gkat`simp..</text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (10 samples, 2.14%)</title><rect x="20.0855%" y="485" width="2.1368%" height="15" fill="rgb(208,67,9)" fg:x="94" fg:w="10"/><text x="20.3355%" y="495.50">r..</text></g><g><title>rust-gkat`th_rewriter::imp::~imp (4 samples, 0.85%)</title><rect x="21.3675%" y="469" width="0.8547%" height="15" fill="rgb(219,133,21)" fg:x="100" fg:w="4"/><text x="21.6175%" y="479.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="22.0085%" y="453" width="0.2137%" height="15" fill="rgb(246,46,29)" fg:x="103" fg:w="1"/><text x="22.2585%" y="463.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="22.0085%" y="437" width="0.2137%" height="15" fill="rgb(246,185,52)" fg:x="103" fg:w="1"/><text x="22.2585%" y="447.50"></text></g><g><title>rust-gkat`expr_safe_replace::~expr_safe_replace (1 samples, 0.21%)</title><rect x="22.0085%" y="421" width="0.2137%" height="15" fill="rgb(252,136,11)" fg:x="103" fg:w="1"/><text x="22.2585%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.21%)</title><rect x="22.2222%" y="549" width="0.2137%" height="15" fill="rgb(219,138,53)" fg:x="104" fg:w="1"/><text x="22.4722%" y="559.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (1 samples, 0.21%)</title><rect x="22.4359%" y="437" width="0.2137%" height="15" fill="rgb(211,51,23)" fg:x="105" fg:w="1"/><text x="22.6859%" y="447.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="22.6496%" y="437" width="0.2137%" height="15" fill="rgb(247,221,28)" fg:x="106" fg:w="1"/><text x="22.8996%" y="447.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (3 samples, 0.64%)</title><rect x="22.4359%" y="469" width="0.6410%" height="15" fill="rgb(251,222,45)" fg:x="105" fg:w="3"/><text x="22.6859%" y="479.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (3 samples, 0.64%)</title><rect x="22.4359%" y="453" width="0.6410%" height="15" fill="rgb(217,162,53)" fg:x="105" fg:w="3"/><text x="22.6859%" y="463.50"></text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="22.8632%" y="437" width="0.2137%" height="15" fill="rgb(229,93,14)" fg:x="107" fg:w="1"/><text x="23.1132%" y="447.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="22.8632%" y="421" width="0.2137%" height="15" fill="rgb(209,67,49)" fg:x="107" fg:w="1"/><text x="23.1132%" y="431.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (1 samples, 0.21%)</title><rect x="23.0769%" y="437" width="0.2137%" height="15" fill="rgb(213,87,29)" fg:x="108" fg:w="1"/><text x="23.3269%" y="447.50"></text></g><g><title>rust-gkat`poly_rewriter&lt;bv_rewriter_core&gt;::updt_params (1 samples, 0.21%)</title><rect x="23.0769%" y="421" width="0.2137%" height="15" fill="rgb(205,151,52)" fg:x="108" fg:w="1"/><text x="23.3269%" y="431.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="23.2906%" y="437" width="0.2137%" height="15" fill="rgb(253,215,39)" fg:x="109" fg:w="1"/><text x="23.5406%" y="447.50"></text></g><g><title>rust-gkat`core_hashtable&lt;symbol_table&lt;int&gt;::hash_entry, symbol_table&lt;int&gt;::key_data_hash_proc, symbol_table&lt;int&gt;::key_data_eq_proc&gt;::find_core(symbol_table (1 samples, 0.21%)</title><rect x="23.2906%" y="421" width="0.2137%" height="15" fill="rgb(221,220,41)" fg:x="109" fg:w="1"/><text x="23.5406%" y="431.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="23.5043%" y="437" width="0.2137%" height="15" fill="rgb(218,133,21)" fg:x="110" fg:w="1"/><text x="23.7543%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="23.5043%" y="421" width="0.2137%" height="15" fill="rgb(221,193,43)" fg:x="110" fg:w="1"/><text x="23.7543%" y="431.50"></text></g><g><title>rust-gkat`fpa_rewriter::fpa_rewriter (1 samples, 0.21%)</title><rect x="23.7179%" y="437" width="0.2137%" height="15" fill="rgb(240,128,52)" fg:x="111" fg:w="1"/><text x="23.9679%" y="447.50"></text></g><g><title>rust-gkat`fpa_util::fpa_util (1 samples, 0.21%)</title><rect x="23.7179%" y="421" width="0.2137%" height="15" fill="rgb(253,114,12)" fg:x="111" fg:w="1"/><text x="23.9679%" y="431.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="23.7179%" y="405" width="0.2137%" height="15" fill="rgb(215,223,47)" fg:x="111" fg:w="1"/><text x="23.9679%" y="415.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="23.7179%" y="389" width="0.2137%" height="15" fill="rgb(248,225,23)" fg:x="111" fg:w="1"/><text x="23.9679%" y="399.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="23.7179%" y="373" width="0.2137%" height="15" fill="rgb(250,108,0)" fg:x="111" fg:w="1"/><text x="23.9679%" y="383.50"></text></g><g><title>rust-gkat`recfun::util::util (1 samples, 0.21%)</title><rect x="23.9316%" y="437" width="0.2137%" height="15" fill="rgb(228,208,7)" fg:x="112" fg:w="1"/><text x="24.1816%" y="447.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="23.9316%" y="421" width="0.2137%" height="15" fill="rgb(244,45,10)" fg:x="112" fg:w="1"/><text x="24.1816%" y="431.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="23.9316%" y="405" width="0.2137%" height="15" fill="rgb(207,125,25)" fg:x="112" fg:w="1"/><text x="24.1816%" y="415.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_strcmp (1 samples, 0.21%)</title><rect x="23.9316%" y="389" width="0.2137%" height="15" fill="rgb(210,195,18)" fg:x="112" fg:w="1"/><text x="24.1816%" y="399.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="24.1453%" y="437" width="0.2137%" height="15" fill="rgb(249,80,12)" fg:x="113" fg:w="1"/><text x="24.3953%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="24.1453%" y="421" width="0.2137%" height="15" fill="rgb(221,65,9)" fg:x="113" fg:w="1"/><text x="24.3953%" y="431.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="24.1453%" y="405" width="0.2137%" height="15" fill="rgb(235,49,36)" fg:x="113" fg:w="1"/><text x="24.3953%" y="415.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="24.1453%" y="389" width="0.2137%" height="15" fill="rgb(225,32,20)" fg:x="113" fg:w="1"/><text x="24.3953%" y="399.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="24.1453%" y="373" width="0.2137%" height="15" fill="rgb(215,141,46)" fg:x="113" fg:w="1"/><text x="24.3953%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="24.1453%" y="357" width="0.2137%" height="15" fill="rgb(250,160,47)" fg:x="113" fg:w="1"/><text x="24.3953%" y="367.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (7 samples, 1.50%)</title><rect x="23.0769%" y="469" width="1.4957%" height="15" fill="rgb(216,222,40)" fg:x="108" fg:w="7"/><text x="23.3269%" y="479.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (7 samples, 1.50%)</title><rect x="23.0769%" y="453" width="1.4957%" height="15" fill="rgb(234,217,39)" fg:x="108" fg:w="7"/><text x="23.3269%" y="463.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="24.3590%" y="437" width="0.2137%" height="15" fill="rgb(207,178,40)" fg:x="114" fg:w="1"/><text x="24.6090%" y="447.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="24.3590%" y="421" width="0.2137%" height="15" fill="rgb(221,136,13)" fg:x="114" fg:w="1"/><text x="24.6090%" y="431.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="24.3590%" y="405" width="0.2137%" height="15" fill="rgb(249,199,10)" fg:x="114" fg:w="1"/><text x="24.6090%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.21%)</title><rect x="24.3590%" y="389" width="0.2137%" height="15" fill="rgb(249,222,13)" fg:x="114" fg:w="1"/><text x="24.6090%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="24.5726%" y="437" width="0.2137%" height="15" fill="rgb(244,185,38)" fg:x="115" fg:w="1"/><text x="24.8226%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (3 samples, 0.64%)</title><rect x="24.5726%" y="453" width="0.6410%" height="15" fill="rgb(236,202,9)" fg:x="115" fg:w="3"/><text x="24.8226%" y="463.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (2 samples, 0.43%)</title><rect x="24.7863%" y="437" width="0.4274%" height="15" fill="rgb(250,229,37)" fg:x="116" fg:w="2"/><text x="25.0363%" y="447.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="25.0000%" y="421" width="0.2137%" height="15" fill="rgb(206,174,23)" fg:x="117" fg:w="1"/><text x="25.2500%" y="431.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="25.0000%" y="405" width="0.2137%" height="15" fill="rgb(211,33,43)" fg:x="117" fg:w="1"/><text x="25.2500%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.21%)</title><rect x="25.0000%" y="389" width="0.2137%" height="15" fill="rgb(245,58,50)" fg:x="117" fg:w="1"/><text x="25.2500%" y="399.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (1 samples, 0.21%)</title><rect x="25.2137%" y="453" width="0.2137%" height="15" fill="rgb(244,68,36)" fg:x="118" fg:w="1"/><text x="25.4637%" y="463.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="25.2137%" y="437" width="0.2137%" height="15" fill="rgb(232,229,15)" fg:x="118" fg:w="1"/><text x="25.4637%" y="447.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="25.2137%" y="421" width="0.2137%" height="15" fill="rgb(254,30,23)" fg:x="118" fg:w="1"/><text x="25.4637%" y="431.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="25.2137%" y="405" width="0.2137%" height="15" fill="rgb(235,160,14)" fg:x="118" fg:w="1"/><text x="25.4637%" y="415.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="25.2137%" y="389" width="0.2137%" height="15" fill="rgb(212,155,44)" fg:x="118" fg:w="1"/><text x="25.4637%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.21%)</title><rect x="25.2137%" y="373" width="0.2137%" height="15" fill="rgb(226,2,50)" fg:x="118" fg:w="1"/><text x="25.4637%" y="383.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (15 samples, 3.21%)</title><rect x="22.4359%" y="501" width="3.2051%" height="15" fill="rgb(234,177,6)" fg:x="105" fg:w="15"/><text x="22.6859%" y="511.50">rus..</text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (15 samples, 3.21%)</title><rect x="22.4359%" y="485" width="3.2051%" height="15" fill="rgb(217,24,9)" fg:x="105" fg:w="15"/><text x="22.6859%" y="495.50">rus..</text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (5 samples, 1.07%)</title><rect x="24.5726%" y="469" width="1.0684%" height="15" fill="rgb(220,13,46)" fg:x="115" fg:w="5"/><text x="24.8226%" y="479.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="25.4274%" y="453" width="0.2137%" height="15" fill="rgb(239,221,27)" fg:x="119" fg:w="1"/><text x="25.6774%" y="463.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="25.4274%" y="437" width="0.2137%" height="15" fill="rgb(222,198,25)" fg:x="119" fg:w="1"/><text x="25.6774%" y="447.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc_size (1 samples, 0.21%)</title><rect x="25.4274%" y="421" width="0.2137%" height="15" fill="rgb(211,99,13)" fg:x="119" fg:w="1"/><text x="25.6774%" y="431.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="25.6410%" y="389" width="0.2137%" height="15" fill="rgb(232,111,31)" fg:x="120" fg:w="1"/><text x="25.8910%" y="399.50"></text></g><g><title>rust-gkat`smt::context::propagate (1 samples, 0.21%)</title><rect x="25.6410%" y="373" width="0.2137%" height="15" fill="rgb(245,82,37)" fg:x="120" fg:w="1"/><text x="25.8910%" y="383.50"></text></g><g><title>rust-gkat`smt::context::relevancy_lvl (1 samples, 0.21%)</title><rect x="25.6410%" y="357" width="0.2137%" height="15" fill="rgb(227,149,46)" fg:x="120" fg:w="1"/><text x="25.8910%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 3.63%)</title><rect x="22.4359%" y="533" width="3.6325%" height="15" fill="rgb(218,36,50)" fg:x="105" fg:w="17"/><text x="22.6859%" y="543.50">rust..</text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 3.63%)</title><rect x="22.4359%" y="517" width="3.6325%" height="15" fill="rgb(226,80,48)" fg:x="105" fg:w="17"/><text x="22.6859%" y="527.50">rust..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (2 samples, 0.43%)</title><rect x="25.6410%" y="501" width="0.4274%" height="15" fill="rgb(238,224,15)" fg:x="120" fg:w="2"/><text x="25.8910%" y="511.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (2 samples, 0.43%)</title><rect x="25.6410%" y="485" width="0.4274%" height="15" fill="rgb(241,136,10)" fg:x="120" fg:w="2"/><text x="25.8910%" y="495.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (2 samples, 0.43%)</title><rect x="25.6410%" y="469" width="0.4274%" height="15" fill="rgb(208,32,45)" fg:x="120" fg:w="2"/><text x="25.8910%" y="479.50"></text></g><g><title>rust-gkat`solver::check_sat (2 samples, 0.43%)</title><rect x="25.6410%" y="453" width="0.4274%" height="15" fill="rgb(207,135,9)" fg:x="120" fg:w="2"/><text x="25.8910%" y="463.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (2 samples, 0.43%)</title><rect x="25.6410%" y="437" width="0.4274%" height="15" fill="rgb(206,86,44)" fg:x="120" fg:w="2"/><text x="25.8910%" y="447.50"></text></g><g><title>rust-gkat`smt::context::check (2 samples, 0.43%)</title><rect x="25.6410%" y="421" width="0.4274%" height="15" fill="rgb(245,177,15)" fg:x="120" fg:w="2"/><text x="25.8910%" y="431.50"></text></g><g><title>rust-gkat`smt::context::search (2 samples, 0.43%)</title><rect x="25.6410%" y="405" width="0.4274%" height="15" fill="rgb(206,64,50)" fg:x="120" fg:w="2"/><text x="25.8910%" y="415.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="25.8547%" y="389" width="0.2137%" height="15" fill="rgb(234,36,40)" fg:x="121" fg:w="1"/><text x="26.1047%" y="399.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="25.8547%" y="373" width="0.2137%" height="15" fill="rgb(213,64,8)" fg:x="121" fg:w="1"/><text x="26.1047%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_integral[abi:ne180100]&lt;unsigned long&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="25.8547%" y="357" width="0.2137%" height="15" fill="rgb(210,75,36)" fg:x="121" fg:w="1"/><text x="26.1047%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::basic_string[abi:ne180100] (1 samples, 0.21%)</title><rect x="25.8547%" y="341" width="0.2137%" height="15" fill="rgb(229,88,21)" fg:x="121" fg:w="1"/><text x="26.1047%" y="351.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="26.0684%" y="517" width="0.2137%" height="15" fill="rgb(252,204,47)" fg:x="122" fg:w="1"/><text x="26.3184%" y="527.50"></text></g><g><title>rust-gkat`Z3_mk_and (1 samples, 0.21%)</title><rect x="26.2821%" y="485" width="0.2137%" height="15" fill="rgb(208,77,27)" fg:x="123" fg:w="1"/><text x="26.5321%" y="495.50"></text></g><g><title>rust-gkat`api::context::save_ast_trail (1 samples, 0.21%)</title><rect x="26.2821%" y="469" width="0.2137%" height="15" fill="rgb(221,76,26)" fg:x="123" fg:w="1"/><text x="26.5321%" y="479.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="26.9231%" y="421" width="0.2137%" height="15" fill="rgb(225,139,18)" fg:x="126" fg:w="1"/><text x="27.1731%" y="431.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="26.9231%" y="437" width="0.4274%" height="15" fill="rgb(230,137,11)" fg:x="126" fg:w="2"/><text x="27.1731%" y="447.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="27.1368%" y="421" width="0.2137%" height="15" fill="rgb(212,28,1)" fg:x="127" fg:w="1"/><text x="27.3868%" y="431.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="27.1368%" y="405" width="0.2137%" height="15" fill="rgb(248,164,17)" fg:x="127" fg:w="1"/><text x="27.3868%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="27.1368%" y="389" width="0.2137%" height="15" fill="rgb(222,171,42)" fg:x="127" fg:w="1"/><text x="27.3868%" y="399.50"></text></g><g><title>rust-gkat`act_cache::insert (2 samples, 0.43%)</title><rect x="27.3504%" y="437" width="0.4274%" height="15" fill="rgb(243,84,45)" fg:x="128" fg:w="2"/><text x="27.6004%" y="447.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="27.5641%" y="421" width="0.2137%" height="15" fill="rgb(252,49,23)" fg:x="129" fg:w="1"/><text x="27.8141%" y="431.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (1 samples, 0.21%)</title><rect x="27.5641%" y="405" width="0.2137%" height="15" fill="rgb(215,19,7)" fg:x="129" fg:w="1"/><text x="27.8141%" y="415.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (7 samples, 1.50%)</title><rect x="26.4957%" y="453" width="1.4957%" height="15" fill="rgb(238,81,41)" fg:x="124" fg:w="7"/><text x="26.7457%" y="463.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="27.7778%" y="437" width="0.2137%" height="15" fill="rgb(210,199,37)" fg:x="130" fg:w="1"/><text x="28.0278%" y="447.50"></text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="27.7778%" y="421" width="0.2137%" height="15" fill="rgb(244,192,49)" fg:x="130" fg:w="1"/><text x="28.0278%" y="431.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="27.7778%" y="405" width="0.2137%" height="15" fill="rgb(226,211,11)" fg:x="130" fg:w="1"/><text x="28.0278%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.21%)</title><rect x="27.7778%" y="389" width="0.2137%" height="15" fill="rgb(236,162,54)" fg:x="130" fg:w="1"/><text x="28.0278%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.21%)</title><rect x="27.7778%" y="373" width="0.2137%" height="15" fill="rgb(220,229,9)" fg:x="130" fg:w="1"/><text x="28.0278%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.21%)</title><rect x="27.7778%" y="357" width="0.2137%" height="15" fill="rgb(250,87,22)" fg:x="130" fg:w="1"/><text x="28.0278%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="27.7778%" y="341" width="0.2137%" height="15" fill="rgb(239,43,17)" fg:x="130" fg:w="1"/><text x="28.0278%" y="351.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="27.9915%" y="437" width="0.2137%" height="15" fill="rgb(231,177,25)" fg:x="131" fg:w="1"/><text x="28.2415%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="27.9915%" y="421" width="0.2137%" height="15" fill="rgb(219,179,1)" fg:x="131" fg:w="1"/><text x="28.2415%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.21%)</title><rect x="27.9915%" y="405" width="0.2137%" height="15" fill="rgb(238,219,53)" fg:x="131" fg:w="1"/><text x="28.2415%" y="415.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="28.2051%" y="421" width="0.2137%" height="15" fill="rgb(232,167,36)" fg:x="132" fg:w="1"/><text x="28.4551%" y="431.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="28.2051%" y="405" width="0.2137%" height="15" fill="rgb(244,19,51)" fg:x="132" fg:w="1"/><text x="28.4551%" y="415.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="28.4188%" y="421" width="0.2137%" height="15" fill="rgb(224,6,22)" fg:x="133" fg:w="1"/><text x="28.6688%" y="431.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="28.4188%" y="405" width="0.2137%" height="15" fill="rgb(224,145,5)" fg:x="133" fg:w="1"/><text x="28.6688%" y="415.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="28.4188%" y="389" width="0.2137%" height="15" fill="rgb(234,130,49)" fg:x="133" fg:w="1"/><text x="28.6688%" y="399.50"></text></g><g><title>rust-gkat`core_hashtable&lt;ptr_hash_entry&lt;char const&gt;, str_hash_proc, str_eq_proc&gt;::insert_if_not_there_core(char const*&amp;&amp;, ptr_hash_entry (1 samples, 0.21%)</title><rect x="28.4188%" y="373" width="0.2137%" height="15" fill="rgb(254,6,2)" fg:x="133" fg:w="1"/><text x="28.6688%" y="383.50"></text></g><g><title>rust-gkat`core_hashtable&lt;symbol_table&lt;int&gt;::hash_entry, symbol_table&lt;int&gt;::key_data_hash_proc, symbol_table&lt;int&gt;::key_data_eq_proc&gt;::find_core(symbol_table (1 samples, 0.21%)</title><rect x="28.6325%" y="421" width="0.2137%" height="15" fill="rgb(208,96,46)" fg:x="134" fg:w="1"/><text x="28.8825%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="28.8462%" y="389" width="0.2137%" height="15" fill="rgb(239,3,39)" fg:x="135" fg:w="1"/><text x="29.0962%" y="399.50"></text></g><g><title>rust-gkat`datatype::util::util (2 samples, 0.43%)</title><rect x="28.8462%" y="421" width="0.4274%" height="15" fill="rgb(233,210,1)" fg:x="135" fg:w="2"/><text x="29.0962%" y="431.50"></text></g><g><title>rust-gkat`memory::allocate (2 samples, 0.43%)</title><rect x="28.8462%" y="405" width="0.4274%" height="15" fill="rgb(244,137,37)" fg:x="135" fg:w="2"/><text x="29.0962%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="29.0598%" y="389" width="0.2137%" height="15" fill="rgb(240,136,2)" fg:x="136" fg:w="1"/><text x="29.3098%" y="399.50"></text></g><g><title>rust-gkat`fpa_rewriter::fpa_rewriter (1 samples, 0.21%)</title><rect x="29.2735%" y="421" width="0.2137%" height="15" fill="rgb(239,18,37)" fg:x="137" fg:w="1"/><text x="29.5235%" y="431.50"></text></g><g><title>rust-gkat`fpa_util::fpa_util (1 samples, 0.21%)</title><rect x="29.2735%" y="405" width="0.2137%" height="15" fill="rgb(218,185,22)" fg:x="137" fg:w="1"/><text x="29.5235%" y="415.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="29.2735%" y="389" width="0.2137%" height="15" fill="rgb(225,218,4)" fg:x="137" fg:w="1"/><text x="29.5235%" y="399.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="29.2735%" y="373" width="0.2137%" height="15" fill="rgb(230,182,32)" fg:x="137" fg:w="1"/><text x="29.5235%" y="383.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="29.2735%" y="357" width="0.2137%" height="15" fill="rgb(242,56,43)" fg:x="137" fg:w="1"/><text x="29.5235%" y="367.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="29.4872%" y="421" width="0.2137%" height="15" fill="rgb(233,99,24)" fg:x="138" fg:w="1"/><text x="29.7372%" y="431.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="29.4872%" y="405" width="0.2137%" height="15" fill="rgb(234,209,42)" fg:x="138" fg:w="1"/><text x="29.7372%" y="415.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="29.4872%" y="389" width="0.2137%" height="15" fill="rgb(227,7,12)" fg:x="138" fg:w="1"/><text x="29.7372%" y="399.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="29.4872%" y="373" width="0.2137%" height="15" fill="rgb(245,203,43)" fg:x="138" fg:w="1"/><text x="29.7372%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="29.4872%" y="357" width="0.2137%" height="15" fill="rgb(238,205,33)" fg:x="138" fg:w="1"/><text x="29.7372%" y="367.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="29.7009%" y="405" width="0.2137%" height="15" fill="rgb(231,56,7)" fg:x="139" fg:w="1"/><text x="29.9509%" y="415.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="29.7009%" y="389" width="0.2137%" height="15" fill="rgb(244,186,29)" fg:x="139" fg:w="1"/><text x="29.9509%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.21%)</title><rect x="29.7009%" y="373" width="0.2137%" height="15" fill="rgb(234,111,31)" fg:x="139" fg:w="1"/><text x="29.9509%" y="383.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (1 samples, 0.21%)</title><rect x="29.9145%" y="405" width="0.2137%" height="15" fill="rgb(241,149,10)" fg:x="140" fg:w="1"/><text x="30.1645%" y="415.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="29.9145%" y="389" width="0.2137%" height="15" fill="rgb(249,206,44)" fg:x="140" fg:w="1"/><text x="30.1645%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (11 samples, 2.35%)</title><rect x="27.9915%" y="453" width="2.3504%" height="15" fill="rgb(251,153,30)" fg:x="131" fg:w="11"/><text x="28.2415%" y="463.50">r..</text></g><g><title>rust-gkat`th_rewriter::imp::imp (10 samples, 2.14%)</title><rect x="28.2051%" y="437" width="2.1368%" height="15" fill="rgb(239,152,38)" fg:x="132" fg:w="10"/><text x="28.4551%" y="447.50">r..</text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (3 samples, 0.64%)</title><rect x="29.7009%" y="421" width="0.6410%" height="15" fill="rgb(249,139,47)" fg:x="139" fg:w="3"/><text x="29.9509%" y="431.50"></text></g><g><title>rust-gkat`seq_rewriter::op_cache::op_cache (1 samples, 0.21%)</title><rect x="30.1282%" y="405" width="0.2137%" height="15" fill="rgb(244,64,35)" fg:x="141" fg:w="1"/><text x="30.3782%" y="415.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="30.1282%" y="389" width="0.2137%" height="15" fill="rgb(216,46,15)" fg:x="141" fg:w="1"/><text x="30.3782%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="30.1282%" y="373" width="0.2137%" height="15" fill="rgb(250,74,19)" fg:x="141" fg:w="1"/><text x="30.3782%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.21%)</title><rect x="30.1282%" y="357" width="0.2137%" height="15" fill="rgb(249,42,33)" fg:x="141" fg:w="1"/><text x="30.3782%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.21%)</title><rect x="30.1282%" y="341" width="0.2137%" height="15" fill="rgb(242,149,17)" fg:x="141" fg:w="1"/><text x="30.3782%" y="351.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="30.3419%" y="437" width="0.2137%" height="15" fill="rgb(244,29,21)" fg:x="142" fg:w="1"/><text x="30.5919%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="30.3419%" y="421" width="0.2137%" height="15" fill="rgb(220,130,37)" fg:x="142" fg:w="1"/><text x="30.5919%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.21%)</title><rect x="30.5556%" y="421" width="0.2137%" height="15" fill="rgb(211,67,2)" fg:x="143" fg:w="1"/><text x="30.8056%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (21 samples, 4.49%)</title><rect x="26.4957%" y="485" width="4.4872%" height="15" fill="rgb(235,68,52)" fg:x="124" fg:w="21"/><text x="26.7457%" y="495.50">rust-..</text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (21 samples, 4.49%)</title><rect x="26.4957%" y="469" width="4.4872%" height="15" fill="rgb(246,142,3)" fg:x="124" fg:w="21"/><text x="26.7457%" y="479.50">rust-..</text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (3 samples, 0.64%)</title><rect x="30.3419%" y="453" width="0.6410%" height="15" fill="rgb(241,25,7)" fg:x="142" fg:w="3"/><text x="30.5919%" y="463.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (2 samples, 0.43%)</title><rect x="30.5556%" y="437" width="0.4274%" height="15" fill="rgb(242,119,39)" fg:x="143" fg:w="2"/><text x="30.8056%" y="447.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="30.7692%" y="421" width="0.2137%" height="15" fill="rgb(241,98,45)" fg:x="144" fg:w="1"/><text x="31.0192%" y="431.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="30.7692%" y="405" width="0.2137%" height="15" fill="rgb(254,28,30)" fg:x="144" fg:w="1"/><text x="31.0192%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="30.7692%" y="389" width="0.2137%" height="15" fill="rgb(241,142,54)" fg:x="144" fg:w="1"/><text x="31.0192%" y="399.50"></text></g><g><title>rust-gkat`smt::context::check_finalize (1 samples, 0.21%)</title><rect x="30.9829%" y="389" width="0.2137%" height="15" fill="rgb(222,85,15)" fg:x="145" fg:w="1"/><text x="31.2329%" y="399.50"></text></g><g><title>rust-gkat`gparams::imp::get_value (1 samples, 0.21%)</title><rect x="30.9829%" y="373" width="0.2137%" height="15" fill="rgb(210,85,47)" fg:x="145" fg:w="1"/><text x="31.2329%" y="383.50"></text></g><g><title>rust-gkat`gparams::imp::normalize(char const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.21%)</title><rect x="30.9829%" y="357" width="0.2137%" height="15" fill="rgb(224,206,25)" fg:x="145" fg:w="1"/><text x="31.2329%" y="367.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="31.1966%" y="309" width="0.2137%" height="15" fill="rgb(243,201,19)" fg:x="146" fg:w="1"/><text x="31.4466%" y="319.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="31.1966%" y="293" width="0.2137%" height="15" fill="rgb(236,59,4)" fg:x="146" fg:w="1"/><text x="31.4466%" y="303.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="31.1966%" y="277" width="0.2137%" height="15" fill="rgb(254,179,45)" fg:x="146" fg:w="1"/><text x="31.4466%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="31.4103%" y="293" width="0.2137%" height="15" fill="rgb(226,14,10)" fg:x="147" fg:w="1"/><text x="31.6603%" y="303.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="31.4103%" y="277" width="0.2137%" height="15" fill="rgb(244,27,41)" fg:x="147" fg:w="1"/><text x="31.6603%" y="287.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="31.4103%" y="261" width="0.2137%" height="15" fill="rgb(235,35,32)" fg:x="147" fg:w="1"/><text x="31.6603%" y="271.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (1 samples, 0.21%)</title><rect x="31.4103%" y="245" width="0.2137%" height="15" fill="rgb(218,68,31)" fg:x="147" fg:w="1"/><text x="31.6603%" y="255.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="31.6239%" y="277" width="0.2137%" height="15" fill="rgb(207,120,37)" fg:x="148" fg:w="1"/><text x="31.8739%" y="287.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="31.6239%" y="261" width="0.2137%" height="15" fill="rgb(227,98,0)" fg:x="148" fg:w="1"/><text x="31.8739%" y="271.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="31.6239%" y="245" width="0.2137%" height="15" fill="rgb(207,7,3)" fg:x="148" fg:w="1"/><text x="31.8739%" y="255.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="31.6239%" y="229" width="0.2137%" height="15" fill="rgb(206,98,19)" fg:x="148" fg:w="1"/><text x="31.8739%" y="239.50"></text></g><g><title>rust-gkat`ast_manager::check_args (1 samples, 0.21%)</title><rect x="31.6239%" y="213" width="0.2137%" height="15" fill="rgb(217,5,26)" fg:x="148" fg:w="1"/><text x="31.8739%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (4 samples, 0.85%)</title><rect x="31.1966%" y="341" width="0.8547%" height="15" fill="rgb(235,190,38)" fg:x="146" fg:w="4"/><text x="31.4466%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (4 samples, 0.85%)</title><rect x="31.1966%" y="325" width="0.8547%" height="15" fill="rgb(247,86,24)" fg:x="146" fg:w="4"/><text x="31.4466%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (3 samples, 0.64%)</title><rect x="31.4103%" y="309" width="0.6410%" height="15" fill="rgb(205,101,16)" fg:x="147" fg:w="3"/><text x="31.6603%" y="319.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="31.6239%" y="293" width="0.4274%" height="15" fill="rgb(246,168,33)" fg:x="148" fg:w="2"/><text x="31.8739%" y="303.50"></text></g><g><title>rust-gkat`act_cache::find (1 samples, 0.21%)</title><rect x="31.8376%" y="277" width="0.2137%" height="15" fill="rgb(231,114,1)" fg:x="149" fg:w="1"/><text x="32.0876%" y="287.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (5 samples, 1.07%)</title><rect x="31.1966%" y="389" width="1.0684%" height="15" fill="rgb(207,184,53)" fg:x="146" fg:w="5"/><text x="31.4466%" y="399.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (5 samples, 1.07%)</title><rect x="31.1966%" y="373" width="1.0684%" height="15" fill="rgb(224,95,51)" fg:x="146" fg:w="5"/><text x="31.4466%" y="383.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (5 samples, 1.07%)</title><rect x="31.1966%" y="357" width="1.0684%" height="15" fill="rgb(212,188,45)" fg:x="146" fg:w="5"/><text x="31.4466%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertion (1 samples, 0.21%)</title><rect x="32.0513%" y="341" width="0.2137%" height="15" fill="rgb(223,154,38)" fg:x="150" fg:w="1"/><text x="32.3013%" y="351.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (1 samples, 0.21%)</title><rect x="32.0513%" y="325" width="0.2137%" height="15" fill="rgb(251,22,52)" fg:x="150" fg:w="1"/><text x="32.3013%" y="335.50"></text></g><g><title>rust-gkat`smt::context::mk_or_cnstr (1 samples, 0.21%)</title><rect x="32.0513%" y="309" width="0.2137%" height="15" fill="rgb(229,209,22)" fg:x="150" fg:w="1"/><text x="32.3013%" y="319.50"></text></g><g><title>rust-gkat`smt::context::mk_clause (1 samples, 0.21%)</title><rect x="32.0513%" y="293" width="0.2137%" height="15" fill="rgb(234,138,34)" fg:x="150" fg:w="1"/><text x="32.3013%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 6.20%)</title><rect x="26.2821%" y="517" width="6.1966%" height="15" fill="rgb(212,95,11)" fg:x="123" fg:w="29"/><text x="26.5321%" y="527.50">rust-gka..</text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 6.20%)</title><rect x="26.2821%" y="501" width="6.1966%" height="15" fill="rgb(240,179,47)" fg:x="123" fg:w="29"/><text x="26.5321%" y="511.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (7 samples, 1.50%)</title><rect x="30.9829%" y="485" width="1.4957%" height="15" fill="rgb(240,163,11)" fg:x="145" fg:w="7"/><text x="31.2329%" y="495.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (7 samples, 1.50%)</title><rect x="30.9829%" y="469" width="1.4957%" height="15" fill="rgb(236,37,12)" fg:x="145" fg:w="7"/><text x="31.2329%" y="479.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (7 samples, 1.50%)</title><rect x="30.9829%" y="453" width="1.4957%" height="15" fill="rgb(232,164,16)" fg:x="145" fg:w="7"/><text x="31.2329%" y="463.50"></text></g><g><title>rust-gkat`solver::check_sat (7 samples, 1.50%)</title><rect x="30.9829%" y="437" width="1.4957%" height="15" fill="rgb(244,205,15)" fg:x="145" fg:w="7"/><text x="31.2329%" y="447.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (7 samples, 1.50%)</title><rect x="30.9829%" y="421" width="1.4957%" height="15" fill="rgb(223,117,47)" fg:x="145" fg:w="7"/><text x="31.2329%" y="431.50"></text></g><g><title>rust-gkat`smt::context::check (7 samples, 1.50%)</title><rect x="30.9829%" y="405" width="1.4957%" height="15" fill="rgb(244,107,35)" fg:x="145" fg:w="7"/><text x="31.2329%" y="415.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="32.2650%" y="389" width="0.2137%" height="15" fill="rgb(205,140,8)" fg:x="151" fg:w="1"/><text x="32.5150%" y="399.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="32.2650%" y="373" width="0.2137%" height="15" fill="rgb(228,84,46)" fg:x="151" fg:w="1"/><text x="32.5150%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="32.2650%" y="357" width="0.2137%" height="15" fill="rgb(254,188,9)" fg:x="151" fg:w="1"/><text x="32.5150%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_integral[abi:ne180100]&lt;unsigned long&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="32.2650%" y="341" width="0.2137%" height="15" fill="rgb(206,112,54)" fg:x="151" fg:w="1"/><text x="32.5150%" y="351.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::__pad_and_output[abi:ne180100]&lt;char, std::__1::char_traits&lt;char&gt;&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="32.2650%" y="325" width="0.2137%" height="15" fill="rgb(216,84,49)" fg:x="151" fg:w="1"/><text x="32.5150%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.21%)</title><rect x="32.2650%" y="309" width="0.2137%" height="15" fill="rgb(214,194,35)" fg:x="151" fg:w="1"/><text x="32.5150%" y="319.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="32.4786%" y="437" width="0.2137%" height="15" fill="rgb(249,28,3)" fg:x="152" fg:w="1"/><text x="32.7286%" y="447.50"></text></g><g><title>rust-gkat`act_cache::insert (1 samples, 0.21%)</title><rect x="32.4786%" y="421" width="0.2137%" height="15" fill="rgb(222,56,52)" fg:x="152" fg:w="1"/><text x="32.7286%" y="431.50"></text></g><g><title>rust-gkat`vector&lt;std::__1::pair&lt;expr*, unsigned int&gt;, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="32.4786%" y="405" width="0.2137%" height="15" fill="rgb(245,217,50)" fg:x="152" fg:w="1"/><text x="32.7286%" y="415.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="32.4786%" y="389" width="0.2137%" height="15" fill="rgb(213,201,24)" fg:x="152" fg:w="1"/><text x="32.7286%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="32.4786%" y="373" width="0.2137%" height="15" fill="rgb(248,116,28)" fg:x="152" fg:w="1"/><text x="32.7286%" y="383.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (1 samples, 0.21%)</title><rect x="32.6923%" y="405" width="0.2137%" height="15" fill="rgb(219,72,43)" fg:x="153" fg:w="1"/><text x="32.9423%" y="415.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="32.6923%" y="389" width="0.2137%" height="15" fill="rgb(209,138,14)" fg:x="153" fg:w="1"/><text x="32.9423%" y="399.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="32.6923%" y="373" width="0.2137%" height="15" fill="rgb(222,18,33)" fg:x="153" fg:w="1"/><text x="32.9423%" y="383.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="32.6923%" y="357" width="0.2137%" height="15" fill="rgb(213,199,7)" fg:x="153" fg:w="1"/><text x="32.9423%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="32.6923%" y="341" width="0.2137%" height="15" fill="rgb(250,110,10)" fg:x="153" fg:w="1"/><text x="32.9423%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.21%)</title><rect x="32.6923%" y="325" width="0.2137%" height="15" fill="rgb(248,123,6)" fg:x="153" fg:w="1"/><text x="32.9423%" y="335.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (1 samples, 0.21%)</title><rect x="32.9060%" y="405" width="0.2137%" height="15" fill="rgb(206,91,31)" fg:x="154" fg:w="1"/><text x="33.1560%" y="415.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="32.9060%" y="389" width="0.2137%" height="15" fill="rgb(211,154,13)" fg:x="154" fg:w="1"/><text x="33.1560%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="32.9060%" y="373" width="0.2137%" height="15" fill="rgb(225,148,7)" fg:x="154" fg:w="1"/><text x="33.1560%" y="383.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="33.1197%" y="405" width="0.2137%" height="15" fill="rgb(220,160,43)" fg:x="155" fg:w="1"/><text x="33.3697%" y="415.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="33.1197%" y="389" width="0.2137%" height="15" fill="rgb(213,52,39)" fg:x="155" fg:w="1"/><text x="33.3697%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (4 samples, 0.85%)</title><rect x="32.6923%" y="437" width="0.8547%" height="15" fill="rgb(243,137,7)" fg:x="153" fg:w="4"/><text x="32.9423%" y="447.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (4 samples, 0.85%)</title><rect x="32.6923%" y="421" width="0.8547%" height="15" fill="rgb(230,79,13)" fg:x="153" fg:w="4"/><text x="32.9423%" y="431.50"></text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (1 samples, 0.21%)</title><rect x="33.3333%" y="405" width="0.2137%" height="15" fill="rgb(247,105,23)" fg:x="156" fg:w="1"/><text x="33.5833%" y="415.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_rewriter (1 samples, 0.21%)</title><rect x="33.3333%" y="389" width="0.2137%" height="15" fill="rgb(223,179,41)" fg:x="156" fg:w="1"/><text x="33.5833%" y="399.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="33.3333%" y="373" width="0.2137%" height="15" fill="rgb(218,9,34)" fg:x="156" fg:w="1"/><text x="33.5833%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="33.3333%" y="357" width="0.2137%" height="15" fill="rgb(222,106,8)" fg:x="156" fg:w="1"/><text x="33.5833%" y="367.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="33.5470%" y="421" width="0.2137%" height="15" fill="rgb(211,220,0)" fg:x="157" fg:w="1"/><text x="33.7970%" y="431.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="33.5470%" y="405" width="0.2137%" height="15" fill="rgb(229,52,16)" fg:x="157" fg:w="1"/><text x="33.7970%" y="415.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="33.5470%" y="389" width="0.2137%" height="15" fill="rgb(212,155,18)" fg:x="157" fg:w="1"/><text x="33.7970%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="33.5470%" y="373" width="0.2137%" height="15" fill="rgb(242,21,14)" fg:x="157" fg:w="1"/><text x="33.7970%" y="383.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (7 samples, 1.50%)</title><rect x="32.4786%" y="469" width="1.4957%" height="15" fill="rgb(222,19,48)" fg:x="152" fg:w="7"/><text x="32.7286%" y="479.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (7 samples, 1.50%)</title><rect x="32.4786%" y="453" width="1.4957%" height="15" fill="rgb(232,45,27)" fg:x="152" fg:w="7"/><text x="32.7286%" y="463.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (2 samples, 0.43%)</title><rect x="33.5470%" y="437" width="0.4274%" height="15" fill="rgb(249,103,42)" fg:x="157" fg:w="2"/><text x="33.7970%" y="447.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (1 samples, 0.21%)</title><rect x="33.7607%" y="421" width="0.2137%" height="15" fill="rgb(246,81,33)" fg:x="158" fg:w="1"/><text x="34.0107%" y="431.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="33.7607%" y="405" width="0.2137%" height="15" fill="rgb(252,33,42)" fg:x="158" fg:w="1"/><text x="34.0107%" y="415.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="33.7607%" y="389" width="0.2137%" height="15" fill="rgb(209,212,41)" fg:x="158" fg:w="1"/><text x="34.0107%" y="399.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="33.7607%" y="373" width="0.2137%" height="15" fill="rgb(207,154,6)" fg:x="158" fg:w="1"/><text x="34.0107%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="33.7607%" y="357" width="0.2137%" height="15" fill="rgb(223,64,47)" fg:x="158" fg:w="1"/><text x="34.0107%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 1.71%)</title><rect x="32.4786%" y="501" width="1.7094%" height="15" fill="rgb(211,161,38)" fg:x="152" fg:w="8"/><text x="32.7286%" y="511.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.71%)</title><rect x="32.4786%" y="485" width="1.7094%" height="15" fill="rgb(219,138,40)" fg:x="152" fg:w="8"/><text x="32.7286%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="33.9744%" y="469" width="0.2137%" height="15" fill="rgb(241,228,46)" fg:x="159" fg:w="1"/><text x="34.2244%" y="479.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="33.9744%" y="453" width="0.2137%" height="15" fill="rgb(223,209,38)" fg:x="159" fg:w="1"/><text x="34.2244%" y="463.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="33.9744%" y="437" width="0.2137%" height="15" fill="rgb(236,164,45)" fg:x="159" fg:w="1"/><text x="34.2244%" y="447.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="33.9744%" y="421" width="0.2137%" height="15" fill="rgb(231,15,5)" fg:x="159" fg:w="1"/><text x="34.2244%" y="431.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="33.9744%" y="405" width="0.2137%" height="15" fill="rgb(252,35,15)" fg:x="159" fg:w="1"/><text x="34.2244%" y="415.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="33.9744%" y="389" width="0.2137%" height="15" fill="rgb(248,181,18)" fg:x="159" fg:w="1"/><text x="34.2244%" y="399.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="33.9744%" y="373" width="0.2137%" height="15" fill="rgb(233,39,42)" fg:x="159" fg:w="1"/><text x="34.2244%" y="383.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="33.9744%" y="357" width="0.2137%" height="15" fill="rgb(238,110,33)" fg:x="159" fg:w="1"/><text x="34.2244%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="33.9744%" y="341" width="0.2137%" height="15" fill="rgb(233,195,10)" fg:x="159" fg:w="1"/><text x="34.2244%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="33.9744%" y="325" width="0.2137%" height="15" fill="rgb(254,105,3)" fg:x="159" fg:w="1"/><text x="34.2244%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="33.9744%" y="309" width="0.2137%" height="15" fill="rgb(221,225,9)" fg:x="159" fg:w="1"/><text x="34.2244%" y="319.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="33.9744%" y="293" width="0.2137%" height="15" fill="rgb(224,227,45)" fg:x="159" fg:w="1"/><text x="34.2244%" y="303.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="33.9744%" y="277" width="0.2137%" height="15" fill="rgb(229,198,43)" fg:x="159" fg:w="1"/><text x="34.2244%" y="287.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="33.9744%" y="261" width="0.2137%" height="15" fill="rgb(206,209,35)" fg:x="159" fg:w="1"/><text x="34.2244%" y="271.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="33.9744%" y="245" width="0.2137%" height="15" fill="rgb(245,195,53)" fg:x="159" fg:w="1"/><text x="34.2244%" y="255.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="33.9744%" y="229" width="0.2137%" height="15" fill="rgb(240,92,26)" fg:x="159" fg:w="1"/><text x="34.2244%" y="239.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.21%)</title><rect x="34.1880%" y="501" width="0.2137%" height="15" fill="rgb(207,40,23)" fg:x="160" fg:w="1"/><text x="34.4380%" y="511.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.21%)</title><rect x="34.1880%" y="485" width="0.2137%" height="15" fill="rgb(223,111,35)" fg:x="160" fg:w="1"/><text x="34.4380%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="34.1880%" y="469" width="0.2137%" height="15" fill="rgb(229,147,28)" fg:x="160" fg:w="1"/><text x="34.4380%" y="479.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="34.1880%" y="453" width="0.2137%" height="15" fill="rgb(211,29,28)" fg:x="160" fg:w="1"/><text x="34.4380%" y="463.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="34.1880%" y="437" width="0.2137%" height="15" fill="rgb(228,72,33)" fg:x="160" fg:w="1"/><text x="34.4380%" y="447.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="34.1880%" y="421" width="0.2137%" height="15" fill="rgb(205,214,31)" fg:x="160" fg:w="1"/><text x="34.4380%" y="431.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="34.1880%" y="405" width="0.2137%" height="15" fill="rgb(224,111,15)" fg:x="160" fg:w="1"/><text x="34.4380%" y="415.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="34.1880%" y="389" width="0.2137%" height="15" fill="rgb(253,21,26)" fg:x="160" fg:w="1"/><text x="34.4380%" y="399.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="34.1880%" y="373" width="0.2137%" height="15" fill="rgb(245,139,43)" fg:x="160" fg:w="1"/><text x="34.4380%" y="383.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="34.1880%" y="357" width="0.2137%" height="15" fill="rgb(252,170,7)" fg:x="160" fg:w="1"/><text x="34.4380%" y="367.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="34.1880%" y="341" width="0.2137%" height="15" fill="rgb(231,118,14)" fg:x="160" fg:w="1"/><text x="34.4380%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (1 samples, 0.21%)</title><rect x="34.1880%" y="325" width="0.2137%" height="15" fill="rgb(238,83,0)" fg:x="160" fg:w="1"/><text x="34.4380%" y="335.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="34.1880%" y="309" width="0.2137%" height="15" fill="rgb(221,39,39)" fg:x="160" fg:w="1"/><text x="34.4380%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.21%)</title><rect x="34.4017%" y="421" width="0.2137%" height="15" fill="rgb(222,119,46)" fg:x="161" fg:w="1"/><text x="34.6517%" y="431.50"></text></g><g><title>rust-gkat`vector&lt;expr*, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="34.6154%" y="389" width="0.2137%" height="15" fill="rgb(222,165,49)" fg:x="162" fg:w="1"/><text x="34.8654%" y="399.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="34.6154%" y="373" width="0.2137%" height="15" fill="rgb(219,113,52)" fg:x="162" fg:w="1"/><text x="34.8654%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.21%)</title><rect x="34.6154%" y="357" width="0.2137%" height="15" fill="rgb(214,7,15)" fg:x="162" fg:w="1"/><text x="34.8654%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.21%)</title><rect x="34.6154%" y="341" width="0.2137%" height="15" fill="rgb(235,32,4)" fg:x="162" fg:w="1"/><text x="34.8654%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.21%)</title><rect x="34.6154%" y="325" width="0.2137%" height="15" fill="rgb(238,90,54)" fg:x="162" fg:w="1"/><text x="34.8654%" y="335.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="34.6154%" y="421" width="0.4274%" height="15" fill="rgb(213,208,19)" fg:x="162" fg:w="2"/><text x="34.8654%" y="431.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (2 samples, 0.43%)</title><rect x="34.6154%" y="405" width="0.4274%" height="15" fill="rgb(233,156,4)" fg:x="162" fg:w="2"/><text x="34.8654%" y="415.50"></text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="34.8291%" y="389" width="0.2137%" height="15" fill="rgb(207,194,5)" fg:x="163" fg:w="1"/><text x="35.0791%" y="399.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="34.8291%" y="373" width="0.2137%" height="15" fill="rgb(206,111,30)" fg:x="163" fg:w="1"/><text x="35.0791%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.21%)</title><rect x="34.8291%" y="357" width="0.2137%" height="15" fill="rgb(243,70,54)" fg:x="163" fg:w="1"/><text x="35.0791%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.21%)</title><rect x="34.8291%" y="341" width="0.2137%" height="15" fill="rgb(242,28,8)" fg:x="163" fg:w="1"/><text x="35.0791%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.21%)</title><rect x="34.8291%" y="325" width="0.2137%" height="15" fill="rgb(219,106,18)" fg:x="163" fg:w="1"/><text x="35.0791%" y="335.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::updt_local_params (1 samples, 0.21%)</title><rect x="35.0427%" y="389" width="0.2137%" height="15" fill="rgb(244,222,10)" fg:x="164" fg:w="1"/><text x="35.2927%" y="399.50"></text></g><g><title>rust-gkat`params_ref::~params_ref (1 samples, 0.21%)</title><rect x="35.0427%" y="373" width="0.2137%" height="15" fill="rgb(236,179,52)" fg:x="164" fg:w="1"/><text x="35.2927%" y="383.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="35.2564%" y="389" width="0.2137%" height="15" fill="rgb(213,23,39)" fg:x="165" fg:w="1"/><text x="35.5064%" y="399.50"></text></g><g><title>rust-gkat`poly_rewriter&lt;arith_rewriter_core&gt;::updt_params (1 samples, 0.21%)</title><rect x="35.2564%" y="373" width="0.2137%" height="15" fill="rgb(238,48,10)" fg:x="165" fg:w="1"/><text x="35.5064%" y="383.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="35.2564%" y="357" width="0.2137%" height="15" fill="rgb(251,196,23)" fg:x="165" fg:w="1"/><text x="35.5064%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="35.2564%" y="341" width="0.2137%" height="15" fill="rgb(250,152,24)" fg:x="165" fg:w="1"/><text x="35.5064%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="35.2564%" y="325" width="0.2137%" height="15" fill="rgb(209,150,17)" fg:x="165" fg:w="1"/><text x="35.5064%" y="335.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (3 samples, 0.64%)</title><rect x="35.0427%" y="421" width="0.6410%" height="15" fill="rgb(234,202,34)" fg:x="164" fg:w="3"/><text x="35.2927%" y="431.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (3 samples, 0.64%)</title><rect x="35.0427%" y="405" width="0.6410%" height="15" fill="rgb(253,148,53)" fg:x="164" fg:w="3"/><text x="35.2927%" y="415.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="35.4701%" y="389" width="0.2137%" height="15" fill="rgb(218,129,16)" fg:x="166" fg:w="1"/><text x="35.7201%" y="399.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="35.4701%" y="373" width="0.2137%" height="15" fill="rgb(216,85,19)" fg:x="166" fg:w="1"/><text x="35.7201%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="35.4701%" y="357" width="0.2137%" height="15" fill="rgb(235,228,7)" fg:x="166" fg:w="1"/><text x="35.7201%" y="367.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (7 samples, 1.50%)</title><rect x="34.4017%" y="453" width="1.4957%" height="15" fill="rgb(245,175,0)" fg:x="161" fg:w="7"/><text x="34.6517%" y="463.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (7 samples, 1.50%)</title><rect x="34.4017%" y="437" width="1.4957%" height="15" fill="rgb(208,168,36)" fg:x="161" fg:w="7"/><text x="34.6517%" y="447.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="35.6838%" y="421" width="0.2137%" height="15" fill="rgb(246,171,24)" fg:x="167" fg:w="1"/><text x="35.9338%" y="431.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="35.6838%" y="405" width="0.2137%" height="15" fill="rgb(215,142,24)" fg:x="167" fg:w="1"/><text x="35.9338%" y="415.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="35.6838%" y="389" width="0.2137%" height="15" fill="rgb(250,187,7)" fg:x="167" fg:w="1"/><text x="35.9338%" y="399.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="35.6838%" y="373" width="0.2137%" height="15" fill="rgb(228,66,33)" fg:x="167" fg:w="1"/><text x="35.9338%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="35.6838%" y="357" width="0.2137%" height="15" fill="rgb(234,215,21)" fg:x="167" fg:w="1"/><text x="35.9338%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 1.71%)</title><rect x="34.4017%" y="485" width="1.7094%" height="15" fill="rgb(222,191,20)" fg:x="161" fg:w="8"/><text x="34.6517%" y="495.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.71%)</title><rect x="34.4017%" y="469" width="1.7094%" height="15" fill="rgb(245,79,54)" fg:x="161" fg:w="8"/><text x="34.6517%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="35.8974%" y="453" width="0.2137%" height="15" fill="rgb(240,10,37)" fg:x="168" fg:w="1"/><text x="36.1474%" y="463.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="35.8974%" y="437" width="0.2137%" height="15" fill="rgb(214,192,32)" fg:x="168" fg:w="1"/><text x="36.1474%" y="447.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="35.8974%" y="421" width="0.2137%" height="15" fill="rgb(209,36,54)" fg:x="168" fg:w="1"/><text x="36.1474%" y="431.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="35.8974%" y="405" width="0.2137%" height="15" fill="rgb(220,10,11)" fg:x="168" fg:w="1"/><text x="36.1474%" y="415.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="35.8974%" y="389" width="0.2137%" height="15" fill="rgb(221,106,17)" fg:x="168" fg:w="1"/><text x="36.1474%" y="399.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="35.8974%" y="373" width="0.2137%" height="15" fill="rgb(251,142,44)" fg:x="168" fg:w="1"/><text x="36.1474%" y="383.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="35.8974%" y="357" width="0.2137%" height="15" fill="rgb(238,13,15)" fg:x="168" fg:w="1"/><text x="36.1474%" y="367.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="35.8974%" y="341" width="0.2137%" height="15" fill="rgb(208,107,27)" fg:x="168" fg:w="1"/><text x="36.1474%" y="351.50"></text></g><g><title>rust-gkat`smt::context::decide (1 samples, 0.21%)</title><rect x="35.8974%" y="325" width="0.2137%" height="15" fill="rgb(205,136,37)" fg:x="168" fg:w="1"/><text x="36.1474%" y="335.50"></text></g><g><title>rust-gkat`smt::context::push_scope (1 samples, 0.21%)</title><rect x="35.8974%" y="309" width="0.2137%" height="15" fill="rgb(250,205,27)" fg:x="168" fg:w="1"/><text x="36.1474%" y="319.50"></text></g><g><title>rust-gkat`smt::theory::push_scope_eh (1 samples, 0.21%)</title><rect x="35.8974%" y="293" width="0.2137%" height="15" fill="rgb(210,80,43)" fg:x="168" fg:w="1"/><text x="36.1474%" y="303.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="36.1111%" y="373" width="0.2137%" height="15" fill="rgb(247,160,36)" fg:x="169" fg:w="1"/><text x="36.3611%" y="383.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="36.1111%" y="437" width="0.4274%" height="15" fill="rgb(234,13,49)" fg:x="169" fg:w="2"/><text x="36.3611%" y="447.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="36.1111%" y="421" width="0.4274%" height="15" fill="rgb(234,122,0)" fg:x="169" fg:w="2"/><text x="36.3611%" y="431.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (2 samples, 0.43%)</title><rect x="36.1111%" y="405" width="0.4274%" height="15" fill="rgb(207,146,38)" fg:x="169" fg:w="2"/><text x="36.3611%" y="415.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (2 samples, 0.43%)</title><rect x="36.1111%" y="389" width="0.4274%" height="15" fill="rgb(207,177,25)" fg:x="169" fg:w="2"/><text x="36.3611%" y="399.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="36.3248%" y="373" width="0.2137%" height="15" fill="rgb(211,178,42)" fg:x="170" fg:w="1"/><text x="36.5748%" y="383.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="36.3248%" y="357" width="0.2137%" height="15" fill="rgb(230,69,54)" fg:x="170" fg:w="1"/><text x="36.5748%" y="367.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="36.3248%" y="341" width="0.2137%" height="15" fill="rgb(214,135,41)" fg:x="170" fg:w="1"/><text x="36.5748%" y="351.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="36.3248%" y="325" width="0.2137%" height="15" fill="rgb(237,67,25)" fg:x="170" fg:w="1"/><text x="36.5748%" y="335.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="36.3248%" y="309" width="0.2137%" height="15" fill="rgb(222,189,50)" fg:x="170" fg:w="1"/><text x="36.5748%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="36.3248%" y="293" width="0.2137%" height="15" fill="rgb(245,148,34)" fg:x="170" fg:w="1"/><text x="36.5748%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="36.3248%" y="277" width="0.2137%" height="15" fill="rgb(222,29,6)" fg:x="170" fg:w="1"/><text x="36.5748%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.21%)</title><rect x="36.3248%" y="261" width="0.2137%" height="15" fill="rgb(221,189,43)" fg:x="170" fg:w="1"/><text x="36.5748%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::commit (1 samples, 0.21%)</title><rect x="36.5385%" y="293" width="0.2137%" height="15" fill="rgb(207,36,27)" fg:x="171" fg:w="1"/><text x="36.7885%" y="303.50"></text></g><g><title>rust-gkat`macro_manager::mark_forbidden (1 samples, 0.21%)</title><rect x="36.5385%" y="277" width="0.2137%" height="15" fill="rgb(217,90,24)" fg:x="171" fg:w="1"/><text x="36.7885%" y="287.50"></text></g><g><title>rust-gkat`void for_each_expr_core&lt;macro_manager_ns::proc, obj_mark&lt;expr, bit_vector, default_t2uint&lt;expr&gt;&gt;, true, false&gt;(macro_manager_ns::proc&amp;, obj_mark&lt;expr, bit_vector, default_t2uint (1 samples, 0.21%)</title><rect x="36.5385%" y="261" width="0.2137%" height="15" fill="rgb(224,66,35)" fg:x="171" fg:w="1"/><text x="36.7885%" y="271.50"></text></g><g><title>rust-gkat`bit_vector::resize (1 samples, 0.21%)</title><rect x="36.5385%" y="245" width="0.2137%" height="15" fill="rgb(221,13,50)" fg:x="171" fg:w="1"/><text x="36.7885%" y="255.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="36.5385%" y="229" width="0.2137%" height="15" fill="rgb(236,68,49)" fg:x="171" fg:w="1"/><text x="36.7885%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="36.5385%" y="213" width="0.2137%" height="15" fill="rgb(229,146,28)" fg:x="171" fg:w="1"/><text x="36.7885%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="36.7521%" y="293" width="0.2137%" height="15" fill="rgb(225,31,38)" fg:x="172" fg:w="1"/><text x="37.0021%" y="303.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="36.7521%" y="277" width="0.2137%" height="15" fill="rgb(250,208,3)" fg:x="172" fg:w="1"/><text x="37.0021%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="36.7521%" y="261" width="0.2137%" height="15" fill="rgb(246,54,23)" fg:x="172" fg:w="1"/><text x="37.0021%" y="271.50"></text></g><g><title>rust-gkat`vector&lt;justified_expr, true, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="36.7521%" y="245" width="0.2137%" height="15" fill="rgb(243,76,11)" fg:x="172" fg:w="1"/><text x="37.0021%" y="255.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="36.7521%" y="229" width="0.2137%" height="15" fill="rgb(245,21,50)" fg:x="172" fg:w="1"/><text x="37.0021%" y="239.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 1.07%)</title><rect x="36.1111%" y="469" width="1.0684%" height="15" fill="rgb(228,9,43)" fg:x="169" fg:w="5"/><text x="36.3611%" y="479.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 1.07%)</title><rect x="36.1111%" y="453" width="1.0684%" height="15" fill="rgb(208,100,47)" fg:x="169" fg:w="5"/><text x="36.3611%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (3 samples, 0.64%)</title><rect x="36.5385%" y="437" width="0.6410%" height="15" fill="rgb(232,26,8)" fg:x="171" fg:w="3"/><text x="36.7885%" y="447.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (3 samples, 0.64%)</title><rect x="36.5385%" y="421" width="0.6410%" height="15" fill="rgb(216,166,38)" fg:x="171" fg:w="3"/><text x="36.7885%" y="431.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (3 samples, 0.64%)</title><rect x="36.5385%" y="405" width="0.6410%" height="15" fill="rgb(251,202,51)" fg:x="171" fg:w="3"/><text x="36.7885%" y="415.50"></text></g><g><title>rust-gkat`solver::check_sat (3 samples, 0.64%)</title><rect x="36.5385%" y="389" width="0.6410%" height="15" fill="rgb(254,216,34)" fg:x="171" fg:w="3"/><text x="36.7885%" y="399.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (3 samples, 0.64%)</title><rect x="36.5385%" y="373" width="0.6410%" height="15" fill="rgb(251,32,27)" fg:x="171" fg:w="3"/><text x="36.7885%" y="383.50"></text></g><g><title>rust-gkat`smt::context::check (3 samples, 0.64%)</title><rect x="36.5385%" y="357" width="0.6410%" height="15" fill="rgb(208,127,28)" fg:x="171" fg:w="3"/><text x="36.7885%" y="367.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (3 samples, 0.64%)</title><rect x="36.5385%" y="341" width="0.6410%" height="15" fill="rgb(224,137,22)" fg:x="171" fg:w="3"/><text x="36.7885%" y="351.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (3 samples, 0.64%)</title><rect x="36.5385%" y="325" width="0.6410%" height="15" fill="rgb(254,70,32)" fg:x="171" fg:w="3"/><text x="36.7885%" y="335.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (3 samples, 0.64%)</title><rect x="36.5385%" y="309" width="0.6410%" height="15" fill="rgb(229,75,37)" fg:x="171" fg:w="3"/><text x="36.7885%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertion (1 samples, 0.21%)</title><rect x="36.9658%" y="293" width="0.2137%" height="15" fill="rgb(252,64,23)" fg:x="173" fg:w="1"/><text x="37.2158%" y="303.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.21%)</title><rect x="37.1795%" y="453" width="0.2137%" height="15" fill="rgb(232,162,48)" fg:x="174" fg:w="1"/><text x="37.4295%" y="463.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.21%)</title><rect x="37.1795%" y="437" width="0.2137%" height="15" fill="rgb(246,160,12)" fg:x="174" fg:w="1"/><text x="37.4295%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="37.1795%" y="421" width="0.2137%" height="15" fill="rgb(247,166,0)" fg:x="174" fg:w="1"/><text x="37.4295%" y="431.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="37.1795%" y="405" width="0.2137%" height="15" fill="rgb(249,219,21)" fg:x="174" fg:w="1"/><text x="37.4295%" y="415.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="37.1795%" y="389" width="0.2137%" height="15" fill="rgb(205,209,3)" fg:x="174" fg:w="1"/><text x="37.4295%" y="399.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="37.1795%" y="373" width="0.2137%" height="15" fill="rgb(243,44,1)" fg:x="174" fg:w="1"/><text x="37.4295%" y="383.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="37.1795%" y="357" width="0.2137%" height="15" fill="rgb(206,159,16)" fg:x="174" fg:w="1"/><text x="37.4295%" y="367.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="37.1795%" y="341" width="0.2137%" height="15" fill="rgb(244,77,30)" fg:x="174" fg:w="1"/><text x="37.4295%" y="351.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="37.1795%" y="325" width="0.2137%" height="15" fill="rgb(218,69,12)" fg:x="174" fg:w="1"/><text x="37.4295%" y="335.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="37.1795%" y="309" width="0.2137%" height="15" fill="rgb(212,87,7)" fg:x="174" fg:w="1"/><text x="37.4295%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="37.1795%" y="293" width="0.2137%" height="15" fill="rgb(245,114,25)" fg:x="174" fg:w="1"/><text x="37.4295%" y="303.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="37.1795%" y="277" width="0.2137%" height="15" fill="rgb(210,61,42)" fg:x="174" fg:w="1"/><text x="37.4295%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="37.1795%" y="261" width="0.2137%" height="15" fill="rgb(211,52,33)" fg:x="174" fg:w="1"/><text x="37.4295%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="37.1795%" y="245" width="0.2137%" height="15" fill="rgb(234,58,33)" fg:x="174" fg:w="1"/><text x="37.4295%" y="255.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="37.1795%" y="229" width="0.2137%" height="15" fill="rgb(220,115,36)" fg:x="174" fg:w="1"/><text x="37.4295%" y="239.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="37.1795%" y="213" width="0.2137%" height="15" fill="rgb(243,153,54)" fg:x="174" fg:w="1"/><text x="37.4295%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.21%)</title><rect x="37.3932%" y="437" width="0.2137%" height="15" fill="rgb(251,47,18)" fg:x="175" fg:w="1"/><text x="37.6432%" y="447.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.21%)</title><rect x="37.3932%" y="421" width="0.2137%" height="15" fill="rgb(242,102,42)" fg:x="175" fg:w="1"/><text x="37.6432%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="37.3932%" y="405" width="0.2137%" height="15" fill="rgb(234,31,38)" fg:x="175" fg:w="1"/><text x="37.6432%" y="415.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="37.3932%" y="389" width="0.2137%" height="15" fill="rgb(221,117,51)" fg:x="175" fg:w="1"/><text x="37.6432%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="37.3932%" y="373" width="0.2137%" height="15" fill="rgb(212,20,18)" fg:x="175" fg:w="1"/><text x="37.6432%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="37.3932%" y="357" width="0.2137%" height="15" fill="rgb(245,133,36)" fg:x="175" fg:w="1"/><text x="37.6432%" y="367.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="37.3932%" y="341" width="0.2137%" height="15" fill="rgb(212,6,19)" fg:x="175" fg:w="1"/><text x="37.6432%" y="351.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.21%)</title><rect x="37.6068%" y="437" width="0.2137%" height="15" fill="rgb(218,1,36)" fg:x="176" fg:w="1"/><text x="37.8568%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="37.6068%" y="421" width="0.2137%" height="15" fill="rgb(246,84,54)" fg:x="176" fg:w="1"/><text x="37.8568%" y="431.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="37.6068%" y="405" width="0.2137%" height="15" fill="rgb(242,110,6)" fg:x="176" fg:w="1"/><text x="37.8568%" y="415.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="37.6068%" y="389" width="0.2137%" height="15" fill="rgb(214,47,5)" fg:x="176" fg:w="1"/><text x="37.8568%" y="399.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="37.6068%" y="373" width="0.2137%" height="15" fill="rgb(218,159,25)" fg:x="176" fg:w="1"/><text x="37.8568%" y="383.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="37.6068%" y="357" width="0.2137%" height="15" fill="rgb(215,211,28)" fg:x="176" fg:w="1"/><text x="37.8568%" y="367.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="37.6068%" y="341" width="0.2137%" height="15" fill="rgb(238,59,32)" fg:x="176" fg:w="1"/><text x="37.8568%" y="351.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="37.6068%" y="325" width="0.2137%" height="15" fill="rgb(226,82,3)" fg:x="176" fg:w="1"/><text x="37.8568%" y="335.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="37.6068%" y="309" width="0.2137%" height="15" fill="rgb(240,164,32)" fg:x="176" fg:w="1"/><text x="37.8568%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="37.6068%" y="293" width="0.2137%" height="15" fill="rgb(232,46,7)" fg:x="176" fg:w="1"/><text x="37.8568%" y="303.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="37.6068%" y="277" width="0.2137%" height="15" fill="rgb(229,129,53)" fg:x="176" fg:w="1"/><text x="37.8568%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="37.6068%" y="261" width="0.2137%" height="15" fill="rgb(234,188,29)" fg:x="176" fg:w="1"/><text x="37.8568%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="37.6068%" y="245" width="0.2137%" height="15" fill="rgb(246,141,4)" fg:x="176" fg:w="1"/><text x="37.8568%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="37.6068%" y="229" width="0.2137%" height="15" fill="rgb(229,23,39)" fg:x="176" fg:w="1"/><text x="37.8568%" y="239.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="37.6068%" y="213" width="0.2137%" height="15" fill="rgb(206,12,3)" fg:x="176" fg:w="1"/><text x="37.8568%" y="223.50"></text></g><g><title>rust-gkat`act_cache::insert (1 samples, 0.21%)</title><rect x="37.6068%" y="197" width="0.2137%" height="15" fill="rgb(252,226,20)" fg:x="176" fg:w="1"/><text x="37.8568%" y="207.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="37.6068%" y="181" width="0.2137%" height="15" fill="rgb(216,123,35)" fg:x="176" fg:w="1"/><text x="37.8568%" y="191.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="38.0342%" y="357" width="0.2137%" height="15" fill="rgb(212,68,40)" fg:x="178" fg:w="1"/><text x="38.2842%" y="367.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="38.0342%" y="341" width="0.2137%" height="15" fill="rgb(254,125,32)" fg:x="178" fg:w="1"/><text x="38.2842%" y="351.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (1 samples, 0.21%)</title><rect x="38.0342%" y="325" width="0.2137%" height="15" fill="rgb(253,97,22)" fg:x="178" fg:w="1"/><text x="38.2842%" y="335.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="38.0342%" y="309" width="0.2137%" height="15" fill="rgb(241,101,14)" fg:x="178" fg:w="1"/><text x="38.2842%" y="319.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="38.0342%" y="293" width="0.2137%" height="15" fill="rgb(238,103,29)" fg:x="178" fg:w="1"/><text x="38.2842%" y="303.50"></text></g><g><title>rust-gkat`DYLD-STUB$$std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="38.0342%" y="277" width="0.2137%" height="15" fill="rgb(233,195,47)" fg:x="178" fg:w="1"/><text x="38.2842%" y="287.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="38.0342%" y="389" width="0.4274%" height="15" fill="rgb(246,218,30)" fg:x="178" fg:w="2"/><text x="38.2842%" y="399.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="38.0342%" y="373" width="0.4274%" height="15" fill="rgb(219,145,47)" fg:x="178" fg:w="2"/><text x="38.2842%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="38.2479%" y="357" width="0.2137%" height="15" fill="rgb(243,12,26)" fg:x="179" fg:w="1"/><text x="38.4979%" y="367.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="38.2479%" y="341" width="0.2137%" height="15" fill="rgb(214,87,16)" fg:x="179" fg:w="1"/><text x="38.4979%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.21%)</title><rect x="38.2479%" y="325" width="0.2137%" height="15" fill="rgb(208,99,42)" fg:x="179" fg:w="1"/><text x="38.4979%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.21%)</title><rect x="38.2479%" y="309" width="0.2137%" height="15" fill="rgb(253,99,2)" fg:x="179" fg:w="1"/><text x="38.4979%" y="319.50"></text></g><g><title>rust-gkat`smt::context::check_preamble (1 samples, 0.21%)</title><rect x="38.4615%" y="293" width="0.2137%" height="15" fill="rgb(220,168,23)" fg:x="180" fg:w="1"/><text x="38.7115%" y="303.50"></text></g><g><title>rust-gkat`smt::context::pop_scope_core (1 samples, 0.21%)</title><rect x="38.4615%" y="277" width="0.2137%" height="15" fill="rgb(242,38,24)" fg:x="180" fg:w="1"/><text x="38.7115%" y="287.50"></text></g><g><title>rust-gkat`smt::relevancy_propagator_imp::pop (1 samples, 0.21%)</title><rect x="38.4615%" y="261" width="0.2137%" height="15" fill="rgb(225,182,9)" fg:x="180" fg:w="1"/><text x="38.7115%" y="271.50"></text></g><g><title>rust-gkat`smt::relevancy_propagator_imp::undo_trail (1 samples, 0.21%)</title><rect x="38.4615%" y="245" width="0.2137%" height="15" fill="rgb(243,178,37)" fg:x="180" fg:w="1"/><text x="38.7115%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 1.07%)</title><rect x="37.8205%" y="421" width="1.0684%" height="15" fill="rgb(232,139,19)" fg:x="177" fg:w="5"/><text x="38.0705%" y="431.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 1.07%)</title><rect x="37.8205%" y="405" width="1.0684%" height="15" fill="rgb(225,201,24)" fg:x="177" fg:w="5"/><text x="38.0705%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (2 samples, 0.43%)</title><rect x="38.4615%" y="389" width="0.4274%" height="15" fill="rgb(221,47,46)" fg:x="180" fg:w="2"/><text x="38.7115%" y="399.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (2 samples, 0.43%)</title><rect x="38.4615%" y="373" width="0.4274%" height="15" fill="rgb(249,23,13)" fg:x="180" fg:w="2"/><text x="38.7115%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (2 samples, 0.43%)</title><rect x="38.4615%" y="357" width="0.4274%" height="15" fill="rgb(219,9,5)" fg:x="180" fg:w="2"/><text x="38.7115%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (2 samples, 0.43%)</title><rect x="38.4615%" y="341" width="0.4274%" height="15" fill="rgb(254,171,16)" fg:x="180" fg:w="2"/><text x="38.7115%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (2 samples, 0.43%)</title><rect x="38.4615%" y="325" width="0.4274%" height="15" fill="rgb(230,171,20)" fg:x="180" fg:w="2"/><text x="38.7115%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (2 samples, 0.43%)</title><rect x="38.4615%" y="309" width="0.4274%" height="15" fill="rgb(210,71,41)" fg:x="180" fg:w="2"/><text x="38.7115%" y="319.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="38.6752%" y="293" width="0.2137%" height="15" fill="rgb(206,173,20)" fg:x="181" fg:w="1"/><text x="38.9252%" y="303.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="38.6752%" y="277" width="0.2137%" height="15" fill="rgb(233,88,34)" fg:x="181" fg:w="1"/><text x="38.9252%" y="287.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="38.6752%" y="261" width="0.2137%" height="15" fill="rgb(223,209,46)" fg:x="181" fg:w="1"/><text x="38.9252%" y="271.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_floating_point[abi:ne180100]&lt;double&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="38.6752%" y="245" width="0.2137%" height="15" fill="rgb(250,43,18)" fg:x="181" fg:w="1"/><text x="38.9252%" y="255.50"></text></g><g><title>libsystem_c.dylib`snprintf_l (1 samples, 0.21%)</title><rect x="38.6752%" y="229" width="0.2137%" height="15" fill="rgb(208,13,10)" fg:x="181" fg:w="1"/><text x="38.9252%" y="239.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.21%)</title><rect x="38.6752%" y="213" width="0.2137%" height="15" fill="rgb(212,200,36)" fg:x="181" fg:w="1"/><text x="38.9252%" y="223.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.21%)</title><rect x="38.8889%" y="421" width="0.2137%" height="15" fill="rgb(225,90,30)" fg:x="182" fg:w="1"/><text x="39.1389%" y="431.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.21%)</title><rect x="38.8889%" y="405" width="0.2137%" height="15" fill="rgb(236,182,39)" fg:x="182" fg:w="1"/><text x="39.1389%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="38.8889%" y="389" width="0.2137%" height="15" fill="rgb(212,144,35)" fg:x="182" fg:w="1"/><text x="39.1389%" y="399.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="38.8889%" y="373" width="0.2137%" height="15" fill="rgb(228,63,44)" fg:x="182" fg:w="1"/><text x="39.1389%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="38.8889%" y="357" width="0.2137%" height="15" fill="rgb(228,109,6)" fg:x="182" fg:w="1"/><text x="39.1389%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="38.8889%" y="341" width="0.2137%" height="15" fill="rgb(238,117,24)" fg:x="182" fg:w="1"/><text x="39.1389%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="38.8889%" y="325" width="0.2137%" height="15" fill="rgb(242,26,26)" fg:x="182" fg:w="1"/><text x="39.1389%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="38.8889%" y="309" width="0.2137%" height="15" fill="rgb(221,92,48)" fg:x="182" fg:w="1"/><text x="39.1389%" y="319.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="38.8889%" y="293" width="0.2137%" height="15" fill="rgb(209,209,32)" fg:x="182" fg:w="1"/><text x="39.1389%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="38.8889%" y="277" width="0.2137%" height="15" fill="rgb(221,70,22)" fg:x="182" fg:w="1"/><text x="39.1389%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="38.8889%" y="261" width="0.2137%" height="15" fill="rgb(248,145,5)" fg:x="182" fg:w="1"/><text x="39.1389%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="38.8889%" y="245" width="0.2137%" height="15" fill="rgb(226,116,26)" fg:x="182" fg:w="1"/><text x="39.1389%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="38.8889%" y="229" width="0.2137%" height="15" fill="rgb(244,5,17)" fg:x="182" fg:w="1"/><text x="39.1389%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="38.8889%" y="213" width="0.2137%" height="15" fill="rgb(252,159,33)" fg:x="182" fg:w="1"/><text x="39.1389%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="38.8889%" y="197" width="0.2137%" height="15" fill="rgb(206,71,0)" fg:x="182" fg:w="1"/><text x="39.1389%" y="207.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="38.8889%" y="181" width="0.2137%" height="15" fill="rgb(233,118,54)" fg:x="182" fg:w="1"/><text x="39.1389%" y="191.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="38.8889%" y="165" width="0.2137%" height="15" fill="rgb(234,83,48)" fg:x="182" fg:w="1"/><text x="39.1389%" y="175.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="38.8889%" y="149" width="0.2137%" height="15" fill="rgb(228,3,54)" fg:x="182" fg:w="1"/><text x="39.1389%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.21%)</title><rect x="39.1026%" y="421" width="0.2137%" height="15" fill="rgb(226,155,13)" fg:x="183" fg:w="1"/><text x="39.3526%" y="431.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.21%)</title><rect x="39.1026%" y="405" width="0.2137%" height="15" fill="rgb(241,28,37)" fg:x="183" fg:w="1"/><text x="39.3526%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="39.1026%" y="389" width="0.2137%" height="15" fill="rgb(233,93,10)" fg:x="183" fg:w="1"/><text x="39.3526%" y="399.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="39.1026%" y="373" width="0.2137%" height="15" fill="rgb(225,113,19)" fg:x="183" fg:w="1"/><text x="39.3526%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="39.1026%" y="357" width="0.2137%" height="15" fill="rgb(241,2,18)" fg:x="183" fg:w="1"/><text x="39.3526%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="39.1026%" y="341" width="0.2137%" height="15" fill="rgb(228,207,21)" fg:x="183" fg:w="1"/><text x="39.3526%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="39.1026%" y="325" width="0.2137%" height="15" fill="rgb(213,211,35)" fg:x="183" fg:w="1"/><text x="39.3526%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="39.1026%" y="309" width="0.2137%" height="15" fill="rgb(209,83,10)" fg:x="183" fg:w="1"/><text x="39.3526%" y="319.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="39.1026%" y="293" width="0.2137%" height="15" fill="rgb(209,164,1)" fg:x="183" fg:w="1"/><text x="39.3526%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="39.1026%" y="277" width="0.2137%" height="15" fill="rgb(213,184,43)" fg:x="183" fg:w="1"/><text x="39.3526%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="39.1026%" y="261" width="0.2137%" height="15" fill="rgb(231,61,34)" fg:x="183" fg:w="1"/><text x="39.3526%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="39.1026%" y="245" width="0.2137%" height="15" fill="rgb(235,75,3)" fg:x="183" fg:w="1"/><text x="39.3526%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="39.1026%" y="229" width="0.2137%" height="15" fill="rgb(220,106,47)" fg:x="183" fg:w="1"/><text x="39.3526%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::flatten_clauses (1 samples, 0.21%)</title><rect x="39.1026%" y="213" width="0.2137%" height="15" fill="rgb(210,196,33)" fg:x="183" fg:w="1"/><text x="39.3526%" y="223.50"></text></g><g><title>rust-gkat`vector&lt;justified_expr, true, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="39.1026%" y="197" width="0.2137%" height="15" fill="rgb(229,154,42)" fg:x="183" fg:w="1"/><text x="39.3526%" y="207.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="39.1026%" y="181" width="0.2137%" height="15" fill="rgb(228,114,26)" fg:x="183" fg:w="1"/><text x="39.3526%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.21%)</title><rect x="39.1026%" y="165" width="0.2137%" height="15" fill="rgb(208,144,1)" fg:x="183" fg:w="1"/><text x="39.3526%" y="175.50"></text></g><g><title>rust-gkat`smt::context::check_preamble (1 samples, 0.21%)</title><rect x="39.3162%" y="277" width="0.2137%" height="15" fill="rgb(239,112,37)" fg:x="184" fg:w="1"/><text x="39.5662%" y="287.50"></text></g><g><title>rust-gkat`smt::context::pop_scope_core (1 samples, 0.21%)</title><rect x="39.3162%" y="261" width="0.2137%" height="15" fill="rgb(210,96,50)" fg:x="184" fg:w="1"/><text x="39.5662%" y="271.50"></text></g><g><title>rust-gkat`region::pop_scope (1 samples, 0.21%)</title><rect x="39.3162%" y="245" width="0.2137%" height="15" fill="rgb(222,178,2)" fg:x="184" fg:w="1"/><text x="39.5662%" y="255.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.43%)</title><rect x="39.3162%" y="405" width="0.4274%" height="15" fill="rgb(226,74,18)" fg:x="184" fg:w="2"/><text x="39.5662%" y="415.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.43%)</title><rect x="39.3162%" y="389" width="0.4274%" height="15" fill="rgb(225,67,54)" fg:x="184" fg:w="2"/><text x="39.5662%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (2 samples, 0.43%)</title><rect x="39.3162%" y="373" width="0.4274%" height="15" fill="rgb(251,92,32)" fg:x="184" fg:w="2"/><text x="39.5662%" y="383.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (2 samples, 0.43%)</title><rect x="39.3162%" y="357" width="0.4274%" height="15" fill="rgb(228,149,22)" fg:x="184" fg:w="2"/><text x="39.5662%" y="367.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (2 samples, 0.43%)</title><rect x="39.3162%" y="341" width="0.4274%" height="15" fill="rgb(243,54,13)" fg:x="184" fg:w="2"/><text x="39.5662%" y="351.50"></text></g><g><title>rust-gkat`solver::check_sat (2 samples, 0.43%)</title><rect x="39.3162%" y="325" width="0.4274%" height="15" fill="rgb(243,180,28)" fg:x="184" fg:w="2"/><text x="39.5662%" y="335.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (2 samples, 0.43%)</title><rect x="39.3162%" y="309" width="0.4274%" height="15" fill="rgb(208,167,24)" fg:x="184" fg:w="2"/><text x="39.5662%" y="319.50"></text></g><g><title>rust-gkat`smt::context::check (2 samples, 0.43%)</title><rect x="39.3162%" y="293" width="0.4274%" height="15" fill="rgb(245,73,45)" fg:x="184" fg:w="2"/><text x="39.5662%" y="303.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="39.5299%" y="277" width="0.2137%" height="15" fill="rgb(237,203,48)" fg:x="185" fg:w="1"/><text x="39.7799%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="39.5299%" y="261" width="0.2137%" height="15" fill="rgb(211,197,16)" fg:x="185" fg:w="1"/><text x="39.7799%" y="271.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="39.5299%" y="245" width="0.2137%" height="15" fill="rgb(243,99,51)" fg:x="185" fg:w="1"/><text x="39.7799%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="39.5299%" y="229" width="0.2137%" height="15" fill="rgb(215,123,29)" fg:x="185" fg:w="1"/><text x="39.7799%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="39.5299%" y="213" width="0.2137%" height="15" fill="rgb(239,186,37)" fg:x="185" fg:w="1"/><text x="39.7799%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="39.5299%" y="197" width="0.2137%" height="15" fill="rgb(252,136,39)" fg:x="185" fg:w="1"/><text x="39.7799%" y="207.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="39.5299%" y="181" width="0.2137%" height="15" fill="rgb(223,213,32)" fg:x="185" fg:w="1"/><text x="39.7799%" y="191.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="39.5299%" y="165" width="0.2137%" height="15" fill="rgb(233,115,5)" fg:x="185" fg:w="1"/><text x="39.7799%" y="175.50"></text></g><g><title>rust-gkat`smt::context::check_preamble (1 samples, 0.21%)</title><rect x="39.7436%" y="293" width="0.2137%" height="15" fill="rgb(207,226,44)" fg:x="186" fg:w="1"/><text x="39.9936%" y="303.50"></text></g><g><title>rust-gkat`smt::context::pop_scope_core (1 samples, 0.21%)</title><rect x="39.7436%" y="277" width="0.2137%" height="15" fill="rgb(208,126,0)" fg:x="186" fg:w="1"/><text x="39.9936%" y="287.50"></text></g><g><title>rust-gkat`th_rewriter::set_substitution (1 samples, 0.21%)</title><rect x="39.7436%" y="261" width="0.2137%" height="15" fill="rgb(244,66,21)" fg:x="186" fg:w="1"/><text x="39.9936%" y="271.50"></text></g><g><title>rust-gkat`rewriter_core::reset (1 samples, 0.21%)</title><rect x="39.7436%" y="245" width="0.2137%" height="15" fill="rgb(222,97,12)" fg:x="186" fg:w="1"/><text x="39.9936%" y="255.50"></text></g><g><title>rust-gkat`act_cache::reset (1 samples, 0.21%)</title><rect x="39.7436%" y="229" width="0.2137%" height="15" fill="rgb(219,213,19)" fg:x="186" fg:w="1"/><text x="39.9936%" y="239.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="39.7436%" y="213" width="0.2137%" height="15" fill="rgb(252,169,30)" fg:x="186" fg:w="1"/><text x="39.9936%" y="223.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="39.9573%" y="293" width="0.2137%" height="15" fill="rgb(206,32,51)" fg:x="187" fg:w="1"/><text x="40.2073%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="39.9573%" y="277" width="0.2137%" height="15" fill="rgb(250,172,42)" fg:x="187" fg:w="1"/><text x="40.2073%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="39.9573%" y="261" width="0.2137%" height="15" fill="rgb(209,34,43)" fg:x="187" fg:w="1"/><text x="40.2073%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="39.9573%" y="245" width="0.2137%" height="15" fill="rgb(223,11,35)" fg:x="187" fg:w="1"/><text x="40.2073%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="39.9573%" y="229" width="0.2137%" height="15" fill="rgb(251,219,26)" fg:x="187" fg:w="1"/><text x="40.2073%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (1 samples, 0.21%)</title><rect x="39.9573%" y="213" width="0.2137%" height="15" fill="rgb(231,119,3)" fg:x="187" fg:w="1"/><text x="40.2073%" y="223.50"></text></g><g><title>rust-gkat`nnf::imp::operator()(expr*, ref_vector&lt;expr, ast_manager&gt;&amp;, ref_vector&lt;app, ast_manager&gt;&amp;, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="39.9573%" y="197" width="0.2137%" height="15" fill="rgb(216,97,11)" fg:x="187" fg:w="1"/><text x="40.2073%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.64%)</title><rect x="39.7436%" y="405" width="0.6410%" height="15" fill="rgb(223,59,9)" fg:x="186" fg:w="3"/><text x="39.9936%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (3 samples, 0.64%)</title><rect x="39.7436%" y="389" width="0.6410%" height="15" fill="rgb(233,93,31)" fg:x="186" fg:w="3"/><text x="39.9936%" y="399.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (3 samples, 0.64%)</title><rect x="39.7436%" y="373" width="0.6410%" height="15" fill="rgb(239,81,33)" fg:x="186" fg:w="3"/><text x="39.9936%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (3 samples, 0.64%)</title><rect x="39.7436%" y="357" width="0.6410%" height="15" fill="rgb(213,120,34)" fg:x="186" fg:w="3"/><text x="39.9936%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (3 samples, 0.64%)</title><rect x="39.7436%" y="341" width="0.6410%" height="15" fill="rgb(243,49,53)" fg:x="186" fg:w="3"/><text x="39.9936%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (3 samples, 0.64%)</title><rect x="39.7436%" y="325" width="0.6410%" height="15" fill="rgb(247,216,33)" fg:x="186" fg:w="3"/><text x="39.9936%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (3 samples, 0.64%)</title><rect x="39.7436%" y="309" width="0.6410%" height="15" fill="rgb(226,26,14)" fg:x="186" fg:w="3"/><text x="39.9936%" y="319.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="40.1709%" y="293" width="0.2137%" height="15" fill="rgb(215,49,53)" fg:x="188" fg:w="1"/><text x="40.4209%" y="303.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="40.1709%" y="277" width="0.2137%" height="15" fill="rgb(245,162,40)" fg:x="188" fg:w="1"/><text x="40.4209%" y="287.50"></text></g><g><title>rust-gkat`smt::context::decide (1 samples, 0.21%)</title><rect x="40.1709%" y="261" width="0.2137%" height="15" fill="rgb(229,68,17)" fg:x="188" fg:w="1"/><text x="40.4209%" y="271.50"></text></g><g><title>rust-gkat`smt::context::push_scope (1 samples, 0.21%)</title><rect x="40.1709%" y="245" width="0.2137%" height="15" fill="rgb(213,182,10)" fg:x="188" fg:w="1"/><text x="40.4209%" y="255.50"></text></g><g><title>rust-gkat`smt::theory_bv::push_scope_eh (1 samples, 0.21%)</title><rect x="40.1709%" y="229" width="0.2137%" height="15" fill="rgb(245,125,30)" fg:x="188" fg:w="1"/><text x="40.4209%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="40.3846%" y="229" width="0.2137%" height="15" fill="rgb(232,202,2)" fg:x="189" fg:w="1"/><text x="40.6346%" y="239.50"></text></g><g><title>rust-gkat`macro_manager::mark_forbidden (1 samples, 0.21%)</title><rect x="40.3846%" y="213" width="0.2137%" height="15" fill="rgb(237,140,51)" fg:x="189" fg:w="1"/><text x="40.6346%" y="223.50"></text></g><g><title>rust-gkat`act_cache::find (1 samples, 0.21%)</title><rect x="40.5983%" y="149" width="0.2137%" height="15" fill="rgb(236,157,25)" fg:x="190" fg:w="1"/><text x="40.8483%" y="159.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (3 samples, 0.64%)</title><rect x="40.3846%" y="261" width="0.6410%" height="15" fill="rgb(219,209,0)" fg:x="189" fg:w="3"/><text x="40.6346%" y="271.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (3 samples, 0.64%)</title><rect x="40.3846%" y="245" width="0.6410%" height="15" fill="rgb(240,116,54)" fg:x="189" fg:w="3"/><text x="40.6346%" y="255.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (2 samples, 0.43%)</title><rect x="40.5983%" y="229" width="0.4274%" height="15" fill="rgb(216,10,36)" fg:x="190" fg:w="2"/><text x="40.8483%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (2 samples, 0.43%)</title><rect x="40.5983%" y="213" width="0.4274%" height="15" fill="rgb(222,72,44)" fg:x="190" fg:w="2"/><text x="40.8483%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (2 samples, 0.43%)</title><rect x="40.5983%" y="197" width="0.4274%" height="15" fill="rgb(232,159,9)" fg:x="190" fg:w="2"/><text x="40.8483%" y="207.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (2 samples, 0.43%)</title><rect x="40.5983%" y="181" width="0.4274%" height="15" fill="rgb(210,39,32)" fg:x="190" fg:w="2"/><text x="40.8483%" y="191.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="40.5983%" y="165" width="0.4274%" height="15" fill="rgb(216,194,45)" fg:x="190" fg:w="2"/><text x="40.8483%" y="175.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="40.8120%" y="149" width="0.2137%" height="15" fill="rgb(218,18,35)" fg:x="191" fg:w="1"/><text x="41.0620%" y="159.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (1 samples, 0.21%)</title><rect x="40.8120%" y="133" width="0.2137%" height="15" fill="rgb(207,83,51)" fg:x="191" fg:w="1"/><text x="41.0620%" y="143.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.85%)</title><rect x="40.3846%" y="389" width="0.8547%" height="15" fill="rgb(225,63,43)" fg:x="189" fg:w="4"/><text x="40.6346%" y="399.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.85%)</title><rect x="40.3846%" y="373" width="0.8547%" height="15" fill="rgb(207,57,36)" fg:x="189" fg:w="4"/><text x="40.6346%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (4 samples, 0.85%)</title><rect x="40.3846%" y="357" width="0.8547%" height="15" fill="rgb(216,99,33)" fg:x="189" fg:w="4"/><text x="40.6346%" y="367.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (4 samples, 0.85%)</title><rect x="40.3846%" y="341" width="0.8547%" height="15" fill="rgb(225,42,16)" fg:x="189" fg:w="4"/><text x="40.6346%" y="351.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (4 samples, 0.85%)</title><rect x="40.3846%" y="325" width="0.8547%" height="15" fill="rgb(220,201,45)" fg:x="189" fg:w="4"/><text x="40.6346%" y="335.50"></text></g><g><title>rust-gkat`solver::check_sat (4 samples, 0.85%)</title><rect x="40.3846%" y="309" width="0.8547%" height="15" fill="rgb(225,33,4)" fg:x="189" fg:w="4"/><text x="40.6346%" y="319.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (4 samples, 0.85%)</title><rect x="40.3846%" y="293" width="0.8547%" height="15" fill="rgb(224,33,50)" fg:x="189" fg:w="4"/><text x="40.6346%" y="303.50"></text></g><g><title>rust-gkat`smt::context::check (4 samples, 0.85%)</title><rect x="40.3846%" y="277" width="0.8547%" height="15" fill="rgb(246,198,51)" fg:x="189" fg:w="4"/><text x="40.6346%" y="287.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="41.0256%" y="261" width="0.2137%" height="15" fill="rgb(205,22,4)" fg:x="192" fg:w="1"/><text x="41.2756%" y="271.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="41.0256%" y="245" width="0.2137%" height="15" fill="rgb(206,3,8)" fg:x="192" fg:w="1"/><text x="41.2756%" y="255.50"></text></g><g><title>rust-gkat`smt::context::final_check (1 samples, 0.21%)</title><rect x="41.0256%" y="229" width="0.2137%" height="15" fill="rgb(251,23,15)" fg:x="192" fg:w="1"/><text x="41.2756%" y="239.50"></text></g><g><title>rust-gkat`smt::theory_datatype::final_check_eh (1 samples, 0.21%)</title><rect x="41.0256%" y="213" width="0.2137%" height="15" fill="rgb(252,88,28)" fg:x="192" fg:w="1"/><text x="41.2756%" y="223.50"></text></g><g><title>rust-gkat`smt::theory::force_push (1 samples, 0.21%)</title><rect x="41.0256%" y="197" width="0.2137%" height="15" fill="rgb(212,127,14)" fg:x="192" fg:w="1"/><text x="41.2756%" y="207.50"></text></g><g><title>rust-gkat`smt::theory_datatype::push_scope_eh (1 samples, 0.21%)</title><rect x="41.0256%" y="181" width="0.2137%" height="15" fill="rgb(247,145,37)" fg:x="192" fg:w="1"/><text x="41.2756%" y="191.50"></text></g><g><title>rust-gkat`region::push_scope (1 samples, 0.21%)</title><rect x="41.0256%" y="165" width="0.2137%" height="15" fill="rgb(209,117,53)" fg:x="192" fg:w="1"/><text x="41.2756%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.21%)</title><rect x="41.2393%" y="389" width="0.2137%" height="15" fill="rgb(212,90,42)" fg:x="193" fg:w="1"/><text x="41.4893%" y="399.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="41.4530%" y="357" width="0.2137%" height="15" fill="rgb(218,164,37)" fg:x="194" fg:w="1"/><text x="41.7030%" y="367.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="41.4530%" y="341" width="0.2137%" height="15" fill="rgb(246,65,34)" fg:x="194" fg:w="1"/><text x="41.7030%" y="351.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="41.4530%" y="325" width="0.2137%" height="15" fill="rgb(231,100,33)" fg:x="194" fg:w="1"/><text x="41.7030%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="41.4530%" y="309" width="0.2137%" height="15" fill="rgb(228,126,14)" fg:x="194" fg:w="1"/><text x="41.7030%" y="319.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.43%)</title><rect x="41.4530%" y="389" width="0.4274%" height="15" fill="rgb(215,173,21)" fg:x="194" fg:w="2"/><text x="41.7030%" y="399.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.43%)</title><rect x="41.4530%" y="373" width="0.4274%" height="15" fill="rgb(210,6,40)" fg:x="194" fg:w="2"/><text x="41.7030%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="41.6667%" y="357" width="0.2137%" height="15" fill="rgb(212,48,18)" fg:x="195" fg:w="1"/><text x="41.9167%" y="367.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="41.6667%" y="341" width="0.2137%" height="15" fill="rgb(230,214,11)" fg:x="195" fg:w="1"/><text x="41.9167%" y="351.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="41.6667%" y="325" width="0.2137%" height="15" fill="rgb(254,105,39)" fg:x="195" fg:w="1"/><text x="41.9167%" y="335.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="41.6667%" y="309" width="0.2137%" height="15" fill="rgb(245,158,5)" fg:x="195" fg:w="1"/><text x="41.9167%" y="319.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="41.6667%" y="293" width="0.2137%" height="15" fill="rgb(249,208,11)" fg:x="195" fg:w="1"/><text x="41.9167%" y="303.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="41.6667%" y="277" width="0.2137%" height="15" fill="rgb(210,39,28)" fg:x="195" fg:w="1"/><text x="41.9167%" y="287.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="41.6667%" y="261" width="0.2137%" height="15" fill="rgb(211,56,53)" fg:x="195" fg:w="1"/><text x="41.9167%" y="271.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="41.6667%" y="245" width="0.2137%" height="15" fill="rgb(226,201,30)" fg:x="195" fg:w="1"/><text x="41.9167%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="41.6667%" y="229" width="0.2137%" height="15" fill="rgb(239,101,34)" fg:x="195" fg:w="1"/><text x="41.9167%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (1 samples, 0.21%)</title><rect x="41.6667%" y="213" width="0.2137%" height="15" fill="rgb(226,209,5)" fg:x="195" fg:w="1"/><text x="41.9167%" y="223.50"></text></g><g><title>rust-gkat`th_rewriter::updt_params (1 samples, 0.21%)</title><rect x="41.6667%" y="197" width="0.2137%" height="15" fill="rgb(250,105,47)" fg:x="195" fg:w="1"/><text x="41.9167%" y="207.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="41.6667%" y="181" width="0.2137%" height="15" fill="rgb(230,72,3)" fg:x="195" fg:w="1"/><text x="41.9167%" y="191.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="41.6667%" y="165" width="0.2137%" height="15" fill="rgb(232,218,39)" fg:x="195" fg:w="1"/><text x="41.9167%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="41.6667%" y="149" width="0.2137%" height="15" fill="rgb(248,166,6)" fg:x="195" fg:w="1"/><text x="41.9167%" y="159.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.21%)</title><rect x="41.8803%" y="389" width="0.2137%" height="15" fill="rgb(247,89,20)" fg:x="196" fg:w="1"/><text x="42.1303%" y="399.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.21%)</title><rect x="41.8803%" y="373" width="0.2137%" height="15" fill="rgb(248,130,54)" fg:x="196" fg:w="1"/><text x="42.1303%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="41.8803%" y="357" width="0.2137%" height="15" fill="rgb(234,196,4)" fg:x="196" fg:w="1"/><text x="42.1303%" y="367.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="41.8803%" y="341" width="0.2137%" height="15" fill="rgb(250,143,31)" fg:x="196" fg:w="1"/><text x="42.1303%" y="351.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="41.8803%" y="325" width="0.2137%" height="15" fill="rgb(211,110,34)" fg:x="196" fg:w="1"/><text x="42.1303%" y="335.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="41.8803%" y="309" width="0.2137%" height="15" fill="rgb(215,124,48)" fg:x="196" fg:w="1"/><text x="42.1303%" y="319.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="41.8803%" y="293" width="0.2137%" height="15" fill="rgb(216,46,13)" fg:x="196" fg:w="1"/><text x="42.1303%" y="303.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="41.8803%" y="277" width="0.2137%" height="15" fill="rgb(205,184,25)" fg:x="196" fg:w="1"/><text x="42.1303%" y="287.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="41.8803%" y="261" width="0.2137%" height="15" fill="rgb(228,1,10)" fg:x="196" fg:w="1"/><text x="42.1303%" y="271.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="41.8803%" y="245" width="0.2137%" height="15" fill="rgb(213,116,27)" fg:x="196" fg:w="1"/><text x="42.1303%" y="255.50"></text></g><g><title>rust-gkat`smt::context::propagate (1 samples, 0.21%)</title><rect x="41.8803%" y="229" width="0.2137%" height="15" fill="rgb(241,95,50)" fg:x="196" fg:w="1"/><text x="42.1303%" y="239.50"></text></g><g><title>rust-gkat`smt::theory_bv::propagate (1 samples, 0.21%)</title><rect x="41.8803%" y="213" width="0.2137%" height="15" fill="rgb(238,48,32)" fg:x="196" fg:w="1"/><text x="42.1303%" y="223.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="42.0940%" y="341" width="0.2137%" height="15" fill="rgb(235,113,49)" fg:x="197" fg:w="1"/><text x="42.3440%" y="351.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="42.0940%" y="325" width="0.2137%" height="15" fill="rgb(205,127,43)" fg:x="197" fg:w="1"/><text x="42.3440%" y="335.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="42.0940%" y="309" width="0.2137%" height="15" fill="rgb(250,162,2)" fg:x="197" fg:w="1"/><text x="42.3440%" y="319.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="42.0940%" y="293" width="0.2137%" height="15" fill="rgb(220,13,41)" fg:x="197" fg:w="1"/><text x="42.3440%" y="303.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="42.0940%" y="277" width="0.2137%" height="15" fill="rgb(249,221,25)" fg:x="197" fg:w="1"/><text x="42.3440%" y="287.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="42.0940%" y="261" width="0.2137%" height="15" fill="rgb(215,208,19)" fg:x="197" fg:w="1"/><text x="42.3440%" y="271.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="42.0940%" y="245" width="0.2137%" height="15" fill="rgb(236,175,2)" fg:x="197" fg:w="1"/><text x="42.3440%" y="255.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="42.0940%" y="229" width="0.2137%" height="15" fill="rgb(241,52,2)" fg:x="197" fg:w="1"/><text x="42.3440%" y="239.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="42.0940%" y="213" width="0.2137%" height="15" fill="rgb(248,140,14)" fg:x="197" fg:w="1"/><text x="42.3440%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="42.0940%" y="197" width="0.2137%" height="15" fill="rgb(253,22,42)" fg:x="197" fg:w="1"/><text x="42.3440%" y="207.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.43%)</title><rect x="42.0940%" y="373" width="0.4274%" height="15" fill="rgb(234,61,47)" fg:x="197" fg:w="2"/><text x="42.3440%" y="383.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.43%)</title><rect x="42.0940%" y="357" width="0.4274%" height="15" fill="rgb(208,226,15)" fg:x="197" fg:w="2"/><text x="42.3440%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="42.3077%" y="341" width="0.2137%" height="15" fill="rgb(217,221,4)" fg:x="198" fg:w="1"/><text x="42.5577%" y="351.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="42.3077%" y="325" width="0.2137%" height="15" fill="rgb(212,174,34)" fg:x="198" fg:w="1"/><text x="42.5577%" y="335.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="42.3077%" y="309" width="0.2137%" height="15" fill="rgb(253,83,4)" fg:x="198" fg:w="1"/><text x="42.5577%" y="319.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="42.3077%" y="293" width="0.2137%" height="15" fill="rgb(250,195,49)" fg:x="198" fg:w="1"/><text x="42.5577%" y="303.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="42.3077%" y="277" width="0.2137%" height="15" fill="rgb(241,192,25)" fg:x="198" fg:w="1"/><text x="42.5577%" y="287.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="42.3077%" y="261" width="0.2137%" height="15" fill="rgb(208,124,10)" fg:x="198" fg:w="1"/><text x="42.5577%" y="271.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="42.3077%" y="245" width="0.2137%" height="15" fill="rgb(222,33,0)" fg:x="198" fg:w="1"/><text x="42.5577%" y="255.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="42.3077%" y="229" width="0.2137%" height="15" fill="rgb(234,209,28)" fg:x="198" fg:w="1"/><text x="42.5577%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="42.3077%" y="213" width="0.2137%" height="15" fill="rgb(224,11,23)" fg:x="198" fg:w="1"/><text x="42.5577%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (1 samples, 0.21%)</title><rect x="42.3077%" y="197" width="0.2137%" height="15" fill="rgb(232,99,1)" fg:x="198" fg:w="1"/><text x="42.5577%" y="207.50"></text></g><g><title>rust-gkat`params::set_bool (1 samples, 0.21%)</title><rect x="42.3077%" y="181" width="0.2137%" height="15" fill="rgb(237,95,45)" fg:x="198" fg:w="1"/><text x="42.5577%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="42.3077%" y="165" width="0.2137%" height="15" fill="rgb(208,109,11)" fg:x="198" fg:w="1"/><text x="42.5577%" y="175.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.21%)</title><rect x="42.5214%" y="373" width="0.2137%" height="15" fill="rgb(216,190,48)" fg:x="199" fg:w="1"/><text x="42.7714%" y="383.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.21%)</title><rect x="42.5214%" y="357" width="0.2137%" height="15" fill="rgb(251,171,36)" fg:x="199" fg:w="1"/><text x="42.7714%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="42.5214%" y="341" width="0.2137%" height="15" fill="rgb(230,62,22)" fg:x="199" fg:w="1"/><text x="42.7714%" y="351.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="42.5214%" y="325" width="0.2137%" height="15" fill="rgb(225,114,35)" fg:x="199" fg:w="1"/><text x="42.7714%" y="335.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="42.5214%" y="309" width="0.2137%" height="15" fill="rgb(215,118,42)" fg:x="199" fg:w="1"/><text x="42.7714%" y="319.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="42.5214%" y="293" width="0.2137%" height="15" fill="rgb(243,119,21)" fg:x="199" fg:w="1"/><text x="42.7714%" y="303.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="42.5214%" y="277" width="0.2137%" height="15" fill="rgb(252,177,53)" fg:x="199" fg:w="1"/><text x="42.7714%" y="287.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="42.5214%" y="261" width="0.2137%" height="15" fill="rgb(237,209,29)" fg:x="199" fg:w="1"/><text x="42.7714%" y="271.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="42.5214%" y="245" width="0.2137%" height="15" fill="rgb(212,65,23)" fg:x="199" fg:w="1"/><text x="42.7714%" y="255.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="42.5214%" y="229" width="0.2137%" height="15" fill="rgb(230,222,46)" fg:x="199" fg:w="1"/><text x="42.7714%" y="239.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="42.5214%" y="213" width="0.2137%" height="15" fill="rgb(215,135,32)" fg:x="199" fg:w="1"/><text x="42.7714%" y="223.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="42.5214%" y="197" width="0.2137%" height="15" fill="rgb(246,101,22)" fg:x="199" fg:w="1"/><text x="42.7714%" y="207.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="42.5214%" y="181" width="0.2137%" height="15" fill="rgb(206,107,13)" fg:x="199" fg:w="1"/><text x="42.7714%" y="191.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (1 samples, 0.21%)</title><rect x="42.5214%" y="165" width="0.2137%" height="15" fill="rgb(250,100,44)" fg:x="199" fg:w="1"/><text x="42.7714%" y="175.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.5214%" y="149" width="0.2137%" height="15" fill="rgb(231,147,38)" fg:x="199" fg:w="1"/><text x="42.7714%" y="159.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.5214%" y="133" width="0.2137%" height="15" fill="rgb(229,8,40)" fg:x="199" fg:w="1"/><text x="42.7714%" y="143.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="42.5214%" y="117" width="0.2137%" height="15" fill="rgb(221,135,30)" fg:x="199" fg:w="1"/><text x="42.7714%" y="127.50"></text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="42.5214%" y="101" width="0.2137%" height="15" fill="rgb(249,193,18)" fg:x="199" fg:w="1"/><text x="42.7714%" y="111.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="42.7350%" y="197" width="0.2137%" height="15" fill="rgb(209,133,39)" fg:x="200" fg:w="1"/><text x="42.9850%" y="207.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.7350%" y="181" width="0.2137%" height="15" fill="rgb(232,100,14)" fg:x="200" fg:w="1"/><text x="42.9850%" y="191.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.7350%" y="165" width="0.2137%" height="15" fill="rgb(224,185,1)" fg:x="200" fg:w="1"/><text x="42.9850%" y="175.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="42.7350%" y="149" width="0.2137%" height="15" fill="rgb(223,139,8)" fg:x="200" fg:w="1"/><text x="42.9850%" y="159.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_implies(expr*, expr*, obj_ref (1 samples, 0.21%)</title><rect x="42.7350%" y="133" width="0.2137%" height="15" fill="rgb(232,213,38)" fg:x="200" fg:w="1"/><text x="42.9850%" y="143.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="42.7350%" y="117" width="0.2137%" height="15" fill="rgb(207,94,22)" fg:x="200" fg:w="1"/><text x="42.9850%" y="127.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (2 samples, 0.43%)</title><rect x="42.7350%" y="229" width="0.4274%" height="15" fill="rgb(219,183,54)" fg:x="200" fg:w="2"/><text x="42.9850%" y="239.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (2 samples, 0.43%)</title><rect x="42.7350%" y="213" width="0.4274%" height="15" fill="rgb(216,185,54)" fg:x="200" fg:w="2"/><text x="42.9850%" y="223.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="42.9487%" y="197" width="0.2137%" height="15" fill="rgb(254,217,39)" fg:x="201" fg:w="1"/><text x="43.1987%" y="207.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="42.9487%" y="181" width="0.2137%" height="15" fill="rgb(240,178,23)" fg:x="201" fg:w="1"/><text x="43.1987%" y="191.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="42.9487%" y="165" width="0.2137%" height="15" fill="rgb(218,11,47)" fg:x="201" fg:w="1"/><text x="43.1987%" y="175.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (1 samples, 0.21%)</title><rect x="42.9487%" y="149" width="0.2137%" height="15" fill="rgb(218,51,51)" fg:x="201" fg:w="1"/><text x="43.1987%" y="159.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.9487%" y="133" width="0.2137%" height="15" fill="rgb(238,126,27)" fg:x="201" fg:w="1"/><text x="43.1987%" y="143.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="42.9487%" y="117" width="0.2137%" height="15" fill="rgb(249,202,22)" fg:x="201" fg:w="1"/><text x="43.1987%" y="127.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="42.9487%" y="101" width="0.2137%" height="15" fill="rgb(254,195,49)" fg:x="201" fg:w="1"/><text x="43.1987%" y="111.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="42.9487%" y="85" width="0.2137%" height="15" fill="rgb(208,123,14)" fg:x="201" fg:w="1"/><text x="43.1987%" y="95.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="42.9487%" y="69" width="0.2137%" height="15" fill="rgb(224,200,8)" fg:x="201" fg:w="1"/><text x="43.1987%" y="79.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="42.9487%" y="53" width="0.2137%" height="15" fill="rgb(217,61,36)" fg:x="201" fg:w="1"/><text x="43.1987%" y="63.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (1 samples, 0.21%)</title><rect x="42.9487%" y="37" width="0.2137%" height="15" fill="rgb(206,35,45)" fg:x="201" fg:w="1"/><text x="43.1987%" y="47.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.64%)</title><rect x="42.7350%" y="357" width="0.6410%" height="15" fill="rgb(217,65,33)" fg:x="200" fg:w="3"/><text x="42.9850%" y="367.50"></text></g><g><title>rust-gkat`&lt;rust_gkat::kernel1::guard::GuardIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.64%)</title><rect x="42.7350%" y="341" width="0.6410%" height="15" fill="rgb(222,158,48)" fg:x="200" fg:w="3"/><text x="42.9850%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (3 samples, 0.64%)</title><rect x="42.7350%" y="325" width="0.6410%" height="15" fill="rgb(254,2,54)" fg:x="200" fg:w="3"/><text x="42.9850%" y="335.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (3 samples, 0.64%)</title><rect x="42.7350%" y="309" width="0.6410%" height="15" fill="rgb(250,143,38)" fg:x="200" fg:w="3"/><text x="42.9850%" y="319.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (3 samples, 0.64%)</title><rect x="42.7350%" y="293" width="0.6410%" height="15" fill="rgb(248,25,0)" fg:x="200" fg:w="3"/><text x="42.9850%" y="303.50"></text></g><g><title>rust-gkat`solver::check_sat (3 samples, 0.64%)</title><rect x="42.7350%" y="277" width="0.6410%" height="15" fill="rgb(206,152,27)" fg:x="200" fg:w="3"/><text x="42.9850%" y="287.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (3 samples, 0.64%)</title><rect x="42.7350%" y="261" width="0.6410%" height="15" fill="rgb(240,77,30)" fg:x="200" fg:w="3"/><text x="42.9850%" y="271.50"></text></g><g><title>rust-gkat`smt::context::check (3 samples, 0.64%)</title><rect x="42.7350%" y="245" width="0.6410%" height="15" fill="rgb(231,5,3)" fg:x="200" fg:w="3"/><text x="42.9850%" y="255.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="43.1624%" y="229" width="0.2137%" height="15" fill="rgb(207,226,32)" fg:x="202" fg:w="1"/><text x="43.4124%" y="239.50"></text></g><g><title>rust-gkat`smt::context::propagate (1 samples, 0.21%)</title><rect x="43.1624%" y="213" width="0.2137%" height="15" fill="rgb(222,207,47)" fg:x="202" fg:w="1"/><text x="43.4124%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (7 samples, 1.50%)</title><rect x="42.0940%" y="389" width="1.4957%" height="15" fill="rgb(229,115,45)" fg:x="197" fg:w="7"/><text x="42.3440%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (4 samples, 0.85%)</title><rect x="42.7350%" y="373" width="0.8547%" height="15" fill="rgb(224,191,6)" fg:x="200" fg:w="4"/><text x="42.9850%" y="383.50"></text></g><g><title>rust-gkat`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.21%)</title><rect x="43.3761%" y="357" width="0.2137%" height="15" fill="rgb(230,227,24)" fg:x="203" fg:w="1"/><text x="43.6261%" y="367.50"></text></g><g><title>rust-gkat`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.21%)</title><rect x="43.3761%" y="341" width="0.2137%" height="15" fill="rgb(228,80,19)" fg:x="203" fg:w="1"/><text x="43.6261%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="43.3761%" y="325" width="0.2137%" height="15" fill="rgb(247,229,0)" fg:x="203" fg:w="1"/><text x="43.6261%" y="335.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="43.3761%" y="309" width="0.2137%" height="15" fill="rgb(237,194,15)" fg:x="203" fg:w="1"/><text x="43.6261%" y="319.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="43.3761%" y="293" width="0.2137%" height="15" fill="rgb(219,203,20)" fg:x="203" fg:w="1"/><text x="43.6261%" y="303.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="43.3761%" y="277" width="0.2137%" height="15" fill="rgb(234,128,8)" fg:x="203" fg:w="1"/><text x="43.6261%" y="287.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="43.3761%" y="261" width="0.2137%" height="15" fill="rgb(248,202,8)" fg:x="203" fg:w="1"/><text x="43.6261%" y="271.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="43.3761%" y="245" width="0.2137%" height="15" fill="rgb(206,104,37)" fg:x="203" fg:w="1"/><text x="43.6261%" y="255.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="43.3761%" y="229" width="0.2137%" height="15" fill="rgb(223,8,27)" fg:x="203" fg:w="1"/><text x="43.6261%" y="239.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="43.3761%" y="213" width="0.2137%" height="15" fill="rgb(216,217,28)" fg:x="203" fg:w="1"/><text x="43.6261%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="43.3761%" y="197" width="0.2137%" height="15" fill="rgb(249,199,1)" fg:x="203" fg:w="1"/><text x="43.6261%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_integral[abi:ne180100]&lt;unsigned long&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="43.3761%" y="181" width="0.2137%" height="15" fill="rgb(240,85,17)" fg:x="203" fg:w="1"/><text x="43.6261%" y="191.50"></text></g><g><title>libsystem_c.dylib`snprintf_l (1 samples, 0.21%)</title><rect x="43.3761%" y="165" width="0.2137%" height="15" fill="rgb(206,108,45)" fg:x="203" fg:w="1"/><text x="43.6261%" y="175.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.21%)</title><rect x="43.3761%" y="149" width="0.2137%" height="15" fill="rgb(245,210,41)" fg:x="203" fg:w="1"/><text x="43.6261%" y="159.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.21%)</title><rect x="43.3761%" y="133" width="0.2137%" height="15" fill="rgb(206,13,37)" fg:x="203" fg:w="1"/><text x="43.6261%" y="143.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (30 samples, 6.41%)</title><rect x="37.3932%" y="453" width="6.4103%" height="15" fill="rgb(250,61,18)" fg:x="175" fg:w="30"/><text x="37.6432%" y="463.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (28 samples, 5.98%)</title><rect x="37.8205%" y="437" width="5.9829%" height="15" fill="rgb(235,172,48)" fg:x="177" fg:w="28"/><text x="38.0705%" y="447.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (21 samples, 4.49%)</title><rect x="39.3162%" y="421" width="4.4872%" height="15" fill="rgb(249,201,17)" fg:x="184" fg:w="21"/><text x="39.5662%" y="431.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (16 samples, 3.42%)</title><rect x="40.3846%" y="405" width="3.4188%" height="15" fill="rgb(219,208,6)" fg:x="189" fg:w="16"/><text x="40.6346%" y="415.50">rus..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.5897%" y="389" width="0.2137%" height="15" fill="rgb(248,31,23)" fg:x="204" fg:w="1"/><text x="43.8397%" y="399.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="43.5897%" y="373" width="0.2137%" height="15" fill="rgb(245,15,42)" fg:x="204" fg:w="1"/><text x="43.8397%" y="383.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="43.5897%" y="357" width="0.2137%" height="15" fill="rgb(222,217,39)" fg:x="204" fg:w="1"/><text x="43.8397%" y="367.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="43.5897%" y="341" width="0.2137%" height="15" fill="rgb(210,219,27)" fg:x="204" fg:w="1"/><text x="43.8397%" y="351.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="43.5897%" y="325" width="0.2137%" height="15" fill="rgb(252,166,36)" fg:x="204" fg:w="1"/><text x="43.8397%" y="335.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (1 samples, 0.21%)</title><rect x="43.5897%" y="309" width="0.2137%" height="15" fill="rgb(245,132,34)" fg:x="204" fg:w="1"/><text x="43.8397%" y="319.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="43.5897%" y="293" width="0.2137%" height="15" fill="rgb(236,54,3)" fg:x="204" fg:w="1"/><text x="43.8397%" y="303.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="43.5897%" y="277" width="0.2137%" height="15" fill="rgb(241,173,43)" fg:x="204" fg:w="1"/><text x="43.8397%" y="287.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="43.5897%" y="261" width="0.2137%" height="15" fill="rgb(215,190,9)" fg:x="204" fg:w="1"/><text x="43.8397%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (37 samples, 7.91%)</title><rect x="36.1111%" y="485" width="7.9060%" height="15" fill="rgb(242,101,16)" fg:x="169" fg:w="37"/><text x="36.3611%" y="495.50">rust-gkat`r..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (32 samples, 6.84%)</title><rect x="37.1795%" y="469" width="6.8376%" height="15" fill="rgb(223,190,21)" fg:x="174" fg:w="32"/><text x="37.4295%" y="479.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="453" width="0.2137%" height="15" fill="rgb(215,228,25)" fg:x="205" fg:w="1"/><text x="44.0534%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="437" width="0.2137%" height="15" fill="rgb(225,36,22)" fg:x="205" fg:w="1"/><text x="44.0534%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="421" width="0.2137%" height="15" fill="rgb(251,106,46)" fg:x="205" fg:w="1"/><text x="44.0534%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="405" width="0.2137%" height="15" fill="rgb(208,90,1)" fg:x="205" fg:w="1"/><text x="44.0534%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="389" width="0.2137%" height="15" fill="rgb(243,10,4)" fg:x="205" fg:w="1"/><text x="44.0534%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="43.8034%" y="373" width="0.2137%" height="15" fill="rgb(212,137,27)" fg:x="205" fg:w="1"/><text x="44.0534%" y="383.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="43.8034%" y="357" width="0.2137%" height="15" fill="rgb(231,220,49)" fg:x="205" fg:w="1"/><text x="44.0534%" y="367.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="43.8034%" y="341" width="0.2137%" height="15" fill="rgb(237,96,20)" fg:x="205" fg:w="1"/><text x="44.0534%" y="351.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="43.8034%" y="325" width="0.2137%" height="15" fill="rgb(239,229,30)" fg:x="205" fg:w="1"/><text x="44.0534%" y="335.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="43.8034%" y="309" width="0.2137%" height="15" fill="rgb(219,65,33)" fg:x="205" fg:w="1"/><text x="44.0534%" y="319.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="43.8034%" y="293" width="0.2137%" height="15" fill="rgb(243,134,7)" fg:x="205" fg:w="1"/><text x="44.0534%" y="303.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.0171%" y="485" width="0.2137%" height="15" fill="rgb(216,177,54)" fg:x="206" fg:w="1"/><text x="44.2671%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.0171%" y="469" width="0.2137%" height="15" fill="rgb(211,160,20)" fg:x="206" fg:w="1"/><text x="44.2671%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.0171%" y="453" width="0.2137%" height="15" fill="rgb(239,85,39)" fg:x="206" fg:w="1"/><text x="44.2671%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.0171%" y="437" width="0.2137%" height="15" fill="rgb(232,125,22)" fg:x="206" fg:w="1"/><text x="44.2671%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.0171%" y="421" width="0.2137%" height="15" fill="rgb(244,57,34)" fg:x="206" fg:w="1"/><text x="44.2671%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="44.0171%" y="405" width="0.2137%" height="15" fill="rgb(214,203,32)" fg:x="206" fg:w="1"/><text x="44.2671%" y="415.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="44.0171%" y="389" width="0.2137%" height="15" fill="rgb(207,58,43)" fg:x="206" fg:w="1"/><text x="44.2671%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="44.0171%" y="373" width="0.2137%" height="15" fill="rgb(215,193,15)" fg:x="206" fg:w="1"/><text x="44.2671%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="44.0171%" y="357" width="0.2137%" height="15" fill="rgb(232,15,44)" fg:x="206" fg:w="1"/><text x="44.2671%" y="367.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="44.0171%" y="341" width="0.2137%" height="15" fill="rgb(212,3,48)" fg:x="206" fg:w="1"/><text x="44.2671%" y="351.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="44.0171%" y="325" width="0.2137%" height="15" fill="rgb(218,128,7)" fg:x="206" fg:w="1"/><text x="44.2671%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.21%)</title><rect x="44.0171%" y="309" width="0.2137%" height="15" fill="rgb(226,216,39)" fg:x="206" fg:w="1"/><text x="44.2671%" y="319.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (47 samples, 10.04%)</title><rect x="34.4017%" y="501" width="10.0427%" height="15" fill="rgb(243,47,51)" fg:x="161" fg:w="47"/><text x="34.6517%" y="511.50">rust-gkat`rust_..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (1 samples, 0.21%)</title><rect x="44.2308%" y="485" width="0.2137%" height="15" fill="rgb(241,183,40)" fg:x="207" fg:w="1"/><text x="44.4808%" y="495.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="44.2308%" y="469" width="0.2137%" height="15" fill="rgb(231,217,32)" fg:x="207" fg:w="1"/><text x="44.4808%" y="479.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.21%)</title><rect x="44.2308%" y="453" width="0.2137%" height="15" fill="rgb(229,61,38)" fg:x="207" fg:w="1"/><text x="44.4808%" y="463.50"></text></g><g><title>rust-gkat`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.21%)</title><rect x="44.2308%" y="437" width="0.2137%" height="15" fill="rgb(225,210,5)" fg:x="207" fg:w="1"/><text x="44.4808%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (104 samples, 22.22%)</title><rect x="22.4359%" y="549" width="22.2222%" height="15" fill="rgb(231,79,45)" fg:x="105" fg:w="104"/><text x="22.6859%" y="559.50">rust-gkat`rust_gkat::kernel1::deriv..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (87 samples, 18.59%)</title><rect x="26.0684%" y="533" width="18.5897%" height="15" fill="rgb(224,100,7)" fg:x="122" fg:w="87"/><text x="26.3184%" y="543.50">rust-gkat`rust_gkat::kernel1:..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (57 samples, 12.18%)</title><rect x="32.4786%" y="517" width="12.1795%" height="15" fill="rgb(241,198,18)" fg:x="152" fg:w="57"/><text x="32.7286%" y="527.50">rust-gkat`rust_gka..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="501" width="0.2137%" height="15" fill="rgb(252,97,53)" fg:x="208" fg:w="1"/><text x="44.6944%" y="511.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="485" width="0.2137%" height="15" fill="rgb(220,88,7)" fg:x="208" fg:w="1"/><text x="44.6944%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="469" width="0.2137%" height="15" fill="rgb(213,176,14)" fg:x="208" fg:w="1"/><text x="44.6944%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="453" width="0.2137%" height="15" fill="rgb(246,73,7)" fg:x="208" fg:w="1"/><text x="44.6944%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="437" width="0.2137%" height="15" fill="rgb(245,64,36)" fg:x="208" fg:w="1"/><text x="44.6944%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="421" width="0.2137%" height="15" fill="rgb(245,80,10)" fg:x="208" fg:w="1"/><text x="44.6944%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="44.4444%" y="405" width="0.2137%" height="15" fill="rgb(232,107,50)" fg:x="208" fg:w="1"/><text x="44.6944%" y="415.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="44.4444%" y="389" width="0.2137%" height="15" fill="rgb(253,3,0)" fg:x="208" fg:w="1"/><text x="44.6944%" y="399.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="44.4444%" y="373" width="0.2137%" height="15" fill="rgb(212,99,53)" fg:x="208" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="44.4444%" y="357" width="0.2137%" height="15" fill="rgb(249,111,54)" fg:x="208" fg:w="1"/><text x="44.6944%" y="367.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="44.4444%" y="341" width="0.2137%" height="15" fill="rgb(249,55,30)" fg:x="208" fg:w="1"/><text x="44.6944%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="44.4444%" y="325" width="0.2137%" height="15" fill="rgb(237,47,42)" fg:x="208" fg:w="1"/><text x="44.6944%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::derivative (153 samples, 32.69%)</title><rect x="12.1795%" y="565" width="32.6923%" height="15" fill="rgb(211,20,18)" fg:x="57" fg:w="153"/><text x="12.4295%" y="575.50">rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (1 samples, 0.21%)</title><rect x="44.6581%" y="549" width="0.2137%" height="15" fill="rgb(231,203,46)" fg:x="209" fg:w="1"/><text x="44.9081%" y="559.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="44.6581%" y="533" width="0.2137%" height="15" fill="rgb(237,142,3)" fg:x="209" fg:w="1"/><text x="44.9081%" y="543.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.21%)</title><rect x="44.6581%" y="517" width="0.2137%" height="15" fill="rgb(241,107,1)" fg:x="209" fg:w="1"/><text x="44.9081%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="44.8718%" y="517" width="0.2137%" height="15" fill="rgb(229,83,13)" fg:x="210" fg:w="1"/><text x="45.1218%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="44.8718%" y="501" width="0.2137%" height="15" fill="rgb(241,91,40)" fg:x="210" fg:w="1"/><text x="45.1218%" y="511.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (1 samples, 0.21%)</title><rect x="44.8718%" y="485" width="0.2137%" height="15" fill="rgb(225,3,45)" fg:x="210" fg:w="1"/><text x="45.1218%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="44.8718%" y="469" width="0.2137%" height="15" fill="rgb(244,223,14)" fg:x="210" fg:w="1"/><text x="45.1218%" y="479.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="44.8718%" y="453" width="0.2137%" height="15" fill="rgb(224,124,37)" fg:x="210" fg:w="1"/><text x="45.1218%" y="463.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="44.8718%" y="437" width="0.2137%" height="15" fill="rgb(251,171,30)" fg:x="210" fg:w="1"/><text x="45.1218%" y="447.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="44.8718%" y="421" width="0.2137%" height="15" fill="rgb(236,46,54)" fg:x="210" fg:w="1"/><text x="45.1218%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="44.8718%" y="405" width="0.2137%" height="15" fill="rgb(245,213,5)" fg:x="210" fg:w="1"/><text x="45.1218%" y="415.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="44.8718%" y="549" width="0.4274%" height="15" fill="rgb(230,144,27)" fg:x="210" fg:w="2"/><text x="45.1218%" y="559.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="44.8718%" y="533" width="0.4274%" height="15" fill="rgb(220,86,6)" fg:x="210" fg:w="2"/><text x="45.1218%" y="543.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="45.0855%" y="517" width="0.2137%" height="15" fill="rgb(240,20,13)" fg:x="211" fg:w="1"/><text x="45.3355%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="45.0855%" y="501" width="0.2137%" height="15" fill="rgb(217,89,34)" fg:x="211" fg:w="1"/><text x="45.3355%" y="511.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="45.0855%" y="485" width="0.2137%" height="15" fill="rgb(229,13,5)" fg:x="211" fg:w="1"/><text x="45.3355%" y="495.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="45.0855%" y="469" width="0.2137%" height="15" fill="rgb(244,67,35)" fg:x="211" fg:w="1"/><text x="45.3355%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="45.0855%" y="453" width="0.2137%" height="15" fill="rgb(221,40,2)" fg:x="211" fg:w="1"/><text x="45.3355%" y="463.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="45.2991%" y="469" width="0.2137%" height="15" fill="rgb(237,157,21)" fg:x="212" fg:w="1"/><text x="45.5491%" y="479.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="45.2991%" y="453" width="0.2137%" height="15" fill="rgb(222,94,11)" fg:x="212" fg:w="1"/><text x="45.5491%" y="463.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="45.2991%" y="437" width="0.2137%" height="15" fill="rgb(249,113,6)" fg:x="212" fg:w="1"/><text x="45.5491%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="45.2991%" y="421" width="0.2137%" height="15" fill="rgb(238,137,36)" fg:x="212" fg:w="1"/><text x="45.5491%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="45.2991%" y="405" width="0.2137%" height="15" fill="rgb(210,102,26)" fg:x="212" fg:w="1"/><text x="45.5491%" y="415.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="45.2991%" y="533" width="0.4274%" height="15" fill="rgb(218,30,30)" fg:x="212" fg:w="2"/><text x="45.5491%" y="543.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="45.2991%" y="517" width="0.4274%" height="15" fill="rgb(214,67,26)" fg:x="212" fg:w="2"/><text x="45.5491%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (2 samples, 0.43%)</title><rect x="45.2991%" y="501" width="0.4274%" height="15" fill="rgb(251,9,53)" fg:x="212" fg:w="2"/><text x="45.5491%" y="511.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (2 samples, 0.43%)</title><rect x="45.2991%" y="485" width="0.4274%" height="15" fill="rgb(228,204,25)" fg:x="212" fg:w="2"/><text x="45.5491%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="45.5128%" y="469" width="0.2137%" height="15" fill="rgb(207,153,8)" fg:x="213" fg:w="1"/><text x="45.7628%" y="479.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="45.7265%" y="469" width="0.2137%" height="15" fill="rgb(242,9,16)" fg:x="214" fg:w="1"/><text x="45.9765%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="45.7265%" y="453" width="0.2137%" height="15" fill="rgb(217,211,10)" fg:x="214" fg:w="1"/><text x="45.9765%" y="463.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (2 samples, 0.43%)</title><rect x="45.7265%" y="485" width="0.4274%" height="15" fill="rgb(219,228,52)" fg:x="214" fg:w="2"/><text x="45.9765%" y="495.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="45.9402%" y="469" width="0.2137%" height="15" fill="rgb(231,92,29)" fg:x="215" fg:w="1"/><text x="46.1902%" y="479.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="45.9402%" y="453" width="0.2137%" height="15" fill="rgb(232,8,23)" fg:x="215" fg:w="1"/><text x="46.1902%" y="463.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="45.9402%" y="437" width="0.2137%" height="15" fill="rgb(216,211,34)" fg:x="215" fg:w="1"/><text x="46.1902%" y="447.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="45.9402%" y="421" width="0.2137%" height="15" fill="rgb(236,151,0)" fg:x="215" fg:w="1"/><text x="46.1902%" y="431.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="45.9402%" y="405" width="0.2137%" height="15" fill="rgb(209,168,3)" fg:x="215" fg:w="1"/><text x="46.1902%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="46.1538%" y="421" width="0.2137%" height="15" fill="rgb(208,129,28)" fg:x="216" fg:w="1"/><text x="46.4038%" y="431.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (2 samples, 0.43%)</title><rect x="46.1538%" y="453" width="0.4274%" height="15" fill="rgb(229,78,22)" fg:x="216" fg:w="2"/><text x="46.4038%" y="463.50"></text></g><g><title>rust-gkat`memory::deallocate (2 samples, 0.43%)</title><rect x="46.1538%" y="437" width="0.4274%" height="15" fill="rgb(228,187,13)" fg:x="216" fg:w="2"/><text x="46.4038%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.21%)</title><rect x="46.3675%" y="421" width="0.2137%" height="15" fill="rgb(240,119,24)" fg:x="217" fg:w="1"/><text x="46.6175%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (5 samples, 1.07%)</title><rect x="45.7265%" y="517" width="1.0684%" height="15" fill="rgb(209,194,42)" fg:x="214" fg:w="5"/><text x="45.9765%" y="527.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (5 samples, 1.07%)</title><rect x="45.7265%" y="501" width="1.0684%" height="15" fill="rgb(247,200,46)" fg:x="214" fg:w="5"/><text x="45.9765%" y="511.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (3 samples, 0.64%)</title><rect x="46.1538%" y="485" width="0.6410%" height="15" fill="rgb(218,76,16)" fg:x="216" fg:w="3"/><text x="46.4038%" y="495.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (3 samples, 0.64%)</title><rect x="46.1538%" y="469" width="0.6410%" height="15" fill="rgb(225,21,48)" fg:x="216" fg:w="3"/><text x="46.4038%" y="479.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="46.5812%" y="453" width="0.2137%" height="15" fill="rgb(239,223,50)" fg:x="218" fg:w="1"/><text x="46.8312%" y="463.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="46.5812%" y="437" width="0.2137%" height="15" fill="rgb(244,45,21)" fg:x="218" fg:w="1"/><text x="46.8312%" y="447.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="46.5812%" y="421" width="0.2137%" height="15" fill="rgb(232,33,43)" fg:x="218" fg:w="1"/><text x="46.8312%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="46.5812%" y="405" width="0.2137%" height="15" fill="rgb(209,8,3)" fg:x="218" fg:w="1"/><text x="46.8312%" y="415.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="46.7949%" y="453" width="0.2137%" height="15" fill="rgb(214,25,53)" fg:x="219" fg:w="1"/><text x="47.0449%" y="463.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="46.7949%" y="437" width="0.2137%" height="15" fill="rgb(254,186,54)" fg:x="219" fg:w="1"/><text x="47.0449%" y="447.50"></text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="46.7949%" y="421" width="0.2137%" height="15" fill="rgb(208,174,49)" fg:x="219" fg:w="1"/><text x="47.0449%" y="431.50"></text></g><g><title>rust-gkat`hoist_rewriter::is_and(expr*, ref_vector (1 samples, 0.21%)</title><rect x="46.7949%" y="405" width="0.2137%" height="15" fill="rgb(233,191,51)" fg:x="219" fg:w="1"/><text x="47.0449%" y="415.50"></text></g><g><title>rust-gkat`vector&lt;expr*, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="46.7949%" y="389" width="0.2137%" height="15" fill="rgb(222,134,10)" fg:x="219" fg:w="1"/><text x="47.0449%" y="399.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="46.7949%" y="373" width="0.2137%" height="15" fill="rgb(230,226,20)" fg:x="219" fg:w="1"/><text x="47.0449%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.21%)</title><rect x="46.7949%" y="357" width="0.2137%" height="15" fill="rgb(251,111,25)" fg:x="219" fg:w="1"/><text x="47.0449%" y="367.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="46.7949%" y="469" width="0.4274%" height="15" fill="rgb(224,40,46)" fg:x="219" fg:w="2"/><text x="47.0449%" y="479.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="47.0085%" y="453" width="0.2137%" height="15" fill="rgb(236,108,47)" fg:x="220" fg:w="1"/><text x="47.2585%" y="463.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (3 samples, 0.64%)</title><rect x="46.7949%" y="501" width="0.6410%" height="15" fill="rgb(234,93,0)" fg:x="219" fg:w="3"/><text x="47.0449%" y="511.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (3 samples, 0.64%)</title><rect x="46.7949%" y="485" width="0.6410%" height="15" fill="rgb(224,213,32)" fg:x="219" fg:w="3"/><text x="47.0449%" y="495.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="47.2222%" y="469" width="0.2137%" height="15" fill="rgb(251,11,48)" fg:x="221" fg:w="1"/><text x="47.4722%" y="479.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="47.2222%" y="453" width="0.2137%" height="15" fill="rgb(236,173,5)" fg:x="221" fg:w="1"/><text x="47.4722%" y="463.50"></text></g><g><title>rust-gkat`hoist_rewriter::~hoist_rewriter (1 samples, 0.21%)</title><rect x="47.2222%" y="437" width="0.2137%" height="15" fill="rgb(230,95,12)" fg:x="221" fg:w="1"/><text x="47.4722%" y="447.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="47.2222%" y="421" width="0.2137%" height="15" fill="rgb(232,209,1)" fg:x="221" fg:w="1"/><text x="47.4722%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.21%)</title><rect x="47.2222%" y="405" width="0.2137%" height="15" fill="rgb(232,6,1)" fg:x="221" fg:w="1"/><text x="47.4722%" y="415.50"></text></g><g><title>rust-gkat`recfun::util::util (1 samples, 0.21%)</title><rect x="47.4359%" y="405" width="0.2137%" height="15" fill="rgb(210,224,50)" fg:x="222" fg:w="1"/><text x="47.6859%" y="415.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="47.4359%" y="389" width="0.2137%" height="15" fill="rgb(228,127,35)" fg:x="222" fg:w="1"/><text x="47.6859%" y="399.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="47.4359%" y="373" width="0.2137%" height="15" fill="rgb(245,102,45)" fg:x="222" fg:w="1"/><text x="47.6859%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="47.4359%" y="357" width="0.2137%" height="15" fill="rgb(214,1,49)" fg:x="222" fg:w="1"/><text x="47.6859%" y="367.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="47.4359%" y="469" width="0.4274%" height="15" fill="rgb(226,163,40)" fg:x="222" fg:w="2"/><text x="47.6859%" y="479.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="47.4359%" y="453" width="0.4274%" height="15" fill="rgb(239,212,28)" fg:x="222" fg:w="2"/><text x="47.6859%" y="463.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (2 samples, 0.43%)</title><rect x="47.4359%" y="437" width="0.4274%" height="15" fill="rgb(220,20,13)" fg:x="222" fg:w="2"/><text x="47.6859%" y="447.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (2 samples, 0.43%)</title><rect x="47.4359%" y="421" width="0.4274%" height="15" fill="rgb(210,164,35)" fg:x="222" fg:w="2"/><text x="47.6859%" y="431.50"></text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (1 samples, 0.21%)</title><rect x="47.6496%" y="405" width="0.2137%" height="15" fill="rgb(248,109,41)" fg:x="223" fg:w="1"/><text x="47.8996%" y="415.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="47.6496%" y="389" width="0.2137%" height="15" fill="rgb(238,23,50)" fg:x="223" fg:w="1"/><text x="47.8996%" y="399.50"></text></g><g><title>rust-gkat`DYLD-STUB$$std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="47.6496%" y="373" width="0.2137%" height="15" fill="rgb(211,48,49)" fg:x="223" fg:w="1"/><text x="47.8996%" y="383.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="47.8632%" y="453" width="0.2137%" height="15" fill="rgb(223,36,21)" fg:x="224" fg:w="1"/><text x="48.1132%" y="463.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="47.8632%" y="437" width="0.2137%" height="15" fill="rgb(207,123,46)" fg:x="224" fg:w="1"/><text x="48.1132%" y="447.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="47.8632%" y="421" width="0.2137%" height="15" fill="rgb(240,218,32)" fg:x="224" fg:w="1"/><text x="48.1132%" y="431.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="47.8632%" y="405" width="0.2137%" height="15" fill="rgb(252,5,43)" fg:x="224" fg:w="1"/><text x="48.1132%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="47.8632%" y="389" width="0.2137%" height="15" fill="rgb(252,84,19)" fg:x="224" fg:w="1"/><text x="48.1132%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.21%)</title><rect x="47.8632%" y="373" width="0.2137%" height="15" fill="rgb(243,152,39)" fg:x="224" fg:w="1"/><text x="48.1132%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (16 samples, 3.42%)</title><rect x="44.8718%" y="565" width="3.4188%" height="15" fill="rgb(234,160,15)" fg:x="210" fg:w="16"/><text x="45.1218%" y="575.50">rus..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (14 samples, 2.99%)</title><rect x="45.2991%" y="549" width="2.9915%" height="15" fill="rgb(237,34,20)" fg:x="212" fg:w="14"/><text x="45.5491%" y="559.50">rus..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (12 samples, 2.56%)</title><rect x="45.7265%" y="533" width="2.5641%" height="15" fill="rgb(229,97,13)" fg:x="214" fg:w="12"/><text x="45.9765%" y="543.50">ru..</text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (7 samples, 1.50%)</title><rect x="46.7949%" y="517" width="1.4957%" height="15" fill="rgb(234,71,50)" fg:x="219" fg:w="7"/><text x="47.0449%" y="527.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (4 samples, 0.85%)</title><rect x="47.4359%" y="501" width="0.8547%" height="15" fill="rgb(253,155,4)" fg:x="222" fg:w="4"/><text x="47.6859%" y="511.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (4 samples, 0.85%)</title><rect x="47.4359%" y="485" width="0.8547%" height="15" fill="rgb(222,185,37)" fg:x="222" fg:w="4"/><text x="47.6859%" y="495.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (2 samples, 0.43%)</title><rect x="47.8632%" y="469" width="0.4274%" height="15" fill="rgb(251,177,13)" fg:x="224" fg:w="2"/><text x="48.1132%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::derivative::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::epsilon (1 samples, 0.21%)</title><rect x="48.0769%" y="453" width="0.2137%" height="15" fill="rgb(250,179,40)" fg:x="225" fg:w="1"/><text x="48.3269%" y="463.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="48.0769%" y="437" width="0.2137%" height="15" fill="rgb(242,44,2)" fg:x="225" fg:w="1"/><text x="48.3269%" y="447.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="48.0769%" y="421" width="0.2137%" height="15" fill="rgb(216,177,13)" fg:x="225" fg:w="1"/><text x="48.3269%" y="431.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="48.0769%" y="405" width="0.2137%" height="15" fill="rgb(216,106,43)" fg:x="225" fg:w="1"/><text x="48.3269%" y="415.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="48.0769%" y="389" width="0.2137%" height="15" fill="rgb(216,183,2)" fg:x="225" fg:w="1"/><text x="48.3269%" y="399.50"></text></g><g><title>rust-gkat`bv_rewriter::bv_rewriter (1 samples, 0.21%)</title><rect x="48.0769%" y="373" width="0.2137%" height="15" fill="rgb(249,75,3)" fg:x="225" fg:w="1"/><text x="48.3269%" y="383.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="48.0769%" y="357" width="0.2137%" height="15" fill="rgb(219,67,39)" fg:x="225" fg:w="1"/><text x="48.3269%" y="367.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_and_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="48.2906%" y="485" width="0.4274%" height="15" fill="rgb(253,228,2)" fg:x="226" fg:w="2"/><text x="48.5406%" y="495.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (3 samples, 0.64%)</title><rect x="48.2906%" y="501" width="0.6410%" height="15" fill="rgb(235,138,27)" fg:x="226" fg:w="3"/><text x="48.5406%" y="511.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="48.7179%" y="485" width="0.2137%" height="15" fill="rgb(236,97,51)" fg:x="228" fg:w="1"/><text x="48.9679%" y="495.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (5 samples, 1.07%)</title><rect x="48.2906%" y="517" width="1.0684%" height="15" fill="rgb(240,80,30)" fg:x="226" fg:w="5"/><text x="48.5406%" y="527.50"></text></g><g><title>rust-gkat`act_cache::find (2 samples, 0.43%)</title><rect x="48.9316%" y="501" width="0.4274%" height="15" fill="rgb(230,178,19)" fg:x="229" fg:w="2"/><text x="49.1816%" y="511.50"></text></g><g><title>rust-gkat`char_rewriter::char_rewriter (1 samples, 0.21%)</title><rect x="49.3590%" y="501" width="0.2137%" height="15" fill="rgb(210,190,27)" fg:x="231" fg:w="1"/><text x="49.6090%" y="511.50"></text></g><g><title>rust-gkat`array_util::array_util (1 samples, 0.21%)</title><rect x="49.5726%" y="485" width="0.2137%" height="15" fill="rgb(222,107,31)" fg:x="232" fg:w="1"/><text x="49.8226%" y="495.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="49.5726%" y="469" width="0.2137%" height="15" fill="rgb(216,127,34)" fg:x="232" fg:w="1"/><text x="49.8226%" y="479.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="49.5726%" y="453" width="0.2137%" height="15" fill="rgb(234,116,52)" fg:x="232" fg:w="1"/><text x="49.8226%" y="463.50"></text></g><g><title>rust-gkat`datatype::util::util (1 samples, 0.21%)</title><rect x="49.7863%" y="485" width="0.2137%" height="15" fill="rgb(222,124,15)" fg:x="233" fg:w="1"/><text x="50.0363%" y="495.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="49.7863%" y="469" width="0.2137%" height="15" fill="rgb(231,179,28)" fg:x="233" fg:w="1"/><text x="50.0363%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="49.7863%" y="453" width="0.2137%" height="15" fill="rgb(226,93,45)" fg:x="233" fg:w="1"/><text x="50.0363%" y="463.50"></text></g><g><title>rust-gkat`fpa_rewriter::fpa_rewriter (1 samples, 0.21%)</title><rect x="50.0000%" y="485" width="0.2137%" height="15" fill="rgb(215,8,51)" fg:x="234" fg:w="1"/><text x="50.2500%" y="495.50"></text></g><g><title>rust-gkat`fpa_util::fpa_util (1 samples, 0.21%)</title><rect x="50.0000%" y="469" width="0.2137%" height="15" fill="rgb(223,106,5)" fg:x="234" fg:w="1"/><text x="50.2500%" y="479.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="50.0000%" y="453" width="0.2137%" height="15" fill="rgb(250,191,5)" fg:x="234" fg:w="1"/><text x="50.2500%" y="463.50"></text></g><g><title>rust-gkat`DYLD-STUB$$std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="50.0000%" y="437" width="0.2137%" height="15" fill="rgb(242,132,44)" fg:x="234" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="50.2137%" y="485" width="0.2137%" height="15" fill="rgb(251,152,29)" fg:x="235" fg:w="1"/><text x="50.4637%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.21%)</title><rect x="50.4274%" y="453" width="0.2137%" height="15" fill="rgb(218,179,5)" fg:x="236" fg:w="1"/><text x="50.6774%" y="463.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="50.6410%" y="437" width="0.2137%" height="15" fill="rgb(227,67,19)" fg:x="237" fg:w="1"/><text x="50.8910%" y="447.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="50.6410%" y="421" width="0.2137%" height="15" fill="rgb(233,119,31)" fg:x="237" fg:w="1"/><text x="50.8910%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="50.6410%" y="405" width="0.2137%" height="15" fill="rgb(241,120,22)" fg:x="237" fg:w="1"/><text x="50.8910%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="50.6410%" y="389" width="0.2137%" height="15" fill="rgb(224,102,30)" fg:x="237" fg:w="1"/><text x="50.8910%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.21%)</title><rect x="50.6410%" y="373" width="0.2137%" height="15" fill="rgb(210,164,37)" fg:x="237" fg:w="1"/><text x="50.8910%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (8 samples, 1.71%)</title><rect x="49.3590%" y="517" width="1.7094%" height="15" fill="rgb(226,191,16)" fg:x="231" fg:w="8"/><text x="49.6090%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (7 samples, 1.50%)</title><rect x="49.5726%" y="501" width="1.4957%" height="15" fill="rgb(214,40,45)" fg:x="232" fg:w="7"/><text x="49.8226%" y="511.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::rewriter_tpl(ast_manager&amp;, bool,  (3 samples, 0.64%)</title><rect x="50.4274%" y="485" width="0.6410%" height="15" fill="rgb(244,29,26)" fg:x="236" fg:w="3"/><text x="50.6774%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (3 samples, 0.64%)</title><rect x="50.4274%" y="469" width="0.6410%" height="15" fill="rgb(216,16,5)" fg:x="236" fg:w="3"/><text x="50.6774%" y="479.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (2 samples, 0.43%)</title><rect x="50.6410%" y="453" width="0.4274%" height="15" fill="rgb(249,76,35)" fg:x="237" fg:w="2"/><text x="50.8910%" y="463.50"></text></g><g><title>rust-gkat`vector&lt;act_cache*, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="50.8547%" y="437" width="0.2137%" height="15" fill="rgb(207,11,44)" fg:x="238" fg:w="1"/><text x="51.1047%" y="447.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="50.8547%" y="421" width="0.2137%" height="15" fill="rgb(228,190,49)" fg:x="238" fg:w="1"/><text x="51.1047%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="50.8547%" y="405" width="0.2137%" height="15" fill="rgb(214,173,12)" fg:x="238" fg:w="1"/><text x="51.1047%" y="415.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="51.0684%" y="501" width="0.2137%" height="15" fill="rgb(218,26,35)" fg:x="239" fg:w="1"/><text x="51.3184%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="51.0684%" y="485" width="0.2137%" height="15" fill="rgb(220,200,19)" fg:x="239" fg:w="1"/><text x="51.3184%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.21%)</title><rect x="51.0684%" y="469" width="0.2137%" height="15" fill="rgb(239,95,49)" fg:x="239" fg:w="1"/><text x="51.3184%" y="479.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="51.2821%" y="501" width="0.2137%" height="15" fill="rgb(235,85,53)" fg:x="240" fg:w="1"/><text x="51.5321%" y="511.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="51.2821%" y="485" width="0.2137%" height="15" fill="rgb(233,133,31)" fg:x="240" fg:w="1"/><text x="51.5321%" y="495.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="51.2821%" y="469" width="0.2137%" height="15" fill="rgb(218,25,20)" fg:x="240" fg:w="1"/><text x="51.5321%" y="479.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="51.2821%" y="453" width="0.2137%" height="15" fill="rgb(252,210,38)" fg:x="240" fg:w="1"/><text x="51.5321%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.21%)</title><rect x="51.4957%" y="453" width="0.2137%" height="15" fill="rgb(242,134,21)" fg:x="241" fg:w="1"/><text x="51.7457%" y="463.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (2 samples, 0.43%)</title><rect x="51.4957%" y="501" width="0.4274%" height="15" fill="rgb(213,28,48)" fg:x="241" fg:w="2"/><text x="51.7457%" y="511.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (2 samples, 0.43%)</title><rect x="51.4957%" y="485" width="0.4274%" height="15" fill="rgb(250,196,2)" fg:x="241" fg:w="2"/><text x="51.7457%" y="495.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (2 samples, 0.43%)</title><rect x="51.4957%" y="469" width="0.4274%" height="15" fill="rgb(227,5,17)" fg:x="241" fg:w="2"/><text x="51.7457%" y="479.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="51.7094%" y="453" width="0.2137%" height="15" fill="rgb(221,226,24)" fg:x="242" fg:w="1"/><text x="51.9594%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.21%)</title><rect x="51.7094%" y="437" width="0.2137%" height="15" fill="rgb(211,5,48)" fg:x="242" fg:w="1"/><text x="51.9594%" y="447.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="51.9231%" y="485" width="0.2137%" height="15" fill="rgb(219,150,6)" fg:x="243" fg:w="1"/><text x="52.1731%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.21%)</title><rect x="51.9231%" y="469" width="0.2137%" height="15" fill="rgb(251,46,16)" fg:x="243" fg:w="1"/><text x="52.1731%" y="479.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::solver::Solver::reject (19 samples, 4.06%)</title><rect x="48.2906%" y="565" width="4.0598%" height="15" fill="rgb(220,204,40)" fg:x="226" fg:w="19"/><text x="48.5406%" y="575.50">rust..</text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (19 samples, 4.06%)</title><rect x="48.2906%" y="549" width="4.0598%" height="15" fill="rgb(211,85,2)" fg:x="226" fg:w="19"/><text x="48.5406%" y="559.50">rust..</text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (19 samples, 4.06%)</title><rect x="48.2906%" y="533" width="4.0598%" height="15" fill="rgb(229,17,7)" fg:x="226" fg:w="19"/><text x="48.5406%" y="543.50">rust..</text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (6 samples, 1.28%)</title><rect x="51.0684%" y="517" width="1.2821%" height="15" fill="rgb(239,72,28)" fg:x="239" fg:w="6"/><text x="51.3184%" y="527.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (2 samples, 0.43%)</title><rect x="51.9231%" y="501" width="0.4274%" height="15" fill="rgb(230,47,54)" fg:x="243" fg:w="2"/><text x="52.1731%" y="511.50"></text></g><g><title>rust-gkat`seq_rewriter::~seq_rewriter (1 samples, 0.21%)</title><rect x="52.1368%" y="485" width="0.2137%" height="15" fill="rgb(214,50,8)" fg:x="244" fg:w="1"/><text x="52.3868%" y="495.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="52.1368%" y="469" width="0.2137%" height="15" fill="rgb(216,198,43)" fg:x="244" fg:w="1"/><text x="52.3868%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.21%)</title><rect x="52.1368%" y="453" width="0.2137%" height="15" fill="rgb(234,20,35)" fg:x="244" fg:w="1"/><text x="52.3868%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.21%)</title><rect x="52.1368%" y="437" width="0.2137%" height="15" fill="rgb(254,45,19)" fg:x="244" fg:w="1"/><text x="52.3868%" y="447.50"></text></g><g><title>rust-gkat`DYLD-STUB$$strcmp (1 samples, 0.21%)</title><rect x="52.3504%" y="373" width="0.2137%" height="15" fill="rgb(219,14,44)" fg:x="245" fg:w="1"/><text x="52.6004%" y="383.50"></text></g><g><title>rust-gkat`params_ref::get_bool (2 samples, 0.43%)</title><rect x="52.3504%" y="389" width="0.4274%" height="15" fill="rgb(217,220,26)" fg:x="245" fg:w="2"/><text x="52.6004%" y="399.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="52.5641%" y="373" width="0.2137%" height="15" fill="rgb(213,158,28)" fg:x="246" fg:w="1"/><text x="52.8141%" y="383.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::updt_local_params (3 samples, 0.64%)</title><rect x="52.3504%" y="405" width="0.6410%" height="15" fill="rgb(252,51,52)" fg:x="245" fg:w="3"/><text x="52.6004%" y="415.50"></text></g><g><title>rust-gkat`params_ref::get_uint (1 samples, 0.21%)</title><rect x="52.7778%" y="389" width="0.2137%" height="15" fill="rgb(246,89,16)" fg:x="247" fg:w="1"/><text x="53.0278%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="52.7778%" y="373" width="0.2137%" height="15" fill="rgb(216,158,49)" fg:x="247" fg:w="1"/><text x="53.0278%" y="383.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="52.9915%" y="389" width="0.2137%" height="15" fill="rgb(236,107,19)" fg:x="248" fg:w="1"/><text x="53.2415%" y="399.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="52.9915%" y="373" width="0.2137%" height="15" fill="rgb(228,185,30)" fg:x="248" fg:w="1"/><text x="53.2415%" y="383.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="52.9915%" y="357" width="0.2137%" height="15" fill="rgb(246,134,8)" fg:x="248" fg:w="1"/><text x="53.2415%" y="367.50"></text></g><g><title>rust-gkat`array_rewriter::updt_params (1 samples, 0.21%)</title><rect x="53.2051%" y="389" width="0.2137%" height="15" fill="rgb(214,143,50)" fg:x="249" fg:w="1"/><text x="53.4551%" y="399.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="53.2051%" y="373" width="0.2137%" height="15" fill="rgb(228,75,8)" fg:x="249" fg:w="1"/><text x="53.4551%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="53.2051%" y="357" width="0.2137%" height="15" fill="rgb(207,175,4)" fg:x="249" fg:w="1"/><text x="53.4551%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.21%)</title><rect x="53.2051%" y="341" width="0.2137%" height="15" fill="rgb(205,108,24)" fg:x="249" fg:w="1"/><text x="53.4551%" y="351.50"></text></g><g><title>rust-gkat`fpa_rewriter::updt_params (1 samples, 0.21%)</title><rect x="53.4188%" y="389" width="0.2137%" height="15" fill="rgb(244,120,49)" fg:x="250" fg:w="1"/><text x="53.6688%" y="399.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="53.4188%" y="373" width="0.2137%" height="15" fill="rgb(223,47,38)" fg:x="250" fg:w="1"/><text x="53.6688%" y="383.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (7 samples, 1.50%)</title><rect x="52.3504%" y="421" width="1.4957%" height="15" fill="rgb(229,179,11)" fg:x="245" fg:w="7"/><text x="52.6004%" y="431.50"></text></g><g><title>rust-gkat`th_rewriter::updt_params (4 samples, 0.85%)</title><rect x="52.9915%" y="405" width="0.8547%" height="15" fill="rgb(231,122,1)" fg:x="248" fg:w="4"/><text x="53.2415%" y="415.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="53.6325%" y="389" width="0.2137%" height="15" fill="rgb(245,119,9)" fg:x="251" fg:w="1"/><text x="53.8825%" y="399.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="54.2735%" y="389" width="0.2137%" height="15" fill="rgb(241,163,25)" fg:x="254" fg:w="1"/><text x="54.5235%" y="399.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_implies(expr*, expr*, obj_ref (1 samples, 0.21%)</title><rect x="54.2735%" y="373" width="0.2137%" height="15" fill="rgb(217,214,3)" fg:x="254" fg:w="1"/><text x="54.5235%" y="383.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="54.2735%" y="357" width="0.2137%" height="15" fill="rgb(240,86,28)" fg:x="254" fg:w="1"/><text x="54.5235%" y="367.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="54.2735%" y="341" width="0.2137%" height="15" fill="rgb(215,47,9)" fg:x="254" fg:w="1"/><text x="54.5235%" y="351.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="54.2735%" y="325" width="0.2137%" height="15" fill="rgb(252,25,45)" fg:x="254" fg:w="1"/><text x="54.5235%" y="335.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="54.2735%" y="309" width="0.2137%" height="15" fill="rgb(251,164,9)" fg:x="254" fg:w="1"/><text x="54.5235%" y="319.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_and_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="54.4872%" y="389" width="0.2137%" height="15" fill="rgb(233,194,0)" fg:x="255" fg:w="1"/><text x="54.7372%" y="399.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="54.7009%" y="389" width="0.2137%" height="15" fill="rgb(249,111,24)" fg:x="256" fg:w="1"/><text x="54.9509%" y="399.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (4 samples, 0.85%)</title><rect x="54.2735%" y="405" width="0.8547%" height="15" fill="rgb(250,223,3)" fg:x="254" fg:w="4"/><text x="54.5235%" y="415.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="54.9145%" y="389" width="0.2137%" height="15" fill="rgb(236,178,37)" fg:x="257" fg:w="1"/><text x="55.1645%" y="399.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="54.9145%" y="373" width="0.2137%" height="15" fill="rgb(241,158,50)" fg:x="257" fg:w="1"/><text x="55.1645%" y="383.50"></text></g><g><title>rust-gkat`act_cache::insert (2 samples, 0.43%)</title><rect x="55.1282%" y="405" width="0.4274%" height="15" fill="rgb(213,121,41)" fg:x="258" fg:w="2"/><text x="55.3782%" y="415.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (2 samples, 0.43%)</title><rect x="55.1282%" y="389" width="0.4274%" height="15" fill="rgb(240,92,3)" fg:x="258" fg:w="2"/><text x="55.3782%" y="399.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (1 samples, 0.21%)</title><rect x="55.3419%" y="373" width="0.2137%" height="15" fill="rgb(205,123,3)" fg:x="259" fg:w="1"/><text x="55.5919%" y="383.50"></text></g><g><title>rust-gkat`ast_manager::check_args (1 samples, 0.21%)</title><rect x="55.5556%" y="373" width="0.2137%" height="15" fill="rgb(205,97,47)" fg:x="260" fg:w="1"/><text x="55.8056%" y="383.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="55.5556%" y="405" width="0.4274%" height="15" fill="rgb(247,152,14)" fg:x="260" fg:w="2"/><text x="55.8056%" y="415.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (2 samples, 0.43%)</title><rect x="55.5556%" y="389" width="0.4274%" height="15" fill="rgb(248,195,53)" fg:x="260" fg:w="2"/><text x="55.8056%" y="399.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="55.7692%" y="373" width="0.2137%" height="15" fill="rgb(226,201,16)" fg:x="261" fg:w="1"/><text x="56.0192%" y="383.50"></text></g><g><title>rust-gkat`get_node_hash(ast const*) (1 samples, 0.21%)</title><rect x="55.7692%" y="357" width="0.2137%" height="15" fill="rgb(205,98,0)" fg:x="261" fg:w="1"/><text x="56.0192%" y="367.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (1 samples, 0.21%)</title><rect x="56.1966%" y="389" width="0.2137%" height="15" fill="rgb(214,191,48)" fg:x="263" fg:w="1"/><text x="56.4466%" y="399.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (4 samples, 0.85%)</title><rect x="55.9829%" y="405" width="0.8547%" height="15" fill="rgb(237,112,39)" fg:x="262" fg:w="4"/><text x="56.2329%" y="415.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (2 samples, 0.43%)</title><rect x="56.4103%" y="389" width="0.4274%" height="15" fill="rgb(247,203,27)" fg:x="264" fg:w="2"/><text x="56.6603%" y="399.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (22 samples, 4.70%)</title><rect x="52.3504%" y="437" width="4.7009%" height="15" fill="rgb(235,124,28)" fg:x="245" fg:w="22"/><text x="52.6004%" y="447.50">rust-..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (15 samples, 3.21%)</title><rect x="53.8462%" y="421" width="3.2051%" height="15" fill="rgb(208,207,46)" fg:x="252" fg:w="15"/><text x="54.0962%" y="431.50">rus..</text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="56.8376%" y="405" width="0.2137%" height="15" fill="rgb(234,176,4)" fg:x="266" fg:w="1"/><text x="57.0876%" y="415.50"></text></g><g><title>rust-gkat`asserted_formulas::commit (3 samples, 0.64%)</title><rect x="57.0513%" y="421" width="0.6410%" height="15" fill="rgb(230,133,28)" fg:x="267" fg:w="3"/><text x="57.3013%" y="431.50"></text></g><g><title>rust-gkat`macro_manager::mark_forbidden (3 samples, 0.64%)</title><rect x="57.0513%" y="405" width="0.6410%" height="15" fill="rgb(211,137,40)" fg:x="267" fg:w="3"/><text x="57.3013%" y="415.50"></text></g><g><title>rust-gkat`void for_each_expr_core&lt;macro_manager_ns::proc, obj_mark&lt;expr, bit_vector, default_t2uint&lt;expr&gt;&gt;, true, false&gt;(macro_manager_ns::proc&amp;, obj_mark&lt;expr, bit_vector, default_t2uint (3 samples, 0.64%)</title><rect x="57.0513%" y="389" width="0.6410%" height="15" fill="rgb(254,35,13)" fg:x="267" fg:w="3"/><text x="57.3013%" y="399.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="57.6923%" y="357" width="0.2137%" height="15" fill="rgb(225,49,51)" fg:x="270" fg:w="1"/><text x="57.9423%" y="367.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="57.6923%" y="341" width="0.2137%" height="15" fill="rgb(251,10,15)" fg:x="270" fg:w="1"/><text x="57.9423%" y="351.50"></text></g><g><title>rust-gkat`unsigned int ast_array_hash&lt;expr&gt;(expr* const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="57.6923%" y="325" width="0.2137%" height="15" fill="rgb(228,207,15)" fg:x="270" fg:w="1"/><text x="57.9423%" y="335.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="57.6923%" y="373" width="0.4274%" height="15" fill="rgb(241,99,19)" fg:x="270" fg:w="2"/><text x="57.9423%" y="383.50"></text></g><g><title>rust-gkat`basic_decl_plugin::mk_func_decl (1 samples, 0.21%)</title><rect x="57.9060%" y="357" width="0.2137%" height="15" fill="rgb(207,104,49)" fg:x="271" fg:w="1"/><text x="58.1560%" y="367.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="58.1197%" y="373" width="0.2137%" height="15" fill="rgb(234,99,18)" fg:x="272" fg:w="1"/><text x="58.3697%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="58.3333%" y="341" width="0.2137%" height="15" fill="rgb(213,191,49)" fg:x="273" fg:w="1"/><text x="58.5833%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::flatten_clauses (5 samples, 1.07%)</title><rect x="57.6923%" y="389" width="1.0684%" height="15" fill="rgb(210,226,19)" fg:x="270" fg:w="5"/><text x="57.9423%" y="399.50"></text></g><g><title>rust-gkat`vector&lt;justified_expr, true, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="58.3333%" y="373" width="0.4274%" height="15" fill="rgb(229,97,18)" fg:x="273" fg:w="2"/><text x="58.5833%" y="383.50"></text></g><g><title>rust-gkat`memory::allocate (2 samples, 0.43%)</title><rect x="58.3333%" y="357" width="0.4274%" height="15" fill="rgb(211,167,15)" fg:x="273" fg:w="2"/><text x="58.5833%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="58.5470%" y="341" width="0.2137%" height="15" fill="rgb(210,169,34)" fg:x="274" fg:w="1"/><text x="58.7970%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="58.5470%" y="325" width="0.2137%" height="15" fill="rgb(241,121,31)" fg:x="274" fg:w="1"/><text x="58.7970%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.21%)</title><rect x="58.5470%" y="309" width="0.2137%" height="15" fill="rgb(232,40,11)" fg:x="274" fg:w="1"/><text x="58.7970%" y="319.50"></text></g><g><title>rust-gkat`name_quantifier_labels::name_quantifier_labels (1 samples, 0.21%)</title><rect x="58.7607%" y="341" width="0.2137%" height="15" fill="rgb(205,86,26)" fg:x="275" fg:w="1"/><text x="59.0107%" y="351.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;name_exprs_core::cfg&gt;::rewriter_tpl (1 samples, 0.21%)</title><rect x="58.7607%" y="325" width="0.2137%" height="15" fill="rgb(231,126,28)" fg:x="275" fg:w="1"/><text x="59.0107%" y="335.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="58.7607%" y="309" width="0.2137%" height="15" fill="rgb(219,221,18)" fg:x="275" fg:w="1"/><text x="59.0107%" y="319.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="58.7607%" y="293" width="0.2137%" height="15" fill="rgb(211,40,0)" fg:x="275" fg:w="1"/><text x="59.0107%" y="303.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="58.7607%" y="277" width="0.2137%" height="15" fill="rgb(239,85,43)" fg:x="275" fg:w="1"/><text x="59.0107%" y="287.50"></text></g><g><title>rust-gkat`DYLD-STUB$$malloc (1 samples, 0.21%)</title><rect x="58.7607%" y="261" width="0.2137%" height="15" fill="rgb(231,55,21)" fg:x="275" fg:w="1"/><text x="59.0107%" y="271.50"></text></g><g><title>rust-gkat`nnf::nnf (2 samples, 0.43%)</title><rect x="58.7607%" y="373" width="0.4274%" height="15" fill="rgb(225,184,43)" fg:x="275" fg:w="2"/><text x="59.0107%" y="383.50"></text></g><g><title>rust-gkat`nnf::imp::imp (2 samples, 0.43%)</title><rect x="58.7607%" y="357" width="0.4274%" height="15" fill="rgb(251,158,41)" fg:x="275" fg:w="2"/><text x="59.0107%" y="367.50"></text></g><g><title>rust-gkat`skolemizer::skolemizer (1 samples, 0.21%)</title><rect x="58.9744%" y="341" width="0.2137%" height="15" fill="rgb(234,159,37)" fg:x="276" fg:w="1"/><text x="59.2244%" y="351.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="58.9744%" y="325" width="0.2137%" height="15" fill="rgb(216,204,22)" fg:x="276" fg:w="1"/><text x="59.2244%" y="335.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="58.9744%" y="309" width="0.2137%" height="15" fill="rgb(214,17,3)" fg:x="276" fg:w="1"/><text x="59.2244%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="58.9744%" y="293" width="0.2137%" height="15" fill="rgb(212,111,17)" fg:x="276" fg:w="1"/><text x="59.2244%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="58.9744%" y="277" width="0.2137%" height="15" fill="rgb(221,157,24)" fg:x="276" fg:w="1"/><text x="59.2244%" y="287.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="59.1880%" y="357" width="0.4274%" height="15" fill="rgb(252,16,13)" fg:x="277" fg:w="2"/><text x="59.4380%" y="367.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="59.1880%" y="341" width="0.4274%" height="15" fill="rgb(221,62,2)" fg:x="277" fg:w="2"/><text x="59.4380%" y="351.50"></text></g><g><title>rust-gkat`act_cache::insert (1 samples, 0.21%)</title><rect x="59.6154%" y="357" width="0.2137%" height="15" fill="rgb(247,87,22)" fg:x="279" fg:w="1"/><text x="59.8654%" y="367.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="59.6154%" y="341" width="0.2137%" height="15" fill="rgb(215,73,9)" fg:x="279" fg:w="1"/><text x="59.8654%" y="351.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (1 samples, 0.21%)</title><rect x="59.6154%" y="325" width="0.2137%" height="15" fill="rgb(207,175,33)" fg:x="279" fg:w="1"/><text x="59.8654%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (8 samples, 1.71%)</title><rect x="58.7607%" y="389" width="1.7094%" height="15" fill="rgb(243,129,54)" fg:x="275" fg:w="8"/><text x="59.0107%" y="399.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (6 samples, 1.28%)</title><rect x="59.1880%" y="373" width="1.2821%" height="15" fill="rgb(227,119,45)" fg:x="277" fg:w="6"/><text x="59.4380%" y="383.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (3 samples, 0.64%)</title><rect x="59.8291%" y="357" width="0.6410%" height="15" fill="rgb(205,109,36)" fg:x="280" fg:w="3"/><text x="60.0791%" y="367.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (3 samples, 0.64%)</title><rect x="59.8291%" y="341" width="0.6410%" height="15" fill="rgb(205,6,39)" fg:x="280" fg:w="3"/><text x="60.0791%" y="351.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="60.4701%" y="357" width="0.2137%" height="15" fill="rgb(221,32,16)" fg:x="283" fg:w="1"/><text x="60.7201%" y="367.50"></text></g><g><title>rust-gkat`obj_ref&lt;expr, ast_manager&gt;::operator= (1 samples, 0.21%)</title><rect x="60.6838%" y="357" width="0.2137%" height="15" fill="rgb(228,144,50)" fg:x="284" fg:w="1"/><text x="60.9338%" y="367.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="62.3932%" y="325" width="0.2137%" height="15" fill="rgb(229,201,53)" fg:x="292" fg:w="1"/><text x="62.6432%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_and_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="62.6068%" y="325" width="0.4274%" height="15" fill="rgb(249,153,27)" fg:x="293" fg:w="2"/><text x="62.8568%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="63.0342%" y="325" width="0.2137%" height="15" fill="rgb(227,106,25)" fg:x="295" fg:w="1"/><text x="63.2842%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_and_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="63.2479%" y="325" width="0.4274%" height="15" fill="rgb(230,65,29)" fg:x="296" fg:w="2"/><text x="63.4979%" y="335.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="63.6752%" y="309" width="0.2137%" height="15" fill="rgb(221,57,46)" fg:x="298" fg:w="1"/><text x="63.9252%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="63.6752%" y="293" width="0.2137%" height="15" fill="rgb(229,161,17)" fg:x="298" fg:w="1"/><text x="63.9252%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="63.6752%" y="277" width="0.2137%" height="15" fill="rgb(222,213,11)" fg:x="298" fg:w="1"/><text x="63.9252%" y="287.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (1 samples, 0.21%)</title><rect x="63.6752%" y="261" width="0.2137%" height="15" fill="rgb(235,35,13)" fg:x="298" fg:w="1"/><text x="63.9252%" y="271.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (10 samples, 2.14%)</title><rect x="61.9658%" y="341" width="2.1368%" height="15" fill="rgb(233,158,34)" fg:x="290" fg:w="10"/><text x="62.2158%" y="351.50">r..</text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="63.6752%" y="325" width="0.4274%" height="15" fill="rgb(215,151,48)" fg:x="298" fg:w="2"/><text x="63.9252%" y="335.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="63.8889%" y="309" width="0.2137%" height="15" fill="rgb(229,84,14)" fg:x="299" fg:w="1"/><text x="64.1389%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="64.3162%" y="293" width="0.2137%" height="15" fill="rgb(229,68,14)" fg:x="301" fg:w="1"/><text x="64.5662%" y="303.50"></text></g><g><title>rust-gkat`act_cache::insert (3 samples, 0.64%)</title><rect x="64.1026%" y="341" width="0.6410%" height="15" fill="rgb(243,106,26)" fg:x="300" fg:w="3"/><text x="64.3526%" y="351.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (2 samples, 0.43%)</title><rect x="64.3162%" y="325" width="0.4274%" height="15" fill="rgb(206,45,38)" fg:x="301" fg:w="2"/><text x="64.5662%" y="335.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (2 samples, 0.43%)</title><rect x="64.3162%" y="309" width="0.4274%" height="15" fill="rgb(226,6,15)" fg:x="301" fg:w="2"/><text x="64.5662%" y="319.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="64.5299%" y="293" width="0.2137%" height="15" fill="rgb(232,22,54)" fg:x="302" fg:w="1"/><text x="64.7799%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.21%)</title><rect x="64.5299%" y="277" width="0.2137%" height="15" fill="rgb(229,222,32)" fg:x="302" fg:w="1"/><text x="64.7799%" y="287.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="64.9573%" y="325" width="0.2137%" height="15" fill="rgb(228,62,29)" fg:x="304" fg:w="1"/><text x="65.2073%" y="335.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (5 samples, 1.07%)</title><rect x="64.7436%" y="341" width="1.0684%" height="15" fill="rgb(251,103,34)" fg:x="303" fg:w="5"/><text x="64.9936%" y="351.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (3 samples, 0.64%)</title><rect x="65.1709%" y="325" width="0.6410%" height="15" fill="rgb(233,12,30)" fg:x="305" fg:w="3"/><text x="65.4209%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (26 samples, 5.56%)</title><rect x="60.4701%" y="373" width="5.5556%" height="15" fill="rgb(238,52,0)" fg:x="283" fg:w="26"/><text x="60.7201%" y="383.50">rust-gk..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (24 samples, 5.13%)</title><rect x="60.8974%" y="357" width="5.1282%" height="15" fill="rgb(223,98,5)" fg:x="285" fg:w="24"/><text x="61.1474%" y="367.50">rust-g..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::check_max_steps (1 samples, 0.21%)</title><rect x="65.8120%" y="341" width="0.2137%" height="15" fill="rgb(228,75,37)" fg:x="308" fg:w="1"/><text x="66.0620%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.21%)</title><rect x="66.0256%" y="325" width="0.2137%" height="15" fill="rgb(205,115,49)" fg:x="309" fg:w="1"/><text x="66.2756%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (28 samples, 5.98%)</title><rect x="60.4701%" y="389" width="5.9829%" height="15" fill="rgb(250,154,43)" fg:x="283" fg:w="28"/><text x="60.7201%" y="399.50">rust-gka..</text></g><g><title>rust-gkat`th_rewriter::reset (2 samples, 0.43%)</title><rect x="66.0256%" y="373" width="0.4274%" height="15" fill="rgb(226,43,29)" fg:x="309" fg:w="2"/><text x="66.2756%" y="383.50"></text></g><g><title>rust-gkat`rewriter_core::reset (2 samples, 0.43%)</title><rect x="66.0256%" y="357" width="0.4274%" height="15" fill="rgb(249,228,39)" fg:x="309" fg:w="2"/><text x="66.2756%" y="367.50"></text></g><g><title>rust-gkat`act_cache::reset (2 samples, 0.43%)</title><rect x="66.0256%" y="341" width="0.4274%" height="15" fill="rgb(216,79,43)" fg:x="309" fg:w="2"/><text x="66.2756%" y="351.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="66.2393%" y="325" width="0.2137%" height="15" fill="rgb(228,95,12)" fg:x="310" fg:w="1"/><text x="66.4893%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="67.7350%" y="325" width="0.2137%" height="15" fill="rgb(249,221,15)" fg:x="317" fg:w="1"/><text x="67.9850%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_and_as_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="67.7350%" y="309" width="0.2137%" height="15" fill="rgb(233,34,13)" fg:x="317" fg:w="1"/><text x="67.9850%" y="319.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_not_core(expr*, obj_ref (1 samples, 0.21%)</title><rect x="67.7350%" y="293" width="0.2137%" height="15" fill="rgb(214,103,39)" fg:x="317" fg:w="1"/><text x="67.9850%" y="303.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (1 samples, 0.21%)</title><rect x="67.9487%" y="261" width="0.2137%" height="15" fill="rgb(251,126,39)" fg:x="318" fg:w="1"/><text x="68.1987%" y="271.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (2 samples, 0.43%)</title><rect x="67.9487%" y="277" width="0.4274%" height="15" fill="rgb(214,216,36)" fg:x="318" fg:w="2"/><text x="68.1987%" y="287.50"></text></g><g><title>rust-gkat`unsigned int ast_array_hash&lt;expr&gt;(expr* const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="68.1624%" y="261" width="0.2137%" height="15" fill="rgb(220,221,8)" fg:x="319" fg:w="1"/><text x="68.4124%" y="271.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (3 samples, 0.64%)</title><rect x="67.9487%" y="293" width="0.6410%" height="15" fill="rgb(240,216,3)" fg:x="318" fg:w="3"/><text x="68.1987%" y="303.50"></text></g><g><title>rust-gkat`small_object_allocator::allocate (1 samples, 0.21%)</title><rect x="68.3761%" y="277" width="0.2137%" height="15" fill="rgb(232,218,17)" fg:x="320" fg:w="1"/><text x="68.6261%" y="287.50"></text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="68.5897%" y="293" width="0.4274%" height="15" fill="rgb(229,163,45)" fg:x="321" fg:w="2"/><text x="68.8397%" y="303.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_or_core(unsigned int, expr* const*, obj_ref (6 samples, 1.28%)</title><rect x="67.9487%" y="325" width="1.2821%" height="15" fill="rgb(231,110,42)" fg:x="318" fg:w="6"/><text x="68.1987%" y="335.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (6 samples, 1.28%)</title><rect x="67.9487%" y="309" width="1.2821%" height="15" fill="rgb(208,170,48)" fg:x="318" fg:w="6"/><text x="68.1987%" y="319.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="69.0171%" y="293" width="0.2137%" height="15" fill="rgb(239,116,25)" fg:x="323" fg:w="1"/><text x="69.2671%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::coercion_needed (1 samples, 0.21%)</title><rect x="69.2308%" y="277" width="0.2137%" height="15" fill="rgb(219,200,50)" fg:x="324" fg:w="1"/><text x="69.4808%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="69.2308%" y="309" width="0.4274%" height="15" fill="rgb(245,200,0)" fg:x="324" fg:w="2"/><text x="69.4808%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (2 samples, 0.43%)</title><rect x="69.2308%" y="293" width="0.4274%" height="15" fill="rgb(245,119,33)" fg:x="324" fg:w="2"/><text x="69.4808%" y="303.50"></text></g><g><title>rust-gkat`unsigned int ast_array_hash&lt;expr&gt;(expr* const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="69.4444%" y="277" width="0.2137%" height="15" fill="rgb(231,125,12)" fg:x="325" fg:w="1"/><text x="69.6944%" y="287.50"></text></g><g><title>rust-gkat`core_hashtable&lt;obj_hash_entry&lt;expr&gt;, obj_ptr_hash&lt;expr&gt;, ptr_eq&lt;expr&gt;&gt;::insert (1 samples, 0.21%)</title><rect x="69.6581%" y="309" width="0.2137%" height="15" fill="rgb(216,96,41)" fg:x="326" fg:w="1"/><text x="69.9081%" y="319.50"></text></g><g><title>rust-gkat`hoist_rewriter::is_and(expr*, ref_vector (1 samples, 0.21%)</title><rect x="69.8718%" y="309" width="0.2137%" height="15" fill="rgb(248,43,45)" fg:x="327" fg:w="1"/><text x="70.1218%" y="319.50"></text></g><g><title>rust-gkat`core_hashtable&lt;obj_hash_entry&lt;expr&gt;, obj_ptr_hash&lt;expr&gt;, ptr_eq&lt;expr&gt;&gt;::insert (1 samples, 0.21%)</title><rect x="70.2991%" y="293" width="0.2137%" height="15" fill="rgb(217,222,7)" fg:x="329" fg:w="1"/><text x="70.5491%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="70.5128%" y="277" width="0.2137%" height="15" fill="rgb(233,28,6)" fg:x="330" fg:w="1"/><text x="70.7628%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="70.5128%" y="261" width="0.2137%" height="15" fill="rgb(231,218,15)" fg:x="330" fg:w="1"/><text x="70.7628%" y="271.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="70.7265%" y="261" width="0.2137%" height="15" fill="rgb(226,171,48)" fg:x="331" fg:w="1"/><text x="70.9765%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1 samples, 0.21%)</title><rect x="70.7265%" y="245" width="0.2137%" height="15" fill="rgb(235,201,9)" fg:x="331" fg:w="1"/><text x="70.9765%" y="255.50"></text></g><g><title>rust-gkat`hoist_rewriter::hoist_predicates(obj_hashtable (3 samples, 0.64%)</title><rect x="70.5128%" y="293" width="0.6410%" height="15" fill="rgb(217,80,15)" fg:x="330" fg:w="3"/><text x="70.7628%" y="303.50"></text></g><g><title>rust-gkat`vector&lt;expr*, false, unsigned int&gt;::expand_vector (2 samples, 0.43%)</title><rect x="70.7265%" y="277" width="0.4274%" height="15" fill="rgb(219,152,8)" fg:x="331" fg:w="2"/><text x="70.9765%" y="287.50"></text></g><g><title>rust-gkat`memory::reallocate (1 samples, 0.21%)</title><rect x="70.9402%" y="261" width="0.2137%" height="15" fill="rgb(243,107,38)" fg:x="332" fg:w="1"/><text x="71.1902%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.21%)</title><rect x="70.9402%" y="245" width="0.2137%" height="15" fill="rgb(231,17,5)" fg:x="332" fg:w="1"/><text x="71.1902%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.21%)</title><rect x="70.9402%" y="229" width="0.2137%" height="15" fill="rgb(209,25,54)" fg:x="332" fg:w="1"/><text x="71.1902%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.21%)</title><rect x="70.9402%" y="213" width="0.2137%" height="15" fill="rgb(219,0,2)" fg:x="332" fg:w="1"/><text x="71.1902%" y="223.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (17 samples, 3.63%)</title><rect x="67.7350%" y="341" width="3.6325%" height="15" fill="rgb(246,9,5)" fg:x="317" fg:w="17"/><text x="67.9850%" y="351.50">rust..</text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (10 samples, 2.14%)</title><rect x="69.2308%" y="325" width="2.1368%" height="15" fill="rgb(226,159,4)" fg:x="324" fg:w="10"/><text x="69.4808%" y="335.50">r..</text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (6 samples, 1.28%)</title><rect x="70.0855%" y="309" width="1.2821%" height="15" fill="rgb(219,175,34)" fg:x="328" fg:w="6"/><text x="70.3355%" y="319.50"></text></g><g><title>rust-gkat`mk_not(ast_manager&amp;, expr*) (1 samples, 0.21%)</title><rect x="71.1538%" y="293" width="0.2137%" height="15" fill="rgb(236,10,46)" fg:x="333" fg:w="1"/><text x="71.4038%" y="303.50"></text></g><g><title>rust-gkat`act_cache::find (6 samples, 1.28%)</title><rect x="71.3675%" y="341" width="1.2821%" height="15" fill="rgb(240,211,16)" fg:x="334" fg:w="6"/><text x="71.6175%" y="351.50"></text></g><g><title>rust-gkat`act_cache::insert (1 samples, 0.21%)</title><rect x="72.6496%" y="341" width="0.2137%" height="15" fill="rgb(205,3,43)" fg:x="340" fg:w="1"/><text x="72.8996%" y="351.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="72.6496%" y="325" width="0.2137%" height="15" fill="rgb(245,7,22)" fg:x="340" fg:w="1"/><text x="72.8996%" y="335.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (1 samples, 0.21%)</title><rect x="72.6496%" y="309" width="0.2137%" height="15" fill="rgb(239,132,32)" fg:x="340" fg:w="1"/><text x="72.8996%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::coercion_needed (1 samples, 0.21%)</title><rect x="73.0769%" y="309" width="0.2137%" height="15" fill="rgb(228,202,34)" fg:x="342" fg:w="1"/><text x="73.3269%" y="319.50"></text></g><g><title>rust-gkat`small_object_allocator::deallocate (1 samples, 0.21%)</title><rect x="73.2906%" y="309" width="0.2137%" height="15" fill="rgb(254,200,22)" fg:x="343" fg:w="1"/><text x="73.5406%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (4 samples, 0.85%)</title><rect x="72.8632%" y="341" width="0.8547%" height="15" fill="rgb(219,10,39)" fg:x="341" fg:w="4"/><text x="73.1132%" y="351.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (4 samples, 0.85%)</title><rect x="72.8632%" y="325" width="0.8547%" height="15" fill="rgb(226,210,39)" fg:x="341" fg:w="4"/><text x="73.1132%" y="335.50"></text></g><g><title>rust-gkat`unsigned int ast_array_hash&lt;expr&gt;(expr* const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="73.5043%" y="309" width="0.2137%" height="15" fill="rgb(208,219,16)" fg:x="344" fg:w="1"/><text x="73.7543%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="73.7179%" y="341" width="0.2137%" height="15" fill="rgb(216,158,51)" fg:x="345" fg:w="1"/><text x="73.9679%" y="351.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (2 samples, 0.43%)</title><rect x="73.9316%" y="325" width="0.4274%" height="15" fill="rgb(233,14,44)" fg:x="346" fg:w="2"/><text x="74.1816%" y="335.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (7 samples, 1.50%)</title><rect x="73.9316%" y="341" width="1.4957%" height="15" fill="rgb(237,97,39)" fg:x="346" fg:w="7"/><text x="74.1816%" y="351.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (5 samples, 1.07%)</title><rect x="74.3590%" y="325" width="1.0684%" height="15" fill="rgb(218,198,43)" fg:x="348" fg:w="5"/><text x="74.6090%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (43 samples, 9.19%)</title><rect x="66.4530%" y="373" width="9.1880%" height="15" fill="rgb(231,104,20)" fg:x="311" fg:w="43"/><text x="66.7030%" y="383.50">rust-gkat`ass..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (43 samples, 9.19%)</title><rect x="66.4530%" y="357" width="9.1880%" height="15" fill="rgb(254,36,13)" fg:x="311" fg:w="43"/><text x="66.7030%" y="367.50">rust-gkat`rew..</text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (1 samples, 0.21%)</title><rect x="75.4274%" y="341" width="0.2137%" height="15" fill="rgb(248,14,50)" fg:x="353" fg:w="1"/><text x="75.6774%" y="351.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="75.6410%" y="373" width="0.2137%" height="15" fill="rgb(217,107,29)" fg:x="354" fg:w="1"/><text x="75.8910%" y="383.50"></text></g><g><title>rust-gkat`reslimit::inc (1 samples, 0.21%)</title><rect x="75.8547%" y="373" width="0.2137%" height="15" fill="rgb(251,169,33)" fg:x="355" fg:w="1"/><text x="76.1047%" y="383.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (1 samples, 0.21%)</title><rect x="76.7094%" y="357" width="0.2137%" height="15" fill="rgb(217,108,32)" fg:x="359" fg:w="1"/><text x="76.9594%" y="367.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="77.7778%" y="293" width="0.2137%" height="15" fill="rgb(219,66,42)" fg:x="364" fg:w="1"/><text x="78.0278%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="77.7778%" y="277" width="0.2137%" height="15" fill="rgb(206,180,7)" fg:x="364" fg:w="1"/><text x="78.0278%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::coercion_needed (1 samples, 0.21%)</title><rect x="77.7778%" y="261" width="0.2137%" height="15" fill="rgb(208,226,31)" fg:x="364" fg:w="1"/><text x="78.0278%" y="271.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="77.7778%" y="309" width="0.4274%" height="15" fill="rgb(218,26,49)" fg:x="364" fg:w="2"/><text x="78.0278%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="77.9915%" y="293" width="0.2137%" height="15" fill="rgb(233,197,48)" fg:x="365" fg:w="1"/><text x="78.2415%" y="303.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_not_core(expr*, obj_ref (1 samples, 0.21%)</title><rect x="78.2051%" y="309" width="0.2137%" height="15" fill="rgb(252,181,51)" fg:x="366" fg:w="1"/><text x="78.4551%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (2 samples, 0.43%)</title><rect x="78.4188%" y="293" width="0.4274%" height="15" fill="rgb(253,90,19)" fg:x="367" fg:w="2"/><text x="78.6688%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (2 samples, 0.43%)</title><rect x="78.4188%" y="277" width="0.4274%" height="15" fill="rgb(215,171,30)" fg:x="367" fg:w="2"/><text x="78.6688%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (2 samples, 0.43%)</title><rect x="78.4188%" y="261" width="0.4274%" height="15" fill="rgb(214,222,9)" fg:x="367" fg:w="2"/><text x="78.6688%" y="271.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (2 samples, 0.43%)</title><rect x="78.4188%" y="245" width="0.4274%" height="15" fill="rgb(223,3,22)" fg:x="367" fg:w="2"/><text x="78.6688%" y="255.50"></text></g><g><title>rust-gkat`compare_nodes(ast const*, ast const*) (1 samples, 0.21%)</title><rect x="78.6325%" y="229" width="0.2137%" height="15" fill="rgb(225,196,46)" fg:x="368" fg:w="1"/><text x="78.8825%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.21%)</title><rect x="78.8462%" y="277" width="0.2137%" height="15" fill="rgb(209,110,37)" fg:x="369" fg:w="1"/><text x="79.0962%" y="287.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_flat_or_core(unsigned int, expr* const*, obj_ref (2 samples, 0.43%)</title><rect x="78.8462%" y="293" width="0.4274%" height="15" fill="rgb(249,89,12)" fg:x="369" fg:w="2"/><text x="79.0962%" y="303.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="79.0598%" y="277" width="0.2137%" height="15" fill="rgb(226,27,33)" fg:x="370" fg:w="1"/><text x="79.3098%" y="287.50"></text></g><g><title>rust-gkat`void std::__1::__introsort&lt;std::__1::_ClassicAlgPolicy, ast_lt&amp;, expr**, false&gt;(expr**, expr**, ast_lt&amp;, std::__1::iterator_traits (1 samples, 0.21%)</title><rect x="79.0598%" y="261" width="0.2137%" height="15" fill="rgb(213,82,22)" fg:x="370" fg:w="1"/><text x="79.3098%" y="271.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="79.4872%" y="277" width="0.2137%" height="15" fill="rgb(248,140,0)" fg:x="372" fg:w="1"/><text x="79.7372%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="79.4872%" y="261" width="0.2137%" height="15" fill="rgb(228,106,3)" fg:x="372" fg:w="1"/><text x="79.7372%" y="271.50"></text></g><g><title>rust-gkat`get_node_hash(ast const*) (1 samples, 0.21%)</title><rect x="79.4872%" y="245" width="0.2137%" height="15" fill="rgb(209,23,37)" fg:x="372" fg:w="1"/><text x="79.7372%" y="255.50"></text></g><g><title>rust-gkat`hoist_rewriter::mk_or(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="79.7009%" y="277" width="0.2137%" height="15" fill="rgb(241,93,50)" fg:x="373" fg:w="1"/><text x="79.9509%" y="287.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_app_core(func_decl*, unsigned int, expr* const*, obj_ref (14 samples, 2.99%)</title><rect x="77.1368%" y="341" width="2.9915%" height="15" fill="rgb(253,46,43)" fg:x="361" fg:w="14"/><text x="77.3868%" y="351.50">rus..</text></g><g><title>rust-gkat`bool_rewriter::mk_and_as_or(unsigned int, expr* const*, obj_ref (13 samples, 2.78%)</title><rect x="77.3504%" y="325" width="2.7778%" height="15" fill="rgb(226,206,43)" fg:x="362" fg:w="13"/><text x="77.6004%" y="335.50">ru..</text></g><g><title>rust-gkat`bool_rewriter::mk_or(unsigned int, expr* const*, obj_ref (8 samples, 1.71%)</title><rect x="78.4188%" y="309" width="1.7094%" height="15" fill="rgb(217,54,7)" fg:x="367" fg:w="8"/><text x="78.6688%" y="319.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (4 samples, 0.85%)</title><rect x="79.2735%" y="293" width="0.8547%" height="15" fill="rgb(223,5,52)" fg:x="371" fg:w="4"/><text x="79.5235%" y="303.50"></text></g><g><title>rust-gkat`lt(ast*, ast*) (1 samples, 0.21%)</title><rect x="79.9145%" y="277" width="0.2137%" height="15" fill="rgb(206,52,46)" fg:x="374" fg:w="1"/><text x="80.1645%" y="287.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (19 samples, 4.06%)</title><rect x="76.9231%" y="357" width="4.0598%" height="15" fill="rgb(253,136,11)" fg:x="360" fg:w="19"/><text x="77.1731%" y="367.50">rust..</text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (4 samples, 0.85%)</title><rect x="80.1282%" y="341" width="0.8547%" height="15" fill="rgb(208,106,33)" fg:x="375" fg:w="4"/><text x="80.3782%" y="351.50"></text></g><g><title>rust-gkat`act_cache::find (3 samples, 0.64%)</title><rect x="80.9829%" y="357" width="0.6410%" height="15" fill="rgb(206,54,4)" fg:x="379" fg:w="3"/><text x="81.2329%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="81.8376%" y="309" width="0.2137%" height="15" fill="rgb(213,3,15)" fg:x="383" fg:w="1"/><text x="82.0876%" y="319.50"></text></g><g><title>rust-gkat`act_cache::insert (3 samples, 0.64%)</title><rect x="81.6239%" y="357" width="0.6410%" height="15" fill="rgb(252,211,39)" fg:x="382" fg:w="3"/><text x="81.8739%" y="367.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::insert_if_not_there(cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair (3 samples, 0.64%)</title><rect x="81.6239%" y="341" width="0.6410%" height="15" fill="rgb(223,6,36)" fg:x="382" fg:w="3"/><text x="81.8739%" y="351.50"></text></g><g><title>rust-gkat`chashtable&lt;cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_hash_proc, cmap&lt;std::__1::pair&lt;expr*, unsigned int&gt;, expr*, act_cache::entry_hash, default_eq&lt;std::__1::pair&lt;expr*, unsigned int&gt;&gt;&gt;::key_value_eq_proc&gt;::expand_table (3 samples, 0.64%)</title><rect x="81.6239%" y="325" width="0.6410%" height="15" fill="rgb(252,169,45)" fg:x="382" fg:w="3"/><text x="81.8739%" y="335.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="82.0513%" y="309" width="0.2137%" height="15" fill="rgb(212,48,26)" fg:x="384" fg:w="1"/><text x="82.3013%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="82.0513%" y="293" width="0.2137%" height="15" fill="rgb(251,102,48)" fg:x="384" fg:w="1"/><text x="82.3013%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.21%)</title><rect x="82.0513%" y="277" width="0.2137%" height="15" fill="rgb(243,208,16)" fg:x="384" fg:w="1"/><text x="82.3013%" y="287.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::get_subst (2 samples, 0.43%)</title><rect x="82.4786%" y="341" width="0.4274%" height="15" fill="rgb(219,96,24)" fg:x="386" fg:w="2"/><text x="82.7286%" y="351.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (7 samples, 1.50%)</title><rect x="82.2650%" y="357" width="1.4957%" height="15" fill="rgb(219,33,29)" fg:x="385" fg:w="7"/><text x="82.5150%" y="367.50"></text></g><g><title>rust-gkat`expr_substitution::find(expr*, expr*&amp;, app*&amp;, dependency_manager (4 samples, 0.85%)</title><rect x="82.9060%" y="341" width="0.8547%" height="15" fill="rgb(223,176,5)" fg:x="388" fg:w="4"/><text x="83.1560%" y="351.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (37 samples, 7.91%)</title><rect x="76.0684%" y="373" width="7.9060%" height="15" fill="rgb(228,140,14)" fg:x="356" fg:w="37"/><text x="76.3184%" y="383.50">rust-gkat`r..</text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::check_max_steps (1 samples, 0.21%)</title><rect x="83.7607%" y="357" width="0.2137%" height="15" fill="rgb(217,179,31)" fg:x="392" fg:w="1"/><text x="84.0107%" y="367.50"></text></g><g><title>rust-gkat`core_hashtable&lt;ptr_hash_entry&lt;maximize_ac_sharing::entry&gt;, obj_ptr_hash&lt;maximize_ac_sharing::entry&gt;, deref_eq&lt;maximize_ac_sharing::entry&gt;&gt;::find_core (2 samples, 0.43%)</title><rect x="84.1880%" y="341" width="0.4274%" height="15" fill="rgb(230,9,30)" fg:x="394" fg:w="2"/><text x="84.4380%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (127 samples, 27.14%)</title><rect x="57.6923%" y="405" width="27.1368%" height="15" fill="rgb(230,136,20)" fg:x="270" fg:w="127"/><text x="57.9423%" y="415.50">rust-gkat`asserted_formulas::invoke</text></g><g><title>rust-gkat`asserted_formulas::simplify_fmls::operator() (86 samples, 18.38%)</title><rect x="66.4530%" y="389" width="18.3761%" height="15" fill="rgb(215,210,22)" fg:x="311" fg:w="86"/><text x="66.7030%" y="399.50">rust-gkat`asserted_formulas::..</text></g><g><title>rust-gkat`void rewriter_tpl&lt;maximize_bv_sharing&gt;::resume_core&lt;false&gt;(obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (4 samples, 0.85%)</title><rect x="83.9744%" y="373" width="0.8547%" height="15" fill="rgb(218,43,5)" fg:x="393" fg:w="4"/><text x="84.2244%" y="383.50"></text></g><g><title>rust-gkat`void rewriter_tpl&lt;maximize_bv_sharing&gt;::process_app&lt;false&gt; (4 samples, 0.85%)</title><rect x="83.9744%" y="357" width="0.8547%" height="15" fill="rgb(216,11,5)" fg:x="393" fg:w="4"/><text x="84.2244%" y="367.50"></text></g><g><title>rust-gkat`maximize_ac_sharing::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="84.6154%" y="341" width="0.2137%" height="15" fill="rgb(209,82,29)" fg:x="396" fg:w="1"/><text x="84.8654%" y="351.50"></text></g><g><title>rust-gkat`ast_manager::mk_app (1 samples, 0.21%)</title><rect x="84.6154%" y="325" width="0.2137%" height="15" fill="rgb(244,115,12)" fg:x="396" fg:w="1"/><text x="84.8654%" y="335.50"></text></g><g><title>rust-gkat`ast_manager::mk_app_core (1 samples, 0.21%)</title><rect x="84.6154%" y="309" width="0.2137%" height="15" fill="rgb(222,82,18)" fg:x="396" fg:w="1"/><text x="84.8654%" y="319.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="84.6154%" y="293" width="0.2137%" height="15" fill="rgb(249,227,8)" fg:x="396" fg:w="1"/><text x="84.8654%" y="303.50"></text></g><g><title>rust-gkat`chashtable&lt;ast*, obj_ptr_hash&lt;ast&gt;, ast_eq_proc&gt;::insert_if_not_there (1 samples, 0.21%)</title><rect x="84.6154%" y="277" width="0.2137%" height="15" fill="rgb(253,141,45)" fg:x="396" fg:w="1"/><text x="84.8654%" y="287.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::updt_local_params (1 samples, 0.21%)</title><rect x="84.8291%" y="389" width="0.2137%" height="15" fill="rgb(234,184,4)" fg:x="397" fg:w="1"/><text x="85.0791%" y="399.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="84.8291%" y="373" width="0.2137%" height="15" fill="rgb(218,194,23)" fg:x="397" fg:w="1"/><text x="85.0791%" y="383.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="84.8291%" y="357" width="0.2137%" height="15" fill="rgb(235,66,41)" fg:x="397" fg:w="1"/><text x="85.0791%" y="367.50"></text></g><g><title>rust-gkat`params::set_bool (1 samples, 0.21%)</title><rect x="85.0427%" y="389" width="0.2137%" height="15" fill="rgb(245,217,1)" fg:x="398" fg:w="1"/><text x="85.2927%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="85.0427%" y="373" width="0.2137%" height="15" fill="rgb(229,91,1)" fg:x="398" fg:w="1"/><text x="85.2927%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_strcmp (1 samples, 0.21%)</title><rect x="85.2564%" y="341" width="0.2137%" height="15" fill="rgb(207,101,30)" fg:x="399" fg:w="1"/><text x="85.5064%" y="351.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (2 samples, 0.43%)</title><rect x="85.2564%" y="373" width="0.4274%" height="15" fill="rgb(223,82,49)" fg:x="399" fg:w="2"/><text x="85.5064%" y="383.50"></text></g><g><title>rust-gkat`params_ref::get_uint (2 samples, 0.43%)</title><rect x="85.2564%" y="357" width="0.4274%" height="15" fill="rgb(218,167,17)" fg:x="399" fg:w="2"/><text x="85.5064%" y="367.50"></text></g><g><title>rust-gkat`DYLD-STUB$$strcmp (1 samples, 0.21%)</title><rect x="85.4701%" y="341" width="0.2137%" height="15" fill="rgb(208,103,14)" fg:x="400" fg:w="1"/><text x="85.7201%" y="351.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="85.6838%" y="341" width="0.2137%" height="15" fill="rgb(238,20,8)" fg:x="401" fg:w="1"/><text x="85.9338%" y="351.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="85.8974%" y="341" width="0.2137%" height="15" fill="rgb(218,80,54)" fg:x="402" fg:w="1"/><text x="86.1474%" y="351.50"></text></g><g><title>rust-gkat`DYLD-STUB$$strcmp (1 samples, 0.21%)</title><rect x="85.8974%" y="325" width="0.2137%" height="15" fill="rgb(240,144,17)" fg:x="402" fg:w="1"/><text x="86.1474%" y="335.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_params (3 samples, 0.64%)</title><rect x="85.6838%" y="373" width="0.6410%" height="15" fill="rgb(245,27,50)" fg:x="401" fg:w="3"/><text x="85.9338%" y="383.50"></text></g><g><title>rust-gkat`poly_rewriter&lt;arith_rewriter_core&gt;::updt_params (3 samples, 0.64%)</title><rect x="85.6838%" y="357" width="0.6410%" height="15" fill="rgb(251,51,7)" fg:x="401" fg:w="3"/><text x="85.9338%" y="367.50"></text></g><g><title>rust-gkat`params_ref::get_uint (1 samples, 0.21%)</title><rect x="86.1111%" y="341" width="0.2137%" height="15" fill="rgb(245,217,29)" fg:x="403" fg:w="1"/><text x="86.3611%" y="351.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_strcmp (1 samples, 0.21%)</title><rect x="86.1111%" y="325" width="0.2137%" height="15" fill="rgb(221,176,29)" fg:x="403" fg:w="1"/><text x="86.3611%" y="335.50"></text></g><g><title>rust-gkat`array_rewriter::updt_params (1 samples, 0.21%)</title><rect x="86.3248%" y="373" width="0.2137%" height="15" fill="rgb(212,180,24)" fg:x="404" fg:w="1"/><text x="86.5748%" y="383.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="86.3248%" y="357" width="0.2137%" height="15" fill="rgb(254,24,2)" fg:x="404" fg:w="1"/><text x="86.5748%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="86.3248%" y="341" width="0.2137%" height="15" fill="rgb(230,100,2)" fg:x="404" fg:w="1"/><text x="86.5748%" y="351.50"></text></g><g><title>rust-gkat`bv_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="86.5385%" y="373" width="0.2137%" height="15" fill="rgb(219,142,25)" fg:x="405" fg:w="1"/><text x="86.7885%" y="383.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="86.5385%" y="357" width="0.2137%" height="15" fill="rgb(240,73,43)" fg:x="405" fg:w="1"/><text x="86.7885%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="86.5385%" y="341" width="0.2137%" height="15" fill="rgb(214,114,15)" fg:x="405" fg:w="1"/><text x="86.7885%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (10 samples, 2.14%)</title><rect x="84.8291%" y="405" width="2.1368%" height="15" fill="rgb(207,130,4)" fg:x="397" fg:w="10"/><text x="85.0791%" y="415.50">r..</text></g><g><title>rust-gkat`th_rewriter::updt_params (8 samples, 1.71%)</title><rect x="85.2564%" y="389" width="1.7094%" height="15" fill="rgb(221,25,40)" fg:x="399" fg:w="8"/><text x="85.5064%" y="399.50"></text></g><g><title>rust-gkat`params_ref::get_bool (1 samples, 0.21%)</title><rect x="86.7521%" y="373" width="0.2137%" height="15" fill="rgb(241,184,7)" fg:x="406" fg:w="1"/><text x="87.0021%" y="383.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (138 samples, 29.49%)</title><rect x="57.6923%" y="421" width="29.4872%" height="15" fill="rgb(235,159,4)" fg:x="270" fg:w="138"/><text x="57.9423%" y="431.50">rust-gkat`asserted_formulas::reduce</text></g><g><title>rust-gkat`th_rewriter::reset (1 samples, 0.21%)</title><rect x="86.9658%" y="405" width="0.2137%" height="15" fill="rgb(214,87,48)" fg:x="407" fg:w="1"/><text x="87.2158%" y="415.50"></text></g><g><title>rust-gkat`rewriter_core::reset (1 samples, 0.21%)</title><rect x="86.9658%" y="389" width="0.2137%" height="15" fill="rgb(246,198,24)" fg:x="407" fg:w="1"/><text x="87.2158%" y="399.50"></text></g><g><title>rust-gkat`act_cache::reset (1 samples, 0.21%)</title><rect x="86.9658%" y="373" width="0.2137%" height="15" fill="rgb(209,66,40)" fg:x="407" fg:w="1"/><text x="87.2158%" y="383.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="86.9658%" y="357" width="0.2137%" height="15" fill="rgb(233,147,39)" fg:x="407" fg:w="1"/><text x="87.2158%" y="367.50"></text></g><g><title>rust-gkat`smt::context::add_or_rel_watches (1 samples, 0.21%)</title><rect x="87.1795%" y="405" width="0.2137%" height="15" fill="rgb(231,145,52)" fg:x="408" fg:w="1"/><text x="87.4295%" y="415.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula (1 samples, 0.21%)</title><rect x="87.3932%" y="389" width="0.2137%" height="15" fill="rgb(206,20,26)" fg:x="409" fg:w="1"/><text x="87.6432%" y="399.50"></text></g><g><title>rust-gkat`smt::context::add_or_rel_watches (1 samples, 0.21%)</title><rect x="87.6068%" y="373" width="0.2137%" height="15" fill="rgb(238,220,4)" fg:x="410" fg:w="1"/><text x="87.8568%" y="383.50"></text></g><g><title>rust-gkat`smt::relevancy_propagator_imp::add_watch (1 samples, 0.21%)</title><rect x="87.6068%" y="357" width="0.2137%" height="15" fill="rgb(252,195,42)" fg:x="410" fg:w="1"/><text x="87.8568%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula (1 samples, 0.21%)</title><rect x="87.8205%" y="357" width="0.2137%" height="15" fill="rgb(209,10,6)" fg:x="411" fg:w="1"/><text x="88.0705%" y="367.50"></text></g><g><title>rust-gkat`smt::clause_proof::add (1 samples, 0.21%)</title><rect x="88.0342%" y="309" width="0.2137%" height="15" fill="rgb(229,3,52)" fg:x="412" fg:w="1"/><text x="88.2842%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (2 samples, 0.43%)</title><rect x="88.0342%" y="357" width="0.4274%" height="15" fill="rgb(253,49,37)" fg:x="412" fg:w="2"/><text x="88.2842%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (2 samples, 0.43%)</title><rect x="88.0342%" y="341" width="0.4274%" height="15" fill="rgb(240,103,49)" fg:x="412" fg:w="2"/><text x="88.2842%" y="351.50"></text></g><g><title>rust-gkat`smt::context::mk_or_cnstr (2 samples, 0.43%)</title><rect x="88.0342%" y="325" width="0.4274%" height="15" fill="rgb(250,182,30)" fg:x="412" fg:w="2"/><text x="88.2842%" y="335.50"></text></g><g><title>rust-gkat`smt::context::mk_clause (1 samples, 0.21%)</title><rect x="88.2479%" y="309" width="0.2137%" height="15" fill="rgb(248,8,30)" fg:x="413" fg:w="1"/><text x="88.4979%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.21%)</title><rect x="88.2479%" y="293" width="0.2137%" height="15" fill="rgb(237,120,30)" fg:x="413" fg:w="1"/><text x="88.4979%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (6 samples, 1.28%)</title><rect x="87.6068%" y="389" width="1.2821%" height="15" fill="rgb(221,146,34)" fg:x="410" fg:w="6"/><text x="87.8568%" y="399.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (5 samples, 1.07%)</title><rect x="87.8205%" y="373" width="1.0684%" height="15" fill="rgb(242,55,13)" fg:x="411" fg:w="5"/><text x="88.0705%" y="383.50"></text></g><g><title>rust-gkat`smt::context::mk_or_cnstr (2 samples, 0.43%)</title><rect x="88.4615%" y="357" width="0.4274%" height="15" fill="rgb(242,112,31)" fg:x="414" fg:w="2"/><text x="88.7115%" y="367.50"></text></g><g><title>rust-gkat`smt::context::mk_clause (2 samples, 0.43%)</title><rect x="88.4615%" y="341" width="0.4274%" height="15" fill="rgb(249,192,27)" fg:x="414" fg:w="2"/><text x="88.7115%" y="351.50"></text></g><g><title>rust-gkat`smt::context::simplify_aux_clause_literals(unsigned int&amp;, sat::literal*, sbuffer (1 samples, 0.21%)</title><rect x="88.6752%" y="325" width="0.2137%" height="15" fill="rgb(208,204,44)" fg:x="415" fg:w="1"/><text x="88.9252%" y="335.50"></text></g><g><title>rust-gkat`void std::__1::__introsort&lt;std::__1::_ClassicAlgPolicy, std::__1::__less&lt;void, void&gt;&amp;, sat::literal*, false&gt;(sat::literal*, sat::literal*, std::__1::__less&lt;void, void&gt;&amp;, std::__1::iterator_traits (1 samples, 0.21%)</title><rect x="88.6752%" y="309" width="0.2137%" height="15" fill="rgb(208,93,54)" fg:x="415" fg:w="1"/><text x="88.9252%" y="319.50"></text></g><g><title>rust-gkat`smt::context::mk_bool_var (1 samples, 0.21%)</title><rect x="88.8889%" y="389" width="0.2137%" height="15" fill="rgb(242,1,31)" fg:x="416" fg:w="1"/><text x="89.1389%" y="399.50"></text></g><g><title>rust-gkat`(anonymous namespace)::dact_case_split_queue::mk_var_eh (1 samples, 0.21%)</title><rect x="88.8889%" y="373" width="0.2137%" height="15" fill="rgb(241,83,25)" fg:x="416" fg:w="1"/><text x="89.1389%" y="383.50"></text></g><g><title>rust-gkat`smt::clause_proof::add (1 samples, 0.21%)</title><rect x="89.3162%" y="373" width="0.2137%" height="15" fill="rgb(205,169,50)" fg:x="418" fg:w="1"/><text x="89.5662%" y="383.50"></text></g><g><title>rust-gkat`smt::context::internalize_formula_core (11 samples, 2.35%)</title><rect x="87.3932%" y="405" width="2.3504%" height="15" fill="rgb(239,186,37)" fg:x="409" fg:w="11"/><text x="87.6432%" y="415.50">r..</text></g><g><title>rust-gkat`smt::context::mk_or_cnstr (3 samples, 0.64%)</title><rect x="89.1026%" y="389" width="0.6410%" height="15" fill="rgb(205,221,10)" fg:x="417" fg:w="3"/><text x="89.3526%" y="399.50"></text></g><g><title>rust-gkat`smt::context::mk_clause (1 samples, 0.21%)</title><rect x="89.5299%" y="373" width="0.2137%" height="15" fill="rgb(218,196,15)" fg:x="419" fg:w="1"/><text x="89.7799%" y="383.50"></text></g><g><title>rust-gkat`DYLD-STUB$$memcpy (1 samples, 0.21%)</title><rect x="89.5299%" y="357" width="0.2137%" height="15" fill="rgb(218,196,35)" fg:x="419" fg:w="1"/><text x="89.7799%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertion (14 samples, 2.99%)</title><rect x="87.1795%" y="421" width="2.9915%" height="15" fill="rgb(233,63,24)" fg:x="408" fg:w="14"/><text x="87.4295%" y="431.50">rus..</text></g><g><title>rust-gkat`smt::relevancy_propagator_imp::propagate (2 samples, 0.43%)</title><rect x="89.7436%" y="405" width="0.4274%" height="15" fill="rgb(225,8,4)" fg:x="420" fg:w="2"/><text x="89.9936%" y="415.50"></text></g><g><title>rust-gkat`smt::context::find_assignment (2 samples, 0.43%)</title><rect x="89.7436%" y="389" width="0.4274%" height="15" fill="rgb(234,105,35)" fg:x="420" fg:w="2"/><text x="89.9936%" y="399.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (178 samples, 38.03%)</title><rect x="52.3504%" y="469" width="38.0342%" height="15" fill="rgb(236,21,32)" fg:x="245" fg:w="178"/><text x="52.6004%" y="479.50">rust-gkat`smt::context::init_assumptions(ref_vector</text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (178 samples, 38.03%)</title><rect x="52.3504%" y="453" width="38.0342%" height="15" fill="rgb(228,109,6)" fg:x="245" fg:w="178"/><text x="52.6004%" y="463.50">rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, a..</text></g><g><title>rust-gkat`smt::context::internalize_assertions (156 samples, 33.33%)</title><rect x="57.0513%" y="437" width="33.3333%" height="15" fill="rgb(229,215,31)" fg:x="267" fg:w="156"/><text x="57.3013%" y="447.50">rust-gkat`smt::context::internalize_assertions</text></g><g><title>rust-gkat`smt::relevancy_propagator_imp::propagate (1 samples, 0.21%)</title><rect x="90.1709%" y="421" width="0.2137%" height="15" fill="rgb(221,52,54)" fg:x="422" fg:w="1"/><text x="90.4209%" y="431.50"></text></g><g><title>rust-gkat`scoped_expr_substitution::pop (1 samples, 0.21%)</title><rect x="90.3846%" y="421" width="0.2137%" height="15" fill="rgb(252,129,43)" fg:x="423" fg:w="1"/><text x="90.6346%" y="431.50"></text></g><g><title>rust-gkat`expr_substitution::erase (1 samples, 0.21%)</title><rect x="90.3846%" y="405" width="0.2137%" height="15" fill="rgb(248,183,27)" fg:x="423" fg:w="1"/><text x="90.6346%" y="415.50"></text></g><g><title>rust-gkat`asserted_formulas::pop_scope (2 samples, 0.43%)</title><rect x="90.3846%" y="437" width="0.4274%" height="15" fill="rgb(250,0,22)" fg:x="423" fg:w="2"/><text x="90.6346%" y="447.50"></text></g><g><title>rust-gkat`vector&lt;justified_expr, true, unsigned int&gt;::shrink (1 samples, 0.21%)</title><rect x="90.5983%" y="421" width="0.2137%" height="15" fill="rgb(213,166,10)" fg:x="424" fg:w="1"/><text x="90.8483%" y="431.50"></text></g><g><title>rust-gkat`memory::is_out_of_memory (1 samples, 0.21%)</title><rect x="90.5983%" y="405" width="0.2137%" height="15" fill="rgb(207,163,36)" fg:x="424" fg:w="1"/><text x="90.8483%" y="415.50"></text></g><g><title>rust-gkat`smt::context::del_clauses(ptr_vector (2 samples, 0.43%)</title><rect x="90.8120%" y="437" width="0.4274%" height="15" fill="rgb(208,122,22)" fg:x="425" fg:w="2"/><text x="91.0620%" y="447.50"></text></g><g><title>rust-gkat`smt::context::del_clause (2 samples, 0.43%)</title><rect x="90.8120%" y="421" width="0.4274%" height="15" fill="rgb(207,104,49)" fg:x="425" fg:w="2"/><text x="91.0620%" y="431.50"></text></g><g><title>rust-gkat`smt::watch_list::remove_clause (2 samples, 0.43%)</title><rect x="90.8120%" y="405" width="0.4274%" height="15" fill="rgb(248,211,50)" fg:x="425" fg:w="2"/><text x="91.0620%" y="415.50"></text></g><g><title>rust-gkat`smt::context::mk_unsat_core (5 samples, 1.07%)</title><rect x="90.3846%" y="469" width="1.0684%" height="15" fill="rgb(217,13,45)" fg:x="423" fg:w="5"/><text x="90.6346%" y="479.50"></text></g><g><title>rust-gkat`smt::context::pop_scope_core (5 samples, 1.07%)</title><rect x="90.3846%" y="453" width="1.0684%" height="15" fill="rgb(211,216,49)" fg:x="423" fg:w="5"/><text x="90.6346%" y="463.50"></text></g><g><title>rust-gkat`smt::context::undo_mk_bool_var (1 samples, 0.21%)</title><rect x="91.2393%" y="437" width="0.2137%" height="15" fill="rgb(221,58,53)" fg:x="427" fg:w="1"/><text x="91.4893%" y="447.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="91.4530%" y="453" width="0.2137%" height="15" fill="rgb(220,112,41)" fg:x="428" fg:w="1"/><text x="91.7030%" y="463.50"></text></g><g><title>rust-gkat`smt::context::propagate (1 samples, 0.21%)</title><rect x="91.4530%" y="437" width="0.2137%" height="15" fill="rgb(236,38,28)" fg:x="428" fg:w="1"/><text x="91.7030%" y="447.50"></text></g><g><title>rust-gkat`smt::context::bcp (1 samples, 0.21%)</title><rect x="91.4530%" y="421" width="0.2137%" height="15" fill="rgb(227,195,22)" fg:x="428" fg:w="1"/><text x="91.7030%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::kernel1::equiv_iter::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::equiv_iter (427 samples, 91.24%)</title><rect x="0.8547%" y="581" width="91.2393%" height="15" fill="rgb(214,55,33)" fg:x="4" fg:w="427"/><text x="1.1047%" y="591.50">rust-gkat`rust_gkat::kernel1::equiv_iter::_&lt;impl rust_gkat::kernel1::solver::Solver&gt;::equiv_iter</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (186 samples, 39.74%)</title><rect x="52.3504%" y="565" width="39.7436%" height="15" fill="rgb(248,80,13)" fg:x="245" fg:w="186"/><text x="52.6004%" y="575.50">rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false</text></g><g><title>rust-gkat`Z3_solver_check_assumptions (186 samples, 39.74%)</title><rect x="52.3504%" y="549" width="39.7436%" height="15" fill="rgb(238,52,6)" fg:x="245" fg:w="186"/><text x="52.6004%" y="559.50">rust-gkat`Z3_solver_check_assumptions</text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (186 samples, 39.74%)</title><rect x="52.3504%" y="533" width="39.7436%" height="15" fill="rgb(224,198,47)" fg:x="245" fg:w="186"/><text x="52.6004%" y="543.50">rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, ..</text></g><g><title>rust-gkat`solver::check_sat (186 samples, 39.74%)</title><rect x="52.3504%" y="517" width="39.7436%" height="15" fill="rgb(233,171,20)" fg:x="245" fg:w="186"/><text x="52.6004%" y="527.50">rust-gkat`solver::check_sat</text></g><g><title>rust-gkat`solver_na2as::check_sat_core (186 samples, 39.74%)</title><rect x="52.3504%" y="501" width="39.7436%" height="15" fill="rgb(241,30,25)" fg:x="245" fg:w="186"/><text x="52.6004%" y="511.50">rust-gkat`solver_na2as::check_sat_core</text></g><g><title>rust-gkat`smt::context::check (186 samples, 39.74%)</title><rect x="52.3504%" y="485" width="39.7436%" height="15" fill="rgb(207,171,38)" fg:x="245" fg:w="186"/><text x="52.6004%" y="495.50">rust-gkat`smt::context::check</text></g><g><title>rust-gkat`smt::context::search (3 samples, 0.64%)</title><rect x="91.4530%" y="469" width="0.6410%" height="15" fill="rgb(234,70,1)" fg:x="428" fg:w="3"/><text x="91.7030%" y="479.50"></text></g><g><title>rust-gkat`smt::context::log_stats (2 samples, 0.43%)</title><rect x="91.6667%" y="453" width="0.4274%" height="15" fill="rgb(232,178,18)" fg:x="429" fg:w="2"/><text x="91.9167%" y="463.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="91.8803%" y="437" width="0.2137%" height="15" fill="rgb(241,78,40)" fg:x="430" fg:w="1"/><text x="92.1303%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_integral[abi:ne180100]&lt;unsigned long&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="91.8803%" y="421" width="0.2137%" height="15" fill="rgb(222,35,25)" fg:x="430" fg:w="1"/><text x="92.1303%" y="431.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::basic_string[abi:ne180100] (1 samples, 0.21%)</title><rect x="91.8803%" y="405" width="0.2137%" height="15" fill="rgb(207,92,16)" fg:x="430" fg:w="1"/><text x="92.1303%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::parse (2 samples, 0.43%)</title><rect x="92.0940%" y="581" width="0.4274%" height="15" fill="rgb(216,59,51)" fg:x="431" fg:w="2"/><text x="92.3440%" y="591.50"></text></g><g><title>rust-gkat`lalrpop_util::state_machine::Parser&lt;D,I&gt;::drive (2 samples, 0.43%)</title><rect x="92.0940%" y="565" width="0.4274%" height="15" fill="rgb(213,80,28)" fg:x="431" fg:w="2"/><text x="92.3440%" y="575.50"></text></g><g><title>rust-gkat`rust_gkat::parsing::parser::spec::__parse__Input::__reduce (2 samples, 0.43%)</title><rect x="92.0940%" y="549" width="0.4274%" height="15" fill="rgb(220,93,7)" fg:x="431" fg:w="2"/><text x="92.3440%" y="559.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="92.5214%" y="453" width="0.2137%" height="15" fill="rgb(225,24,44)" fg:x="433" fg:w="1"/><text x="92.7714%" y="463.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="92.5214%" y="437" width="0.2137%" height="15" fill="rgb(243,74,40)" fg:x="433" fg:w="1"/><text x="92.7714%" y="447.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="92.5214%" y="421" width="0.2137%" height="15" fill="rgb(228,39,7)" fg:x="433" fg:w="1"/><text x="92.7714%" y="431.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="92.5214%" y="405" width="0.2137%" height="15" fill="rgb(227,79,8)" fg:x="433" fg:w="1"/><text x="92.7714%" y="415.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="92.5214%" y="389" width="0.2137%" height="15" fill="rgb(236,58,11)" fg:x="433" fg:w="1"/><text x="92.7714%" y="399.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="92.5214%" y="373" width="0.2137%" height="15" fill="rgb(249,63,35)" fg:x="433" fg:w="1"/><text x="92.7714%" y="383.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="92.5214%" y="357" width="0.2137%" height="15" fill="rgb(252,114,16)" fg:x="433" fg:w="1"/><text x="92.7714%" y="367.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="92.5214%" y="341" width="0.2137%" height="15" fill="rgb(254,151,24)" fg:x="433" fg:w="1"/><text x="92.7714%" y="351.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="92.5214%" y="325" width="0.2137%" height="15" fill="rgb(253,54,39)" fg:x="433" fg:w="1"/><text x="92.7714%" y="335.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (1 samples, 0.21%)</title><rect x="92.5214%" y="309" width="0.2137%" height="15" fill="rgb(243,25,45)" fg:x="433" fg:w="1"/><text x="92.7714%" y="319.50"></text></g><g><title>rust-gkat`th_rewriter::updt_params (1 samples, 0.21%)</title><rect x="92.5214%" y="293" width="0.2137%" height="15" fill="rgb(234,134,9)" fg:x="433" fg:w="1"/><text x="92.7714%" y="303.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="92.5214%" y="277" width="0.2137%" height="15" fill="rgb(227,166,31)" fg:x="433" fg:w="1"/><text x="92.7714%" y="287.50"></text></g><g><title>rust-gkat`params_ref::get_uint (1 samples, 0.21%)</title><rect x="92.5214%" y="261" width="0.2137%" height="15" fill="rgb(245,143,41)" fg:x="433" fg:w="1"/><text x="92.7714%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp$VARIANT$Base (1 samples, 0.21%)</title><rect x="92.5214%" y="245" width="0.2137%" height="15" fill="rgb(238,181,32)" fg:x="433" fg:w="1"/><text x="92.7714%" y="255.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="92.7350%" y="405" width="0.2137%" height="15" fill="rgb(224,113,18)" fg:x="434" fg:w="1"/><text x="92.9850%" y="415.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="92.7350%" y="389" width="0.2137%" height="15" fill="rgb(240,229,28)" fg:x="434" fg:w="1"/><text x="92.9850%" y="399.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="92.7350%" y="373" width="0.2137%" height="15" fill="rgb(250,185,3)" fg:x="434" fg:w="1"/><text x="92.9850%" y="383.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="92.7350%" y="357" width="0.2137%" height="15" fill="rgb(212,59,25)" fg:x="434" fg:w="1"/><text x="92.9850%" y="367.50"></text></g><g><title>rust-gkat`smt::context::setup_context (1 samples, 0.21%)</title><rect x="92.7350%" y="341" width="0.2137%" height="15" fill="rgb(221,87,20)" fg:x="434" fg:w="1"/><text x="92.9850%" y="351.50"></text></g><g><title>rust-gkat`smt::setup::operator() (1 samples, 0.21%)</title><rect x="92.7350%" y="325" width="0.2137%" height="15" fill="rgb(213,74,28)" fg:x="434" fg:w="1"/><text x="92.9850%" y="335.50"></text></g><g><title>rust-gkat`smt::setup::setup_unknown (1 samples, 0.21%)</title><rect x="92.7350%" y="309" width="0.2137%" height="15" fill="rgb(224,132,34)" fg:x="434" fg:w="1"/><text x="92.9850%" y="319.50"></text></g><g><title>rust-gkat`smt::setup::setup_seq_str (1 samples, 0.21%)</title><rect x="92.7350%" y="293" width="0.2137%" height="15" fill="rgb(222,101,24)" fg:x="434" fg:w="1"/><text x="92.9850%" y="303.50"></text></g><g><title>rust-gkat`smt::theory_seq::theory_seq (1 samples, 0.21%)</title><rect x="92.7350%" y="277" width="0.2137%" height="15" fill="rgb(254,142,4)" fg:x="434" fg:w="1"/><text x="92.9850%" y="287.50"></text></g><g><title>rust-gkat`combined_solver::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="389" width="0.2137%" height="15" fill="rgb(230,229,49)" fg:x="435" fg:w="1"/><text x="93.1987%" y="399.50"></text></g><g><title>rust-gkat`binary_tactical::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="373" width="0.2137%" height="15" fill="rgb(238,70,47)" fg:x="435" fg:w="1"/><text x="93.1987%" y="383.50"></text></g><g><title>rust-gkat`binary_tactical::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="357" width="0.2137%" height="15" fill="rgb(231,160,17)" fg:x="435" fg:w="1"/><text x="93.1987%" y="367.50"></text></g><g><title>rust-gkat`binary_tactical::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="341" width="0.2137%" height="15" fill="rgb(218,68,53)" fg:x="435" fg:w="1"/><text x="93.1987%" y="351.50"></text></g><g><title>rust-gkat`binary_tactical::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="325" width="0.2137%" height="15" fill="rgb(236,111,10)" fg:x="435" fg:w="1"/><text x="93.1987%" y="335.50"></text></g><g><title>rust-gkat`rewriter_params::collect_param_descrs (1 samples, 0.21%)</title><rect x="92.9487%" y="309" width="0.2137%" height="15" fill="rgb(224,34,41)" fg:x="435" fg:w="1"/><text x="93.1987%" y="319.50"></text></g><g><title>rust-gkat`param_descrs::insert (1 samples, 0.21%)</title><rect x="92.9487%" y="293" width="0.2137%" height="15" fill="rgb(241,118,19)" fg:x="435" fg:w="1"/><text x="93.1987%" y="303.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="92.9487%" y="277" width="0.2137%" height="15" fill="rgb(238,129,25)" fg:x="435" fg:w="1"/><text x="93.1987%" y="287.50"></text></g><g><title>rust-gkat`mk_fd_tactic(ast_manager&amp;, params_ref const&amp;) (1 samples, 0.21%)</title><rect x="93.1624%" y="357" width="0.2137%" height="15" fill="rgb(238,22,31)" fg:x="436" fg:w="1"/><text x="93.4124%" y="367.50"></text></g><g><title>rust-gkat`goal2sat::goal2sat (1 samples, 0.21%)</title><rect x="93.1624%" y="341" width="0.2137%" height="15" fill="rgb(222,174,48)" fg:x="436" fg:w="1"/><text x="93.4124%" y="351.50"></text></g><g><title>rust-gkat`mk_qffplra_tactic(ast_manager&amp;, params_ref const&amp;) (1 samples, 0.21%)</title><rect x="93.3761%" y="357" width="0.2137%" height="15" fill="rgb(206,152,40)" fg:x="437" fg:w="1"/><text x="93.6261%" y="367.50"></text></g><g><title>rust-gkat`binary_tactical::updt_params (1 samples, 0.21%)</title><rect x="93.3761%" y="341" width="0.2137%" height="15" fill="rgb(218,99,54)" fg:x="437" fg:w="1"/><text x="93.6261%" y="351.50"></text></g><g><title>rust-gkat`nary_tactical::updt_params (1 samples, 0.21%)</title><rect x="93.3761%" y="325" width="0.2137%" height="15" fill="rgb(220,174,26)" fg:x="437" fg:w="1"/><text x="93.6261%" y="335.50"></text></g><g><title>rust-gkat`binary_tactical::updt_params (1 samples, 0.21%)</title><rect x="93.3761%" y="309" width="0.2137%" height="15" fill="rgb(245,116,9)" fg:x="437" fg:w="1"/><text x="93.6261%" y="319.50"></text></g><g><title>rust-gkat`using_params_tactical::updt_params (1 samples, 0.21%)</title><rect x="93.3761%" y="293" width="0.2137%" height="15" fill="rgb(209,72,35)" fg:x="437" fg:w="1"/><text x="93.6261%" y="303.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::updt_local_params (1 samples, 0.21%)</title><rect x="93.3761%" y="277" width="0.2137%" height="15" fill="rgb(226,126,21)" fg:x="437" fg:w="1"/><text x="93.6261%" y="287.50"></text></g><g><title>rust-gkat`params_ref::get_uint (1 samples, 0.21%)</title><rect x="93.3761%" y="261" width="0.2137%" height="15" fill="rgb(227,192,1)" fg:x="437" fg:w="1"/><text x="93.6261%" y="271.50"></text></g><g><title>rust-gkat`operator==(symbol const&amp;, char const*) (1 samples, 0.21%)</title><rect x="93.3761%" y="245" width="0.2137%" height="15" fill="rgb(237,180,29)" fg:x="437" fg:w="1"/><text x="93.6261%" y="255.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (5 samples, 1.07%)</title><rect x="92.7350%" y="421" width="1.0684%" height="15" fill="rgb(230,197,35)" fg:x="434" fg:w="5"/><text x="92.9850%" y="431.50"></text></g><g><title>rust-gkat`init_solver(_Z3_context*, _Z3_solver*) (4 samples, 0.85%)</title><rect x="92.9487%" y="405" width="0.8547%" height="15" fill="rgb(246,193,31)" fg:x="435" fg:w="4"/><text x="93.1987%" y="415.50"></text></g><g><title>rust-gkat`smt_strategic_solver_factory::operator() (3 samples, 0.64%)</title><rect x="93.1624%" y="389" width="0.6410%" height="15" fill="rgb(241,36,4)" fg:x="436" fg:w="3"/><text x="93.4124%" y="399.50"></text></g><g><title>rust-gkat`mk_default_tactic(ast_manager&amp;, params_ref const&amp;) (3 samples, 0.64%)</title><rect x="93.1624%" y="373" width="0.6410%" height="15" fill="rgb(241,130,17)" fg:x="436" fg:w="3"/><text x="93.4124%" y="383.50"></text></g><g><title>rust-gkat`mk_qfnra_tactic(ast_manager&amp;, params_ref const&amp;) (1 samples, 0.21%)</title><rect x="93.5897%" y="357" width="0.2137%" height="15" fill="rgb(206,137,32)" fg:x="438" fg:w="1"/><text x="93.8397%" y="367.50"></text></g><g><title>rust-gkat`mk_elim_term_ite_tactic(ast_manager&amp;, params_ref const&amp;) (1 samples, 0.21%)</title><rect x="93.5897%" y="341" width="0.2137%" height="15" fill="rgb(237,228,51)" fg:x="438" fg:w="1"/><text x="93.8397%" y="351.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="93.8034%" y="405" width="0.2137%" height="15" fill="rgb(243,6,42)" fg:x="439" fg:w="1"/><text x="94.0534%" y="415.50"></text></g><g><title>rust-gkat`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.21%)</title><rect x="93.8034%" y="389" width="0.2137%" height="15" fill="rgb(251,74,28)" fg:x="439" fg:w="1"/><text x="94.0534%" y="399.50"></text></g><g><title>rust-gkat`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.21%)</title><rect x="93.8034%" y="373" width="0.2137%" height="15" fill="rgb(218,20,49)" fg:x="439" fg:w="1"/><text x="94.0534%" y="383.50"></text></g><g><title>rust-gkat`mi_heap_malloc_zero_aligned_at_generic (1 samples, 0.21%)</title><rect x="93.8034%" y="357" width="0.2137%" height="15" fill="rgb(238,28,14)" fg:x="439" fg:w="1"/><text x="94.0534%" y="367.50"></text></g><g><title>rust-gkat`_mi_malloc_generic (1 samples, 0.21%)</title><rect x="93.8034%" y="341" width="0.2137%" height="15" fill="rgb(229,40,46)" fg:x="439" fg:w="1"/><text x="94.0534%" y="351.50"></text></g><g><title>rust-gkat`mi_find_page (1 samples, 0.21%)</title><rect x="93.8034%" y="325" width="0.2137%" height="15" fill="rgb(244,195,20)" fg:x="439" fg:w="1"/><text x="94.0534%" y="335.50"></text></g><g><title>rust-gkat`mi_page_free_list_extend (1 samples, 0.21%)</title><rect x="93.8034%" y="309" width="0.2137%" height="15" fill="rgb(253,56,35)" fg:x="439" fg:w="1"/><text x="94.0534%" y="319.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="94.0171%" y="405" width="0.2137%" height="15" fill="rgb(210,149,44)" fg:x="440" fg:w="1"/><text x="94.2671%" y="415.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="94.0171%" y="389" width="0.2137%" height="15" fill="rgb(240,135,12)" fg:x="440" fg:w="1"/><text x="94.2671%" y="399.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="94.0171%" y="373" width="0.2137%" height="15" fill="rgb(251,24,50)" fg:x="440" fg:w="1"/><text x="94.2671%" y="383.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="94.0171%" y="357" width="0.2137%" height="15" fill="rgb(243,200,47)" fg:x="440" fg:w="1"/><text x="94.2671%" y="367.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="94.0171%" y="341" width="0.2137%" height="15" fill="rgb(224,166,26)" fg:x="440" fg:w="1"/><text x="94.2671%" y="351.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="94.0171%" y="325" width="0.2137%" height="15" fill="rgb(233,0,47)" fg:x="440" fg:w="1"/><text x="94.2671%" y="335.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="94.0171%" y="309" width="0.2137%" height="15" fill="rgb(253,80,5)" fg:x="440" fg:w="1"/><text x="94.2671%" y="319.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt;&gt;::operator&lt;&lt; (1 samples, 0.21%)</title><rect x="94.0171%" y="293" width="0.2137%" height="15" fill="rgb(214,133,25)" fg:x="440" fg:w="1"/><text x="94.2671%" y="303.50"></text></g><g><title>libc++.1.dylib`std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt; std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt;&gt;&gt;::__do_put_integral[abi:ne180100]&lt;unsigned long&gt;(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits (1 samples, 0.21%)</title><rect x="94.0171%" y="277" width="0.2137%" height="15" fill="rgb(209,27,14)" fg:x="440" fg:w="1"/><text x="94.2671%" y="287.50"></text></g><g><title>libsystem_c.dylib`snprintf_l (1 samples, 0.21%)</title><rect x="94.0171%" y="261" width="0.2137%" height="15" fill="rgb(219,102,51)" fg:x="440" fg:w="1"/><text x="94.2671%" y="271.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.21%)</title><rect x="94.0171%" y="245" width="0.2137%" height="15" fill="rgb(237,18,16)" fg:x="440" fg:w="1"/><text x="94.2671%" y="255.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.21%)</title><rect x="94.0171%" y="229" width="0.2137%" height="15" fill="rgb(241,85,17)" fg:x="440" fg:w="1"/><text x="94.2671%" y="239.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.21%)</title><rect x="94.0171%" y="213" width="0.2137%" height="15" fill="rgb(236,90,42)" fg:x="440" fg:w="1"/><text x="94.2671%" y="223.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="94.2308%" y="389" width="0.2137%" height="15" fill="rgb(249,57,21)" fg:x="441" fg:w="1"/><text x="94.4808%" y="399.50"></text></g><g><title>rust-gkat`api::context::flush_objects (1 samples, 0.21%)</title><rect x="94.2308%" y="373" width="0.2137%" height="15" fill="rgb(243,12,36)" fg:x="441" fg:w="1"/><text x="94.4808%" y="383.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (1 samples, 0.21%)</title><rect x="94.4444%" y="229" width="0.2137%" height="15" fill="rgb(253,128,47)" fg:x="442" fg:w="1"/><text x="94.6944%" y="239.50"></text></g><g><title>rust-gkat`nnf::~nnf (1 samples, 0.21%)</title><rect x="94.4444%" y="213" width="0.2137%" height="15" fill="rgb(207,33,20)" fg:x="442" fg:w="1"/><text x="94.6944%" y="223.50"></text></g><g><title>rust-gkat`nnf::imp::~imp (1 samples, 0.21%)</title><rect x="94.4444%" y="197" width="0.2137%" height="15" fill="rgb(233,215,35)" fg:x="442" fg:w="1"/><text x="94.6944%" y="207.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="94.4444%" y="181" width="0.2137%" height="15" fill="rgb(249,188,52)" fg:x="442" fg:w="1"/><text x="94.6944%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.21%)</title><rect x="94.4444%" y="165" width="0.2137%" height="15" fill="rgb(225,12,32)" fg:x="442" fg:w="1"/><text x="94.6944%" y="175.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (2 samples, 0.43%)</title><rect x="94.4444%" y="389" width="0.4274%" height="15" fill="rgb(247,98,14)" fg:x="442" fg:w="2"/><text x="94.6944%" y="399.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (2 samples, 0.43%)</title><rect x="94.4444%" y="373" width="0.4274%" height="15" fill="rgb(247,219,48)" fg:x="442" fg:w="2"/><text x="94.6944%" y="383.50"></text></g><g><title>rust-gkat`solver::check_sat (2 samples, 0.43%)</title><rect x="94.4444%" y="357" width="0.4274%" height="15" fill="rgb(253,60,48)" fg:x="442" fg:w="2"/><text x="94.6944%" y="367.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (2 samples, 0.43%)</title><rect x="94.4444%" y="341" width="0.4274%" height="15" fill="rgb(245,15,52)" fg:x="442" fg:w="2"/><text x="94.6944%" y="351.50"></text></g><g><title>rust-gkat`smt::context::check (2 samples, 0.43%)</title><rect x="94.4444%" y="325" width="0.4274%" height="15" fill="rgb(220,133,28)" fg:x="442" fg:w="2"/><text x="94.6944%" y="335.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (2 samples, 0.43%)</title><rect x="94.4444%" y="309" width="0.4274%" height="15" fill="rgb(217,180,4)" fg:x="442" fg:w="2"/><text x="94.6944%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (2 samples, 0.43%)</title><rect x="94.4444%" y="293" width="0.4274%" height="15" fill="rgb(251,24,1)" fg:x="442" fg:w="2"/><text x="94.6944%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (2 samples, 0.43%)</title><rect x="94.4444%" y="277" width="0.4274%" height="15" fill="rgb(212,185,49)" fg:x="442" fg:w="2"/><text x="94.6944%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (2 samples, 0.43%)</title><rect x="94.4444%" y="261" width="0.4274%" height="15" fill="rgb(215,175,22)" fg:x="442" fg:w="2"/><text x="94.6944%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (2 samples, 0.43%)</title><rect x="94.4444%" y="245" width="0.4274%" height="15" fill="rgb(250,205,14)" fg:x="442" fg:w="2"/><text x="94.6944%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="94.6581%" y="229" width="0.2137%" height="15" fill="rgb(225,211,22)" fg:x="443" fg:w="1"/><text x="94.9081%" y="239.50"></text></g><g><title>rust-gkat`th_rewriter::reset (1 samples, 0.21%)</title><rect x="94.6581%" y="213" width="0.2137%" height="15" fill="rgb(251,179,42)" fg:x="443" fg:w="1"/><text x="94.9081%" y="223.50"></text></g><g><title>rust-gkat`rewriter_core::reset (1 samples, 0.21%)</title><rect x="94.6581%" y="197" width="0.2137%" height="15" fill="rgb(208,216,51)" fg:x="443" fg:w="1"/><text x="94.9081%" y="207.50"></text></g><g><title>rust-gkat`act_cache::reset (1 samples, 0.21%)</title><rect x="94.6581%" y="181" width="0.2137%" height="15" fill="rgb(235,36,11)" fg:x="443" fg:w="1"/><text x="94.9081%" y="191.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="94.6581%" y="165" width="0.2137%" height="15" fill="rgb(213,189,28)" fg:x="443" fg:w="1"/><text x="94.9081%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.21%)</title><rect x="94.6581%" y="149" width="0.2137%" height="15" fill="rgb(227,203,42)" fg:x="443" fg:w="1"/><text x="94.9081%" y="159.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (1 samples, 0.21%)</title><rect x="94.8718%" y="213" width="0.2137%" height="15" fill="rgb(244,72,36)" fg:x="444" fg:w="1"/><text x="95.1218%" y="223.50"></text></g><g><title>rust-gkat`nnf::nnf (1 samples, 0.21%)</title><rect x="94.8718%" y="197" width="0.2137%" height="15" fill="rgb(213,53,17)" fg:x="444" fg:w="1"/><text x="95.1218%" y="207.50"></text></g><g><title>rust-gkat`nnf::imp::imp (1 samples, 0.21%)</title><rect x="94.8718%" y="181" width="0.2137%" height="15" fill="rgb(207,167,3)" fg:x="444" fg:w="1"/><text x="95.1218%" y="191.50"></text></g><g><title>rust-gkat`name_nested_formulas::name_nested_formulas (1 samples, 0.21%)</title><rect x="94.8718%" y="165" width="0.2137%" height="15" fill="rgb(216,98,30)" fg:x="444" fg:w="1"/><text x="95.1218%" y="175.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;name_exprs_core::cfg&gt;::rewriter_tpl (1 samples, 0.21%)</title><rect x="94.8718%" y="149" width="0.2137%" height="15" fill="rgb(236,123,15)" fg:x="444" fg:w="1"/><text x="95.1218%" y="159.50"></text></g><g><title>rust-gkat`rewriter_core::rewriter_core (1 samples, 0.21%)</title><rect x="94.8718%" y="133" width="0.2137%" height="15" fill="rgb(248,81,50)" fg:x="444" fg:w="1"/><text x="95.1218%" y="143.50"></text></g><g><title>rust-gkat`rewriter_core::init_cache_stack (1 samples, 0.21%)</title><rect x="94.8718%" y="117" width="0.2137%" height="15" fill="rgb(214,120,4)" fg:x="444" fg:w="1"/><text x="95.1218%" y="127.50"></text></g><g><title>rust-gkat`act_cache::act_cache (1 samples, 0.21%)</title><rect x="94.8718%" y="101" width="0.2137%" height="15" fill="rgb(208,179,34)" fg:x="444" fg:w="1"/><text x="95.1218%" y="111.50"></text></g><g><title>rust-gkat`memory::allocate (1 samples, 0.21%)</title><rect x="94.8718%" y="85" width="0.2137%" height="15" fill="rgb(227,140,7)" fg:x="444" fg:w="1"/><text x="95.1218%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="94.8718%" y="69" width="0.2137%" height="15" fill="rgb(214,22,6)" fg:x="444" fg:w="1"/><text x="95.1218%" y="79.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (2 samples, 0.43%)</title><rect x="94.8718%" y="293" width="0.4274%" height="15" fill="rgb(207,137,27)" fg:x="444" fg:w="2"/><text x="95.1218%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (2 samples, 0.43%)</title><rect x="94.8718%" y="277" width="0.4274%" height="15" fill="rgb(210,8,46)" fg:x="444" fg:w="2"/><text x="95.1218%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (2 samples, 0.43%)</title><rect x="94.8718%" y="261" width="0.4274%" height="15" fill="rgb(240,16,54)" fg:x="444" fg:w="2"/><text x="95.1218%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (2 samples, 0.43%)</title><rect x="94.8718%" y="245" width="0.4274%" height="15" fill="rgb(211,209,29)" fg:x="444" fg:w="2"/><text x="95.1218%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (2 samples, 0.43%)</title><rect x="94.8718%" y="229" width="0.4274%" height="15" fill="rgb(226,228,24)" fg:x="444" fg:w="2"/><text x="95.1218%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="95.0855%" y="213" width="0.2137%" height="15" fill="rgb(222,84,9)" fg:x="445" fg:w="1"/><text x="95.3355%" y="223.50"></text></g><g><title>rust-gkat`th_rewriter::reset (1 samples, 0.21%)</title><rect x="95.0855%" y="197" width="0.2137%" height="15" fill="rgb(234,203,30)" fg:x="445" fg:w="1"/><text x="95.3355%" y="207.50"></text></g><g><title>rust-gkat`rewriter_core::reset (1 samples, 0.21%)</title><rect x="95.0855%" y="181" width="0.2137%" height="15" fill="rgb(238,109,14)" fg:x="445" fg:w="1"/><text x="95.3355%" y="191.50"></text></g><g><title>rust-gkat`act_cache::reset (1 samples, 0.21%)</title><rect x="95.0855%" y="165" width="0.2137%" height="15" fill="rgb(233,206,34)" fg:x="445" fg:w="1"/><text x="95.3355%" y="175.50"></text></g><g><title>rust-gkat`act_cache::dec_refs (1 samples, 0.21%)</title><rect x="95.0855%" y="149" width="0.2137%" height="15" fill="rgb(220,167,47)" fg:x="445" fg:w="1"/><text x="95.3355%" y="159.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (3 samples, 0.64%)</title><rect x="94.8718%" y="373" width="0.6410%" height="15" fill="rgb(238,105,10)" fg:x="444" fg:w="3"/><text x="95.1218%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (3 samples, 0.64%)</title><rect x="94.8718%" y="357" width="0.6410%" height="15" fill="rgb(213,227,17)" fg:x="444" fg:w="3"/><text x="95.1218%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (3 samples, 0.64%)</title><rect x="94.8718%" y="341" width="0.6410%" height="15" fill="rgb(217,132,38)" fg:x="444" fg:w="3"/><text x="95.1218%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (3 samples, 0.64%)</title><rect x="94.8718%" y="325" width="0.6410%" height="15" fill="rgb(242,146,4)" fg:x="444" fg:w="3"/><text x="95.1218%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (3 samples, 0.64%)</title><rect x="94.8718%" y="309" width="0.6410%" height="15" fill="rgb(212,61,9)" fg:x="444" fg:w="3"/><text x="95.1218%" y="319.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="95.2991%" y="293" width="0.2137%" height="15" fill="rgb(247,126,22)" fg:x="446" fg:w="1"/><text x="95.5491%" y="303.50"></text></g><g><title>rust-gkat`smt::context::log_stats (1 samples, 0.21%)</title><rect x="95.2991%" y="277" width="0.2137%" height="15" fill="rgb(220,196,2)" fg:x="446" fg:w="1"/><text x="95.5491%" y="287.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="95.5128%" y="341" width="0.2137%" height="15" fill="rgb(208,46,4)" fg:x="447" fg:w="1"/><text x="95.7628%" y="351.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="95.5128%" y="325" width="0.2137%" height="15" fill="rgb(252,104,46)" fg:x="447" fg:w="1"/><text x="95.7628%" y="335.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="95.5128%" y="309" width="0.2137%" height="15" fill="rgb(237,152,48)" fg:x="447" fg:w="1"/><text x="95.7628%" y="319.50"></text></g><g><title>rust-gkat`bool rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::visit&lt;false&gt; (1 samples, 0.21%)</title><rect x="95.5128%" y="293" width="0.2137%" height="15" fill="rgb(221,59,37)" fg:x="447" fg:w="1"/><text x="95.7628%" y="303.50"></text></g><g><title>rust-gkat`vector&lt;rewriter_core::frame, false, unsigned int&gt;::expand_vector (1 samples, 0.21%)</title><rect x="95.5128%" y="277" width="0.2137%" height="15" fill="rgb(209,202,51)" fg:x="447" fg:w="1"/><text x="95.7628%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.21%)</title><rect x="95.5128%" y="261" width="0.2137%" height="15" fill="rgb(228,81,30)" fg:x="447" fg:w="1"/><text x="95.7628%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (2 samples, 0.43%)</title><rect x="95.5128%" y="373" width="0.4274%" height="15" fill="rgb(227,42,39)" fg:x="447" fg:w="2"/><text x="95.7628%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (2 samples, 0.43%)</title><rect x="95.5128%" y="357" width="0.4274%" height="15" fill="rgb(221,26,2)" fg:x="447" fg:w="2"/><text x="95.7628%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="95.7265%" y="341" width="0.2137%" height="15" fill="rgb(254,61,31)" fg:x="448" fg:w="1"/><text x="95.9765%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="95.7265%" y="325" width="0.2137%" height="15" fill="rgb(222,173,38)" fg:x="448" fg:w="1"/><text x="95.9765%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="95.7265%" y="309" width="0.2137%" height="15" fill="rgb(218,50,12)" fg:x="448" fg:w="1"/><text x="95.9765%" y="319.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="95.7265%" y="293" width="0.2137%" height="15" fill="rgb(223,88,40)" fg:x="448" fg:w="1"/><text x="95.9765%" y="303.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="95.7265%" y="277" width="0.2137%" height="15" fill="rgb(237,54,19)" fg:x="448" fg:w="1"/><text x="95.9765%" y="287.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="95.7265%" y="261" width="0.2137%" height="15" fill="rgb(251,129,25)" fg:x="448" fg:w="1"/><text x="95.9765%" y="271.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="95.7265%" y="245" width="0.2137%" height="15" fill="rgb(238,97,19)" fg:x="448" fg:w="1"/><text x="95.9765%" y="255.50"></text></g><g><title>rust-gkat`arith_rewriter::arith_rewriter (1 samples, 0.21%)</title><rect x="95.7265%" y="229" width="0.2137%" height="15" fill="rgb(240,169,18)" fg:x="448" fg:w="1"/><text x="95.9765%" y="239.50"></text></g><g><title>rust-gkat`arith_rewriter::updt_local_params (1 samples, 0.21%)</title><rect x="95.7265%" y="213" width="0.2137%" height="15" fill="rgb(230,187,49)" fg:x="448" fg:w="1"/><text x="95.9765%" y="223.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="95.7265%" y="197" width="0.2137%" height="15" fill="rgb(209,44,26)" fg:x="448" fg:w="1"/><text x="95.9765%" y="207.50"></text></g><g><title>rust-gkat`string_hash(char const*, unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="95.7265%" y="181" width="0.2137%" height="15" fill="rgb(244,0,6)" fg:x="448" fg:w="1"/><text x="95.9765%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::mk_seq (2 samples, 0.43%)</title><rect x="95.9402%" y="373" width="0.4274%" height="15" fill="rgb(248,18,21)" fg:x="449" fg:w="2"/><text x="96.1902%" y="383.50"></text></g><g><title>rust-gkat`&lt;&amp;mut hashconsing::HConsign&lt;T,S&gt; as hashconsing::HashConsign&lt;T&gt;&gt;::mk_is_new (1 samples, 0.21%)</title><rect x="96.1538%" y="357" width="0.2137%" height="15" fill="rgb(245,180,19)" fg:x="450" fg:w="1"/><text x="96.4038%" y="367.50"></text></g><g><title>rust-gkat`core::hash::BuildHasher::hash_one (1 samples, 0.21%)</title><rect x="96.1538%" y="341" width="0.2137%" height="15" fill="rgb(252,118,36)" fg:x="450" fg:w="1"/><text x="96.4038%" y="351.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="96.3675%" y="325" width="0.2137%" height="15" fill="rgb(210,224,19)" fg:x="451" fg:w="1"/><text x="96.6175%" y="335.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="96.3675%" y="309" width="0.2137%" height="15" fill="rgb(218,30,24)" fg:x="451" fg:w="1"/><text x="96.6175%" y="319.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="96.3675%" y="293" width="0.2137%" height="15" fill="rgb(219,75,50)" fg:x="451" fg:w="1"/><text x="96.6175%" y="303.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="96.3675%" y="277" width="0.2137%" height="15" fill="rgb(234,72,50)" fg:x="451" fg:w="1"/><text x="96.6175%" y="287.50"></text></g><g><title>rust-gkat`bool_rewriter::mk_nflat_or_core(unsigned int, expr* const*, obj_ref (1 samples, 0.21%)</title><rect x="96.3675%" y="261" width="0.2137%" height="15" fill="rgb(219,100,48)" fg:x="451" fg:w="1"/><text x="96.6175%" y="271.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="96.5812%" y="245" width="0.2137%" height="15" fill="rgb(253,5,41)" fg:x="452" fg:w="1"/><text x="96.8312%" y="255.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="96.5812%" y="229" width="0.2137%" height="15" fill="rgb(247,181,11)" fg:x="452" fg:w="1"/><text x="96.8312%" y="239.50"></text></g><g><title>rust-gkat`DYLD-STUB$$strlen (1 samples, 0.21%)</title><rect x="96.5812%" y="213" width="0.2137%" height="15" fill="rgb(222,223,25)" fg:x="452" fg:w="1"/><text x="96.8312%" y="223.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (2 samples, 0.43%)</title><rect x="96.5812%" y="309" width="0.4274%" height="15" fill="rgb(214,198,28)" fg:x="452" fg:w="2"/><text x="96.8312%" y="319.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (2 samples, 0.43%)</title><rect x="96.5812%" y="293" width="0.4274%" height="15" fill="rgb(230,46,43)" fg:x="452" fg:w="2"/><text x="96.8312%" y="303.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (2 samples, 0.43%)</title><rect x="96.5812%" y="277" width="0.4274%" height="15" fill="rgb(233,65,53)" fg:x="452" fg:w="2"/><text x="96.8312%" y="287.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (2 samples, 0.43%)</title><rect x="96.5812%" y="261" width="0.4274%" height="15" fill="rgb(221,121,27)" fg:x="452" fg:w="2"/><text x="96.8312%" y="271.50"></text></g><g><title>rust-gkat`recfun::util::util (1 samples, 0.21%)</title><rect x="96.7949%" y="245" width="0.2137%" height="15" fill="rgb(247,70,47)" fg:x="453" fg:w="1"/><text x="97.0449%" y="255.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="96.7949%" y="229" width="0.2137%" height="15" fill="rgb(228,85,35)" fg:x="453" fg:w="1"/><text x="97.0449%" y="239.50"></text></g><g><title>rust-gkat`internal_symbol_tables::get_str (1 samples, 0.21%)</title><rect x="96.7949%" y="213" width="0.2137%" height="15" fill="rgb(209,50,18)" fg:x="453" fg:w="1"/><text x="97.0449%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="96.7949%" y="197" width="0.2137%" height="15" fill="rgb(250,19,35)" fg:x="453" fg:w="1"/><text x="97.0449%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.21%)</title><rect x="96.7949%" y="181" width="0.2137%" height="15" fill="rgb(253,107,29)" fg:x="453" fg:w="1"/><text x="97.0449%" y="191.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (4 samples, 0.85%)</title><rect x="96.3675%" y="373" width="0.8547%" height="15" fill="rgb(252,179,29)" fg:x="451" fg:w="4"/><text x="96.6175%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (4 samples, 0.85%)</title><rect x="96.3675%" y="357" width="0.8547%" height="15" fill="rgb(238,194,6)" fg:x="451" fg:w="4"/><text x="96.6175%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (4 samples, 0.85%)</title><rect x="96.3675%" y="341" width="0.8547%" height="15" fill="rgb(238,164,29)" fg:x="451" fg:w="4"/><text x="96.6175%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (3 samples, 0.64%)</title><rect x="96.5812%" y="325" width="0.6410%" height="15" fill="rgb(224,25,9)" fg:x="452" fg:w="3"/><text x="96.8312%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.0085%" y="309" width="0.2137%" height="15" fill="rgb(244,153,23)" fg:x="454" fg:w="1"/><text x="97.2585%" y="319.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="97.0085%" y="293" width="0.2137%" height="15" fill="rgb(212,203,14)" fg:x="454" fg:w="1"/><text x="97.2585%" y="303.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="97.0085%" y="277" width="0.2137%" height="15" fill="rgb(220,164,20)" fg:x="454" fg:w="1"/><text x="97.2585%" y="287.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="97.0085%" y="261" width="0.2137%" height="15" fill="rgb(222,203,48)" fg:x="454" fg:w="1"/><text x="97.2585%" y="271.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::~rewriter_tpl (1 samples, 0.21%)</title><rect x="97.0085%" y="245" width="0.2137%" height="15" fill="rgb(215,159,22)" fg:x="454" fg:w="1"/><text x="97.2585%" y="255.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="97.0085%" y="229" width="0.2137%" height="15" fill="rgb(216,183,47)" fg:x="454" fg:w="1"/><text x="97.2585%" y="239.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="97.0085%" y="213" width="0.2137%" height="15" fill="rgb(229,195,25)" fg:x="454" fg:w="1"/><text x="97.2585%" y="223.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="97.0085%" y="197" width="0.2137%" height="15" fill="rgb(224,132,51)" fg:x="454" fg:w="1"/><text x="97.2585%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.21%)</title><rect x="97.0085%" y="181" width="0.2137%" height="15" fill="rgb(240,63,7)" fg:x="454" fg:w="1"/><text x="97.2585%" y="191.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="97.2222%" y="277" width="0.2137%" height="15" fill="rgb(249,182,41)" fg:x="455" fg:w="1"/><text x="97.4722%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="97.2222%" y="261" width="0.2137%" height="15" fill="rgb(243,47,26)" fg:x="455" fg:w="1"/><text x="97.4722%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::assert_expr (1 samples, 0.21%)</title><rect x="97.2222%" y="245" width="0.2137%" height="15" fill="rgb(233,48,2)" fg:x="455" fg:w="1"/><text x="97.4722%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::set_eliminate_and (1 samples, 0.21%)</title><rect x="97.2222%" y="229" width="0.2137%" height="15" fill="rgb(244,165,34)" fg:x="455" fg:w="1"/><text x="97.4722%" y="239.50"></text></g><g><title>rust-gkat`th_rewriter::updt_params (1 samples, 0.21%)</title><rect x="97.2222%" y="213" width="0.2137%" height="15" fill="rgb(207,89,7)" fg:x="455" fg:w="1"/><text x="97.4722%" y="223.50"></text></g><g><title>rust-gkat`seq_rewriter::updt_params (1 samples, 0.21%)</title><rect x="97.2222%" y="197" width="0.2137%" height="15" fill="rgb(244,117,36)" fg:x="455" fg:w="1"/><text x="97.4722%" y="207.50"></text></g><g><title>rust-gkat`gparams::imp::get_module (1 samples, 0.21%)</title><rect x="97.2222%" y="181" width="0.2137%" height="15" fill="rgb(226,144,34)" fg:x="455" fg:w="1"/><text x="97.4722%" y="191.50"></text></g><g><title>rust-gkat`core_hashtable&lt;default_map_entry&lt;char const*, params_ref*&gt;, table2map&lt;default_map_entry&lt;char const*, params_ref*&gt;, str_hash_proc, str_eq_proc&gt;::entry_hash_proc, table2map&lt;default_map_entry&lt;char const*, params_ref*&gt;, str_hash_proc, str_eq_proc&gt;::entry_eq_proc&gt;::find_core(_key_data (1 samples, 0.21%)</title><rect x="97.2222%" y="165" width="0.2137%" height="15" fill="rgb(213,23,19)" fg:x="455" fg:w="1"/><text x="97.4722%" y="175.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (13 samples, 2.78%)</title><rect x="94.8718%" y="389" width="2.7778%" height="15" fill="rgb(217,75,12)" fg:x="444" fg:w="13"/><text x="95.1218%" y="399.50">ru..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (2 samples, 0.43%)</title><rect x="97.2222%" y="373" width="0.4274%" height="15" fill="rgb(224,159,17)" fg:x="455" fg:w="2"/><text x="97.4722%" y="383.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (2 samples, 0.43%)</title><rect x="97.2222%" y="357" width="0.4274%" height="15" fill="rgb(217,118,1)" fg:x="455" fg:w="2"/><text x="97.4722%" y="367.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (2 samples, 0.43%)</title><rect x="97.2222%" y="341" width="0.4274%" height="15" fill="rgb(232,180,48)" fg:x="455" fg:w="2"/><text x="97.4722%" y="351.50"></text></g><g><title>rust-gkat`solver::check_sat (2 samples, 0.43%)</title><rect x="97.2222%" y="325" width="0.4274%" height="15" fill="rgb(230,27,33)" fg:x="455" fg:w="2"/><text x="97.4722%" y="335.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (2 samples, 0.43%)</title><rect x="97.2222%" y="309" width="0.4274%" height="15" fill="rgb(205,31,21)" fg:x="455" fg:w="2"/><text x="97.4722%" y="319.50"></text></g><g><title>rust-gkat`smt::context::check (2 samples, 0.43%)</title><rect x="97.2222%" y="293" width="0.4274%" height="15" fill="rgb(253,59,4)" fg:x="455" fg:w="2"/><text x="97.4722%" y="303.50"></text></g><g><title>rust-gkat`smt::context::search (1 samples, 0.21%)</title><rect x="97.4359%" y="277" width="0.2137%" height="15" fill="rgb(224,201,9)" fg:x="456" fg:w="1"/><text x="97.6859%" y="287.50"></text></g><g><title>rust-gkat`smt::context::bounded_search (1 samples, 0.21%)</title><rect x="97.4359%" y="261" width="0.2137%" height="15" fill="rgb(229,206,30)" fg:x="456" fg:w="1"/><text x="97.6859%" y="271.50"></text></g><g><title>rust-gkat`smt::context::final_check (1 samples, 0.21%)</title><rect x="97.4359%" y="245" width="0.2137%" height="15" fill="rgb(212,67,47)" fg:x="456" fg:w="1"/><text x="97.6859%" y="255.50"></text></g><g><title>rust-gkat`smt::theory_lra::imp::propagate_core (1 samples, 0.21%)</title><rect x="97.4359%" y="229" width="0.2137%" height="15" fill="rgb(211,96,50)" fg:x="456" fg:w="1"/><text x="97.6859%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.6496%" y="389" width="0.2137%" height="15" fill="rgb(252,114,18)" fg:x="457" fg:w="1"/><text x="97.8996%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.6496%" y="373" width="0.2137%" height="15" fill="rgb(223,58,37)" fg:x="457" fg:w="1"/><text x="97.8996%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.6496%" y="357" width="0.2137%" height="15" fill="rgb(237,70,4)" fg:x="457" fg:w="1"/><text x="97.8996%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.6496%" y="341" width="0.2137%" height="15" fill="rgb(244,85,46)" fg:x="457" fg:w="1"/><text x="97.8996%" y="351.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="97.6496%" y="325" width="0.2137%" height="15" fill="rgb(223,39,52)" fg:x="457" fg:w="1"/><text x="97.8996%" y="335.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="97.6496%" y="309" width="0.2137%" height="15" fill="rgb(218,200,14)" fg:x="457" fg:w="1"/><text x="97.8996%" y="319.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="97.6496%" y="293" width="0.2137%" height="15" fill="rgb(208,171,16)" fg:x="457" fg:w="1"/><text x="97.8996%" y="303.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="97.6496%" y="277" width="0.2137%" height="15" fill="rgb(234,200,18)" fg:x="457" fg:w="1"/><text x="97.8996%" y="287.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="97.6496%" y="261" width="0.2137%" height="15" fill="rgb(228,45,11)" fg:x="457" fg:w="1"/><text x="97.8996%" y="271.50"></text></g><g><title>rust-gkat`bv_util::bv_util (1 samples, 0.21%)</title><rect x="97.6496%" y="245" width="0.2137%" height="15" fill="rgb(237,182,11)" fg:x="457" fg:w="1"/><text x="97.8996%" y="255.50"></text></g><g><title>rust-gkat`symbol::symbol (1 samples, 0.21%)</title><rect x="97.6496%" y="229" width="0.2137%" height="15" fill="rgb(241,175,49)" fg:x="457" fg:w="1"/><text x="97.8996%" y="239.50"></text></g><g><title>rust-gkat`DYLD-STUB$$std::__1::mutex::unlock (1 samples, 0.21%)</title><rect x="97.6496%" y="213" width="0.2137%" height="15" fill="rgb(247,38,35)" fg:x="457" fg:w="1"/><text x="97.8996%" y="223.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (18 samples, 3.85%)</title><rect x="94.2308%" y="405" width="3.8462%" height="15" fill="rgb(228,39,49)" fg:x="441" fg:w="18"/><text x="94.4808%" y="415.50">rust..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="97.8632%" y="389" width="0.2137%" height="15" fill="rgb(226,101,26)" fg:x="458" fg:w="1"/><text x="98.1132%" y="399.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="97.8632%" y="373" width="0.2137%" height="15" fill="rgb(206,141,19)" fg:x="458" fg:w="1"/><text x="98.1132%" y="383.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="97.8632%" y="357" width="0.2137%" height="15" fill="rgb(211,200,13)" fg:x="458" fg:w="1"/><text x="98.1132%" y="367.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="97.8632%" y="341" width="0.2137%" height="15" fill="rgb(241,121,6)" fg:x="458" fg:w="1"/><text x="98.1132%" y="351.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="97.8632%" y="325" width="0.2137%" height="15" fill="rgb(234,221,29)" fg:x="458" fg:w="1"/><text x="98.1132%" y="335.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="97.8632%" y="309" width="0.2137%" height="15" fill="rgb(229,136,5)" fg:x="458" fg:w="1"/><text x="98.1132%" y="319.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="97.8632%" y="293" width="0.2137%" height="15" fill="rgb(238,36,11)" fg:x="458" fg:w="1"/><text x="98.1132%" y="303.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="97.8632%" y="277" width="0.2137%" height="15" fill="rgb(251,55,41)" fg:x="458" fg:w="1"/><text x="98.1132%" y="287.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="97.8632%" y="261" width="0.2137%" height="15" fill="rgb(242,34,40)" fg:x="458" fg:w="1"/><text x="98.1132%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="97.8632%" y="245" width="0.2137%" height="15" fill="rgb(215,42,17)" fg:x="458" fg:w="1"/><text x="98.1132%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="97.8632%" y="229" width="0.2137%" height="15" fill="rgb(207,44,46)" fg:x="458" fg:w="1"/><text x="98.1132%" y="239.50"></text></g><g><title>rust-gkat`asserted_formulas::nnf_cnf (1 samples, 0.21%)</title><rect x="97.8632%" y="213" width="0.2137%" height="15" fill="rgb(211,206,28)" fg:x="458" fg:w="1"/><text x="98.1132%" y="223.50"></text></g><g><title>rust-gkat`nnf::~nnf (1 samples, 0.21%)</title><rect x="97.8632%" y="197" width="0.2137%" height="15" fill="rgb(237,167,16)" fg:x="458" fg:w="1"/><text x="98.1132%" y="207.50"></text></g><g><title>rust-gkat`nnf::imp::~imp (1 samples, 0.21%)</title><rect x="97.8632%" y="181" width="0.2137%" height="15" fill="rgb(233,66,6)" fg:x="458" fg:w="1"/><text x="98.1132%" y="191.50"></text></g><g><title>rust-gkat`del_name_exprs(name_exprs*) (1 samples, 0.21%)</title><rect x="97.8632%" y="165" width="0.2137%" height="15" fill="rgb(246,123,29)" fg:x="458" fg:w="1"/><text x="98.1132%" y="175.50"></text></g><g><title>rust-gkat`name_nested_formulas::~name_nested_formulas (1 samples, 0.21%)</title><rect x="97.8632%" y="149" width="0.2137%" height="15" fill="rgb(209,62,40)" fg:x="458" fg:w="1"/><text x="98.1132%" y="159.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;name_exprs_core::cfg&gt;::~rewriter_tpl (1 samples, 0.21%)</title><rect x="97.8632%" y="133" width="0.2137%" height="15" fill="rgb(218,4,25)" fg:x="458" fg:w="1"/><text x="98.1132%" y="143.50"></text></g><g><title>rust-gkat`rewriter_core::~rewriter_core (1 samples, 0.21%)</title><rect x="97.8632%" y="117" width="0.2137%" height="15" fill="rgb(253,91,49)" fg:x="458" fg:w="1"/><text x="98.1132%" y="127.50"></text></g><g><title>rust-gkat`rewriter_core::del_cache_stack (1 samples, 0.21%)</title><rect x="97.8632%" y="101" width="0.2137%" height="15" fill="rgb(228,155,29)" fg:x="458" fg:w="1"/><text x="98.1132%" y="111.50"></text></g><g><title>rust-gkat`act_cache::~act_cache (1 samples, 0.21%)</title><rect x="97.8632%" y="85" width="0.2137%" height="15" fill="rgb(243,57,37)" fg:x="458" fg:w="1"/><text x="98.1132%" y="95.50"></text></g><g><title>rust-gkat`memory::deallocate (1 samples, 0.21%)</title><rect x="97.8632%" y="69" width="0.2137%" height="15" fill="rgb(244,167,17)" fg:x="458" fg:w="1"/><text x="98.1132%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.21%)</title><rect x="97.8632%" y="53" width="0.2137%" height="15" fill="rgb(207,181,38)" fg:x="458" fg:w="1"/><text x="98.1132%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.21%)</title><rect x="97.8632%" y="37" width="0.2137%" height="15" fill="rgb(211,8,23)" fg:x="458" fg:w="1"/><text x="98.1132%" y="47.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.0769%" y="405" width="0.2137%" height="15" fill="rgb(235,11,44)" fg:x="459" fg:w="1"/><text x="98.3269%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.0769%" y="389" width="0.2137%" height="15" fill="rgb(248,18,52)" fg:x="459" fg:w="1"/><text x="98.3269%" y="399.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.0769%" y="373" width="0.2137%" height="15" fill="rgb(208,4,7)" fg:x="459" fg:w="1"/><text x="98.3269%" y="383.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.0769%" y="357" width="0.2137%" height="15" fill="rgb(240,17,39)" fg:x="459" fg:w="1"/><text x="98.3269%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.0769%" y="341" width="0.2137%" height="15" fill="rgb(207,170,3)" fg:x="459" fg:w="1"/><text x="98.3269%" y="351.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="98.0769%" y="325" width="0.2137%" height="15" fill="rgb(236,100,52)" fg:x="459" fg:w="1"/><text x="98.3269%" y="335.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="98.0769%" y="309" width="0.2137%" height="15" fill="rgb(246,78,51)" fg:x="459" fg:w="1"/><text x="98.3269%" y="319.50"></text></g><g><title>rust-gkat`th_rewriter::th_rewriter (1 samples, 0.21%)</title><rect x="98.0769%" y="293" width="0.2137%" height="15" fill="rgb(211,17,15)" fg:x="459" fg:w="1"/><text x="98.3269%" y="303.50"></text></g><g><title>rust-gkat`th_rewriter::imp::imp (1 samples, 0.21%)</title><rect x="98.0769%" y="277" width="0.2137%" height="15" fill="rgb(209,59,46)" fg:x="459" fg:w="1"/><text x="98.3269%" y="287.50"></text></g><g><title>rust-gkat`seq_rewriter::seq_rewriter (1 samples, 0.21%)</title><rect x="98.0769%" y="261" width="0.2137%" height="15" fill="rgb(210,92,25)" fg:x="459" fg:w="1"/><text x="98.3269%" y="271.50"></text></g><g><title>rust-gkat`bool_rewriter::updt_params (1 samples, 0.21%)</title><rect x="98.0769%" y="245" width="0.2137%" height="15" fill="rgb(238,174,52)" fg:x="459" fg:w="1"/><text x="98.3269%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (1 samples, 0.21%)</title><rect x="98.0769%" y="229" width="0.2137%" height="15" fill="rgb(230,73,7)" fg:x="459" fg:w="1"/><text x="98.3269%" y="239.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (22 samples, 4.70%)</title><rect x="93.8034%" y="421" width="4.7009%" height="15" fill="rgb(243,124,40)" fg:x="439" fg:w="22"/><text x="94.0534%" y="431.50">rust-..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="98.2906%" y="405" width="0.2137%" height="15" fill="rgb(244,170,11)" fg:x="460" fg:w="1"/><text x="98.5406%" y="415.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="98.2906%" y="389" width="0.2137%" height="15" fill="rgb(207,114,54)" fg:x="460" fg:w="1"/><text x="98.5406%" y="399.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="98.2906%" y="373" width="0.2137%" height="15" fill="rgb(205,42,20)" fg:x="460" fg:w="1"/><text x="98.5406%" y="383.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="98.2906%" y="357" width="0.2137%" height="15" fill="rgb(230,30,28)" fg:x="460" fg:w="1"/><text x="98.5406%" y="367.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="98.2906%" y="341" width="0.2137%" height="15" fill="rgb(205,73,54)" fg:x="460" fg:w="1"/><text x="98.5406%" y="351.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="98.2906%" y="325" width="0.2137%" height="15" fill="rgb(254,227,23)" fg:x="460" fg:w="1"/><text x="98.5406%" y="335.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="98.2906%" y="309" width="0.2137%" height="15" fill="rgb(228,202,34)" fg:x="460" fg:w="1"/><text x="98.5406%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="98.2906%" y="293" width="0.2137%" height="15" fill="rgb(222,225,37)" fg:x="460" fg:w="1"/><text x="98.5406%" y="303.50"></text></g><g><title>rust-gkat`ast_manager::mk_fresh_func_decl (1 samples, 0.21%)</title><rect x="98.2906%" y="277" width="0.2137%" height="15" fill="rgb(221,14,54)" fg:x="460" fg:w="1"/><text x="98.5406%" y="287.50"></text></g><g><title>rust-gkat`ast_manager::register_node_core (1 samples, 0.21%)</title><rect x="98.2906%" y="261" width="0.2137%" height="15" fill="rgb(254,102,2)" fg:x="460" fg:w="1"/><text x="98.5406%" y="271.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.5043%" y="421" width="0.2137%" height="15" fill="rgb(232,104,17)" fg:x="461" fg:w="1"/><text x="98.7543%" y="431.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.5043%" y="405" width="0.2137%" height="15" fill="rgb(250,220,14)" fg:x="461" fg:w="1"/><text x="98.7543%" y="415.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.5043%" y="389" width="0.2137%" height="15" fill="rgb(241,158,9)" fg:x="461" fg:w="1"/><text x="98.7543%" y="399.50"></text></g><g><title>rust-gkat`Z3_inc_ref (1 samples, 0.21%)</title><rect x="98.5043%" y="373" width="0.2137%" height="15" fill="rgb(246,9,43)" fg:x="461" fg:w="1"/><text x="98.7543%" y="383.50"></text></g><g><title>rust-gkat`api::context::flush_objects (1 samples, 0.21%)</title><rect x="98.5043%" y="357" width="0.2137%" height="15" fill="rgb(206,73,33)" fg:x="461" fg:w="1"/><text x="98.7543%" y="367.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (29 samples, 6.20%)</title><rect x="92.7350%" y="437" width="6.1966%" height="15" fill="rgb(222,79,8)" fg:x="434" fg:w="29"/><text x="92.9850%" y="447.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::is_false (1 samples, 0.21%)</title><rect x="98.7179%" y="421" width="0.2137%" height="15" fill="rgb(234,8,54)" fg:x="462" fg:w="1"/><text x="98.9679%" y="431.50"></text></g><g><title>rust-gkat`Z3_solver_check_assumptions (1 samples, 0.21%)</title><rect x="98.7179%" y="405" width="0.2137%" height="15" fill="rgb(209,134,38)" fg:x="462" fg:w="1"/><text x="98.9679%" y="415.50"></text></g><g><title>rust-gkat`_solver_check(_Z3_context*, _Z3_solver*, unsigned int, _Z3_ast* const*) (1 samples, 0.21%)</title><rect x="98.7179%" y="389" width="0.2137%" height="15" fill="rgb(230,127,29)" fg:x="462" fg:w="1"/><text x="98.9679%" y="399.50"></text></g><g><title>rust-gkat`solver::check_sat (1 samples, 0.21%)</title><rect x="98.7179%" y="373" width="0.2137%" height="15" fill="rgb(242,44,41)" fg:x="462" fg:w="1"/><text x="98.9679%" y="383.50"></text></g><g><title>rust-gkat`solver_na2as::check_sat_core (1 samples, 0.21%)</title><rect x="98.7179%" y="357" width="0.2137%" height="15" fill="rgb(222,56,43)" fg:x="462" fg:w="1"/><text x="98.9679%" y="367.50"></text></g><g><title>rust-gkat`smt::context::check (1 samples, 0.21%)</title><rect x="98.7179%" y="341" width="0.2137%" height="15" fill="rgb(238,39,47)" fg:x="462" fg:w="1"/><text x="98.9679%" y="351.50"></text></g><g><title>rust-gkat`smt::context::init_assumptions(ref_vector (1 samples, 0.21%)</title><rect x="98.7179%" y="325" width="0.2137%" height="15" fill="rgb(226,79,43)" fg:x="462" fg:w="1"/><text x="98.9679%" y="335.50"></text></g><g><title>rust-gkat`smt::context::internalize_proxies(ref_vector&lt;expr, ast_manager&gt; const&amp;, vector&lt;std::__1::pair&lt;expr*, obj_ref (1 samples, 0.21%)</title><rect x="98.7179%" y="309" width="0.2137%" height="15" fill="rgb(242,105,53)" fg:x="462" fg:w="1"/><text x="98.9679%" y="319.50"></text></g><g><title>rust-gkat`smt::context::internalize_assertions (1 samples, 0.21%)</title><rect x="98.7179%" y="293" width="0.2137%" height="15" fill="rgb(251,132,46)" fg:x="462" fg:w="1"/><text x="98.9679%" y="303.50"></text></g><g><title>rust-gkat`asserted_formulas::reduce (1 samples, 0.21%)</title><rect x="98.7179%" y="277" width="0.2137%" height="15" fill="rgb(231,77,14)" fg:x="462" fg:w="1"/><text x="98.9679%" y="287.50"></text></g><g><title>rust-gkat`asserted_formulas::invoke (1 samples, 0.21%)</title><rect x="98.7179%" y="261" width="0.2137%" height="15" fill="rgb(240,135,9)" fg:x="462" fg:w="1"/><text x="98.9679%" y="271.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="98.7179%" y="245" width="0.2137%" height="15" fill="rgb(248,109,14)" fg:x="462" fg:w="1"/><text x="98.9679%" y="255.50"></text></g><g><title>rust-gkat`asserted_formulas::propagate_values (1 samples, 0.21%)</title><rect x="98.7179%" y="229" width="0.2137%" height="15" fill="rgb(227,146,52)" fg:x="462" fg:w="1"/><text x="98.9679%" y="239.50"></text></g><g><title>rust-gkat`rewriter_tpl&lt;(anonymous namespace)::th_rewriter_cfg&gt;::operator()(expr*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="98.7179%" y="213" width="0.2137%" height="15" fill="rgb(232,54,3)" fg:x="462" fg:w="1"/><text x="98.9679%" y="223.50"></text></g><g><title>rust-gkat`(anonymous namespace)::th_rewriter_cfg::reduce_app(func_decl*, unsigned int, expr* const*, obj_ref&lt;expr, ast_manager&gt;&amp;, obj_ref (1 samples, 0.21%)</title><rect x="98.7179%" y="197" width="0.2137%" height="15" fill="rgb(229,201,43)" fg:x="462" fg:w="1"/><text x="98.9679%" y="207.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (30 samples, 6.41%)</title><rect x="92.7350%" y="453" width="6.4103%" height="15" fill="rgb(252,161,33)" fg:x="434" fg:w="30"/><text x="92.9850%" y="463.50">rust-gka..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.9316%" y="437" width="0.2137%" height="15" fill="rgb(226,146,40)" fg:x="463" fg:w="1"/><text x="99.1816%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="98.9316%" y="421" width="0.2137%" height="15" fill="rgb(219,47,25)" fg:x="463" fg:w="1"/><text x="99.1816%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="98.9316%" y="405" width="0.2137%" height="15" fill="rgb(250,135,13)" fg:x="463" fg:w="1"/><text x="99.1816%" y="415.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="98.9316%" y="389" width="0.2137%" height="15" fill="rgb(219,229,18)" fg:x="463" fg:w="1"/><text x="99.1816%" y="399.50"></text></g><g><title>rust-gkat`th_rewriter::~th_rewriter (1 samples, 0.21%)</title><rect x="98.9316%" y="373" width="0.2137%" height="15" fill="rgb(217,152,27)" fg:x="463" fg:w="1"/><text x="99.1816%" y="383.50"></text></g><g><title>rust-gkat`th_rewriter::imp::~imp (1 samples, 0.21%)</title><rect x="98.9316%" y="357" width="0.2137%" height="15" fill="rgb(225,71,47)" fg:x="463" fg:w="1"/><text x="99.1816%" y="367.50"></text></g><g><title>rust-gkat`datatype::util::~util (1 samples, 0.21%)</title><rect x="98.9316%" y="341" width="0.2137%" height="15" fill="rgb(220,139,14)" fg:x="463" fg:w="1"/><text x="99.1816%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.21%)</title><rect x="98.9316%" y="325" width="0.2137%" height="15" fill="rgb(247,54,32)" fg:x="463" fg:w="1"/><text x="99.1816%" y="335.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="581" width="6.8376%" height="15" fill="rgb(252,131,39)" fg:x="433" fg:w="32"/><text x="92.7714%" y="591.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="565" width="6.8376%" height="15" fill="rgb(210,108,39)" fg:x="433" fg:w="32"/><text x="92.7714%" y="575.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="549" width="6.8376%" height="15" fill="rgb(205,23,29)" fg:x="433" fg:w="32"/><text x="92.7714%" y="559.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="533" width="6.8376%" height="15" fill="rgb(246,139,46)" fg:x="433" fg:w="32"/><text x="92.7714%" y="543.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="517" width="6.8376%" height="15" fill="rgb(250,81,26)" fg:x="433" fg:w="32"/><text x="92.7714%" y="527.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="501" width="6.8376%" height="15" fill="rgb(214,104,7)" fg:x="433" fg:w="32"/><text x="92.7714%" y="511.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="485" width="6.8376%" height="15" fill="rgb(233,189,8)" fg:x="433" fg:w="32"/><text x="92.7714%" y="495.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::exp::_&lt;impl rust_gkat::syntax::gkat::Gkat&gt;::from_exp (32 samples, 6.84%)</title><rect x="92.5214%" y="469" width="6.8376%" height="15" fill="rgb(228,141,17)" fg:x="433" fg:w="32"/><text x="92.7714%" y="479.50">rust-gkat..</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="99.1453%" y="453" width="0.2137%" height="15" fill="rgb(247,157,1)" fg:x="464" fg:w="1"/><text x="99.3953%" y="463.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="99.1453%" y="437" width="0.2137%" height="15" fill="rgb(249,225,5)" fg:x="464" fg:w="1"/><text x="99.3953%" y="447.50"></text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::from_bexp (1 samples, 0.21%)</title><rect x="99.1453%" y="421" width="0.2137%" height="15" fill="rgb(242,55,13)" fg:x="464" fg:w="1"/><text x="99.3953%" y="431.50"></text></g><g><title>rust-gkat`_si(unsigned long, operator+, int, float, unsigned long long) (1 samples, 0.21%)</title><rect x="99.1453%" y="405" width="0.2137%" height="15" fill="rgb(230,49,50)" fg:x="464" fg:w="1"/><text x="99.3953%" y="415.50"></text></g><g><title>rust-gkat`simplify(_Z3_context*, _Z3_ast*, _Z3_params*) (1 samples, 0.21%)</title><rect x="99.1453%" y="389" width="0.2137%" height="15" fill="rgb(241,111,38)" fg:x="464" fg:w="1"/><text x="99.3953%" y="399.50"></text></g><g><title>rust-gkat`api::context::set_interruptable::~set_interruptable (1 samples, 0.21%)</title><rect x="99.1453%" y="373" width="0.2137%" height="15" fill="rgb(252,155,4)" fg:x="464" fg:w="1"/><text x="99.3953%" y="383.50"></text></g><g><title>libc++.1.dylib`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.21%)</title><rect x="99.1453%" y="357" width="0.2137%" height="15" fill="rgb(212,69,32)" fg:x="464" fg:w="1"/><text x="99.3953%" y="367.50"></text></g><g><title>rust-gkat`ast_context_params::mk_ast_manager (1 samples, 0.21%)</title><rect x="99.3590%" y="533" width="0.2137%" height="15" fill="rgb(243,107,47)" fg:x="465" fg:w="1"/><text x="99.6090%" y="543.50"></text></g><g><title>rust-gkat`ast_manager::ast_manager (1 samples, 0.21%)</title><rect x="99.3590%" y="517" width="0.2137%" height="15" fill="rgb(247,130,12)" fg:x="465" fg:w="1"/><text x="99.6090%" y="527.50"></text></g><g><title>dyld`start (467 samples, 99.79%)</title><rect x="0.0000%" y="677" width="99.7863%" height="15" fill="rgb(233,74,16)" fg:x="0" fg:w="467"/><text x="0.2500%" y="687.50">dyld`start</text></g><g><title>rust-gkat`main (465 samples, 99.36%)</title><rect x="0.4274%" y="661" width="99.3590%" height="15" fill="rgb(208,58,18)" fg:x="2" fg:w="465"/><text x="0.6774%" y="671.50">rust-gkat`main</text></g><g><title>rust-gkat`std::rt::lang_start_internal (465 samples, 99.36%)</title><rect x="0.4274%" y="645" width="99.3590%" height="15" fill="rgb(242,225,1)" fg:x="2" fg:w="465"/><text x="0.6774%" y="655.50">rust-gkat`std::rt::lang_start_internal</text></g><g><title>rust-gkat`std::rt::lang_start::_{{closure}} (465 samples, 99.36%)</title><rect x="0.4274%" y="629" width="99.3590%" height="15" fill="rgb(249,39,40)" fg:x="2" fg:w="465"/><text x="0.6774%" y="639.50">rust-gkat`std::rt::lang_start::_{{closure}}</text></g><g><title>rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace (465 samples, 99.36%)</title><rect x="0.4274%" y="613" width="99.3590%" height="15" fill="rgb(207,72,44)" fg:x="2" fg:w="465"/><text x="0.6774%" y="623.50">rust-gkat`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust-gkat`rust_gkat::main (465 samples, 99.36%)</title><rect x="0.4274%" y="597" width="99.3590%" height="15" fill="rgb(215,193,12)" fg:x="2" fg:w="465"/><text x="0.6774%" y="607.50">rust-gkat`rust_gkat::main</text></g><g><title>rust-gkat`rust_gkat::syntax::gkat::Gkat::new (2 samples, 0.43%)</title><rect x="99.3590%" y="581" width="0.4274%" height="15" fill="rgb(248,41,39)" fg:x="465" fg:w="2"/><text x="99.6090%" y="591.50"></text></g><g><title>rust-gkat`Z3_mk_context (2 samples, 0.43%)</title><rect x="99.3590%" y="565" width="0.4274%" height="15" fill="rgb(253,85,4)" fg:x="465" fg:w="2"/><text x="99.6090%" y="575.50"></text></g><g><title>rust-gkat`api::context::context (2 samples, 0.43%)</title><rect x="99.3590%" y="549" width="0.4274%" height="15" fill="rgb(243,70,31)" fg:x="465" fg:w="2"/><text x="99.6090%" y="559.50"></text></g><g><title>rust-gkat`bv_decl_plugin::bv_decl_plugin (1 samples, 0.21%)</title><rect x="99.5726%" y="533" width="0.2137%" height="15" fill="rgb(253,195,26)" fg:x="466" fg:w="1"/><text x="99.8226%" y="543.50"></text></g><g><title>all (468 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(243,42,11)" fg:x="0" fg:w="468"/><text x="0.2500%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.21%)</title><rect x="99.7863%" y="677" width="0.2137%" height="15" fill="rgb(239,66,17)" fg:x="467" fg:w="1"/><text x="100.0363%" y="687.50"></text></g></svg></svg>